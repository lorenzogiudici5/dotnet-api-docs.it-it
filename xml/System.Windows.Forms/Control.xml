<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Control.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c69e51690247c9fefe2d6b6365dfe813781cbc0a4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69e51690247c9fefe2d6b6365dfe813781cbc0a4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Defines the base class for controls, which are components with visual representation.</source>
          <target state="translated">Viene definita la classe base per i controlli, ovvero i componenti con una rappresentazione visiva.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>To create your own control class, inherit from the <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> classes, or from the other Windows Forms provided controls.</source>
          <target state="translated">Per creare la propria classe di controllo, ereditare il <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> classi, o da altri formati di Windows purché i controlli.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information about authoring custom controls, see <bpt id="p1">[</bpt>Developing Custom Windows Forms Controls with the .NET Framework<ept id="p1">](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla creazione di controlli personalizzati, vedere <bpt id="p1">[</bpt>sviluppo personalizzato controlli Windows Form in .NET Framework<ept id="p1">](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class implements very basic functionality required by classes that display information to the user.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe implementa le funzionalità di base richieste dalle classi che consentono di visualizzare informazioni all'utente.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>It handles user input through the keyboard and pointing devices.</source>
          <target state="translated">Gestisce l'input dell'utente tramite la tastiera e i dispositivi di puntamento.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>It handles message routing and security.</source>
          <target state="translated">Gestisce il routing dei messaggi e la sicurezza.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>It defines the bounds of a control (its position and size), although it does not implement painting.</source>
          <target state="translated">Definisce i limiti di un controllo (la posizione e dimensioni), anche se non implementa il disegno.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>It provides a window handle (<ph id="ph1">`hWnd`</ph>).</source>
          <target state="translated">Fornisce un handle di finestra (<ph id="ph1">`hWnd`</ph>).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Windows Forms controls use ambient properties so child controls can appear like their surrounding environment.</source>
          <target state="translated">Controlli Windows Form usare le proprietà di ambiente in modo i controlli figlio viene visualizzato come ambiente circostante.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>An <bpt id="p1">*</bpt>ambient property<ept id="p1">*</ept> is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">Un <bpt id="p1">*</bpt>proprietà di ambiente<ept id="p1">*</ept> è una proprietà del controllo che, se non impostato, viene recuperato dal controllo padre.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>If the control does not have a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>, and the property is not set, the control attempts to determine the value of the ambient property through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Site%2A&gt;</ph> property.</source>
          <target state="translated">Se il controllo non dispone di un <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>e la proprietà non è impostata, il controllo tenta di determinare il valore della proprietà di ambiente tramite la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Site%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph>, the control uses its own default values.</source>
          <target state="translated">Se il controllo non viene individuato, se il sito non supporta le proprietà di ambiente o se la proprietà non è impostata sul <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph>, il controllo utilizza i valori predefiniti.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Typically, an ambient property represents a characteristic of a control, such as <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, that is communicated to a child control.</source>
          <target state="translated">In genere, una proprietà di ambiente rappresenta una caratteristica di un controllo, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, che viene comunicato a un controllo figlio.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">Ad esempio, un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> avrà lo stesso <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> come padre <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Ambient properties provided by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class include: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>.</source>
          <target state="translated">Proprietà di ambiente fornita dal <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe includono: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>, e <ph id="ph6">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>To make your Windows Forms application support visual styles, be sure to set the <ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> property to <ph id="ph2">`System`</ph> and include a manifest with your executable.</source>
          <target state="translated">Per rendere l'applicazione Windows Form supportano gli stili di visualizzazione, assicurarsi di impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> proprietà <ph id="ph2">`System`</ph> e includere un manifesto con il file eseguibile.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file.</source>
          <target state="translated">Un manifesto è un file XML che viene incluso come una risorsa all'interno del file eseguibile dell'applicazione o come file separato che si trova nella stessa directory del file eseguibile.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For an example of a manifest, see the Example section of the <ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> enumeration.</source>
          <target state="translated">Per un esempio di un manifesto, vedere la sezione esempio del <ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> enumerazione.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information about using visual styles, see <bpt id="p1">[</bpt>Visual Styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sull'utilizzo di stili di visualizzazione, vedere <bpt id="p1">[</bpt>stili visivi<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities.</source>
          <target state="translated">Windows Form dispone di supporto di accessibilità incorporato e vengono fornite informazioni sull'applicazione che consente di lavorare con applicazioni client di accessibilità, ad esempio l'utilità di utilità di ingrandimento e di schermate, voice utilità di input, sullo schermo tastiere, dispositivi di input alternativi e le utilità di miglioramento.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Sometimes you will want to provide additional information to accessibility client applications.</source>
          <target state="translated">Talvolta potrebbe essere fornire informazioni aggiuntive per le applicazioni client di accessibilità.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>There are two ways of providing this additional information.</source>
          <target state="translated">Esistono due modi per fornire queste informazioni aggiuntive.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>You can set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> property values, which will be reported to accessibility client applications.</source>
          <target state="translated">È possibile impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> i valori delle proprietà che verranno segnalati alle applicazioni client di accessibilità.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>This method is typically used to provide limited accessibility information for existing controls.</source>
          <target state="translated">Questo metodo viene in genere utilizzato per fornire informazioni limitate sull'accessibilità per i controlli esistenti.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Alternatively, you can write your own class deriving from the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes, providing as much accessibility information as needed.</source>
          <target state="translated">In alternativa, è possibile scrivere la propria classe che deriva dal <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classi, fornendo più informazioni sull'accessibilità in base alle esigenze.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>To maintain better performance, do not set the size of a control in its constructor.</source>
          <target state="translated">Per ottenere prestazioni migliori, non impostare le dimensioni di un controllo nel relativo costruttore.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">Il metodo preferito consiste nell'eseguire l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Do not add data bindings for a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> in its constructor.</source>
          <target state="translated">Non aggiungere associazioni dati per un <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> nel relativo costruttore.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Doing so will cause errors in code generation and can cause unwanted behavior.</source>
          <target state="translated">Questa operazione causerà errori nella generazione del codice e può causare comportamenti indesiderati.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>The majority of the controls in the <ph id="ph1">&lt;xref:System.Windows.Forms&gt;</ph> namespace use the underlying Windows common control as a base to build on.</source>
          <target state="translated">La maggior parte dei controlli di <ph id="ph1">&lt;xref:System.Windows.Forms&gt;</ph> dello spazio dei nomi utilizzare il controllo comune di Windows sottostante come base per compilare in.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information about the Windows common controls, see <bpt id="p1">[</bpt>General Control Reference<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui controlli comuni di Windows, vedere <bpt id="p1">[</bpt>riferimento controllo generale<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>To identify Windows Forms controls from a separate process, use a standard <ph id="ph1">`SendMessage`</ph> call to pass the WM_GETCONTROLNAME message.</source>
          <target state="translated">Per identificare i controlli Windows Form da un processo separato, utilizzare uno standard <ph id="ph1">`SendMessage`</ph> chiamata per passare il messaggio WM_GETCONTROLNAME.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>WM_GETCONTROLNAME is independent of the language and Windows hierarchy.</source>
          <target state="translated">Che è indipendente del linguaggio e della gerarchia di Windows.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information, see the "Recommended Solution for Windows Forms" topic in<bpt id="p1">[</bpt>Automating Windows Forms<ept id="p1">](http://msdn.microsoft.com/library/ms996405.aspx)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere l'argomento "Soluzione consigliata per Windows Form" in<bpt id="p1">[</bpt>automazione di Windows Form<ept id="p1">](http://msdn.microsoft.com/library/ms996405.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property to synchronize access to the control from multiple threads.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> proprietà per sincronizzare l'accesso al controllo da più thread.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information about multithreaded Windows Forms controls, see <bpt id="p1">[</bpt>How to: Make Thread-Safe Calls to Windows Forms Controls<ept id="p1">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept></source>
          <target state="translated">Per ulteriori informazioni sui controlli Windows Form con multithreading, vedere <bpt id="p1">[</bpt>procedura: effettuare chiamate Thread-Safe a controlli Windows Form<ept id="p1">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Only the following members are thread safe: <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Windows.Forms.Control.InvokeRequired" /&gt;</ph>, and <ph id="ph5">&lt;see cref="M:System.Windows.Forms.Control.CreateGraphics" /&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Solo i membri seguenti sono thread-safe: <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Windows.Forms.Control.InvokeRequired" /&gt;</ph>, e <ph id="ph5">&lt;see cref="M:System.Windows.Forms.Control.CreateGraphics" /&gt;</ph> se è già stato creato l'handle per il controllo.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateGraphics" /&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateGraphics" /&gt;</ph> prima di aver creato l'handle del controllo in un thread in background può causare valido chiamate tra thread.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class with default settings.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> con le impostazioni predefinite.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe è la classe base per tutti i controlli utilizzati in un'applicazione Windows Form.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">Poiché questa classe non è in genere utilizzata per creare un'istanza della classe, questo costruttore in genere non viene chiamato direttamente, ma viene invece chiamato da una classe derivata.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>The text displayed by the control.</source>
          <target state="translated">Testo visualizzato dal controllo.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class with specific text.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> con testo specifico.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe è la classe base per tutti i controlli utilizzati in un'applicazione Windows Form.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">Poiché questa classe non è in genere utilizzata per creare un'istanza della classe, questo costruttore in genere non viene chiamato direttamente, ma viene invece chiamato da una classe derivata.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id="ph3">`text`</ph> parameter value.</source>
          <target state="translated">Questa versione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> costruttore imposta iniziale <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore della proprietà di <ph id="ph3">`text`</ph> valore del parametro.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to be the parent of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> che rappresenta l'elemento padre del controllo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>The text displayed by the control.</source>
          <target state="translated">Testo visualizzato dal controllo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class as a child control, with specific text.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> come controllo figlio con testo specifico.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe è la classe base per tutti i controlli utilizzati in un'applicazione Windows Form.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">Poiché questa classe non è in genere utilizzata per creare un'istanza della classe, questo costruttore in genere non viene chiamato direttamente, ma viene invece chiamato da una classe derivata.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id="ph3">`text`</ph> parameter value.</source>
          <target state="translated">Questa versione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> costruttore imposta iniziale <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore della proprietà di <ph id="ph3">`text`</ph> valore del parametro.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>The constructor also adds the control to the parent control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</source>
          <target state="translated">Il costruttore aggiunge anche il controllo del controllo padre <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The text displayed by the control.</source>
          <target state="translated">Testo visualizzato dal controllo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> position of the control, in pixels, from the left edge of the control's container.</source>
          <target state="translated">Posizione <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> del controllo, in pixel, a partire dal bordo sinistro del contenitore del controllo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property.</source>
          <target state="translated">Il valore è assegnato alla proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> position of the control, in pixels, from the top edge of the control's container.</source>
          <target state="translated">Posizione <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> del controllo, in pixel, a partire dal bordo superiore del contenitore del controllo.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property.</source>
          <target state="translated">Il valore è assegnato alla proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the control, in pixels.</source>
          <target state="translated">Larghezza del controllo in pixel.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property.</source>
          <target state="translated">Il valore è assegnato alla proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the control, in pixels.</source>
          <target state="translated">Altezza del controllo in pixel.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property.</source>
          <target state="translated">Il valore è assegnato alla proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class with specific text, size, and location.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> con testo, dimensioni e posizione specifici.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe è la classe base per tutti i controlli utilizzati in un'applicazione Windows Form.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">Poiché questa classe non è in genere utilizzata per creare un'istanza della classe, questo costruttore in genere non viene chiamato direttamente, ma viene invece chiamato da una classe derivata.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id="ph3">`text`</ph> parameter value.</source>
          <target state="translated">Questa versione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> costruttore imposta iniziale <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore della proprietà di <ph id="ph3">`text`</ph> valore del parametro.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The initial <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control are determined by the <ph id="ph3">`left`</ph>, <ph id="ph4">`top`</ph>, <ph id="ph5">`width`</ph> and <ph id="ph6">`height`</ph> parameter values.</source>
          <target state="translated">Iniziale <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> del controllo sono determinati dalle <ph id="ph3">`left`</ph>, <ph id="ph4">`top`</ph>, <ph id="ph5">`width`</ph> e <ph id="ph6">`height`</ph> i valori dei parametri.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>To maintain better performance, do not set the size of a control in its constructor.</source>
          <target state="translated">Per ottenere prestazioni migliori, non impostare le dimensioni di un controllo nel relativo costruttore.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">Il metodo preferito consiste nell'eseguire l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to be the parent of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> che rappresenta l'elemento padre del controllo.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The text displayed by the control.</source>
          <target state="translated">Testo visualizzato dal controllo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> position of the control, in pixels, from the left edge of the control's container.</source>
          <target state="translated">Posizione <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> del controllo, in pixel, a partire dal bordo sinistro del contenitore del controllo.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property.</source>
          <target state="translated">Il valore è assegnato alla proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> position of the control, in pixels, from the top edge of the control's container.</source>
          <target state="translated">Posizione <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> del controllo, in pixel, a partire dal bordo superiore del contenitore del controllo.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property.</source>
          <target state="translated">Il valore è assegnato alla proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the control, in pixels.</source>
          <target state="translated">Larghezza del controllo in pixel.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property.</source>
          <target state="translated">Il valore è assegnato alla proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the control, in pixels.</source>
          <target state="translated">Altezza del controllo in pixel.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property.</source>
          <target state="translated">Il valore è assegnato alla proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class as a child control, with specific text, size, and location.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> come controllo figlio con testo, dimensioni e posizione specifici.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe è la classe base per tutti i controlli utilizzati in un'applicazione Windows Form.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">Poiché questa classe non è in genere utilizzata per creare un'istanza della classe, questo costruttore in genere non viene chiamato direttamente, ma viene invece chiamato da una classe derivata.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id="ph3">`text`</ph> parameter value.</source>
          <target state="translated">Questa versione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> costruttore imposta iniziale <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore della proprietà di <ph id="ph3">`text`</ph> valore del parametro.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The constructor also adds the control to the parent control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</source>
          <target state="translated">Il costruttore aggiunge anche il controllo del controllo padre <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The initial <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control are determined by the <ph id="ph3">`left`</ph>, <ph id="ph4">`top`</ph>, <ph id="ph5">`width`</ph> and <ph id="ph6">`height`</ph> parameter values.</source>
          <target state="translated">Iniziale <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> del controllo sono determinati dalle <ph id="ph3">`left`</ph>, <ph id="ph4">`top`</ph>, <ph id="ph5">`width`</ph> e <ph id="ph6">`height`</ph> i valori dei parametri.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>To maintain better performance, do not set the size of a control in its constructor.</source>
          <target state="translated">Per ottenere prestazioni migliori, non impostare le dimensioni di un controllo nel relativo costruttore.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">Il metodo preferito consiste nell'eseguire l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Notifies the accessibility client applications of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph>.</source>
          <target state="translated">Notifica alle applicazioni client di accessibilità l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> to notify the accessibility client applications of.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> da notificare alle applicazioni client di accessibilità.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The child <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to notify of the accessible event.</source>
          <target state="translated">Controllo <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> figlio cui notificare l'evento accessibile.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>Notifies the accessibility client applications of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> for the specified child control.</source>
          <target state="translated">Notifica alle applicazioni client di accessibilità l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> specificato per il controllo figlio specifico.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType&gt;</ph> method for each <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> the accessibility client applications are to be notified of.</source>
          <target state="translated">È necessario chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType&gt;</ph> metodo per ogni <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> le applicazioni client di accessibilità sono da notificare.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph> method is typically called when a property is set or from within an event handler.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph> viene in genere chiamato quando una proprietà è impostata o in un gestore eventi.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>For example, you might call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph> method and pass in an <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> value of <ph id="ph3">`Hide`</ph> from within the event handler for the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Ad esempio, è possibile chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph> (metodo) e passare un <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> valore <ph id="ph3">`Hide`</ph> all'interno del gestore eventi per il <ph id="ph4">&lt;xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The following code example demonstrates the creation of an accessibility-aware chart control, using the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes to expose accessible information.</source>
          <target state="translated">Esempio di codice seguente viene illustrata la creazione di un grafico di supporto per l'accessibilità controllare, tramite il <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> alle classi di esporre le informazioni accessibili.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The control plots two curves along with a legend.</source>
          <target state="translated">Il controllo traccia due curve e una legenda.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The <ph id="ph1">`ChartControlAccessibleObject`</ph> class, which derives from <ph id="ph2">`ControlAccessibleObject`</ph>, is used in the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method to provide custom accessible information for the chart control.</source>
          <target state="translated">Il <ph id="ph1">`ChartControlAccessibleObject`</ph> classe che deriva da <ph id="ph2">`ControlAccessibleObject`</ph>, viene utilizzata la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> metodo per fornire informazioni accessibili personalizzate per il controllo chart.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>Since the chart legend is not an actual <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</source>
          <target state="translated">Poiché la legenda del grafico non è una vera e propria <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -controllo di base, ma viene disegnata dal controllo chart, non non contiene informazioni accessibili.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>Because of this, the <ph id="ph1">`ChartControlAccessibleObject`</ph> class overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> method to return the <ph id="ph3">`CurveLegendAccessibleObject`</ph> that represents accessible information for each part of the legend.</source>
          <target state="translated">Per questo motivo, il <ph id="ph1">`ChartControlAccessibleObject`</ph> classe esegue l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> per restituire il <ph id="ph3">`CurveLegendAccessibleObject`</ph> che rappresenta le informazioni accessibili per ogni parte della legenda.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>When an accessible-aware application uses this control, the control can provide the necessary accessible information.</source>
          <target state="translated">Quando viene utilizzato da un'applicazione accessibile abilitata, il controllo può fornire le informazioni accessibili necessarie.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>This code excerpt demonstrates calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A&gt;</ph> method.</source>
          <target state="translated">Questo estratto di codice viene illustrata la chiamata di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class overview for the complete code example.</source>
          <target state="translated">Vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> Cenni preliminari sulla classe per l'esempio di codice completo.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> to notify the accessibility client applications of.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> da notificare alle applicazioni client di accessibilità.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
          <source>The identifier of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</source>
          <target state="translated">Identificatore di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
          <source>The child <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to notify of the accessible event.</source>
          <target state="translated">Controllo <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> figlio cui notificare l'evento accessibile.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
          <source>Notifies the accessibility client applications of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> for the specified child control .</source>
          <target state="translated">Notifica alle applicazioni client di accessibilità l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> specificato per il controllo figlio specifico.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> assigned to the control.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> assegnato al controllo.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> assigned to the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> assegnato al controllo.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>To control the instance returned from this method, override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method.</source>
          <target state="translated">Per controllare l'istanza restituita da questo metodo, eseguire l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>If no <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> is currently assigned to the control, a new instance of one is created.</source>
          <target state="translated">Se al controllo non viene assegnato alcun oggetto <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph>, ne viene creata una nuova istanza.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>To get or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property, you must add a reference to the <ph id="ph2">`Accessibility`</ph> assembly installed with the<ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Per ottenere o impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> proprietà, è necessario aggiungere un riferimento al <ph id="ph2">`Accessibility`</ph> assembly installato con il<ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>For more information about accessible objects, see <bpt id="p1">[</bpt>Active Accessibility<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sugli oggetti accessibili, vedere <bpt id="p1">[</bpt>Active Accessibility<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>Gets or sets the default action description of the control for use by accessibility client applications.</source>
          <target state="translated">Ottiene o imposta la descrizione dell'azione predefinita del controllo usata dalle applicazioni client di accessibilità.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>The default action description of the control for use by accessibility client applications.</source>
          <target state="translated">Descrizione dell'azione predefinita del controllo usata dalle applicazioni client di accessibilità.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>An object's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph> property describes the object's primary method of manipulation from the user's viewpoint.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph> proprietà descrive il metodo principale per la modifica da parte dell'utente.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>This property should be a verb or a short verb phrase.</source>
          <target state="translated">Questa proprietà deve essere un verbo o una frase breve del verbo.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>Not all objects have default actions, and some objects might have a default action that is related to its <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType&gt;</ph> property, such as in the following examples:</source>
          <target state="translated">Non tutti gli oggetti dispongono di azioni predefinite e alcuni oggetti potrebbero contenere un'azione predefinita che corrisponde alla relativa <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType&gt;</ph> proprietà, come illustrato negli esempi seguenti:</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>A selected check box has a default action of "Uncheck" and a value of "Checked."</source>
          <target state="translated">Una casella di controllo selezionata è l'azione predefinita di "Deselezionare" e il valore "Checked".</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>A cleared check box has a default action of "Check" and a value of "Unchecked."</source>
          <target state="translated">Dispone di una casella di controllo deselezionata, l'azione predefinita di "Controllo" e il valore è "Deselezionato".</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>A button labeled "Print" has a default action of "Press," with no value.</source>
          <target state="translated">Un pulsante con etichetta "Print" è un'azione predefinita di "Press", non prevede alcun valore.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>A label or a text box control that shows "Printer" has no default action, but would have a value of "Printer."</source>
          <target state="translated">Un'etichetta o un controllo casella di testo contenente "Printer" non presenta azioni predefinite, ma avrebbe un valore di "Printer".</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>For more information about properties of accessible objects, see <bpt id="p1">[</bpt>Content of Descriptive Properties<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulle proprietà degli oggetti accessibili, vedere <bpt id="p1">[</bpt>contenuto delle proprietà descrittive<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>Gets or sets the description of the control used by accessibility client applications.</source>
          <target state="translated">Ottiene o imposta la descrizione del controllo usato dalle applicazioni client di accessibilità.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The description of the control used by accessibility client applications.</source>
          <target state="translated">Descrizione del controllo usata dalle applicazioni client di accessibilità.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>An object's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> property provides a textual description about an object's visual appearance.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> proprietà fornisce una descrizione testuale sull'aspetto visivo dell'oggetto.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.</source>
          <target state="translated">La descrizione viene utilizzata principalmente per fornire un contesto per gli utenti di problemi di vista o nascosta, ma può anche essere utilizzata per la ricerca nel contesto o altre applicazioni.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> property is needed if the description is not obvious, or if it is redundant based on the object's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.AccessibleObject.State%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph> properties.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> proprietà è necessaria se la descrizione non è chiara o se è ridondante in base all'oggetto <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.AccessibleObject.State%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>For example, a button with "OK" would not need additional information, but a button that shows a picture of a cactus would.</source>
          <target state="translated">Ad esempio, un pulsante "OK" non richiede ulteriori informazioni, ma un pulsante che mostra l'immagine di una funzione.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> (and perhaps <ph id="ph3">&lt;xref:System.Windows.Forms.AccessibleObject.Help%2A&gt;</ph>) properties for the cactus button would describe its purpose, but the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> property would convey information that is less tangible, such as "A button that shows a picture of a cactus."</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> (ed eventualmente <ph id="ph3">&lt;xref:System.Windows.Forms.AccessibleObject.Help%2A&gt;</ph>) per il pulsante di funzione si descrivono le finalità, ma la <ph id="ph4">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> proprietà può contenere informazioni che sono meno tangibile, ad esempio "Un pulsante che mostra l'immagine di una funzione".</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>For more information about properties of accessible objects, see <bpt id="p1">[</bpt>Content of Descriptive Properties<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulle proprietà degli oggetti accessibili, vedere <bpt id="p1">[</bpt>contenuto delle proprietà descrittive<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The following code example creates an instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> derived class, <ph id="ph2">`MyCheckBox`</ph>, assigns it an <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph> to its <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> property and sets the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> properties, because the <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property is <ph id="ph8">`null`</ph>.</source>
          <target state="translated">Esempio di codice seguente crea un'istanza di un <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> classe derivata <ph id="ph2">`MyCheckBox`</ph>, assegna un <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph> per relativo <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> proprietà e i set di <ph id="ph5">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> e <ph id="ph6">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> proprietà, perché il <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> proprietà <ph id="ph8">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`MyForm`</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> denominato <ph id="ph2">`MyForm`</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>Gets or sets the name of the control used by accessibility client applications.</source>
          <target state="translated">Ottiene o imposta il nome del controllo usato dalle applicazioni client di accessibilità.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>The name of the control used by accessibility client applications.</source>
          <target state="translated">Nome del controllo usato dalle applicazioni client di accessibilità.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> property is a label that briefly describes and identifies the object within its container, such as the text in a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, the name of a <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, or a label displayed next to a <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> proprietà è un'etichetta che descrive brevemente e identifica l'oggetto all'interno del contenitore, ad esempio il testo in un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, il nome di un <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, o un'etichetta visualizzata accanto a un <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>For more information about properties of accessible objects, see the "<bpt id="p1">[</bpt>Content of Descriptive Properties<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulle proprietà degli oggetti accessibili, vedere la "<bpt id="p1">[</bpt>contenuto della proprietà descrittive<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>The following code example creates an instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> derived class, <ph id="ph2">`MyCheckBox`</ph>, assigns it an <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph> to its <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> property and sets the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> properties since the <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property is <ph id="ph8">`null`</ph>.</source>
          <target state="translated">Esempio di codice seguente crea un'istanza di un <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> classe derivata <ph id="ph2">`MyCheckBox`</ph>, assegna un <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph> per relativo <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> proprietà e i set di <ph id="ph5">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> e <ph id="ph6">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> proprietà dal <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> proprietà è <ph id="ph8">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`MyForm`</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> denominato <ph id="ph2">`MyForm`</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>Gets or sets the accessible role of the control</source>
          <target state="translated">Ottiene o imposta il ruolo accessibile del controllo.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleRole" /&gt;</ph>.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleRole" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>The default is <ph id="ph1">&lt;see langword="Default" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="Default" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> property describes what kind of user interface element an object is.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> descrive il tipo di elemento dell'interfaccia utente rappresentato da un oggetto.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>If the control's role cannot be determined, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> property is set to <ph id="ph2">`Default`</ph>.</source>
          <target state="translated">Se non è possibile determinare il ruolo del controllo, la proprietà <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> è impostata su <ph id="ph2">`Default`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>For more information about properties of accessible objects, see <bpt id="p1">[</bpt>Content of Descriptive Properties<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulle proprietà degli oggetti accessibili, vedere <bpt id="p1">[</bpt>contenuto delle proprietà descrittive<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleRole" /&gt;</ph> values.</source>
          <target state="translated">Il valore assegnato non è uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleRole" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>Gets or sets a value indicating whether the control can accept data that the user drags onto it.</source>
          <target state="translated">Ottiene o imposta un valore che indica se nel controllo sono consentiti dati trascinati dall'utente.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if drag-and-drop operations are allowed in the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se le operazioni di trascinamento sono consentite nel controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</source>
          <target state="translated">Il codice esempio seguente viene abilitata all'utente di trascinare un'immagine o un file di immagine nel form e fare in modo da visualizzare nel punto in cui è stato eliminato.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> viene eseguito l'override di metodo per aggiornare l'immagine ogni volta che viene disegnato il form; in caso contrario l'immagine verrà mantenuta solo fino al successivo ridisegno.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> metodo di gestione di eventi determina il tipo di dati trascinati nel form e fornisce le informazioni appropriate.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event-handling method displays the image on the form, if an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> can be created from the data.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> il metodo di gestione degli eventi visualizza l'immagine del form, se un <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> possono essere creati dai dati.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> values are screen coordinates, the example uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> method to convert them to client coordinates.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> sono coordinate dello schermo, nell'esempio viene utilizzato il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> metodo per convertirli in coordinate client.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>for unrestricted Clipboard access to set this property to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Per impostare questa proprietà l'accesso illimitato Appunti <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>Associated enumeration: the <ph id="ph1">&lt;see langword="AllClipboard" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionClipboard" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: il <ph id="ph1">&lt;see langword="AllClipboard" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionClipboard" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Non è necessario eseguire l'override di entrambi i <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> funzioni di accesso il <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> proprietà; è possibile sostituire un solo se necessario.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.</source>
          <target state="translated">Ottiene o imposta i bordi del contenitore a cui è associato un controllo e determina la modalità con cui un controllo viene ridimensionato con il relativo padre.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AnchorStyles" /&gt;</ph> values.</source>
          <target state="translated">Combinazione bit per bit dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AnchorStyles" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The default is <ph id="ph1">&lt;see langword="Top" /&gt;</ph> and <ph id="ph2">&lt;see langword="Left" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="Top" /&gt;</ph> e <ph id="ph2">&lt;see langword="Left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> property to define how a control is automatically resized as its parent control is resized.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> proprietà per definire come un controllo viene ridimensionato automaticamente quando il relativo controllo padre viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.</source>
          <target state="translated">Ancoraggio di un controllo al relativo controllo padre assicura che i bordi ancorati rimangano nella stessa posizione relativi ai bordi del controllo padre quando il controllo padre viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>You can anchor a control to one or more edges of its container.</source>
          <target state="translated">È possibile ancorare un controllo a uno o più i bordi del contenitore.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>For example, if you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> whose <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> property value is set to <ph id="ph4">`Top`</ph> and <ph id="ph5">`Bottom`</ph>, the <ph id="ph6">&lt;xref:System.Windows.Forms.Button&gt;</ph> is stretched to maintain the anchored distance to the top and bottom edges of the <ph id="ph7">&lt;xref:System.Windows.Forms.Form&gt;</ph> as the <ph id="ph8">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> of the <ph id="ph9">&lt;xref:System.Windows.Forms.Form&gt;</ph> is increased.</source>
          <target state="translated">Ad esempio, se dispone di un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> cui <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> il valore di proprietà è impostato su <ph id="ph4">`Top`</ph> e <ph id="ph5">`Bottom`</ph>, il <ph id="ph6">&lt;xref:System.Windows.Forms.Button&gt;</ph> viene estesa per mantenere la distanza ancorata al bordo superiore e inferiore della finestra il <ph id="ph7">&lt;xref:System.Windows.Forms.Form&gt;</ph>come il <ph id="ph8">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> del <ph id="ph9">&lt;xref:System.Windows.Forms.Form&gt;</ph> è aumentato.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties are mutually exclusive.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> si escludono a vicenda.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Only one can be set at a time, and the last one set takes precedence.</source>
          <target state="translated">È possibile impostare solo uno alla volta e l'ultima occorrenza ha la precedenza.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">L'esempio di codice seguente aggiunge un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> a un form e vengono impostate alcune proprietà comuni.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">L'esempio consente di limitare il pulsante nell'angolo in basso a destra del form in modo che mantiene la posizione relativa quando il form viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Viene quindi impostata la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> e viene ridimensionato il pulsante per la stessa dimensione di <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">Nell'esempio viene quindi impostato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> a <ph id="ph2">`true`</ph> e imposta il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">Infine, viene aggiunto un gestore eventi per gestire il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento del pulsante.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> denominato <ph id="ph2">`imageList1`</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Non è necessario eseguire l'override di entrambi i <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> funzioni di accesso il <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> proprietà; è possibile sostituire un solo se necessario.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AutoScrollOffset">
          <source>Gets or sets where this control is scrolled to in <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" /&gt;</ph>.</source>
          <target state="translated">Ottiene o imposta la posizione di scorrimento del controllo nel metodo <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AutoScrollOffset">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> specifying the scroll location.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che specifica la posizione di scorrimento.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AutoScrollOffset">
          <source>The default is the upper-left corner of the control.</source>
          <target state="translated">Il valore predefinito è l'angolo superiore sinistro del controllo.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AutoSize">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Questa proprietà non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AutoSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se abilitato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AutoSize">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Questa proprietà non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.AutoSizeChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Questo evento non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.AutoSizeChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Questo evento non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BackColor">
          <source>Gets or sets the background color for the control.</source>
          <target state="translated">Ottiene o imposta il colore di sfondo del controllo.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> che rappresenta il colore di sfondo del controllo.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph> property.</source>
          <target state="translated">Il valore predefinito corrisponde al valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property does not support transparent colors unless the <ph id="ph2">`SupportsTransparentBackColor`</ph> value of <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> proprietà non supporta colori trasparenti, a meno che il <ph id="ph2">`SupportsTransparentBackColor`</ph> valore <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType&gt;</ph> è impostato su <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> proprietà è una proprietà di ambiente.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">Una proprietà di ambiente è una proprietà del controllo che, se non impostato, viene recuperato dal controllo padre.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">Ad esempio, un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> avrà lo stesso <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> come padre <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">Per ulteriori informazioni sulle proprietà di ambiente, vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> classe o <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of the controls to the default system colors.</source>
          <target state="translated">Nell'esempio di codice viene impostata la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> dei controlli per i colori di sistema predefiniti.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The code recursively calls itself if the control has any child controls.</source>
          <target state="translated">Se il controllo dispone di tutti i controlli figlio, in modo ricorsivo il codice chiama se stessa.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>This code example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with at least one child control; however, a child container control, like a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, with its own child control(s) would better demonstrate the recursion.</source>
          <target state="translated">Questo esempio di codice è necessario disporre una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con almeno un controllo figlio; tuttavia, un controllo contenitore figlio, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, con il proprio elemento figlio controlli sarebbero illustrare meglio la ricorsione.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Non è necessario eseguire l'override di entrambi i <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> funzioni di accesso il <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> proprietà; è possibile sostituire un solo se necessario.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un gestore eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> che sono generati quando corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> modificato il valore (<bpt id="p3">*</bpt> PropertyName<ept id="p3">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che contiene un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Gets or sets the background image displayed in the control.</source>
          <target state="translated">Ottiene o imposta l'immagine di sfondo visualizzata nel controllo.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> that represents the image to display in the background of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> che rappresenta l'immagine da visualizzare sullo sfondo del controllo.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property to place a graphic image onto a control.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> proprietà per inserire un'immagine grafica in un controllo.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Images with translucent or transparent colors are not supported by Windows Forms controls as background images.</source>
          <target state="translated">Le immagini con colori trasparente o semitrasparente non sono supportate dai controlli Windows Form come immagini di sfondo.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>This property is not supported on child controls whose <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Questa proprietà non è supportata nei controlli figlio la cui <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> proprietà <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">L'esempio di codice seguente aggiunge un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> a un form e vengono impostate alcune proprietà comuni.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">L'esempio consente di limitare il pulsante nell'angolo in basso a destra del form in modo che mantiene la posizione relativa quando il form viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Viene quindi impostata la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> e viene ridimensionato il pulsante per la stessa dimensione di <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">Nell'esempio viene quindi impostato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> a <ph id="ph2">`true`</ph> e imposta il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">Infine, viene aggiunto un gestore eventi per gestire il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento del pulsante.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> denominato <ph id="ph2">`imageList1`</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Non è necessario eseguire l'override di entrambi i <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> funzioni di accesso il <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> proprietà; è possibile sostituire un solo se necessario.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un gestore eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> che sono generati quando corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> modificato il valore (<bpt id="p3">*</bpt> PropertyName<ept id="p3">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che contiene un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>Gets or sets the background image layout as defined in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> enumeration.</source>
          <target state="translated">Ottiene o imposta il layout dell'immagine di sfondo definito nell'enumerazione <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> (<ph id="ph2">&lt;see cref="F:System.Windows.Forms.ImageLayout.Center" /&gt;</ph> , <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ImageLayout.None" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ImageLayout.Stretch" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph>, or <ph id="ph6">&lt;see cref="F:System.Windows.Forms.ImageLayout.Zoom" /&gt;</ph>).</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> (<ph id="ph2">&lt;see cref="F:System.Windows.Forms.ImageLayout.Center" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ImageLayout.None" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ImageLayout.Stretch" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph> o <ph id="ph6">&lt;see cref="F:System.Windows.Forms.ImageLayout.Zoom" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph> is the default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph> è il valore predefinito.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> property to specify the position and behavior of an image you have placed onto a control.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> proprietà per specificare la posizione e il comportamento di un'immagine inserita in un controllo.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> takes effect only if the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> ha effetto solo se il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> proprietà è impostata.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>You can increase performance for large images if you set <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> to something other than <ph id="ph2">&lt;xref:System.Windows.Forms.ImageLayout.Tile&gt;</ph>.</source>
          <target state="translated">È possibile migliorare le prestazioni per le immagini di grandi dimensioni se si imposta <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> su un valore diverso da <ph id="ph2">&lt;xref:System.Windows.Forms.ImageLayout.Tile&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>The specified enumeration value does not exist.</source>
          <target state="translated">Il valore di enumerazione specificato non esiste.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /&gt;</ph> property changes.</source>
          <target state="translated">Si verifica quando la proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> property changes either programmatically or by user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> proprietà modificata a livello di codice o dall'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Executes a delegate asynchronously on the thread that the control's underlying handle was created on.</source>
          <target state="translated">Esegue in modo asincrono un delegato nel thread in cui è stato creato il punto di controllo sottostante del controllo.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>A delegate to a method that takes no parameters.</source>
          <target state="translated">Delegato di un metodo che non accetta parametri.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.</source>
          <target state="translated">Esegue in modo asincrono il delegato specificato nel thread in cui è stato creato il punto di controllo sottostante del controllo.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents the result of the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> operation.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> che rappresenta il risultato dell'operazione <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>The delegate is called asynchronously, and this method returns immediately.</source>
          <target state="translated">Il delegato viene chiamato in modo asincrono e questo metodo restituisce immediatamente.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>You can call this method from any thread, even the thread that owns the control's handle.</source>
          <target state="translated">Questo metodo è possibile chiamare da qualsiasi thread, anche il thread proprietario dell'handle del controllo.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</source>
          <target state="translated">Se l'handle del controllo non esiste ancora, questo metodo cerca catena padre del controllo finché trova un controllo o un form che dispone di un handle di finestra.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>If no appropriate handle can be found, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> will throw an exception.</source>
          <target state="translated">Se non viene trovato alcun handle appropriato, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> genererà un'eccezione.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</source>
          <target state="translated">Le eccezioni all'interno del metodo delegato sono considerate non intercettate e verrà inviato al gestore dell'eccezione non intercettata dell'applicazione.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>You can call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> to retrieve the return value from the delegate, if neccesary, but this is not required.</source>
          <target state="translated">È possibile chiamare <ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> per recuperare il valore restituito dal delegato, se necessario, ma questo non è necessaria.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> will block until the return value can be retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> verrà bloccata fino a quando il valore restituito può essere recuperato.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Most methods on a control can only be called from the thread where the control was created.</source>
          <target state="translated">La maggior parte dei metodi su un controllo possono essere chiamati solo dal thread in cui è stato creato il controllo.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Oltre al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> proprietà, sono disponibili quattro metodi su un controllo che sono thread-safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se è già stato creato l'handle per il controllo.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> prima di aver creato l'handle del controllo in un thread in background può causare valido chiamate tra thread.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">Per tutte le altre chiamate di metodo, è necessario utilizzare uno dei metodi invoke per effettuare il marshalling della chiamata al thread del controllo.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>The invoke methods always invoke their callbacks on the control's thread.</source>
          <target state="translated">I metodi invoke richiamano sempre relativi callback sul thread del controllo.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">Potrebbe essere generata un'eccezione se il thread che deve elaborare il messaggio non è più attivo.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>The following code example demonstrates a use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato un utilizzo del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>No appropriate window handle can be found.</source>
          <target state="translated">Impossibile trovare un handle di finestra appropriato.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">per il chiamante immediato chiamare codice non gestito.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>A delegate to a method that takes parameters of the same number and type that are contained in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Delegato di un metodo che accetta parametri dello stesso tipo e numero contenuti nel parametro <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>An array of objects to pass as arguments to the given method.</source>
          <target state="translated">Matrice di oggetti da passare come argomenti al metodo specificato.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>This can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no arguments are needed.</source>
          <target state="translated">Se non sono richiesti argomenti, può corrispondere a <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.</source>
          <target state="translated">Esegue in modo asincrono il delegato specificato con gli argomenti specificati nel thread in cui è stato creato il punto di controllo sottostante del controllo.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents the result of the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> operation.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> che rappresenta il risultato dell'operazione <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>The delegate is called asynchronously, and this method returns immediately.</source>
          <target state="translated">Il delegato viene chiamato in modo asincrono e questo metodo restituisce immediatamente.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>You can call this method from any thread, even the thread that owns the control's handle.</source>
          <target state="translated">Questo metodo è possibile chiamare da qualsiasi thread, anche il thread proprietario dell'handle del controllo.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</source>
          <target state="translated">Se l'handle del controllo non esiste ancora, questo metodo cerca catena padre del controllo finché trova un controllo o un form che dispone di un handle di finestra.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>If no appropriate handle can be found, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> will throw an exception.</source>
          <target state="translated">Se non viene trovato alcun handle appropriato, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> genererà un'eccezione.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</source>
          <target state="translated">Le eccezioni all'interno del metodo delegato sono considerate non intercettate e verrà inviato al gestore dell'eccezione non intercettata dell'applicazione.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>You can call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> to retrieve the return value from the delegate, if neccesary, but this is not required.</source>
          <target state="translated">È possibile chiamare <ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> per recuperare il valore restituito dal delegato, se necessario, ma questo non è necessaria.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> will block until the return value can be retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> verrà bloccata fino a quando il valore restituito può essere recuperato.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>Most methods on a control can only be called from the thread where the control was created.</source>
          <target state="translated">La maggior parte dei metodi su un controllo possono essere chiamati solo dal thread in cui è stato creato il controllo.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Oltre al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> proprietà, sono disponibili quattro metodi su un controllo che sono thread-safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se è già stato creato l'handle per il controllo.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> prima di aver creato l'handle del controllo in un thread in background può causare valido chiamate tra thread.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">Per tutte le altre chiamate di metodo, è necessario utilizzare uno dei metodi invoke per effettuare il marshalling della chiamata al thread del controllo.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>The invoke methods always invoke their callbacks on the control's thread.</source>
          <target state="translated">I metodi invoke richiamano sempre relativi callback sul thread del controllo.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">Potrebbe essere generata un'eccezione se il thread che deve elaborare il messaggio non è più attivo.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>The following code example demonstrates a use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato un utilizzo del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>No appropriate window handle can be found.</source>
          <target state="translated">Impossibile trovare un handle di finestra appropriato.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> for the control.</source>
          <target state="translated">Ottiene o imposta l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> for the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> is used to return a single <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> for all data-bound controls contained by the <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> viene utilizzata per restituire un singolo <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> per tutti i controlli con associazione a dati contenuti nel <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> keeps all controls that are bound to the same data source synchronized.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> mantiene tutti i controlli associati alla stessa origine dati sincronizzata.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>For example, setting the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> specifies the item in the underlying list that all data-bound controls point to.</source>
          <target state="translated">Ad esempio, impostando il <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> proprietà del <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> specifica l'elemento nell'elenco sottostante a cui puntare tutti i controlli con associazione a dati.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>For more information about creating a new <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> and assigning it to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property, see the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni sulla creazione di un nuovo <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> e assegnarlo al <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> proprietà, vedere il <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>The following code example creates four <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects to bind five controls, a <ph id="ph2">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> and four <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls, to several data sources.</source>
          <target state="translated">L'esempio di codice seguente crea quattro <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> oggetti per associare i controlli di cinque, un <ph id="ph2">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> e quattro <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controlli, a diverse origini dati.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> is then used to get the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> for each data source.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> viene quindi utilizzato per ottenere il <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> per ogni origine dati.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Non è necessario eseguire l'override di entrambi i <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> funzioni di accesso il <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> proprietà; è possibile sostituire un solo se necessario.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> property changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>To add a new <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> through the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property, see the <ph id="ph4">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Per aggiungere un nuovo <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> per il <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> tramite il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> proprietà, vedere il <ph id="ph4">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property is changed is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> modifica della proprietà viene modificato da una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>The following code example adds an <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> delegate to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContextChanged&gt;</ph> event of a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">L'esempio di codice seguente aggiunge un <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> delegare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContextChanged&gt;</ph> evento di un <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Bottom">
          <source>Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</source>
          <target state="translated">Ottiene la distanza in pixel tra il bordo inferiore del controllo e il bordo superiore dell'area client del contenitore.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che rappresenta la distanza in pixel tra il bordo inferiore del controllo e il bordo superiore dell'area client del contenitore.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>The value of this property is equal to the sum of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property value, and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> property value.</source>
          <target state="translated">Il valore di questa proprietà è uguale alla somma dei valori di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> valore della proprietà e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> valore della proprietà.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property is a read-only property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> è una proprietà di sola lettura.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>You can manipulate this property value by changing the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> properties or calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> methods.</source>
          <target state="translated">È possibile modificare il valore della proprietà modificando il valore del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> proprietà o chiamare il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>, o <ph id="ph6">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property to define the lower limit of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control relative to the client area of the container.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> proprietà per definire il limite inferiore di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controllo relativo all'area client del contenitore.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Bounds">
          <source>Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.</source>
          <target state="translated">Ottiene o imposta la dimensione e la posizione del controllo, compresi i relativi elementi non client relativi al controllo padre, espressi in pixel.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> in pixel relativo al controllo padre che rappresenta la dimensione e la posizione del controllo, compresi i relativi elementi non client.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>The bounds of the control include the nonclient elements such as scroll bars, borders, title bars, and menus.</source>
          <target state="translated">I limiti del controllo includono gli elementi non client, ad esempio le barre di scorrimento, bordi, le barre del titolo e menu.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> method is called to set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> metodo viene chiamato per impostare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property is not always changed through its <ph id="ph2">`set`</ph> method so you should override the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> method to ensure that your code is executed when the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property is set.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> proprietà non viene sempre modificata tramite relativo <ph id="ph2">`set`</ph> (metodo), è necessario eseguire l'override di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> metodo per assicurarsi che il codice venga eseguito quando il <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> proprietà è impostata.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">Esempio di codice seguente crea tre <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> i controlli in un form e imposta le dimensioni e posizione utilizzando le varie dimensioni correlate e relative proprietà.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che ha una larghezza e l'altezza di almeno 300 pixel.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>Brings the control to the front of the z-order.</source>
          <target state="translated">Sposta il controllo in primo piano nell'ordine z.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>The control is moved to the front of the z-order.</source>
          <target state="translated">Il controllo viene spostato in primo piano nell'ordine z.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>If the control is a child of another control, the child control is moved to the front of the z-order.</source>
          <target state="translated">Se il controllo è un elemento figlio di un altro controllo, il controllo figlio viene spostato in primo piano nell'ordine z.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> does not make a control a top-level control, and it does not raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> non consente di rendere un controllo dispositivo di primo livello e non genera il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>The following code example ensures that a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> is visible by calling its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente garantisce che un <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> è visibile chiamando il relativo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> named <ph id="ph3">`panel1`</ph>, and a <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> named <ph id="ph5">`label1`</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con un <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> denominato <ph id="ph3">`panel1`</ph>e un <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> denominato <ph id="ph5">`label1`</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CanEnableIme">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> property can be set to an active value, to enable IME support.</source>
          <target state="translated">Ottiene un valore che indica se la proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> può essere impostata su un valore attivo, per abilitare il supporto IME.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanEnableIme">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> in all cases.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> in tutti i casi.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanEnableIme">
          <source>Derived classes can override this property to return <ph id="ph1">`false`</ph> if IME is not supported.</source>
          <target state="translated">Le classi derivate possono eseguire l'override di questa proprietà per restituire <ph id="ph1">`false`</ph> se IME non è supportata.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CanFocus">
          <source>Gets a value indicating whether the control can receive focus.</source>
          <target state="translated">Ottiene un valore che indica se il controllo può ricevere lo stato attivo.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanFocus">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control can receive focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo può ricevere lo stato attivo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanFocus">
          <source>In order for a control to receive input focus, the control must have a handle assigned to it, and the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> properties must both be set to <ph id="ph3">`true`</ph> for both the control and all its parent controls, and the control must be a form or the control's outermost parent must be a form.</source>
          <target state="translated">Affinché un controllo riceve lo stato attivo di input, il controllo deve avere un handle assegnato e <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> proprietà devono essere impostate entrambi su <ph id="ph3">`true`</ph> per il controllo e tutti i controlli padre e il controllo deve essere un form o elemento padre più esterno del controllo deve essere un form.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanFocus">
          <source>The following code example sets focus to the specified <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, if it can receive focus.</source>
          <target state="translated">Esempio di codice seguente imposta lo stato attivo sull'oggetto specificato <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, se può ricevere lo stato attivo.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CanRaiseEvents">
          <source>Determines if events can be raised on the control.</source>
          <target state="translated">Determina se è possibile generare eventi sul controllo.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanRaiseEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is hosted as an ActiveX control whose events are not frozen; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo viene incluso come controllo ActiveX in cui gli eventi sono bloccati; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanRaiseEvents">
          <source>If this control is being hosted as an ActiveX control, this property will return <ph id="ph1">`false`</ph> if the ActiveX control has its events frozen.</source>
          <target state="translated">Se questo controllo è ospitato come controllo ActiveX, questa proprietà restituirà <ph id="ph1">`false`</ph> se il controllo ActiveX gli eventi è bloccati.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>Gets a value indicating whether the control can be selected.</source>
          <target state="translated">Ottiene un valore che indica se il controllo può essere selezionato.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control can be selected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo può essere selezionato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>This property returns <ph id="ph1">`true`</ph> if the <ph id="ph2">`Selectable`</ph> value of <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph4">`true`</ph>, is contained in another control, the control itself is visible and enabled, and all its parent controls are visible and enabled.</source>
          <target state="translated">Questa proprietà restituisce <ph id="ph1">`true`</ph> se il <ph id="ph2">`Selectable`</ph> valore <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType&gt;</ph> è impostato su <ph id="ph4">`true`</ph>è contenuto in un altro controllo, il controllo è visibile e abilitato e tutti i controlli padre sono visibili e abilitati.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>The Windows Forms controls in the following list are not selectable and will return a value of <ph id="ph1">`false`</ph> for the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> property.</source>
          <target state="translated">I controlli Windows Form nell'elenco seguente non sono selezionabili e verrà restituito un valore di <ph id="ph1">`false`</ph> per il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>Controls derived from these controls are also not selectable.</source>
          <target state="translated">I controlli derivati da questi controlli non sono selezionabili.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (quando è presente alcun collegamento presente nel controllo)</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>The following code example selects the specified <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, if it is selectable.</source>
          <target state="translated">L'esempio di codice seguente seleziona specificato <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, se è selezionabile.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Capture">
          <source>Gets or sets a value indicating whether the control has captured the mouse.</source>
          <target state="translated">Ottiene o imposta un valore che indica se il controllo ha ricevuto l'input del mouse.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has captured the mouse; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo ha ricevuto l'input del mouse; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
          <target state="translated">Quando un controllo ha acquisito il mouse, riceve l'input del mouse o meno il cursore si trova all'interno dei bordi.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>The mouse is typically only captured during drag operations.</source>
          <target state="translated">Il puntatore del mouse in genere viene acquisito solo durante le operazioni di trascinamento.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>Only the foreground window can capture the mouse.</source>
          <target state="translated">Solo la finestra di primo piano è possibile acquisire il mouse.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window.</source>
          <target state="translated">Quando una finestra di sfondo tenta di eseguire questa operazione, la finestra riceve i messaggi solo per gli eventi del mouse che si verificano quando il cursore del mouse è all'interno della parte visibile della finestra.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.</source>
          <target state="translated">Inoltre, anche se la finestra di primo piano ha acquisito il mouse, l'utente può comunque fare clic su un'altra finestra portarla in primo piano.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>When the mouse is captured, shortcut keys should not work.</source>
          <target state="translated">Quando viene acquisito il mouse, non devono usare i tasti di scelta rapida.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Capture%2A&gt;</ph> property.</source>
          <target state="translated">L'esempio di codice seguente illustra il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Capture%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>To run this example paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> named label1 and two <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls named listbox1 and listbox2.</source>
          <target state="translated">Per eseguire questo esempio, incollare il seguente codice in un form contenente un <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> denominato label1 e due <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controlli denominati listbox1 e listbox2.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>Ensure the form and controls' <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event is associated with the method in this example.</source>
          <target state="translated">Verificare che il form e dei controlli <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento è associato al metodo in questo esempio.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>for all windows to set this property value.</source>
          <target state="translated">per tutte le finestre impostare il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.</source>
          <target state="translated">Ottiene o imposta un valore che indica se viene eseguita la convalida di tutti i controlli per cui è richiesta quando il controllo riceve lo stato attivo.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se viene eseguita la convalida di tutti i controlli per cui è richiesta quando il controllo riceve lo stato attivo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> è impostata su <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> vengono soppressi.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property value is typically set to <ph id="ph2">`false`</ph> for controls such as a Help button.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> valore della proprietà viene in genere impostato su <ph id="ph2">`false`</ph> per i controlli, ad esempio un pulsante della Guida.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and validates an email address that the user enters.</source>
          <target state="translated">L'esempio di codice seguente viene utilizzata la classe derivata <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e convalida un indirizzo di posta elettronica immesso dall'utente.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>If the email address is not in the standard format (containing "<ph id="ph1">@" and "</ph>."), the validation fails, an <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> icon is displayed, and the event is canceled.</source>
          <target state="translated">Se l'indirizzo di posta elettronica non è nel formato standard (contenente "<ph id="ph1">@" and "</ph>."), la convalida non riesce, un <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> viene visualizzata l'icona e l'evento viene annullato.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>One of the buttons on the form has its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Uno dei pulsanti nel form è relativo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> proprietà impostata su <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>Clicking or setting focus to this button does not trigger validation.</source>
          <target state="translated">Facendo clic o impostando lo stato attivo su questo pulsante non attiva la convalida.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, an <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> have been created on a form.</source>
          <target state="translated">Questo esempio si presuppone che un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, un <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> (controllo) e un <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> sono stati creati in un form.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.CausesValidationChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.CausesValidation" /&gt;</ph> property changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.CausesValidation" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CausesValidationChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CausesValidationChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>Occurs when the focus or keyboard user interface (UI) cues change.</source>
          <target state="translated">Si verifica quando lo stato attivo o i tasti di scelta rapida dell'interfaccia utente vengono modificati.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ChangeUICues&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ChangeUICues&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ChangeUICues&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ChangeUICues&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source>Gets or sets a value indicating whether to catch calls on the wrong thread that access a control's <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> property when an application is being debugged.</source>
          <target state="translated">Ottiene o imposta un valore che indica se intercettare le chiamate sul thread errato che accedono a una proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> del controllo se è in corso il debug dell'applicazione.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if calls on the wrong thread are caught; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se le chiamate sul thread sbagliato vengono intercettate; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source>When a thread other than the creating thread of a control tries to access one of that control's methods or properties, it often leads to unpredictable results.</source>
          <target state="translated">Quando un thread diverso da quello di creazione di un controllo tenta di accedere a uno dei metodi o proprietà che controllano, spesso comporta risultati imprevisti.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source>A common invalid thread activity is a call on the wrong thread that accesses the control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property.</source>
          <target state="translated">Un'attività comune di thread non valida è una chiamata sul thread errato che accede al controllo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source>Set <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A&gt;</ph> to <ph id="ph2">`true`</ph> to find and diagnose this thread activity more easily while debugging.</source>
          <target state="translated">Impostare <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A&gt;</ph> a <ph id="ph2">`true`</ph> per individuare e diagnosticare più facilmente l'attività dei thread durante il debug.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Click">
          <source>Occurs when the control is clicked.</source>
          <target state="translated">Si verifica quando si fa clic sul controllo.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event passes an <ph id="ph2">&lt;xref:System.EventArgs&gt;</ph> to its event handler, so it only indicates that a click has occurred.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento passa un <ph id="ph2">&lt;xref:System.EventArgs&gt;</ph> per il gestore eventi, pertanto solo indica che si è verificato un clic.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">Se sono necessarie informazioni più specifiche di mouse (pulsante, numero di clic, alla rotazione della rotellina o alla posizione), utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.</source>
          <target state="translated">Tuttavia, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> evento non essere generato se il clic è determinato da un'azione del mouse, ad esempio premendo il tasto INVIO.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>A double-click is determined by the mouse settings of the user's operating system.</source>
          <target state="translated">Un doppio clic è determinato dalle impostazioni relative al mouse del sistema operativo dell'utente.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</source>
          <target state="translated">L'utente può impostare un intervallo tra i clic effettuati con un pulsante del mouse in modo che debbano essere considerati come un doppio clic anziché come due clic distinti.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event is raised every time a control is double-clicked.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento viene generato ogni volta che un controllo si fa doppio clic.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>For example, if you have event handlers for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events of a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events are raised when the form is double-clicked and both methods are called.</source>
          <target state="translated">Ad esempio, se si dispongono di gestori eventi per il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> gli eventi di un <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> eventi vengono generati quando viene fatto doppio clic sul form ed entrambi i metodi vengono chiamati.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>If a control is double-clicked and that control does not support the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event might be raised twice.</source>
          <target state="translated">Se si fa doppio clic un controllo e che non supporta il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> evento, il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento potrebbe essere generato due volte.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>You must set the <ph id="ph1">`StandardClick`</ph> value of <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> to <ph id="ph3">`true`</ph> for this event to be raised.</source>
          <target state="translated">È necessario impostare il <ph id="ph1">`StandardClick`</ph> valore <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> a <ph id="ph3">`true`</ph> per questo evento da generare.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">I seguenti eventi non vengono generati per il <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a meno che non sia presente almeno un <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nel <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> raccolta: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se è presente almeno un <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nella raccolta, e l'utente interagisce con l'intestazione del controllo struttura a schede (in cui il <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> i nomi visualizzati), il <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Tuttavia, se l'interazione dell'utente è all'interno dell'area client della scheda, il <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event in an event handler.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene illustrato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento in un gestore eventi.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>Inheriting from a standard Windows Forms control and changing the <ph id="ph1">&lt;see langword="StandardClick" /&gt;</ph> or <ph id="ph2">&lt;see langword="StandardDoubleClick" /&gt;</ph> values of <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> to <ph id="ph4">&lt;see langword="true" /&gt;</ph> can cause unexpected behavior or have no effect at all if the control does not support the <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph6">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> events.</source>
          <target state="translated">Eredità da un controllo Windows Form standard e la modifica di <ph id="ph1">&lt;see langword="StandardClick" /&gt;</ph> o <ph id="ph2">&lt;see langword="StandardDoubleClick" /&gt;</ph> valori di <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> a <ph id="ph4">&lt;see langword="true" /&gt;</ph> può causare un comportamento imprevisto o non avere alcun effetto se il controllo non supporta il <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> o <ph id="ph6">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>eventi.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The following table lists Windows Forms controls and which event (<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>) is raised in response to the mouse action specified.</source>
          <target state="translated">Nella tabella seguente sono elencati i controlli Windows Form e gli eventi (<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> o <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>) viene generato in risposta all'azione del mouse specificato.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Control</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Controllo</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Left Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clic del Mouse</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Left Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare doppio clic sinistro del Mouse</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Right Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic destro del Mouse</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Right Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare doppio clic destro del Mouse</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Middle Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su centrale del Mouse</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Middle Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare doppio clic centrale del Mouse</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clic del Mouse XButton1</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 Mouse Double-Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare doppio clic del Mouse XButton1</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su di XButton2 del Mouse</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 Mouse Double-Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare doppio clic del Mouse XButton2</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.MonthCalendar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.MonthCalendar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DateTimePicker" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DateTimePicker" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HScrollBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HScrollBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VScrollBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VScrollBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RadioButton" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RadioButton" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckedListBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckedListBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DomainUpDown" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DomainUpDown" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NumericUpDown" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NumericUpDown" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5"> * </ph><ph id="ph6">&lt;see cref="T:System.Windows.Forms.TreeView" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5"> * </ph><ph id="ph6">&lt;see cref="T:System.Windows.Forms.TreeView" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">\*</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListView" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">\*</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListView" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ProgressBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ProgressBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TrackBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TrackBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Label" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Label" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LinkLabel" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LinkLabel" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GroupBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GroupBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PictureBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PictureBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Splitter" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Splitter" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.StatusBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.StatusBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">** </ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">** </ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">\*</ph> The mouse pointer must be over a child object (<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TreeNode" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ListViewItem" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">\*</ph> Il puntatore del mouse deve essere posizionato su un oggetto figlio (<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TreeNode" /&gt;</ph> o <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ListViewItem" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>** The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph> must have at least one <ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph> in its <ph id="ph3">&lt;see cref="P:System.Windows.Forms.TabControl.TabPages" /&gt;</ph> collection.</source>
          <target state="translated">* Il <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph> deve avere almeno un <ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph> nel relativo <ph id="ph3">&lt;see cref="P:System.Windows.Forms.TabControl.TabPages" /&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>Gets the rectangle that represents the client area of the control.</source>
          <target state="translated">Ottiene il rettangolo che rappresenta l'area client del controllo.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the client area of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta l'area client del controllo.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</source>
          <target state="translated">L'area client di un controllo è i limiti del controllo, meno gli elementi non client, ad esempio le barre di scorrimento, bordi, le barre del titolo e menu.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0).</source>
          <target state="translated">Poiché le coordinate del client sono rispetto all'angolo superiore sinistro dell'area client del controllo, le coordinate dell'angolo superiore sinistro del rettangolo restituito da questa proprietà sono (0,0).</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.</source>
          <target state="translated">È possibile utilizzare questa proprietà per ottenere le dimensioni e le coordinate dell'area client del controllo per attività quali disegno sulla superficie del controllo.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>For more information about drawing on controls, see <bpt id="p1">[</bpt>Rendering a Windows Forms Control<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sul disegno nei controlli, vedere <bpt id="p1">[</bpt>il Rendering di un controllo Windows Form<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>The following code example enables auto-scrolling for a form, resizes the form, and ensures that a button remains visible after the form is resized.</source>
          <target state="translated">Nell'esempio seguente Abilita lo scorrimento automatico per un form, ridimensiona il form e assicura che un pulsante rimanga visibile dopo il form viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph3">`button2`</ph> on it.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> denominato <ph id="ph3">`button2`</ph> su di esso.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>Gets or sets the height and width of the client area of the control.</source>
          <target state="translated">Ottiene o imposta l'altezza e la larghezza dell'area client del controllo.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the dimensions of the client area of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> che rappresenta le dimensioni dell'area client del controllo.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</source>
          <target state="translated">L'area client di un controllo è i limiti del controllo, meno gli elementi non client, ad esempio le barre di scorrimento, bordi, le barre del titolo e menu.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> method is called to set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> metodo viene chiamato per impostare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> property is not always changed through its <ph id="ph2">`set`</ph> method so you should override the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> method to ensure that your code is executed when the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> property is set.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> proprietà non viene sempre modificata tramite relativo <ph id="ph2">`set`</ph> (metodo), è necessario eseguire l'override di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> metodo per assicurarsi che il codice venga eseguito quando il <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> proprietà è impostata.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType&gt;</ph> properties represent the width and height of the client area of the control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType&gt;</ph> rappresentano la larghezza e altezza dell'area client del controllo.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.</source>
          <target state="translated">È possibile utilizzare questa proprietà per ottenere le dimensioni dell'area client del controllo per attività quali disegno sulla superficie del controllo.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>For more information about drawing on controls, see <bpt id="p1">[</bpt>Rendering a Windows Forms Control<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sul disegno nei controlli, vedere <bpt id="p1">[</bpt>il Rendering di un controllo Windows Form<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>You cannot bind application settings to this property.</source>
          <target state="translated">Per questa proprietà non è possibile associare le impostazioni dell'applicazione.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>For more information on application settings, see <bpt id="p1">[</bpt>Application Settings Overview<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulle impostazioni dell'applicazione, vedere <bpt id="p1">[</bpt>Application Settings Overview<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The following code example resizes the specified control so the control will accommodate its formatted text.</source>
          <target state="translated">Esempio di codice seguente ridimensiona il controllo specificato in modo il testo formattato, verrà eseguito il controllo.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The formatted text is the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property with the control's assigned <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> applied to the text.</source>
          <target state="translated">Il testo formattato è il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> assegnata la proprietà con il controllo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> applicato al testo.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The <ph id="ph1">`AutoSizeControl`</ph> method in this example also has a <ph id="ph2">`textPadding`</ph> parameter that represents the padding to apply to all edges of the control.</source>
          <target state="translated">Il <ph id="ph1">`AutoSizeControl`</ph> metodo in questo esempio ha anche un <ph id="ph2">`textPadding`</ph> parametro che rappresenta la spaziatura interna da applicare a tutti i bordi del controllo.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>To make the padding appear equal, align the text with the <ph id="ph1">&lt;xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType&gt;</ph> value, if your control supports it.</source>
          <target state="translated">Per rendere la spaziatura interna uguale, allineare il testo di <ph id="ph1">&lt;xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType&gt;</ph> valore, se supportato dal controllo.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ClientSize" /&gt;</ph> property changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ClientSize" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSizeChanged&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSizeChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ClientSizeChanged&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ClientSizeChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>Gets the name of the company or creator of the application containing the control.</source>
          <target state="translated">Ottiene il nome della società o dell'autore dell'applicazione che contiene il controllo.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>The company name or creator of the application containing the control.</source>
          <target state="translated">Nome della società o dell'autore dell'applicazione che contiene il controllo.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph> property is a read-only property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph> è una proprietà di sola lettura.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>To change the value of this property, set the <ph id="ph1">&lt;xref:System.Reflection.AssemblyCompanyAttribute.Company%2A&gt;</ph> property value of the <ph id="ph2">&lt;xref:System.Reflection.AssemblyCompanyAttribute&gt;</ph>.</source>
          <target state="translated">Per modificare il valore di questa proprietà, impostare il <ph id="ph1">&lt;xref:System.Reflection.AssemblyCompanyAttribute.Company%2A&gt;</ph> valore della proprietà di <ph id="ph2">&lt;xref:System.Reflection.AssemblyCompanyAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>The following line of C# code sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph> property.</source>
          <target state="translated">La seguente riga del set di codice c# di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>It is strongly recommended that you provide the company name, product name, and product version for your app.</source>
          <target state="translated">È consigliabile fornire il nome della società, il nome del prodotto e versione del prodotto per l'app.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>The following code example displays information about the application in a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contained by a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente consente di visualizzare informazioni sull'applicazione in un <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contenuti in un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> have been set.</source>
          <target state="translated">Questo esempio si presuppone che il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> sono state impostate.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to evaluate.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> da valutare.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source>Retrieves a value indicating whether the specified control is a child of the control.</source>
          <target state="translated">Recupera un valore che indica se il controllo specificato è figlio del controllo.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified control is a child of the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo specificato è figlio del controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source>The following code example ensures that a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> is visible by calling its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente garantisce che un <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> è visibile chiamando il relativo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> named <ph id="ph3">`panel1`</ph>, and a <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> named <ph id="ph5">`label1`</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con un <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> denominato <ph id="ph3">`panel1`</ph>e un <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> denominato <ph id="ph5">`label1`</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source>Gets a value indicating whether the control, or one of its child controls, currently has the input focus.</source>
          <target state="translated">Ottiene un valore che indica se il controllo o uno dei controlli figlio dispone dello stato attivo per l'input.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control or one of its child controls currently has the input focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo o uno dei controlli figlio dispone dello stato attivo per l'input; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source>You can use this property to determine whether a control or any of the controls contained within it has the input focus.</source>
          <target state="translated">È possibile utilizzare questa proprietà per determinare se un controllo o uno dei controlli in esso contenuti è nello stato attivo.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source>To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focused%2A&gt;</ph> property.</source>
          <target state="translated">Per determinare se il controllo ha lo stato attivo, indipendentemente dal fatto se uno dei relativi controlli figlio dispone dello stato attivo, utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focused%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source>To give a control the input focus, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> methods.</source>
          <target state="translated">Per assegnare un controllo attivo per l'input, utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>Gets or sets the shortcut menu associated with the control.</source>
          <target state="translated">Ottiene o imposta il menu di scelta rapida associato al controllo.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> that represents the shortcut menu associated with the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> che rappresenta il menu di scelta rapida associato al controllo.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>Use a shortcut menus to give context-specific menu options to users when they right-click on the control.</source>
          <target state="translated">Usare un menu di scelta rapida per le opzioni di menu specifiche per il contesto per gli utenti quando essi destro del mouse sul controllo.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>The following code example displays the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> assigned to a <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> when the right mouse button is clicked and released.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene visualizza la <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> assegnato a un <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> quando il pulsante destro del mouse viene premuto e rilasciato.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> on it.</source>
          <target state="translated">Questo codice è necessario che sia disponibile un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con un <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> su di esso.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>It is also required that the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> has a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> assigned to its <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property.</source>
          <target state="translated">È inoltre necessario che il <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> ha un <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> assegnato al relativo <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Non è necessario eseguire l'override di entrambi i <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> funzioni di accesso il <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> proprietà; è possibile sostituire un solo se necessario.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ContextMenuChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> property changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuChanged">
          <source>The following code example displays a message when a change occurs to the shortcut menu.</source>
          <target state="translated">Esempio di codice seguente visualizza un messaggio quando viene apportata una modifica al menu di scelta rapida.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph> associated with this control.</source>
          <target state="translated">Ottiene o imposta l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph> associato al controllo.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph> for this control, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph> per il controllo o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non sono presenti oggetti <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> has also been assigned to the control, the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> takes precedence over the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
          <target state="translated">Se un <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> è anch'essi assegnati al controllo, il <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> ha la precedenza sul <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>The following code example demonstrates how to add three <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph> objects to a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come aggiungere tre <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph> oggetti in un <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>In addition it demonstrates setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph> property of the form.</source>
          <target state="translated">Viene inoltre illustrato come impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph> proprietà del form.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /&gt;</ph> property changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStripChanged&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStripChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ContextMenuStripChanged&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ContextMenuStripChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ControlAdded">
          <source>Occurs when a new control is added to the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>.</source>
          <target state="translated">Si verifica quando si aggiunge un nuovo controllo all'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ControlAdded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ControlAdded">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAdded&gt;</ph> to add a control to a form and displays the name of the added control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAdded&gt;</ph> per aggiungere un controllo a un form e visualizza il nome del controllo aggiunto in un <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ControlRemoved">
          <source>Occurs when a control is removed from the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>.</source>
          <target state="translated">Si verifica quando si rimuove un controllo dall'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ControlRemoved">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ControlRemoved">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlRemoved&gt;</ph> to remove a control from a form and displays the name of the removed control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlRemoved&gt;</ph> per rimuovere un controllo da un form e visualizza il nome del controllo rimosso in una <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Controls">
          <source>Gets the collection of controls contained within the control.</source>
          <target state="translated">Ottiene la raccolta di controlli contenuti nel controllo.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> representing the collection of controls contained within the control.</source>
          <target state="translated">Raccolta <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> che rappresenta la raccolta di controlli contenuti nel controllo.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> can act as a parent to a collection of controls.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> può fungere da elemento padre di una raccolta di controlli.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>For example, when several controls are added to a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, each of the controls is a member of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> assigned to the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property of the form, which is derived from the <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">Ad esempio, quando si aggiungono più controlli per un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, ognuno dei controlli è un membro del <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> assegnato al <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> proprietà del modulo, che è derivato dalla <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>You can manipulate the controls in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> assigned to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property by using the methods available in the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> class.</source>
          <target state="translated">È possibile modificare i controlli di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> assegnato al <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> proprietà utilizzando i metodi disponibili nel <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>When adding several controls to a parent control, it is recommended that you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method before initializing the controls to be added.</source>
          <target state="translated">Quando si aggiungono più controlli a un controllo padre, è consigliabile chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> metodo prima di inizializzare i controlli da aggiungere.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>After adding the controls to the parent control, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method.</source>
          <target state="translated">Dopo l'aggiunta di controlli al controllo padre, chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>Doing so will increase the performance of applications with many controls.</source>
          <target state="translated">In questo modo aumenta le prestazioni delle applicazioni con molti controlli.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property to iterate through all controls of a form, including nested controls.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> proprietà per scorrere tutti i controlli di un form, inclusi i controlli annidati.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph> method to retrieve the previous or next child control in the tab order.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph> metodo per recuperare il controllo figlio precedente o successivo nell'ordine di tabulazione.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property to get or set the active control of a container control.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> proprietà da ottenere o impostare il controllo attivo di un controllo contenitore.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>The following code example removes a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> from the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> of the derived class <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph> if it is a member of the collection.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene rimuove un <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> dal <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> della classe derivata <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph> se è un membro della raccolta.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>The example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, and at least one <ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control on a <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Nell'esempio si presuppone che sia stato creato un <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>e almeno un <ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control per un <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control(s) are added to the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control, and the <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control added to the <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> vengono aggiunti al <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> (controllo) e <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph> aggiunto al controllo il <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>When the button is clicked, the radio button named <ph id="ph1">`removeButton`</ph> is removed from the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</source>
          <target state="translated">Quando si fa clic sul pulsante, il pulsante di opzione denominato <ph id="ph1">`removeButton`</ph> rimossa la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>Creates a new accessibility object for the control.</source>
          <target state="translated">Crea un nuovo oggetto di accessibilità per il controllo.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> for the control.</source>
          <target state="translated">Nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> per il controllo.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>If you do not explicitly call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method, it will be called when the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property is referenced.</source>
          <target state="translated">Se non si chiama in modo esplicito il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph>, verrà chiamato quando si crea un riferimento alla proprietà <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>To get or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property, you must add a reference to the <ph id="ph2">`Accessibility`</ph> assembly installed with the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Per ottenere o impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> proprietà, è necessario aggiungere un riferimento al <ph id="ph2">`Accessibility`</ph> assembly installato con il <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>The following code example demonstrates the creation of an accessibility-aware chart control, using the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes to expose accessible information.</source>
          <target state="translated">Esempio di codice seguente viene illustrata la creazione di un grafico di supporto per l'accessibilità controllare, tramite il <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> alle classi di esporre le informazioni accessibili.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>The control plots two curves along with a legend.</source>
          <target state="translated">Il controllo traccia due curve e una legenda.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>The <ph id="ph1">`ChartControlAccessibleObject`</ph> class, which derives from <ph id="ph2">`ControlAccessibleObject`</ph>, is used in the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method to provide custom accessible information for the chart control.</source>
          <target state="translated">Il <ph id="ph1">`ChartControlAccessibleObject`</ph> classe che deriva da <ph id="ph2">`ControlAccessibleObject`</ph>, viene utilizzata la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> metodo per fornire informazioni accessibili personalizzate per il controllo chart.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>Since the chart legend is not an actual <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</source>
          <target state="translated">Poiché la legenda del grafico non è una vera e propria <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -controllo di base, ma viene disegnata dal controllo chart, non non contiene informazioni accessibili.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>Because of this, the <ph id="ph1">`ChartControlAccessibleObject`</ph> class overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> method to return the <ph id="ph3">`CurveLegendAccessibleObject`</ph> that represents accessible information for each part of the legend.</source>
          <target state="translated">Per questo motivo, il <ph id="ph1">`ChartControlAccessibleObject`</ph> classe esegue l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> per restituire il <ph id="ph3">`CurveLegendAccessibleObject`</ph> che rappresenta le informazioni accessibili per ogni parte della legenda.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>When an accessible-aware application uses this control, the control can provide the necessary accessible information.</source>
          <target state="translated">Quando viene utilizzato da un'applicazione accessibile abilitata, il controllo può fornire le informazioni accessibili necessarie.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>This code excerpt demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method.</source>
          <target state="translated">Questo estratto di codice viene illustrato l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class overview for the complete code example.</source>
          <target state="translated">Vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> Cenni preliminari sulla classe per l'esempio di codice completo.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /&gt;</ph> in a derived class, do not call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /&gt;</ph> method.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /&gt;</ph> in una classe derivata, non chiamare la classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateControl">
          <source>Forces the creation of the visible control, including the creation of the handle and any visible child controls.</source>
          <target state="translated">Determina la creazione del controllo visibile, inclusa la creazione del punto di controllo e di eventuali controlli figlio visibili.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> method forces a handle to be created for the control and its child controls.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> metodo impone un handle da creare per il controllo e i relativi controlli figlio.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControl">
          <source>This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo viene utilizzato quando è necessario immediatamente un handle per la modifica del controllo o i relativi elementi figlio; è sufficiente chiamare un costruttore del controllo non crea il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControl">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> does not create a control handle if the control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property is <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> non crea un punto di controllo se il controllo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> proprietà <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControl">
          <source>You can either call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> method or access the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property to create the control's handle regardless of the control's visibility, but in this case, no window handles are created for the control's children.</source>
          <target state="translated">È possibile chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> metodo o accesso di <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> proprietà per creare il controllo di gestire indipendentemente dalla visibilità del controllo, ma in questo caso, nessuna finestra handle vengono creati per gli elementi figlio del controllo.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateControlsInstance">
          <source>Creates a new instance of the control collection for the control.</source>
          <target state="translated">Crea una nuova istanza della raccolta di controlli per il controllo.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateControlsInstance">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> assigned to the control.</source>
          <target state="translated">Nuova istanza dell'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> assegnato al controllo.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControlsInstance">
          <source>The base class version of this method should not be called by a derived class.</source>
          <target state="translated">La versione della classe di base di questo metodo non deve essere chiamata da una classe derivata.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Created">
          <source>Gets a value indicating whether the control has been created.</source>
          <target state="translated">Ottiene un valore che indica se il controllo è stato creato.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Created">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has been created; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo è stato creato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Created">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Created%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> was successfully created even though the control's handle might not have been created or recreated yet.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Created%2A&gt;</ph> restituisce proprietà <ph id="ph2">`true`</ph> se il <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> è stato creato correttamente, anche se potrebbe essere l'handle del controllo non sono stato creato o ricreato ancora.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Creates the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the control.</source>
          <target state="translated">Crea l'oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> per il controllo.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> per il controllo.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object that you retrieve through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> oggetto recuperato tramite il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> metodo non normalmente conservare dopo aver elaborato il messaggio di Windows corrente, perché qualsiasi elemento disegnato con tale oggetto verrà cancellato con il successivo messaggio WM_PAINT.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Therefore you cannot cache the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object for reuse, except to use non-visual methods like <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">È pertanto possibile memorizzare nella cache il <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> oggetto per il riutilizzo, tranne per utilizzare i metodi non visivi come <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Instead, you must call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> every time that you want to use the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object, and then call <ph id="ph3">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> when you are finished using it.</source>
          <target state="translated">In alternativa, è necessario chiamare <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> ogni volta che si desidera utilizzare il <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> e quindi chiamare <ph id="ph3">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> quando si è terminato.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>For more information about Windows messages, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni sui messaggi di Windows, vedere <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>By design, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> sets ownership to the calling thread, and fails if it is called on other threads.</source>
          <target state="translated">Per impostazione predefinita, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> imposta la proprietà per il thread chiamante e non riesce se viene chiamato da altri thread.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Oltre al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> proprietà, sono disponibili quattro metodi su un controllo che sono thread-safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se è già stato creato l'handle per il controllo.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> prima di aver creato l'handle del controllo in un thread in background può causare valido chiamate tra thread.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">Per tutte le altre chiamate di metodo, è necessario utilizzare uno dei metodi invoke per effettuare il marshalling della chiamata al thread del controllo.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The following code example resizes the specified control so the control will accommodate its formatted text.</source>
          <target state="translated">Esempio di codice seguente ridimensiona il controllo specificato in modo il testo formattato, verrà eseguito il controllo.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The formatted text is the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property with the control's assigned <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> applied to the text.</source>
          <target state="translated">Il testo formattato è il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> assegnata la proprietà con il controllo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> applicato al testo.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The <ph id="ph1">`AutoSizeControl`</ph> method in this example also has a <ph id="ph2">`textPadding`</ph> parameter that represents the padding to apply to all edges of the control.</source>
          <target state="translated">Il <ph id="ph1">`AutoSizeControl`</ph> metodo in questo esempio ha anche un <ph id="ph2">`textPadding`</ph> parametro che rappresenta la spaziatura interna da applicare a tutti i bordi del controllo.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>To make the padding appear equal, align the text with the <ph id="ph1">`MiddleCenter`</ph> value of <ph id="ph2">&lt;xref:System.Drawing.ContentAlignment?displayProperty=nameWithType&gt;</ph> if your control supports it.</source>
          <target state="translated">Per rendere la spaziatura interna uguale, allineare il testo di <ph id="ph1">`MiddleCenter`</ph> valore <ph id="ph2">&lt;xref:System.Drawing.ContentAlignment?displayProperty=nameWithType&gt;</ph> se supportato dal controllo.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>for safe subwindows to call this method.</source>
          <target state="translated">per le sottofinestre chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="SafeSubWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="SafeSubWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>Creates a handle for the control.</source>
          <target state="translated">Crea un handle per il controllo.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>You typically should not call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> method directly.</source>
          <target state="translated">In genere non è necessario chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> metodo direttamente.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>The preferred method is to call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> method, which forces a handle to be created for the control and its child controls when the control is created.</source>
          <target state="translated">Il metodo preferito consiste nel chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> (metodo), che impone un handle da creare per il controllo e i relativi controlli figlio quando viene creato il controllo.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>The object is in a disposed state.</source>
          <target state="translated">L'oggetto è stato eliminato.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">per tutte le finestre per classi che ereditano per chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph> method to ensure that the handle is created.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph> in una classe derivata, assicurarsi di chiamare la classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph> metodo per assicurarsi che l'handle è creato.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>Gets the required creation parameters when the control handle is created.</source>
          <target state="translated">Ottiene i parametri necessari per la creazione quando viene creato l'handle del controllo.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> contenente i parametri di creazione necessari quando viene creato l'handle del controllo.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> property should not be overridden and used to adjust the properties of your derived control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> proprietà non deve essere sottoposto a override e utilizzata per modificare le proprietà del controllo derivato.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>Properties such as the <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType&gt;</ph> should be set by the corresponding properties in your control such as <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Proprietà, ad esempio il <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType&gt;</ph> dovrebbe essere impostato per la proprietà corrispondente nel controllo, ad esempio <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> deve essere estesa solo quando si esegue il wrapping di una classe di controllo standard di Windows o per impostare gli stili non forniti dallo spazio dei nomi Windows Form.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>For more information about creating control parameters, see the <ph id="ph1">`CreateWindow`</ph> and <ph id="ph2">`CreateWindowEx`</ph> functions and the <bpt id="p1">[</bpt>CREATESTRUCT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)</ept>structure documentation.</source>
          <target state="translated">Per ulteriori informazioni sulla creazione di parametri di controllo, vedere il <ph id="ph1">`CreateWindow`</ph> e <ph id="ph2">`CreateWindowEx`</ph> funzioni e <bpt id="p1">[</bpt>CREATESTRUCT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)</ept>documentazione relativa alla struttura.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>The following code example extends the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> derived class.</source>
          <target state="translated">L'esempio di codice seguente estende la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> proprietà di un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> classe derivata.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType&gt;</ph> property is changed, which causes the button to display an <ph id="ph2">&lt;xref:System.Drawing.Icon&gt;</ph> rather than an <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType&gt;</ph> proprietà viene modificata, causando il pulsante per visualizzare un <ph id="ph2">&lt;xref:System.Drawing.Icon&gt;</ph> anziché un oggetto <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>This example requires that you have a class that inherits from the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che eredita la <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>for the immediate caller to call unmanaged code when getting the property value.</source>
          <target state="translated">Per il chiamante immediato chiamare codice non gestito quando si recupera il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.CreateParams" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.CreateParams" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.CreateParams" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.CreateParams" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Gets or sets the cursor that is displayed when the mouse pointer is over the control.</source>
          <target state="translated">Ottiene o imposta il cursore visualizzato quando il puntatore del mouse viene spostato sul controllo.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> that represents the cursor to display when the mouse pointer is over the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> che rappresenta il cursore da visualizzare quando il puntatore del mouse viene spostato sul controllo.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Assign a <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property of the control to change the cursor displayed when the mouse pointer is over the control.</source>
          <target state="translated">Assegnare un <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> per il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> proprietà del controllo per modificare il cursore visualizzato quando il puntatore del mouse si trova sul controllo.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>To temporarily change the mouse cursor for all controls on your application set the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Per modificare temporaneamente il cursore del mouse per tutti i controlli dell'applicazione, impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Typically you would set the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType&gt;</ph> property to a wait cursor when populating a <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> or saving or loading a file.</source>
          <target state="translated">In genere è necessario impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType&gt;</ph> proprietà per un cursore di attesa durante il popolamento di un <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> o il salvataggio o caricamento di un file.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> proprietà è una proprietà di ambiente.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">Una proprietà di ambiente è una proprietà del controllo che, se non impostato, viene recuperato dal controllo padre.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">Ad esempio, un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> avrà lo stesso <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> come padre <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">Per ulteriori informazioni sulle proprietà di ambiente, vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> classe o <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>The following code example fills a <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> with the user's available logical drives.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene riempimenti un <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> con unità logiche disponibili dell'utente.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>The example also sets the combo box's <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> property so the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType&gt;</ph> cursor is displayed when the mouse pointer is over the drop-down button.</source>
          <target state="translated">L'esempio imposta anche la casella combinata <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> proprietà pertanto <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType&gt;</ph> cursore viene visualizzato quando il puntatore del mouse viene spostato sul pulsante di menu a discesa.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> on it.</source>
          <target state="translated">Questo codice è necessario che sia disponibile un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con un <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> su di esso.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>for safe subwindows to set this property value.</source>
          <target state="translated">per le sottofinestre impostare il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> methods of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Non è necessario eseguire l'override di entrambi i <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> metodi del <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> proprietà; è possibile sostituire un solo se necessario.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>The following code example demonstrates changing the mouse cursor using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> class, and the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursors&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come cambiare il cursore del mouse utilizzando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType&gt;</ph> proprietà, il <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> (classe) e <ph id="ph3">&lt;xref:System.Windows.Forms.Cursors&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>The example creates a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
          <target state="translated">Nell'esempio viene creato un form contenente un <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> (controllo), un <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> (controllo) e un <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> contains all cursors provided by the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors&gt;</ph> class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> contiene tutti i cursori forniti dalla <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>When the user selects a mouse cursor in the <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType&gt;</ph> property is set to the selected cursor, which updates the cursor for the <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">Quando l'utente seleziona un cursore del mouse nel <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType&gt;</ph> proprietà è impostata sul cursore selezionato, che aggiorna il cursore per il <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> is updated every time the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType&gt;</ph> event occurs.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> viene aggiornato ogni volta che il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType&gt;</ph> si verifica l'evento.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>Gets the data bindings for the control.</source>
          <target state="translated">Ottiene i data binding per il controllo.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlBindingsCollection" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph> objects for the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlBindingsCollection" /&gt;</ph> che contiene gli oggetti <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> property to access the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph>.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> proprietà a cui accedere il <ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>By adding <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects to the collection, you can bind any property of a control to the property of an object.</source>
          <target state="translated">Aggiungendo <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> oggetti alla raccolta, è possibile associare qualsiasi proprietà di un controllo per la proprietà di un oggetto.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>The following code example adds <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph> of five controls: four <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls and a <ph id="ph4">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> control.</source>
          <target state="translated">L'esempio di codice seguente aggiunge <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> oggetti per il <ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph> di cinque controlli: quattro <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controlli e un <ph id="ph4">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph> is accessed through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">È possibile accedere a <ph id="ph1">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph> tramite la proprietà <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> della classe <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>Gets the default background color of the control.</source>
          <target state="translated">Ottiene il colore di sfondo predefinito del controllo.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>The default background <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> di sfondo predefinito del controllo.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Control" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Control" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>This is the default <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property value of a generic top-level control.</source>
          <target state="translated">Questa è l'impostazione predefinita <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> valore della proprietà di un controllo di primo livello generico.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>Derived classes can have different defaults.</source>
          <target state="translated">Le classi derivate possono avere valori predefiniti diversi.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> members.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> membri.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> called ListBox1.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente in un form contenente un <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> denominato ListBox1.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>Call the <ph id="ph1">`Populate_ListBox`</ph> method in the form's constructor or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event-handling method.</source>
          <target state="translated">Chiamare il <ph id="ph1">`Populate_ListBox`</ph> metodo nel costruttore del form o <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> il metodo di gestione degli eventi.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultCursor">
          <source>Gets or sets the default cursor for the control.</source>
          <target state="translated">Ottiene o imposta il cursore predefinito per il controllo.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultCursor">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> representing the current default cursor.</source>
          <target state="translated">Oggetto di tipo <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> che rappresenta il cursore predefinito corrente.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultCursor">
          <source>Override <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultCursor%2A&gt;</ph> to configure a default cursor for your control.</source>
          <target state="translated">Eseguire l'override <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultCursor%2A&gt;</ph> per configurare un cursore predefinito per il controllo.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultCursor">
          <source>This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</source>
          <target state="translated">Questo è più efficiente rispetto all'impostazione del cursore nel costruttore del controllo e fornisce il supporto automatico per determinate funzioni della finestra di progettazione relative al cursore.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Gets the default font of the control.</source>
          <target state="translated">Ottiene il tipo di carattere predefinito del controllo.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> predefinito del controllo.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The value returned will vary depending on the user's operating system the local culture setting of their system.</source>
          <target state="translated">Il valore restituito varierà in base al sistema operativo usato e alle impostazioni cultura del sistema.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The following table describes the value returned by <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph> depending on the operating system and local culture.</source>
          <target state="translated">La tabella seguente descrive il valore restituito da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph> a seconda del sistema operativo e le impostazioni cultura locali.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>System/and or Culture</source>
          <target state="translated">Sistema / e o delle impostazioni cultura</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Font</source>
          <target state="translated">Tipo di carattere</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Windows NT 4x, Japanese version</source>
          <target state="translated">Windows NT 4 x, versione giapponese</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>MS UI Gothic, 9 point.</source>
          <target state="translated">MS UI gotica, 9 punti.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Arabic Windows</source>
          <target state="translated">Windows arabo</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Tahoma, 8 point.</source>
          <target state="translated">Tahoma, 8 punti.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Other operating system/culture</source>
          <target state="translated">Altre impostazioni cultura/sistema operativo</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>MS Shell Dlg logical font, typically Microsoft San Serif 8 point.</source>
          <target state="translated">Carattere MS Shell Dlg logico, in genere Microsoft Sans Serif a 8 punti.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>MS Shell Dlg maps to a font set in the system registry.</source>
          <target state="translated">MS Shell Dlg viene mappato a un tipo di carattere impostato nel Registro di sistema.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>If the previous fonts are not installed, the default font is Tahoma, 8 point.</source>
          <target state="translated">Se non sono installati i tipi di carattere precedente, il tipo di carattere predefinito è Tahoma, 8 punti.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>If Tahoma, 8 point, is not installed, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph> returns the value of the <ph id="ph2">&lt;xref:System.Drawing.FontFamily.GenericSansSerif%2A&gt;</ph> property</source>
          <target state="translated">Se Tahoma, 8 punti, non è installato, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph> restituisce il valore della <ph id="ph2">&lt;xref:System.Drawing.FontFamily.GenericSansSerif%2A&gt;</ph> proprietà</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> members.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> membri.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> called ListBox1.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente in un form contenente un <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> denominato ListBox1.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Call the <ph id="ph1">`Populate_ListBox`</ph> method in the form's constructor or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event-handling method.</source>
          <target state="translated">Chiamare il <ph id="ph1">`Populate_ListBox`</ph> metodo nel costruttore del form o <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> il metodo di gestione degli eventi.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The default font or the regional alternative fonts are not installed on the client computer.</source>
          <target state="translated">Il tipo di carattere predefinito o i tipi di carattere alternativi specifici per la lingua in uso non sono installati sul computer client.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>Gets the default foreground color of the control.</source>
          <target state="translated">Ottiene il colore di primo piano predefinito del controllo.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>The default foreground <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> di primo piano predefinito del controllo.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.ControlText" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.ControlText" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>This is the default <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property value of a nonparented control.</source>
          <target state="translated">Questa è l'impostazione predefinita <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> valore della proprietà di un controllo privo di controllo.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>Derived classes can have different defaults.</source>
          <target state="translated">Le classi derivate possono avere valori predefiniti diversi.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> members.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> membri.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> called ListBox1.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente in un form contenente un <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> denominato ListBox1.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>Call the <ph id="ph1">`Populate_ListBox`</ph> method in the form's constructor or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event-handling method.</source>
          <target state="translated">Chiamare il <ph id="ph1">`Populate_ListBox`</ph> metodo nel costruttore del form o <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> il metodo di gestione degli eventi.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>Gets the default Input Method Editor (IME) mode supported by the control.</source>
          <target state="translated">Ottiene la modalità IME (Input Method Editor, editor del metodo di input) predefinita supportata dal controllo.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</source>
          <target state="translated">Input Method Editor (IME) è un programma che consente agli utenti di immettere simboli, ad esempio caratteri Kanji giapponese e caratteri complessi mediante una tastiera standard.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class, this property always returns the <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated">Quando implementato nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe, questa proprietà restituisce sempre il <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType&gt;</ph> valore.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode.Inherit&gt;</ph> value specifies that the IME mode is inherited from the parent control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode.Inherit&gt;</ph> valore specifica che la modalità IME viene ereditata dal controllo padre.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultImeMode%2A&gt;</ph> property to turn off the Input Method Editor.</source>
          <target state="translated">Nell'esempio di codice viene eseguito l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultImeMode%2A&gt;</ph> proprietà per attivare l'editor del metodo di Input.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultImeMode" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultImeMode" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultImeMode" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultImeMode" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultMargin">
          <source>Gets the space, in pixels, that is specified by default between controls.</source>
          <target state="translated">Ottiene lo spazio specificato per impostazione predefinita tra i controlli, espresso in pixel.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultMargin">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> that represents the default space between controls.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> che rappresenta lo spazio predefinito tra i controlli.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultMaximumSize">
          <source>Gets the length and height, in pixels, that is specified as the default maximum size of a control.</source>
          <target state="translated">Ottiene la lunghezza e l'altezza specificate come dimensioni massime predefinite di un controllo, espresse in pixel.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultMaximumSize">
          <source>A <ph id="ph1">&lt;see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /&gt;</ph> representing the size of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /&gt;</ph> che rappresenta le dimensioni del controllo.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultMinimumSize">
          <source>Gets the length and height, in pixels, that is specified as the default minimum size of a control.</source>
          <target state="translated">Ottiene la lunghezza e l'altezza specificate come dimensioni minime predefinite di un controllo, espresse in pixel.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultMinimumSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the size of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> che rappresenta le dimensioni del controllo.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultPadding">
          <source>Gets the internal spacing, in pixels, of the contents of a control.</source>
          <target state="translated">Ottiene la spaziatura interna del contenuto di un controllo, espressa in pixel.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultPadding">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> that represents the internal spacing of the contents of a control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> che rappresenta la spaziatura interna del contenuto di un controllo.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">Ottiene le dimensioni predefinite del controllo.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> predefinito del controllo.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property represents the <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph> of the control when it is initially created.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> proprietà rappresenta il <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph> del controllo quando viene inizialmente creato.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>You can adjust the size of the control by setting its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property value.</source>
          <target state="translated">È possibile regolare le dimensioni del controllo impostando il relativo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> valore della proprietà.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>To maintain better performance, do not set the <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> of a control in its constructor.</source>
          <target state="translated">Per ottenere prestazioni migliori, non impostare il <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> di un controllo nel relativo costruttore.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">Il metodo preferito consiste nell'eseguire l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>On Windows Server 2003 systems, the size of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is restricted by the maximum pixel width and height of the monitor.</source>
          <target state="translated">Nei sistemi Windows Server 2003, le dimensioni di un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> è limitato per la larghezza massima in pixel e l'altezza del monitoraggio.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property, and makes the default size of the form 500 pixels square.</source>
          <target state="translated">Nell'esempio di codice viene eseguito l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> , proprietà e le dimensioni predefinite dei pixel modulo 500 quadrato.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultSize" /&gt;</ph> property in a derived class, it is preferable to return a <ph id="ph2">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> with the desired dimensions rather than to override all the implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultSize" /&gt;</ph> proprietà in una classe derivata, è preferibile restituire un <ph id="ph2">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> con le dimensioni desiderate anziché eseguire l'override di tutta l'implementazione.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> di Windows da elaborare.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>Sends the specified message to the default window procedure.</source>
          <target state="translated">Invia il messaggio specificato alla routine della finestra predefinita.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>For more information about processing Windows messages, see the <bpt id="p1">[</bpt>WindowProc function<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sull'elaborazione dei messaggi di Windows, vedere il <bpt id="p1">[</bpt>funzione WindowProc<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">per il chiamante immediato chiamare codice non gestito.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DestroyHandle">
          <source>Destroys the handle associated with the control.</source>
          <target state="translated">Elimina definitivamente il punto di controllo associato al controllo.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DestroyHandle">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">per il chiamante immediato chiamare codice non gestito.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DestroyHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DestroyHandle">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph> method to ensure that the handle is destroyed.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph> in una classe derivata, assicurarsi di chiamare la classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph> metodo per assicurarsi che l'handle è stato eliminato.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DeviceDpi">
          <source>Gets the DPI value for the display device where the control is currently being displayed.</source>
          <target state="translated">Ottiene il valore DPI per il dispositivo di visualizzazione in cui è attualmente visualizzato il controllo.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DeviceDpi">
          <source>The DPI value of the display device.</source>
          <target state="translated">Valore DPI del dispositivo di visualizzazione.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>Gets the rectangle that represents the display area of the control.</source>
          <target state="translated">Ottiene il rettangolo che rappresenta l'area di visualizzazione del controllo.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the display area of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta l'area di visualizzazione del controllo.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph> property returns the client rectangle of the display area of the control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph> proprietà restituisce il rettangolo client dell'area di visualizzazione del controllo.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>For the base control class, this is equal to the client rectangle.</source>
          <target state="translated">Per la classe di base di controllo, questo valore è uguale al rettangolo client.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>However, inheriting controls might want to change this if their client area differs from their display area.</source>
          <target state="translated">Tuttavia, i controlli che ereditano potrebbe voler modificare questo valore se la relativa area client è diverso dalla relativa area di visualizzazione.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>The display rectangle is the smallest <ph id="ph1">&lt;xref:System.Drawing.Rectangle&gt;</ph> that encloses a control and is used to lay out controls.</source>
          <target state="translated">Il rettangolo di visualizzazione è il più piccolo <ph id="ph1">&lt;xref:System.Drawing.Rectangle&gt;</ph> che racchiude un controllo e viene utilizzato per disporre i controlli.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DisplayRectangle" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DisplayRectangle" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DisplayRectangle" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DisplayRectangle" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>Alternatively, you must provide all the implementation.</source>
          <target state="translated">In alternativa, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and its child controls and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate dall'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> e dai relativi controlli figlio e facoltativamente rilascia le risorse gestite.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.<ph id="ph3">`Dispose()`</ph></source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">`Dispose()`</ph> (metodo) e <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> metodo.<ph id="ph3">`Dispose()`</ph></target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>invokes the protected <ph id="ph1">`Dispose(Boolean)`</ph> method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">richiama il metodo protetto <ph id="ph1">`Dispose(Boolean)`</ph> metodo con il <ph id="ph2">`disposing`</ph> parametro impostato su <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> richiama <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> impostato su <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> references.</source>
          <target state="translated">Se il parametro <ph id="ph1">`disposing`</ph> è <ph id="ph2">`true`</ph>, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> fa riferimento.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">`Dispose()`</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> prestare attenzione a non fare riferimento a oggetti che sono stati eliminati in una precedente chiamata a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su come implementare <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>si esegue l'override del metodo Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Disposing">
          <source>Gets a value indicating whether the base <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class is in the process of disposing.</source>
          <target state="translated">Ottiene un valore che indica se la classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> base è in corso di eliminazione.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the base <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class is in the process of disposing; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la classe <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> base è in corso di eliminazione; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source>When this property returns <ph id="ph1">`true`</ph>, the base <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is in the process of disposing.</source>
          <target state="translated">Quando questa proprietà restituisce <ph id="ph1">`true`</ph>, la base <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe è in corso di eliminazione.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source>After the control is disposed of, it can no longer be referenced as a valid Windows control.</source>
          <target state="translated">Una volta eliminato il controllo, non può più fare riferimento a un controllo di Windows valido.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source>Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</source>
          <target state="translated">Anche se l'istanza di un controllo viene eliminata, viene comunque mantenuto in memoria fino a quando non viene rimosso dalla memoria tramite garbage collection.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source>When a control is disposed of, you cannot call its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.</source>
          <target state="translated">Quando viene eliminato un controllo, è possibile chiamare il relativo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Dock">
          <source>Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.</source>
          <target state="translated">Ottiene o imposta i bordi di controllo ancorati al relativo controllo padre e determina la modalità con cui un controllo viene ridimensionato con il proprio padre.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DockStyle" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DockStyle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DockStyle.None" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DockStyle.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property to define how a control is automatically resized as its parent control is resized.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> proprietà per definire come un controllo viene ridimensionato automaticamente quando il relativo controllo padre viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>For example, setting <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType&gt;</ph> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized.</source>
          <target state="translated">Ad esempio, l'impostazione <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType&gt;</ph> , il controllo con il bordo sinistro del controllo padre e il controllo padre viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).</source>
          <target state="translated">I controlli vengono ancorati nell'ordine Z, ovvero la disposizione visiva di controlli in un form lungo l'asse z del form (profondità).</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.</source>
          <target state="translated">Un controllo può essere ancorato a un bordo del contenitore padre o può essere ancorato a tutti i bordi e riempire il contenitore padre.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> property on a docked control has no effect on the distance of the control from the edges of its container.</source>
          <target state="translated">L'impostazione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> proprietà in un controllo ancorato non ha effetto sulla distanza del controllo dai bordi del contenitore.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties are mutually exclusive.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> si escludono a vicenda.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Only one can be set at a time, and the last one set takes precedence.</source>
          <target state="translated">È possibile impostare solo uno alla volta e l'ultima occorrenza ha la precedenza.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">L'esempio di codice seguente crea un <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e vengono impostate alcune proprietà comuni.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> within the group box.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e imposta il relativo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> all'interno della casella di gruppo.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Next, it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the group box, and docks the group box to the top of the form.</source>
          <target state="translated">Viene quindi impostata la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> proprietà della casella di gruppo e il controllo viene ancorato casella del gruppo nella parte superiore del form.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Lastly, it disables the group box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, which causes all controls contained within the group box to be disabled.</source>
          <target state="translated">Infine, viene disabilitata la casella di gruppo impostando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> proprietà <ph id="ph2">`false`</ph>, che fa sì che tutti i controlli contenuti all'interno della casella di gruppo deve essere disabilitata.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Dock">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DockStyle" /&gt;</ph> values.</source>
          <target state="translated">Il valore assegnato non è uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DockStyle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> methods of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Non è necessario eseguire l'override di entrambi i <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> metodi del <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> proprietà; è possibile sostituire un solo se necessario.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> property changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un gestore eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes(<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> che sono generati quando corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> modificato il valore (<bpt id="p3">*</bpt> PropertyName<ept id="p3">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che contiene un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The data to drag.</source>
          <target state="translated">Dati da trascinare.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>Begins a drag-and-drop operation.</source>
          <target state="translated">Inizia un'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> enumeration that represents the final effect that was performed during the drag-and-drop operation.</source>
          <target state="translated">Valore ricavato dall'enumerazione <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> che rappresenta l'effetto finale ottenuto durante l'operazione di trascinamento della selezione.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">`allowedEffects`</ph> parameter determines which drag operations can occur.</source>
          <target state="translated">Il <ph id="ph1">`allowedEffects`</ph> parametro determina quali operazioni di trascinamento possono verificarsi.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<ph id="ph1">&lt;xref:System.String&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph>, or <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph>), or an object that implements <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>.</source>
          <target state="translated">Se l'operazione di trascinamento deve interagire con le applicazioni in un altro processo, dati devono essere una classe base gestita (<ph id="ph1">&lt;xref:System.String&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph>, o <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph>), o un oggetto che implementa <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> o <ph id="ph5">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">Di seguito vengono illustrate le modalità e le circostanze in cui vengono generati eventi relativi a operazioni di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo determina il controllo sotto la posizione corrente del cursore.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">Viene quindi verificato se il controllo è un obiettivo di rilascio valido.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">Se il controllo è un obiettivo di rilascio valido, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> evento viene generato con l'effetto di trascinamento e rilascio specificato.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Per un elenco degli effetti di trascinamento, vedere l'enumerazione <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">Viene tenuta traccia delle modifiche apportate alla posizione del cursore del mouse, allo stato della tastiera e allo stato dei pulsanti del mouse.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se l'utente si sposta al di fuori di una finestra, verrà generato un evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">Se il mouse viene spostato su un altro controllo, verrà generato l'evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> per tale controllo.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">Se il mouse viene spostato ma sempre all'interno dello stesso controllo, verrà generato l'evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">Se si verifica un cambiamento nello stato pulsante mouse o tastiera, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento viene generato e verrà determinato se continuare l'operazione di trascinamento, rilasciare i dati, o per annullare l'operazione in base al valore del <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> proprietà dell'evento <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Continue`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> evento viene generato per continuare l'operazione e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> viene generato l'evento con il nuovo effetto, consentire l'impostazione della risposta visiva appropriata.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Per un elenco degli effetti di trascinamento validi, vedere l'enumerazione <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> gli eventi vengono abbinati in modo che, mentre il mouse viene spostato sulla destinazione di trascinamento, l'utente riceva le informazioni più aggiornate sulla posizione del mouse.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Drop`</ph>, il valore dell'effetto di rilascio viene restituito all'origine, in modo che l'applicazione di origine può eseguire l'operazione appropriata sui dati di origine, ad esempio il taglio dei dati se l'operazione è un'operazione di spostamento.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Cancel`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method catches all exceptions and rethrows only the following security or critical exceptions:</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo intercetta tutte le eccezioni e Rigenera solo le seguente eccezioni di sicurezza o critico:</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>SecurityException</source>
          <target state="translated">SecurityException</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>NullReferenceException</source>
          <target state="translated">NullReferenceException</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>StackOverflowException</source>
          <target state="translated">StackOverflowException</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>OutOfMemoryException</source>
          <target state="translated">OutOfMemoryException</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>ThreadAbortException</source>
          <target state="translated">ThreadAbortException</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>ExecutionEngineException</source>
          <target state="translated">ExecutionEngineException</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>IndexOutOfRangeException</source>
          <target state="translated">IndexOutOfRangeException</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>AccessViolationException</source>
          <target state="translated">AccessViolationException</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">Esempio di codice seguente viene illustrata un'operazione di trascinamento e rilascio tra due <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controlli.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">Nell'esempio viene chiamato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo quando si avvia l'azione di trascinamento.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">L'azione di trascinamento viene avviata se il mouse viene spostato più <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> dalla posizione del mouse durante la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il <ph id="ph2">`MouseDown`</ph> evento.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">Nell'esempio si presuppone che due file cursore, <ph id="ph1">`3dwarro.cur`</ph> e <ph id="ph2">`3dwno.cur`</ph>, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">I cursori personalizzati da utilizzare se il <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> è selezionata.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">I cursori personalizzati vengono impostati <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">Lo stato della tastiera viene valutato nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> il gestore eventi per il diritto <ph id="ph2">`ListBox`</ph>, per determinare l'operazione di trascinamento in base allo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">Il percorso nel <ph id="ph1">`ListBox`</ph> in cui si verificherà il rilascio è determinato anche durante la <ph id="ph2">`DragOver`</ph> evento.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">Se i dati da eliminare non sono un <ph id="ph1">`String`</ph>, quindi il <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> è impostato su <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">Infine, lo stato del trascinamento viene visualizzato nel <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">I dati da eliminare per il diritto <ph id="ph1">`ListBox`</ph> viene determinato nel <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> gestore dell'evento e il <ph id="ph3">`String`</ph> valore viene aggiunto nella posizione appropriata all'interno di <ph id="ph4">`ListBox`</ph>.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration to specify how data should be transferred between the controls involved in a drag-and-drop operation.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumerazione per specificare la modalità devono trasferimento dati tra i controlli coinvolti in un'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>This example requires that your form includes a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control and a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control and that the <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control is populated with a list of valid file names.</source>
          <target state="translated">Nell'esempio si presuppone che il form includa un <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> controllo e un <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controllo e che il <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controllo venga popolato con un elenco di nomi di file valido.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>When the user drags a file name onto the <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control, the control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event is raised.</source>
          <target state="translated">Quando l'utente trascina un nome di file sul <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> (controllo), il controllo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>Within the event handler, the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> is initialized to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> to indicate that the data referenced by the file path should be copied to the <ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control.</source>
          <target state="translated">All'interno del gestore di evento, il <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A&gt;</ph> proprietà del <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> viene inizializzata su <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> per indicare che devono essere copiati i dati a cui fa riferimento il percorso del file di <ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</source>
          <target state="translated">Ottiene o imposta un valore che indica se la superficie del controllo deve essere ridisegnata usando un buffer secondario per ridurre o evitare lo sfarfallio.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the surface of the control should be drawn using double buffering; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la superficie del controllo deve essere disegnata usando il doppio buffer; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface.</source>
          <target state="translated">Grafica memorizzata nel buffer può ridurre o eliminare lo sfarfallio causato dal ridisegno progressivo delle parti di una superficie visualizzata.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>Buffered graphics require that the updated graphics data is first written to a buffer.</source>
          <target state="translated">Grafica memorizzata nel buffer richiede che i dati di grafici aggiornati prima vengono scritti in un buffer.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>The data in the graphics buffer is then quickly written to displayed surface memory.</source>
          <target state="translated">I dati nel buffer di grafica vengano quindi scritti rapidamente memoria della superficie visualizzata.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.</source>
          <target state="translated">Il passaggio relativamente rapido della memoria grafica visualizzata in genere consente di ridurre lo sfarfallio che può verificarsi in caso contrario.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is not a bindable property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> non è una proprietà associabile.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>Occurs when the control is double-clicked.</source>
          <target state="translated">Si verifica quando si fa doppio clic sul controllo.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>A double-click is determined by the mouse settings of the user's operating system.</source>
          <target state="translated">Un doppio clic è determinato dalle impostazioni relative al mouse del sistema operativo dell'utente.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</source>
          <target state="translated">L'utente può impostare un intervallo tra i clic effettuati con un pulsante del mouse in modo che debbano essere considerati come un doppio clic anziché come due clic distinti.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event is raised every time a control is double-clicked.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento viene generato ogni volta che un controllo si fa doppio clic.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>For example, if you have event handlers for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events of a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events are raised when the form is double-clicked and both methods are called.</source>
          <target state="translated">Ad esempio, se si dispongono di gestori eventi per il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> gli eventi di un <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> eventi vengono generati quando viene fatto doppio clic sul form ed entrambi i metodi vengono chiamati.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>If a control is double-clicked and that control does not support the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event might be raised twice.</source>
          <target state="translated">Se si fa doppio clic un controllo e che non supporta il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> evento, il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento potrebbe essere generato due volte.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>You must set the <ph id="ph1">`StandardDoubleClick`</ph> and <ph id="ph2">`StandardClick`</ph> values of <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> to <ph id="ph4">`true`</ph> for this event to be raised.</source>
          <target state="translated">È necessario impostare il <ph id="ph1">`StandardDoubleClick`</ph> e <ph id="ph2">`StandardClick`</ph> valori di <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> a <ph id="ph4">`true`</ph> per questo evento da generare.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>These values might already be set to <ph id="ph1">`true`</ph> if you are inheriting from existing Windows Forms controls.</source>
          <target state="translated">Questi valori potrebbero già essere impostati su <ph id="ph1">`true`</ph> se sta ereditando da esistente controlli Windows Form.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">I seguenti eventi non vengono generati per il <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a meno che non sia presente almeno un <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nel <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> raccolta: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se è presente almeno un <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nella raccolta, e l'utente interagisce con l'intestazione del controllo struttura a schede (in cui il <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> i nomi visualizzati), il <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Tuttavia, se l'interazione dell'utente è all'interno dell'area client della scheda, il <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> to load text files listed in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> into a <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> evento di un <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> per caricare i file di testo elencati nel <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> in un <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>Inheriting from a standard Windows Forms control and changing the <ph id="ph1">&lt;see langword="StandardClick" /&gt;</ph> or <ph id="ph2">&lt;see langword="StandardDoubleClick" /&gt;</ph> values of <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> to <ph id="ph4">&lt;see langword="true" /&gt;</ph> can cause unexpected behavior or have no effect at all if the control does not support the <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph6">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> events.</source>
          <target state="translated">Eredità da un controllo Windows Form standard e la modifica di <ph id="ph1">&lt;see langword="StandardClick" /&gt;</ph> o <ph id="ph2">&lt;see langword="StandardDoubleClick" /&gt;</ph> valori di <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> a <ph id="ph4">&lt;see langword="true" /&gt;</ph> può causare un comportamento imprevisto o non avere alcun effetto se il controllo non supporta il <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> o <ph id="ph6">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>eventi.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The following table lists Windows Forms controls and which event (<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>) is raised in response to the mouse action specified.</source>
          <target state="translated">Nella tabella seguente sono elencati i controlli Windows Form e gli eventi (<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> o <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>) viene generato in risposta all'azione del mouse specificato.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Control</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Controllo</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Left Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clic del Mouse</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Left Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare doppio clic sinistro del Mouse</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Right Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic destro del Mouse</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Right Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare doppio clic destro del Mouse</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Middle Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su centrale del Mouse</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Middle Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare doppio clic centrale del Mouse</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clic del Mouse XButton1</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 Mouse Double-Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare doppio clic del Mouse XButton1</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su di XButton2 del Mouse</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 Mouse Double-Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare doppio clic del Mouse XButton2</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.MonthCalendar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.MonthCalendar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DateTimePicker" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DateTimePicker" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HScrollBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HScrollBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VScrollBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VScrollBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RadioButton" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RadioButton" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckedListBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckedListBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DomainUpDown" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DomainUpDown" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NumericUpDown" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NumericUpDown" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5"> * </ph><ph id="ph6">&lt;see cref="T:System.Windows.Forms.TreeView" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5"> * </ph><ph id="ph6">&lt;see cref="T:System.Windows.Forms.TreeView" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">\*</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListView" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">\*</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListView" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nessuno</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ProgressBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ProgressBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TrackBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TrackBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Label" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Label" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LinkLabel" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LinkLabel" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GroupBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GroupBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PictureBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PictureBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Splitter" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Splitter" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.StatusBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.StatusBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">** </ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">** </ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic su</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Fare clic, doppio clic</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">\*</ph> The mouse pointer must be over a child object (<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TreeNode" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ListViewItem" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">\*</ph> Il puntatore del mouse deve essere posizionato su un oggetto figlio (<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TreeNode" /&gt;</ph> o <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ListViewItem" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>** The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph> must have at least one <ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph> in its <ph id="ph3">&lt;see cref="P:System.Windows.Forms.TabControl.TabPages" /&gt;</ph> collection.</source>
          <target state="translated">* Il <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph> deve avere almeno un <ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph> nel relativo <ph id="ph3">&lt;see cref="P:System.Windows.Forms.TabControl.TabPages" /&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DpiChangedAfterParent">
          <source>Occurs when the DPI setting for a control is changed programmatically after the DPI of it's parent control or form has changed.</source>
          <target state="translated">Si verifica quando l'impostazione DPI per un controllo viene modificata a livello di codice dopo la modifica del valore DPI del relativo controllo o form padre.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DpiChangedBeforeParent">
          <source>Occurs when the DPI setting for a control is changed programmatically before a DPI change event for it's parent control or form has occurred.</source>
          <target state="translated">Si verifica quando l'impostazione DPI per un controllo viene modificata a livello di codice prima di un evento di modifica del valore DPI per il relativo controllo o form padre.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>Occurs when a drag-and-drop operation is completed.</source>
          <target state="translated">Si verifica quando viene completata un'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> le proprietà del <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> sono nelle coordinate dello schermo, non delle coordinate client.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>The following line of Visual C# code converts the properties to a client <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
          <target state="translated">La riga di codice Visual c# seguente converte le proprietà a un client <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>In versions earlier than <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, if you put a <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> with <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events on a Windows Form and drag and drop something onto the <ph id="ph5">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> at design time, the <ph id="ph6">`DropDrop`</ph> and <ph id="ph7">`DropEnter`</ph> events are raised.</source>
          <target state="translated">Nelle versioni precedenti a <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, se si inserisce un <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> con <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> gli eventi in un Windows Form e trascinare un elemento nel <ph id="ph5">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> in fase di progettazione di <ph id="ph6">`DropDrop`</ph> e <ph id="ph7">`DropEnter`</ph> gli eventi sono generato.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>However, when you close and reopen the solution, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events are not raised again.</source>
          <target state="translated">Tuttavia, quando si chiude e riapre la soluzione, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> non vengono più generati eventi.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event.</source>
          <target state="translated">Questo estratto di codice viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">Vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo per l'esempio di codice completo.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>Occurs when an object is dragged into the control's bounds.</source>
          <target state="translated">Si verifica quando un oggetto viene trascinato nei limiti del controllo.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> evento viene generato quando l'utente trascina il puntatore del mouse sul controllo durante un'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>In versions earlier than <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, if you put a <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> with <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events on a Windows Form and drag and drop something onto the <ph id="ph5">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> at design time, the <ph id="ph6">`DropDrop`</ph> and <ph id="ph7">`DropEnter`</ph> events are raised.</source>
          <target state="translated">Nelle versioni precedenti a <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, se si inserisce un <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> con <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> gli eventi in un Windows Form e trascinare un elemento nel <ph id="ph5">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> in fase di progettazione di <ph id="ph6">`DropDrop`</ph> e <ph id="ph7">`DropEnter`</ph> gli eventi sono generato.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>However, when you close and reopen the solution, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events are not raised again.</source>
          <target state="translated">Tuttavia, quando si chiude e riapre la soluzione, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> non vengono più generati eventi.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">Di seguito vengono illustrate le modalità e le circostanze in cui vengono generati eventi relativi a operazioni di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo determina il controllo sotto la posizione corrente del cursore.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">Viene quindi verificato se il controllo è un obiettivo di rilascio valido.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">Se il controllo è un obiettivo di rilascio valido, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> evento viene generato con l'effetto di trascinamento e rilascio specificato.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Per un elenco degli effetti di trascinamento, vedere l'enumerazione <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">Viene tenuta traccia delle modifiche apportate alla posizione del cursore del mouse, allo stato della tastiera e allo stato dei pulsanti del mouse.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se l'utente si sposta al di fuori di una finestra, verrà generato un evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">Se il mouse viene spostato su un altro controllo, verrà generato l'evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> per tale controllo.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">Se il mouse viene spostato ma sempre all'interno dello stesso controllo, verrà generato l'evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">Se si verifica un cambiamento nello stato pulsante mouse o tastiera, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento viene generato e verrà determinato se continuare l'operazione di trascinamento, rilasciare i dati, o per annullare l'operazione in base al valore del <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> proprietà dell'evento <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Continue`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> evento viene generato per continuare l'operazione e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> viene generato l'evento con il nuovo effetto, consentire l'impostazione della risposta visiva appropriata.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Per un elenco degli effetti di trascinamento validi, vedere l'enumerazione <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> gli eventi vengono abbinati in modo che, mentre il mouse viene spostato sulla destinazione di trascinamento, l'utente riceva le informazioni più aggiornate sulla posizione del mouse.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Drop`</ph>, il valore dell'effetto di rilascio viene restituito all'origine, in modo che l'applicazione di origine può eseguire l'operazione appropriata sui dati di origine, ad esempio il taglio dei dati se l'operazione è un'operazione di spostamento.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Cancel`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> le proprietà del <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> sono nelle coordinate dello schermo, non delle coordinate client.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The following line of Visual C# code converts the properties to a client <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
          <target state="translated">La riga di codice Visual c# seguente converte le proprietà a un client <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">Esempio di codice seguente viene illustrata un'operazione di trascinamento e rilascio tra due <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controlli.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">Nell'esempio viene chiamato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo quando si avvia l'azione di trascinamento.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">L'azione di trascinamento viene avviata se il mouse viene spostato più <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> dalla posizione del mouse durante la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il <ph id="ph2">`MouseDown`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">Nell'esempio si presuppone che due file cursore, <ph id="ph1">`3dwarro.cur`</ph> e <ph id="ph2">`3dwno.cur`</ph>, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">I cursori personalizzati da utilizzare se il <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> è selezionata.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">I cursori personalizzati vengono impostati <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">Lo stato della tastiera viene valutato nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> il gestore eventi per il diritto <ph id="ph2">`ListBox`</ph>, per determinare l'operazione di trascinamento in base allo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">Il percorso nel <ph id="ph1">`ListBox`</ph> in cui si verificherà il rilascio è determinato anche durante la <ph id="ph2">`DragOver`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">Se i dati da eliminare non sono un <ph id="ph1">`String`</ph>, quindi il <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> è impostato su <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">Infine, lo stato del trascinamento viene visualizzato nel <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">I dati da eliminare per il diritto <ph id="ph1">`ListBox`</ph> viene determinato nel <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> gestore dell'evento e il <ph id="ph3">`String`</ph> valore viene aggiunto nella posizione appropriata all'interno di <ph id="ph4">`ListBox`</ph>.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event.</source>
          <target state="translated">Questo estratto di codice viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">Vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo per l'esempio di codice completo.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>Occurs when an object is dragged out of the control's bounds.</source>
          <target state="translated">Si verifica quando un oggetto viene trascinato fuori dai limiti del controllo.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> evento viene generato quando l'utente trascina il cursore all'esterno del controllo o l'utente annulla l'operazione di trascinamento e rilascio corrente.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">Di seguito vengono illustrate le modalità e le circostanze in cui vengono generati eventi relativi a operazioni di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo determina il controllo sotto la posizione corrente del cursore.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">Viene quindi verificato se il controllo è un obiettivo di rilascio valido.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">Se il controllo è un obiettivo di rilascio valido, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> evento viene generato con l'effetto di trascinamento e rilascio specificato.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Per un elenco degli effetti di trascinamento, vedere l'enumerazione <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">Viene tenuta traccia delle modifiche apportate alla posizione del cursore del mouse, allo stato della tastiera e allo stato dei pulsanti del mouse.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se l'utente si sposta al di fuori di una finestra, verrà generato un evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">Se il mouse viene spostato su un altro controllo, verrà generato l'evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> per tale controllo.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">Se il mouse viene spostato ma sempre all'interno dello stesso controllo, verrà generato l'evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">Se si verifica un cambiamento nello stato pulsante mouse o tastiera, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento viene generato e verrà determinato se continuare l'operazione di trascinamento, rilasciare i dati, o per annullare l'operazione in base al valore del <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> proprietà dell'evento <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Continue`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> evento viene generato per continuare l'operazione e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> viene generato l'evento con il nuovo effetto, consentire l'impostazione della risposta visiva appropriata.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Per un elenco degli effetti di trascinamento validi, vedere l'enumerazione <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> gli eventi vengono abbinati in modo che, mentre il mouse viene spostato sulla destinazione di trascinamento, l'utente riceva le informazioni più aggiornate sulla posizione del mouse.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Drop`</ph>, il valore dell'effetto di rilascio viene restituito all'origine, in modo che l'applicazione di origine può eseguire l'operazione appropriata sui dati di origine, ad esempio il taglio dei dati se l'operazione è un'operazione di spostamento.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Cancel`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">Esempio di codice seguente viene illustrata un'operazione di trascinamento e rilascio tra due <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controlli.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">Nell'esempio viene chiamato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo quando si avvia l'azione di trascinamento.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">L'azione di trascinamento viene avviata se il mouse viene spostato più <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> dalla posizione del mouse durante la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il <ph id="ph2">`MouseDown`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">Nell'esempio si presuppone che due file cursore, <ph id="ph1">`3dwarro.cur`</ph> e <ph id="ph2">`3dwno.cur`</ph>, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">I cursori personalizzati da utilizzare se il <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> è selezionata.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">I cursori personalizzati vengono impostati <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">Lo stato della tastiera viene valutato nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> il gestore eventi per il diritto <ph id="ph2">`ListBox`</ph>, per determinare l'operazione di trascinamento in base allo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">Il percorso nel <ph id="ph1">`ListBox`</ph> in cui si verificherà il rilascio è determinato anche durante la <ph id="ph2">`DragOver`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">Se i dati da eliminare non sono un <ph id="ph1">`String`</ph>, quindi il <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> è impostato su <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">Infine, lo stato del trascinamento viene visualizzato nel <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">I dati da eliminare per il diritto <ph id="ph1">`ListBox`</ph> viene determinato nel <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> gestore dell'evento e il <ph id="ph3">`String`</ph> valore viene aggiunto nella posizione appropriata all'interno di <ph id="ph4">`ListBox`</ph>.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event.</source>
          <target state="translated">Questo estratto di codice viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">Vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo per l'esempio di codice completo.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DragOver">
          <source>Occurs when an object is dragged over the control's bounds.</source>
          <target state="translated">Si verifica quando un oggetto viene trascinato sui limiti del controllo.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> evento viene generato quando il cursore del mouse viene spostato all'interno dei limiti del controllo durante un'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">Di seguito vengono illustrate le modalità e le circostanze in cui vengono generati eventi relativi a operazioni di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo determina il controllo sotto la posizione corrente del cursore.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">Viene quindi verificato se il controllo è un obiettivo di rilascio valido.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">Se il controllo è un obiettivo di rilascio valido, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> evento viene generato con l'effetto di trascinamento e rilascio specificato.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Per un elenco degli effetti di trascinamento, vedere l'enumerazione <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">Viene tenuta traccia delle modifiche apportate alla posizione del cursore del mouse, allo stato della tastiera e allo stato dei pulsanti del mouse.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se l'utente si sposta al di fuori di una finestra, verrà generato un evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">Se il mouse viene spostato su un altro controllo, verrà generato l'evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> per tale controllo.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">Se il mouse viene spostato ma sempre all'interno dello stesso controllo, verrà generato l'evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">Se si verifica un cambiamento nello stato pulsante mouse o tastiera, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento viene generato e verrà determinato se continuare l'operazione di trascinamento, rilasciare i dati, o per annullare l'operazione in base al valore del <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> proprietà dell'evento <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> value is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> valore è <ph id="ph2">`Continue`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> evento viene generato per continuare l'operazione e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> viene generato l'evento con il nuovo effetto, consentire l'impostazione della risposta visiva appropriata.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Per un elenco degli effetti di trascinamento validi, vedere l'enumerazione <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> gli eventi vengono abbinati in modo che, mentre il mouse viene spostato sulla destinazione di trascinamento, l'utente riceva le informazioni più aggiornate sulla posizione del mouse.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Drop`</ph>, il valore dell'effetto di rilascio viene restituito all'origine, in modo che l'applicazione di origine può eseguire l'operazione appropriata sui dati di origine, ad esempio il taglio dei dati se l'operazione è un'operazione di spostamento.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Cancel`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> le proprietà del <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> sono nelle coordinate dello schermo, non delle coordinate client.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The following line of C# code converts the properties to a client <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>:</source>
          <target state="translated">La riga di codice c# seguente converte le proprietà a un client <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));</source>
          <target state="translated">Punto clientPoint = targetControl.PointToClient (nuovo punto (Germania. X, Germania. Y));</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">Esempio di codice seguente viene illustrata un'operazione di trascinamento e rilascio tra due <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controlli.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">Nell'esempio viene chiamato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo quando si avvia l'azione di trascinamento.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">L'azione di trascinamento viene avviata se il mouse viene spostato più <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> dalla posizione del mouse durante la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il <ph id="ph2">`MouseDown`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">Nell'esempio si presuppone che due file cursore, <ph id="ph1">`3dwarro.cur`</ph> e <ph id="ph2">`3dwno.cur`</ph>, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">I cursori personalizzati da utilizzare se il <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> è selezionata.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">I cursori personalizzati vengono impostati <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">Lo stato della tastiera viene valutato nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> il gestore eventi per il diritto <ph id="ph2">`ListBox`</ph>, per determinare l'operazione di trascinamento in base allo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">Il percorso nel <ph id="ph1">`ListBox`</ph> in cui si verificherà il rilascio è determinato anche durante la <ph id="ph2">`DragOver`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">Se i dati da eliminare non sono un <ph id="ph1">`String`</ph>, quindi il <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> è impostato su <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">Infine, lo stato del trascinamento viene visualizzato nel <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">I dati da eliminare per il diritto <ph id="ph1">`ListBox`</ph> viene determinato nel <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> gestore dell'evento e il <ph id="ph3">`String`</ph> valore viene aggiunto nella posizione appropriata all'interno di <ph id="ph4">`ListBox`</ph>.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event.</source>
          <target state="translated">Questo estratto di codice viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">Vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo per l'esempio di codice completo.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The bitmap to be drawn to.</source>
          <target state="translated">Bitmap in cui disegnare.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The bounds within which the control is rendered.</source>
          <target state="translated">Limiti all'interno dei quali viene eseguito il rendering del controllo.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>Supports rendering to the specified bitmap.</source>
          <target state="translated">Supporta il rendering nella bitmap specificata.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> method is not supported for ActiveX controls.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> metodo non è supportato per i controlli ActiveX.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>You can override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph> event and provide custom printing logic if required.</source>
          <target state="translated">È possibile eseguire l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph> eventi e, se necessario, fornire la logica di stampa personalizzata.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> method has the following limitations:</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> metodo presenta le limitazioni seguenti:</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>An <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> might be thrown for large bitmaps.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> potrebbe essere generata per bitmap di grandi dimensioni.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The maximum allowable size varies by machine.</source>
          <target state="translated">La dimensione massima consentita varia in base al computer.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> does not support the <ph id="ph2">`Ink`</ph> controls for the Windows XP Tablet PC Edition 2005 operating system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> non supporta il <ph id="ph2">`Ink`</ph> controlli per il sistema operativo Windows XP Tablet PC Edition 2005.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> does not draw a child <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> if the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> is set to <ph id="ph5">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> non consente di disegnare un elemento figlio <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> se il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> proprietà del <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> è impostato su <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>Controls inside containers are rendered in reverse order.</source>
          <target state="translated">I controlli all'interno dei contenitori vengono visualizzati in ordine inverso.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> is not fully functional for the <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>; only the border of a bitmap is drawn.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> non è completamente funzionale per il <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>; solo il bordo di una bitmap viene disegnato.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Enabled">
          <source>Gets or sets a value indicating whether the control can respond to user interaction.</source>
          <target state="translated">Ottiene o imposta un valore che indica se il controllo può rispondere all'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control can respond to user interaction; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo può rispondere all'interazione dell'utente; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property, you can enable or disable controls at run time.</source>
          <target state="translated">Con la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> proprietà, è possibile abilitare o disabilitare i controlli in fase di esecuzione.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>For example, you can disable controls that do not apply to the current state of the application.</source>
          <target state="translated">Ad esempio, è possibile disabilitare i controlli che non si applicano allo stato corrente dell'applicazione.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>You can also disable a control to restrict its use.</source>
          <target state="translated">È anche possibile disabilitare un controllo per l'utilizzo.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>For example, a button can be disabled to prevent the user from clicking it.</source>
          <target state="translated">Ad esempio, un pulsante può essere disabilitato per impedire che l'utente facendo clic.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>If a control is disabled, it cannot be selected.</source>
          <target state="translated">Se un controllo è disabilitato, non può essere selezionato.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph> does not disable the application's control box or prevent the application window from receiving the focus.</source>
          <target state="translated">L'impostazione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> proprietà <ph id="ph2">`false`</ph> non disabilitare la casella di controllo dell'applicazione o la finestra dell'applicazione di ricevere lo stato attivo.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>When a container control has its enabled property set to <ph id="ph1">`false`</ph>, all its contained controls are disabled, as well.</source>
          <target state="translated">Quando un controllo contenitore la proprietà attivata è impostato su <ph id="ph1">`false`</ph>, tutti i controlli in esso contenuti sono disabilitati, nonché.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>For example, if the user clicks on any of the controls contained in a disabled <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control, no events are raised.</source>
          <target state="translated">Ad esempio, se l'utente fa clic su uno dei controlli contenuti in un disabilitato <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controllo, viene generato alcun evento.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>When a scrollable control is disabled, the scroll bars are also disabled.</source>
          <target state="translated">Quando un controllo di scorrimento è disabilitato, le barre di scorrimento sono disabilitate.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>For example, a disabled multiline textbox is unable to scroll to display all the lines of text.</source>
          <target state="translated">Ad esempio, una casella di testo multiriga disabilitato è in grado di scorrere per visualizzare tutte le righe di testo.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">L'esempio di codice seguente crea un <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e vengono impostate alcune proprietà comuni.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> within the group box.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e imposta il relativo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> all'interno della casella di gruppo.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>Next, it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the group box, and docks the group box to the top of the form.</source>
          <target state="translated">Viene quindi impostata la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> proprietà della casella di gruppo e il controllo viene ancorato casella del gruppo nella parte superiore del form.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>Lastly, it disables the group box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, which causes all controls contained within the group box to be disabled.</source>
          <target state="translated">Infine, viene disabilitata la casella di gruppo impostando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> proprietà <ph id="ph2">`false`</ph>, che fa sì che tutti i controlli contenuti all'interno della casella di gruppo deve essere disabilitata.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Enabled" /&gt;</ph> property value has changed.</source>
          <target state="translated">Si verifica quando viene modificato il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Enabled" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>The following code example uses two <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls to demonstrate the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.EnabledChanged&gt;</ph> event.</source>
          <target state="translated">Esempio di codice seguente vengono utilizzati due <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controlli per illustrare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.EnabledChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>Clicking one button changes the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of the other button to <ph id="ph2">`false`</ph> and displays a <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">Fare clic su un pulsante Modifica il valore della <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> proprietà del pulsante per <ph id="ph2">`false`</ph> e visualizza un <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents a specific invoke asynchronous operation, returned when calling <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> che rappresenta una specifica operazione asincrona di chiamata, restituito durante la chiamata a <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>Retrieves the return value of the asynchronous operation represented by the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> passed.</source>
          <target state="translated">Recupera il valore restituito dell'operazione asincrona rappresentata dall'oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> passato.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> generated by the asynchronous operation.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> generato dall'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>If the asynchronous operation has not been completed, this function will block until the result is available.</source>
          <target state="translated">Se l'operazione asincrona non è stato completato, questa funzione si blocca fino a quando non è disponibile il risultato.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Oltre al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> proprietà, sono disponibili quattro metodi su un controllo che sono thread-safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se è già stato creato l'handle per il controllo.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> prima di aver creato l'handle del controllo in un thread in background può causare valido chiamate tra thread.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">Per tutte le altre chiamate di metodo, è necessario utilizzare uno dei metodi invoke per effettuare il marshalling della chiamata al thread del controllo.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> object was not created by a preceding call of the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> method from the same control.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> non è stato creato da una precedente chiamata del metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> dallo stesso controllo.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Enter">
          <source>Occurs when the control is entered.</source>
          <target state="translated">Si verifica quando si entra nell'area del controllo.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo dalla tastiera (TAB, MAIUSC + TAB e così via), chiamando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> , metodi o impostando la <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> proprietà sul form corrente, gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo usando il mouse o chiamando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> (metodo), gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> è impostata su <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> vengono soppressi.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are suppressed by the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> vengono eliminati gli eventi per il <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>The equivalent events in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class are the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.</source>
          <target state="translated">Gli eventi equivalenti nella <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe sono il <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> sono gerarchici e deve essere propagata in su e giù la catena padre finché non viene raggiunto il controllo appropriato.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>For example, assume you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with two <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controls, and each <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control has one <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">Ad esempio, si supponga un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con due <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controlli e ogni <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controllo dispone di uno <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>When the caret is moved from one <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to the other, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event is raised for the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, and the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event is raised for the other <ph id="ph6">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and <ph id="ph7">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Quando il cursore viene spostato da uno <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> a altro, il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> evento viene generato per il <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> evento viene generato per gli altri <ph id="ph6">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e <ph id="ph7">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">Non tentare di impostare lo stato attivo dall'interno di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, o <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> gestori eventi.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">Questa operazione può causare l'applicazione o del sistema operativo di rispondere.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>For more information, see the <ph id="ph1">`WM_KILLFOCUS`</ph> topic in the "Keyboard Input Reference" section and the "Message Deadlocks" section of the<bpt id="p1">[</bpt>About Messages and Message Queues<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)</ept>topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere il <ph id="ph1">`WM_KILLFOCUS`</ph> argomento nella sezione "Riferimenti di Input da tastiera" e la sezione "Messaggio deadlock" del<bpt id="p1">[</bpt>informazioni sui messaggi e le code di messaggi<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)</ept>argomento.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event to change the foreground and background colors of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> under particular conditions.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> evento per modificare i colori di primo piano e sfondo di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> in condizioni particolari.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FindForm">
          <source>Retrieves the form that the control is on.</source>
          <target state="translated">Recupera il form in cui si trova il controllo.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FindForm">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that the control is on.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> in cui si trova il controllo.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>The control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property value might not be the same as the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> returned by <ph id="ph3">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph> method.</source>
          <target state="translated">Il controllo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> potrebbe non essere lo stesso come valore della proprietà di <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> restituito da <ph id="ph3">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control is contained within a <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control, and the <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> is on a <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control's <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> is the <ph id="ph7">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and the <ph id="ph8">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control's <ph id="ph9">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> is the <ph id="ph10">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Ad esempio, se un <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controllo è contenuto all'interno di un <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> (controllo) e il <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> si trova in un <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>, il <ph id="ph5">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> del controllo <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> è il <ph id="ph7">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e <ph id="ph8">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controllo <ph id="ph9">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>è il <ph id="ph10">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>The following code example finds the form that contains the specified button.</source>
          <target state="translated">Esempio di codice seguente consente di trovare il modulo che contiene il pulsante specificato.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>for all windows to call this method.</source>
          <target state="translated">per tutte le finestre di chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Focus">
          <source>Sets input focus to the control.</source>
          <target state="translated">Imposta lo stato attivo per l'input del controllo.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Focus">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the input focus request was successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la richiesta di stato attivo per l'input è stata completata correttamente; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> if the control successfully received input focus.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> restituisce <ph id="ph2">`true`</ph> se il controllo ricevuti correttamente lo stato attivo di input.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>The control can have the input focus while not displaying any visual cues of having the focus.</source>
          <target state="translated">Il controllo può avere lo stato attivo di input durante la visualizzazione non qualsiasi segnali visivi dello stato attivo.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.</source>
          <target state="translated">Tramite i controlli non selezionabile elencati di seguito è possibile osservare questo comportamento o nei controlli derivati da essi.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>A control can be selected and receive input focus if all the following are true: the <ph id="ph1">`Selectable`</ph> value of <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> is set to <ph id="ph3">`true`</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
          <target state="translated">Un controllo può essere selezionato e ricevere lo stato attivo di input se vengono soddisfatte le condizioni seguenti: il <ph id="ph1">`Selectable`</ph> valore <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> è impostato su <ph id="ph3">`true`</ph>, è contenuto in un altro controllo e tutti i controlli padre sono visibili e abilitati.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>The Windows Forms controls in the following list are not selectable.</source>
          <target state="translated">I controlli Windows Form nell'elenco seguente non sono selezionabili.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>Controls derived from these controls are also not selectable.</source>
          <target state="translated">I controlli derivati da questi controlli non sono selezionabili.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (quando è presente alcun collegamento presente nel controllo)</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> is a low-level method intended primarily for custom control authors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> è un metodo di basso livello è destinato principalmente agli autori di controlli personalizzati.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>Instead, application programmers should use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property for child controls, or the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> method for forms.</source>
          <target state="translated">I programmatori di applicazioni devono invece utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> metodo o <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> proprietà per i controlli figlio o <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> metodo per i moduli.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>The following code example sets focus to the specified <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, if it can receive focus.</source>
          <target state="translated">Esempio di codice seguente imposta lo stato attivo sull'oggetto specificato <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, se può ricevere lo stato attivo.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>for all windows to call this method.</source>
          <target state="translated">per tutte le finestre di chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Focused">
          <source>Gets a value indicating whether the control has input focus.</source>
          <target state="translated">Ottiene un valore che indica se il controllo ha lo stato attivo per l'input.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo ha lo stato attivo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source>The following code example disables a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> if a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> does not have focus.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene disabilita un <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> se un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> non è attivo.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph3">`textBox1`</ph> and two <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects named <ph id="ph5">`menuItemEdit`</ph> and <ph id="ph6">`menuItemEditInsertCustomerInfo`</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> denominato <ph id="ph3">`textBox1`</ph> e due <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> gli oggetti denominati <ph id="ph5">`menuItemEdit`</ph> e <ph id="ph6">`menuItemEditInsertCustomerInfo`</ph>.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Focused" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Focused" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Focused" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Focused" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Font">
          <source>Gets or sets the font of the text displayed by the control.</source>
          <target state="translated">Ottiene o imposta il tipo di carattere del testo visualizzato dal controllo.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> to apply to the text displayed by the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> da applicare al testo visualizzato dal controllo.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph> property.</source>
          <target state="translated">Il valore predefinito corrisponde al valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> proprietà è una proprietà di ambiente.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">Una proprietà di ambiente è una proprietà del controllo che, se non impostato, viene recuperato dal controllo padre.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">Ad esempio, un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> avrà lo stesso <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> come padre <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">Per ulteriori informazioni sulle proprietà di ambiente, vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> classe o <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property a new <ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph>.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> non è modificabile, ovvero non è possibile modificare le relative proprietà, è possibile assegnare solo il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> proprietà di un nuovo <ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>However, you can base the new font on the existing font.</source>
          <target state="translated">Tuttavia, è possibile basare il nuovo tipo di carattere al tipo di carattere esistente.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, c#]</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The following is an example of how to adjust the existing font to make it bold:</source>
          <target state="translated">Di seguito è riportato un esempio di come il carattere esistente per renderlo grassetto:</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The following code example displays a <ph id="ph1">&lt;xref:System.Windows.Forms.FontDialog&gt;</ph> to the user and changes the <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> control.</source>
          <target state="translated">Consente di visualizzare esempio di codice seguente un <ph id="ph1">&lt;xref:System.Windows.Forms.FontDialog&gt;</ph> dell'utente e le modifiche di <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> di un <ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> on it.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> su di esso.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Non è necessario eseguire l'override di entrambi i <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> funzioni di accesso il <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> proprietà; è possibile sostituire un solo se necessario.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.FontChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property value changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.FontChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
          <target state="translated">Questo evento viene generato se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> viene modificata una proprietà di una modifica a livello di codice o tramite interazione.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.FontChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.FontChanged">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontChanged&gt;</ph> event.</source>
          <target state="translated">L'esempio di codice seguente illustra il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.FontHeight">
          <source>Gets or sets the height of the font of the control.</source>
          <target state="translated">Ottiene o imposta l'altezza del tipo di carattere del controllo.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.FontHeight">
          <source>The height of the <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> of the control in pixels.</source>
          <target state="translated">Altezza dell'oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> del controllo in pixel.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.FontHeight">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph> property should not be set to any value other than the control's <ph id="ph2">&lt;xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType&gt;</ph> value, or -1.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph> proprietà non deve essere impostata su qualsiasi valore diverso da del controllo <ph id="ph2">&lt;xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType&gt;</ph> valore oppure -1.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.FontHeight">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.</source>
          <target state="translated">Impostazione <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph> su -1 ha l'effetto di cancellare il valore di altezza memorizzato nella cache e il valore viene ricalcolato la volta successiva che fa riferimento la proprietà.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>Gets or sets the foreground color of the control.</source>
          <target state="translated">Ottiene o imposta il colore primo piano del controllo.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The foreground <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> di primo piano del controllo.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultForeColor" /&gt;</ph> property.</source>
          <target state="translated">Il valore predefinito corrisponde al valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultForeColor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> proprietà è una proprietà di ambiente.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">Una proprietà di ambiente è una proprietà del controllo che, se non impostato, viene recuperato dal controllo padre.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">Ad esempio, un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> avrà lo stesso <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> come padre <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">Per ulteriori informazioni sulle proprietà di ambiente, vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> classe o <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of the controls to the default system colors.</source>
          <target state="translated">Nell'esempio di codice viene impostata la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> dei controlli per i colori di sistema predefiniti.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The code recursively calls itself if the control has any child controls.</source>
          <target state="translated">Se il controllo dispone di tutti i controlli figlio, in modo ricorsivo il codice chiama se stessa.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>This code example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with at least one child control; however, a child container control, like a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, with its own child control(s) would better demonstrate the recursion.</source>
          <target state="translated">Questo esempio di codice è necessario disporre una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con almeno un controllo figlio; tuttavia, un controllo contenitore figlio, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, con il proprio elemento figlio controlli sarebbero illustrare meglio la ricorsione.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Non è necessario eseguire l'override di entrambi i <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> funzioni di accesso il <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> proprietà; è possibile sostituire un solo se necessario.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property value changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
          <target state="translated">Questo evento viene generato se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> viene modificata una proprietà di una modifica a livello di codice o tramite interazione.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un gestore eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> che sono generati quando corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> modificato il valore (<bpt id="p3">*</bpt> PropertyName<ept id="p3">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che contiene un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>The window handle (<ph id="ph1">&lt;see langword="HWND" /&gt;</ph>) to search for.</source>
          <target state="translated">Punto di controllo di finestra (<ph id="ph1">&lt;see langword="HWND" /&gt;</ph>) da cercare.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>Retrieves the control that contains the specified handle.</source>
          <target state="translated">Recupera il controllo che contiene il punto di controllo specificato.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the control associated with the specified handle; returns <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no control with the specified handle is found.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> che rappresenta il controllo associato al punto di controllo specificato; restituisce <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non viene trovato alcun controllo con il punto di controllo specificato.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>This method searches up the window handle parent chain until it finds a handle that is associated with a control.</source>
          <target state="translated">Questo metodo esegue la ricerca fino alla catena padre handle di finestra finché trova un handle di cui è associato a un controllo.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>This method is more reliable than the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FromHandle%2A&gt;</ph> method, because it correctly returns controls that own more than one handle.</source>
          <target state="translated">Questo metodo è più affidabile il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FromHandle%2A&gt;</ph> (metodo), in quanto restituisce correttamente i controlli che dispongono di più di un handle.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>for all windows to call this method.</source>
          <target state="translated">per tutte le finestre di chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>The window handle (<ph id="ph1">&lt;see langword="HWND" /&gt;</ph>) to search for.</source>
          <target state="translated">Punto di controllo di finestra (<ph id="ph1">&lt;see langword="HWND" /&gt;</ph>) da cercare.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>Returns the control that is currently associated with the specified handle.</source>
          <target state="translated">Restituisce il controllo associato al punto di controllo specificato.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the control associated with the specified handle; returns <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no control with the specified handle is found.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> che rappresenta il controllo associato al punto di controllo specificato; restituisce <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non viene trovato alcun controllo con il punto di controllo specificato.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FromChildHandle%2A&gt;</ph> method if you need to return controls that own more than one handle.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FromChildHandle%2A&gt;</ph> metodo se si desidera restituire i controlli che dispongono di più di un handle.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>for all windows to call this method.</source>
          <target state="translated">per tutte le finestre di chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Int32" /&gt;</ph> that identifies the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> to retrieve.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see langword="Int32" /&gt;</ph> che identifica l'oggetto <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> da recuperare.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)">
          <source>Retrieves the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</source>
          <target state="translated">Recupera l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAutoSizeMode">
          <source>Retrieves a value indicating how a control will behave when its <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AutoSize" /&gt;</ph> property is enabled.</source>
          <target state="translated">Recupera un valore che indica il comportamento di un controllo quando la relativa proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AutoSize" /&gt;</ph> è abilitata.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAutoSizeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Retrieves the child control at a specified location.</source>
          <target state="translated">Recupera il controllo figlio in una posizione specificata.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that contains the coordinates where you want to look for a control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che contiene le coordinate in cui cercare un controllo.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>Coordinates are expressed relative to the upper-left corner of the control's client area.</source>
          <target state="translated">Le coordinate sono espresse in relazione all'angolo superiore sinistro dell'area client del controllo.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>Retrieves the child control that is located at the specified coordinates.</source>
          <target state="translated">Recupera il controllo figlio posizionato in corrispondenza delle coordinate specificate.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the control that is located at the specified point.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> che rappresenta il controllo posizionato nel punto specificato.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>If there is no child control at the specified point, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetChildAtPoint%2A&gt;</ph> method returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Se non è presente alcun controllo figlio al punto specificato, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetChildAtPoint%2A&gt;</ph> restituisce <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>for all windows to call this method if the control returned is not a child of the control.</source>
          <target state="translated">per tutte le finestre di chiamare questo metodo se il controllo restituito non sono un figlio del controllo.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that contains the coordinates where you want to look for a control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che contiene le coordinate in cui cercare un controllo.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>Coordinates are expressed relative to the upper-left corner of the control's client area.</source>
          <target state="translated">Le coordinate sono espresse in relazione all'angolo superiore sinistro dell'area client del controllo.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GetChildAtPointSkip" /&gt;</ph>, determining whether to ignore child controls of a certain type.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GetChildAtPointSkip" /&gt;</ph>, che determina se ignorare un determinato tipo di controlli figlio.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.</source>
          <target state="translated">Recupera il controllo figlio posizionato in corrispondenza delle coordinate specificate, indicando se ignorare un determinato tipo di controlli figlio.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>The child <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> at the specified coordinates.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> figlio in corrispondenza delle coordinate specificate.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetContainerControl">
          <source>Returns the next <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContainerControl" /&gt;</ph> up the control's chain of parent controls.</source>
          <target state="translated">Restituisce l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContainerControl" /&gt;</ph> successivo nella catena dei controlli padre.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetContainerControl">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IContainerControl" /&gt;</ph>, that represents the parent of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IContainerControl" /&gt;</ph> che rappresenta l'elemento padre dell'oggetto <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetContainerControl">
          <source>for all windows to call this method.</source>
          <target state="translated">per tutte le finestre di chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetContainerControl">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to start the search with.</source>
          <target state="translated">Controllo <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> con il quale iniziare la ricerca.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to search forward in the tab order; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to search backward.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per ricercare in avanti nell'ordine di tabulazione; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per ricercare all'indietro.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>Retrieves the next control forward or back in the tab order of child controls.</source>
          <target state="translated">Recupera il controllo successivo in avanti o all'indietro nell'ordine di tabulazione dei controlli figlio.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>The next <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> in the tab order.</source>
          <target state="translated">Controllo <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> successivo nell'ordine di tabulazione.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph> method is dependent on tab order.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph> metodo è dipendente dall'ordine di tabulazione.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>To iterate through all controls of a form, including nested controls, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property.</source>
          <target state="translated">Per scorrere tutti i controlli di un form, inclusi i controlli annidati, utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>To get or set the active control of a container control, use the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property.</source>
          <target state="translated">Per ottenere o impostare il controllo attivo di un controllo contenitore, usare il <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>The custom-sized area for a control.</source>
          <target state="translated">Area di dimensioni personalizzate di un controllo.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>Retrieves the size of a rectangular area into which a control can be fitted.</source>
          <target state="translated">Recupera le dimensioni di un'area rettangolare in cui è possibile adattare un controllo.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>An ordered pair of type <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the width and height of a rectangle.</source>
          <target state="translated">Coppia ordinata di tipo <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> che rappresenta la larghezza e l'altezza di un rettangolo.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>The behavior of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> differs by control.</source>
          <target state="translated">Il comportamento di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> è diverso dal controllo.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> might be unable to assign the returned size to the control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> potrebbe non essere possibile assegnare le dimensioni restituite al controllo.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>You can return a size larger than the constraints indicated in the <ph id="ph1">`proposedSize`</ph> parameter, but <ph id="ph2">`proposedSize`</ph> should decrease as the constraint decreases.</source>
          <target state="translated">È possibile restituire una dimensione maggiore rispetto ai vincoli indicati nel <ph id="ph1">`proposedSize`</ph> parametro, ma <ph id="ph2">`proposedSize`</ph> modo diminuisce il vincolo.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>For example, <ph id="ph1">`GetPreferredSize(new Size(100, 0))`</ph> should not be wider than <ph id="ph2">`GetPreferredSize(new Size(200, 0))`</ph>.</source>
          <target state="translated">Ad esempio, <ph id="ph1">`GetPreferredSize(new Size(100, 0))`</ph> non deve essere maggiore di <ph id="ph2">`GetPreferredSize(new Size(200, 0))`</ph>.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>The exception is a <ph id="ph1">`proposedSize`</ph> of 0 or <ph id="ph2">`Size.Empty`</ph>, which are defined as unconstrained.</source>
          <target state="translated">L'eccezione è un <ph id="ph1">`proposedSize`</ph> pari a 0 o <ph id="ph2">`Size.Empty`</ph>, che sono definiti come non vincolato.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the area for which to retrieve the display bounds.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che specifica l'area per la quale recuperare i limiti di visualizzazione.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The height and width of the control's bounds.</source>
          <target state="translated">Altezza e larghezza dei limiti del controllo.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> that specifies the bounds of the control to use when defining its size and position.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> che specifica i limiti del controllo da usare per definirne le dimensioni e la posizione.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Retrieves the bounds within which the control is scaled.</source>
          <target state="translated">Recupera i limiti all'interno dei quali il controllo viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> representing the bounds within which the control is scaled.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta i limiti all'interno dei quali il controllo viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>This is a helper method that is called by <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> to retrieve the bounds within which the control is scaled.</source>
          <target state="translated">Si tratta di un metodo helper che viene chiamato da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> per recuperare i limiti all'interno del quale il controllo viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>You can override this method to reuse the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> scaling logic, but you must supply your own bounds.</source>
          <target state="translated">È possibile eseguire l'override di questo metodo per riutilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> scala logica, ma è necessario specificare i limiti personalizzati.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The default implementation returns scaled bounds that take into account the <ph id="ph1">`specified`</ph> bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have.</source>
          <target state="translated">L'implementazione predefinita restituisce i limiti ridimensionati che prendono in considerazione il <ph id="ph1">`specified`</ph> limiti, se il controllo è di livello superiore, se il controllo è fissa larghezza o il ridimensionamento automatico e le aree di controllo potrebbe essere il controllo.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> bit to return the value from.</source>
          <target state="translated">Bit <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> da cui restituire il valore.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>Retrieves the value of the specified control style bit for the control.</source>
          <target state="translated">Recupera il valore del bit di stile specificato per il controllo.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified control style bit is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il bit di stile del controllo specificato è impostato su <ph id="ph2">&lt;see langword="true" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>Control style bit flags are used to categorize supported behavior.</source>
          <target state="translated">Flag di bit di stile di controllo vengono utilizzati per classificare il comportamento supportato.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>A control can enable a style by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit and the Boolean value to set the bit to.</source>
          <target state="translated">Un controllo è possibile attivare uno stile chiamando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> metodo e passando l'oggetto appropriato <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit e il valore booleano su cui impostare il bit.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>To determine the value assigned to a specified <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit, use the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> method and pass in the <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> member to evaluate.</source>
          <target state="translated">Per determinare il valore assegnato a un oggetto specificato <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit, utilizzare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> (metodo) e passare il <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> membro da valutare.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>The following code example returns the value of the double-buffering related style bits for a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Il codice esempio seguente viene restituito il valore di stile correlati al doppio buffer bit per un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>This example returns <ph id="ph1">`true`</ph> only if all the style bits are set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Questo esempio viene restituito <ph id="ph1">`true`</ph> solo se tutti i bit di stile sono impostati su <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetTopLevel">
          <source>Determines if the control is a top-level control.</source>
          <target state="translated">Determina se il controllo è un controllo di primo livello.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetTopLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is a top-level control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo è un controllo di primo livello; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>Occurs during a drag operation.</source>
          <target state="translated">Si verifica durante un'operazione di trascinamento.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised when a drag-and-drop operation is started.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> evento viene generato quando viene avviata un'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</source>
          <target state="translated">Con il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> evento, l'origine di un evento di trascinamento può modificare l'aspetto del puntatore del mouse per fornire l'utente indicazioni visive durante un'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">Di seguito vengono illustrate le modalità e le circostanze in cui vengono generati eventi relativi a operazioni di trascinamento.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo determina il controllo sotto la posizione corrente del cursore.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">Viene quindi verificato se il controllo è un obiettivo di rilascio valido.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">Se il controllo è un obiettivo di rilascio valido, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> evento viene generato con l'effetto di trascinamento e rilascio specificato.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Per un elenco degli effetti di trascinamento, vedere l'enumerazione <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">Viene tenuta traccia delle modifiche apportate alla posizione del cursore del mouse, allo stato della tastiera e allo stato dei pulsanti del mouse.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se l'utente si sposta al di fuori di una finestra, verrà generato un evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">Se il mouse viene spostato su un altro controllo, verrà generato l'evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> per tale controllo.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">Se il mouse viene spostato ma sempre all'interno dello stesso controllo, verrà generato l'evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">Se si verifica un cambiamento nello stato pulsante mouse o tastiera, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento viene generato e verrà determinato se continuare l'operazione di trascinamento, rilasciare i dati, o per annullare l'operazione in base al valore del <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> proprietà dell'evento <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Continue`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> evento viene generato per continuare l'operazione e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> viene generato l'evento con il nuovo effetto, consentire l'impostazione della risposta visiva appropriata.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Per un elenco degli effetti di trascinamento validi, vedere l'enumerazione <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> gli eventi vengono abbinati in modo che, mentre il mouse viene spostato sulla destinazione di trascinamento, l'utente riceva le informazioni più aggiornate sulla posizione del mouse.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Drop`</ph>, il valore dell'effetto di rilascio viene restituito all'origine, in modo che l'applicazione di origine può eseguire l'operazione appropriata sui dati di origine, ad esempio il taglio dei dati se l'operazione è un'operazione di spostamento.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Cancel`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">Esempio di codice seguente viene illustrata un'operazione di trascinamento e rilascio tra due <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controlli.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">Nell'esempio viene chiamato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo quando si avvia l'azione di trascinamento.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">L'azione di trascinamento viene avviata se il mouse viene spostato più <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> dalla posizione del mouse durante la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il <ph id="ph2">`MouseDown`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">Nell'esempio si presuppone che due file cursore, <ph id="ph1">`3dwarro.cur`</ph> e <ph id="ph2">`3dwno.cur`</ph>, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">I cursori personalizzati da utilizzare se il <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> è selezionata.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">I cursori personalizzati vengono impostati <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">Lo stato della tastiera viene valutato nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> il gestore eventi per il diritto <ph id="ph2">`ListBox`</ph>, per determinare l'operazione di trascinamento in base allo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">Il percorso nel <ph id="ph1">`ListBox`</ph> in cui si verificherà il rilascio è determinato anche durante la <ph id="ph2">`DragOver`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">Se i dati da eliminare non sono un <ph id="ph1">`String`</ph>, quindi il <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> è impostato su <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">Infine, lo stato del trascinamento viene visualizzato nel <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">I dati da eliminare per il diritto <ph id="ph1">`ListBox`</ph> viene determinato nel <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> gestore dell'evento e il <ph id="ph3">`String`</ph> valore viene aggiunto nella posizione appropriata all'interno di <ph id="ph4">`ListBox`</ph>.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event.</source>
          <target state="translated">Questo estratto di codice viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">Vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo per l'esempio di codice completo.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Occurs when the control receives focus.</source>
          <target state="translated">Si verifica quando il controllo riceve lo stato attivo.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo dalla tastiera (TAB, MAIUSC + TAB e così via), chiamando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> , metodi o impostando la <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> proprietà sul form corrente, gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo usando il mouse o chiamando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> (metodo), gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> è impostata su <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> vengono soppressi.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</source>
          <target state="translated"><bpt id="p1">**</bpt>Nota<ept id="p1">**</ept> il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> gli eventi sono eventi di attivazione di basso livello che sono associati ai messaggi WM_KILLFOCUS e WM_SETFOCUS di Windows.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are only used when updating <ph id="ph3">&lt;xref:System.Windows.Forms.UICues&gt;</ph> or when writing custom controls.</source>
          <target state="translated">In genere, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> vengono utilizzati solo quando si aggiorna <ph id="ph3">&lt;xref:System.Windows.Forms.UICues&gt;</ph> o la scrittura di controlli personalizzati.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Instead the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events should be used for all controls except the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, which uses the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.</source>
          <target state="translated">Invece di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> eventi devono essere utilizzati per tutti i controlli, ad eccezione di <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe, che utilizza il <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events, see the <bpt id="p1">[</bpt>WM_SETFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646283\(v=vs.85\).aspx)</ept>and<bpt id="p2">[</bpt>WM_KILLFOCUS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topics.</source>
          <target state="translated">Per ulteriori informazioni sul <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> eventi, vedere il <bpt id="p1">[</bpt>WM_SETFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646283\(v=vs.85\).aspx)</ept>e<bpt id="p2">[</bpt>WM_KILLFOCUS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> argomenti.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">Non tentare di impostare lo stato attivo dall'interno di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, o <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> gestori eventi.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">Questa operazione può causare l'applicazione o del sistema operativo di rispondere.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>For more information, see the <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere il <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> argomento.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Handle">
          <source>Gets the window handle that the control is bound to.</source>
          <target state="translated">Ottiene il punto di controllo di finestra a cui è associato il controllo.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that contains the window handle (<ph id="ph2">&lt;see langword="HWND" /&gt;</ph>) of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> che contiene il punto di controllo di finestra (<ph id="ph2">&lt;see langword="HWND" /&gt;</ph>) del controllo.</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property is a Windows <ph id="ph2">`HWND`</ph>.</source>
          <target state="translated">Il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> proprietà è un Windows <ph id="ph2">`HWND`</ph>.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>If the handle has not yet been created, referencing this property will force the handle to be created.</source>
          <target state="translated">Non è ancora stato creato l'handle, fare riferimento a questa proprietà si forzerà l'handle deve essere creato.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>To run the example paste the following code in a form.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente in un form.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>Add two buttons named <ph id="ph1">`Button1`</ph> and <ph id="ph2">`Button2`</ph> to the form and ensure all events are connected to their event handlers.</source>
          <target state="translated">Aggiungere due pulsanti denominati <ph id="ph1">`Button1`</ph> e <ph id="ph2">`Button2`</ph> al form e accertarsi che tutti gli eventi siano connessi ai relativi gestori eventi.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>Occurs when a handle is created for the control.</source>
          <target state="translated">Si verifica quando si crea un punto di controllo del controllo.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>A handle is created when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> is displayed for the first time.</source>
          <target state="translated">Viene creato un handle quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> viene visualizzato per la prima volta.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> is created that has <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> set to <ph id="ph3">`false`</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event will not be raised until <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> is set to <ph id="ph6">`true`</ph>.</source>
          <target state="translated">Ad esempio, se un <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> viene creato è <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> impostato su <ph id="ph3">`false`</ph>, il <ph id="ph4">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> non verrà generato l'evento fino al <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> è impostato su <ph id="ph6">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>Occurs when the control's handle is in the process of being destroyed.</source>
          <target state="translated">Si verifica quando è in corso l'eliminazione definitiva del punto di controllo del controllo.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>During the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> event, the control is still a valid Windows control and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> can be recreated by calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.</source>
          <target state="translated">Durante il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> evento, il controllo è ancora un controllo di Windows valido e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> potrà essere ricreato mediante la chiamata di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>Gets a value indicating whether the control contains one or more child controls.</source>
          <target state="translated">Ottiene un valore che indica se il controllo contiene uno o più controlli figlio.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control contains one or more child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo contiene uno o più controlli figlio; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection has a <ph id="ph2">&lt;xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A&gt;</ph> greater than zero, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph> property will return <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> raccolta ha un <ph id="ph2">&lt;xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A&gt;</ph> maggiore di zero, il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph> restituirà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>Accessing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph> property does not force the creation of a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.</source>
          <target state="translated">L'accesso di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph> proprietà non forza la creazione di un <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> se il controllo non ha elementi figlio, quindi facendo riferimento a questa proprietà può determinare un miglioramento delle prestazioni quando si esamina una struttura ad albero dei controlli.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of the controls to the default system colors.</source>
          <target state="translated">Nell'esempio di codice viene impostata la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> dei controlli per i colori di sistema predefiniti.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>The code recursively calls itself if the control has any child controls.</source>
          <target state="translated">Se il controllo dispone di tutti i controlli figlio, in modo ricorsivo il codice chiama se stessa.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>This code example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with at least one child control; however, a child container control, like a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, with its own child control(s) would better demonstrate the recursion.</source>
          <target state="translated">Questo esempio di codice è necessario disporre una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con almeno un controllo figlio; tuttavia, un controllo contenitore figlio, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, con il proprio elemento figlio controlli sarebbero illustrare meglio la ricorsione.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Height">
          <source>Gets or sets the height of the control.</source>
          <target state="translated">Ottiene o imposta l'altezza del controllo.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>The height of the control in pixels.</source>
          <target state="translated">Altezza del controllo in pixel.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>Changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property values cause the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property value of the control to change.</source>
          <target state="translated">Le modifiche apportate al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> causa i valori delle proprietà di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> valore della proprietà del controllo da modificare.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>The minimum height for the derived control <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> is one pixel.</source>
          <target state="translated">L'altezza minima per il controllo derivato <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> un pixel.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>The default height for the <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> control is three pixels.</source>
          <target state="translated">L'altezza predefinita per il <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> controllo corrisponde a tre pixel.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>Setting the height of the <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> control to a value less than one will reset the property value to the default height.</source>
          <target state="translated">Impostazione dell'altezza del <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> il controllo a un valore minore di uno verrà reimpostato il valore della proprietà per l'altezza predefinita.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">Esempio di codice seguente crea tre <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> i controlli in un form e imposta le dimensioni e posizione utilizzando le varie dimensioni correlate e relative proprietà.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che ha una larghezza e l'altezza di almeno 300 pixel.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>Occurs when the user requests help for a control.</source>
          <target state="translated">Si verifica quando l'utente richiede ulteriori informazioni della Guida relative a un controllo.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> evento viene solitamente generato quando l'utente preme F1 chiave o un pulsante della Guida sensibile al contesto associato viene fatto clic su.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The following code example demonstrates handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event to display custom Help content on a form containing four address fields.</source>
          <target state="translated">Esempio di codice seguente viene mostrato come gestire il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> evento per visualizzare il contenuto della Guida personalizzato in un form contenente quattro campi indirizzo.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event is raised either by pressing the F1 key with the focus in an address field, or by the using the context-sensitive Help button and clicking the Help cursor on an address field.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> evento viene generato premendo il tasto F1 con lo stato attivo in un campo di indirizzo o il pulsante della Guida sensibile al contesto e facendo clic il cursore della Guida su un campo di indirizzo.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HelpEventArgs.Handled%2A&gt;</ph> property is set to true to indicate that the <ph id="ph2">`HelpRequested`</ph> event is handled.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.HelpEventArgs.Handled%2A&gt;</ph> proprietà è impostata su true per indicare che il <ph id="ph2">`HelpRequested`</ph> viene gestito l'evento.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The example also demonstrates storing the Help text in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Nell'esempio viene inoltre illustrata la memorizzazione di testo della Guida nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Hide">
          <source>Conceals the control from the user.</source>
          <target state="translated">Nasconde il controllo all'utente.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Hide">
          <source>Hiding the control is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Nascondere il controllo è equivalente all'impostazione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> proprietà <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Hide">
          <source>After the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property returns a value of <ph id="ph3">`false`</ph> until the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method is called.</source>
          <target state="translated">Dopo il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> metodo viene chiamato, il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> proprietà restituisce un valore di <ph id="ph3">`false`</ph> fino a quando il <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Hide">
          <source>The following code example hides a button if the CTRL key is pressed when the button is clicked.</source>
          <target state="translated">Esempio di codice seguente nasconde il pulsante se viene premuto il tasto CTRL quando si fa clic sul pulsante.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Hide">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph2">`button1`</ph> on a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> denominato <ph id="ph2">`button1`</ph> su un <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>Gets or sets the Input Method Editor (IME) mode of the control.</source>
          <target state="translated">Ottiene o imposta la modalità IME (Input Method Editor, editor del metodo di input) del controllo.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImeMode.Inherit" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImeMode.Inherit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard.</source>
          <target state="translated">Un IME è un programma che consente agli utenti di immettere simboli, ad esempio caratteri Kanji giapponese e caratteri complessi mediante una tastiera standard.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property is typically set to <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType&gt;</ph> for a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control that is intended to only enter numeric values.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> è in genere impostata su <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType&gt;</ph> per un <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controllo destinato a immettere solo valori numerici.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property value is set to <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> il valore di proprietà è impostato su <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType&gt;</ph> per la <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode.NoControl&gt;</ph>.</source>
          <target state="translated">La maggior parte delle classi che non supportano gli Input Method Editor direttamente o consentire a un input diretto da un IME, verranno impostato il valore di questa proprietà su <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode.NoControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The user can interactively change the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> unless it has been programmatically set to <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L'utente può modificare in modo interattivo il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> a meno che non è stato impostato a livello di codice su <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>In this case, the user will not be able to use the IME.</source>
          <target state="translated">In questo caso, l'utente non sarà in grado di utilizzare IME.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property is ignored on Windows 8 when the global input mode is in effect.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> proprietà viene ignorata in Windows 8 quando è attiva la modalità input globale.</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>For more info, see <bpt id="p1">[</bpt>Switch Text Input Changed from Per-Thread to Per-User<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=256509)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>commutatore testo Input modificato da ogni Thread per ciascun utente<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=256509)</ept>.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The assigned value is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> enumeration values.</source>
          <target state="translated">Il valore assegnato non è uno dei valori di enumerazione di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ImeModeBase">
          <source>Gets or sets the IME mode of a control.</source>
          <target state="translated">Ottiene o imposta la modalità IME di un controllo.</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeModeBase">
          <source>The IME mode of the control.</source>
          <target state="translated">Modalità IME del controllo.</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> property has changed.</source>
          <target state="translated">Si verifica quando la proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> viene modificata.</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
          <target state="translated">Questo evento viene generato se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> viene modificata una proprietà di una modifica a livello di codice o tramite interazione.</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>Controls that do not support Input Method Managers will never raise this event.</source>
          <target state="translated">I controlli che non supporta i gestori di metodo di Input non genererà mai questo evento.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un gestore eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> che sono generati quando corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> modificato il valore (<bpt id="p3">*</bpt> PropertyName<ept id="p3">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che contiene un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>Called after the control has been added to another container.</source>
          <target state="translated">Chiamata eseguita dopo l'aggiunta del controllo a un altro contenitore.</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> method is called immediately after adding a control to a container.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> metodo viene chiamato immediatamente dopo l'aggiunta di un controllo a un contenitore.</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> method enables a control to initialize its layout state based on its container.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> metodo consente a un controllo inizializzare il proprio stato di layout basato sul relativo contenitore.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>For example, you would typically apply anchoring and docking to the control in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> method.</source>
          <target state="translated">Ad esempio, è generalmente applicato ancoraggio e aggancio al controllo il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.InitLayout" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.InitLayout" /&gt;</ph> method so that the control is displayed correctly.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.InitLayout" /&gt;</ph> in una classe derivata, assicurarsi di chiamare la classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.InitLayout" /&gt;</ph> metodo in modo che il controllo viene visualizzato correttamente.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Invalidates a specific region of the control and causes a paint message to be sent to the control.</source>
          <target state="translated">Invalida un'area specifica del controllo determinando l'invio di un messaggio di disegno al controllo.</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>Invalidates the entire surface of the control and causes the control to be redrawn.</source>
          <target state="translated">Invalida l'intera superficie del controllo e ne determina il ridisegno.</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo non impone un disegno asincrono; per forzare un disegno asincrono, chiamare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> metodo dopo la chiamata di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">Quando questo metodo viene chiamato senza parametri, l'intera area client viene aggiunto all'area di aggiornamento.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</source>
          <target state="translated">Il codice esempio seguente viene abilitata all'utente di trascinare un'immagine o un file di immagine nel form e fare in modo da visualizzare nel punto in cui è stato eliminato.</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> viene eseguito l'override di metodo per aggiornare l'immagine ogni volta che viene disegnato il form; in caso contrario l'immagine verrà mantenuta solo fino al successivo ridisegno.</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> metodo di gestione di eventi determina il tipo di dati trascinati nel form e fornisce le informazioni appropriate.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event-handling method displays the image on the form, if an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> can be created from the data.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> il metodo di gestione degli eventi visualizza l'immagine del form, se un <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> possono essere creati dai dati.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> values are screen coordinates, the example uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> method to convert them to client coordinates.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> sono coordinate dello schermo, nell'esempio viene utilizzato il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> metodo per convertirli in coordinate client.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to invalidate the control's child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per invalidare i controlli figlio del controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source>Invalidates a specific region of the control and causes a paint message to be sent to the control.</source>
          <target state="translated">Invalida un'area specifica del controllo determinando l'invio di un messaggio di disegno al controllo.</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source>Optionally, invalidates the child controls assigned to the control.</source>
          <target state="translated">È possibile che vengano invalidati anche i controlli figlio assegnati al controllo.</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo non impone un disegno asincrono; per forzare un disegno asincrono, chiamare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> metodo dopo la chiamata di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">Quando questo metodo viene chiamato senza parametri, l'intera area client viene aggiunto all'area di aggiornamento.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the region to invalidate.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta l'area da invalidare.</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
          <source>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</source>
          <target state="translated">Invalida l'area specificata del controllo aggiungendola all'area di aggiornamento del controllo, ovvero l'area che verrà ridisegnata alla successiva operazione di disegno, determinando l'invio di un messaggio di disegno al controllo.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo non impone un disegno asincrono; per forzare un disegno asincrono, chiamare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> metodo dopo la chiamata di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">Quando questo metodo viene chiamato senza parametri, l'intera area client viene aggiunto all'area di aggiornamento.</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> to invalidate.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> da invalidare.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
          <source>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</source>
          <target state="translated">Invalida l'area specificata del controllo aggiungendola all'area di aggiornamento del controllo, ovvero l'area che verrà ridisegnata alla successiva operazione di disegno, determinando l'invio di un messaggio di disegno al controllo.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo non impone un disegno asincrono; per forzare un disegno asincrono, chiamare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> metodo dopo la chiamata di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">Quando questo metodo viene chiamato senza parametri, l'intera area client viene aggiunto all'area di aggiornamento.</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the region to invalidate.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta l'area da invalidare.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to invalidate the control's child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per invalidare i controlli figlio del controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</source>
          <target state="translated">Invalida l'area specificata del controllo aggiungendola all'area di aggiornamento del controllo, ovvero l'area che verrà ridisegnata alla successiva operazione di disegno, determinando l'invio di un messaggio di disegno al controllo.</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>Optionally, invalidates the child controls assigned to the control.</source>
          <target state="translated">È possibile che vengano invalidati anche i controlli figlio assegnati al controllo.</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo non impone un disegno asincrono; per forzare un disegno asincrono, chiamare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> metodo dopo la chiamata di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">Quando questo metodo viene chiamato senza parametri, l'intera area client viene aggiunto all'area di aggiornamento.</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> to invalidate.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> da invalidare.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to invalidate the control's child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per invalidare i controlli figlio del controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</source>
          <target state="translated">Invalida l'area specificata del controllo aggiungendola all'area di aggiornamento del controllo, ovvero l'area che verrà ridisegnata alla successiva operazione di disegno, determinando l'invio di un messaggio di disegno al controllo.</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>Optionally, invalidates the child controls assigned to the control.</source>
          <target state="translated">È possibile che vengano invalidati anche i controlli figlio assegnati al controllo.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo non impone un disegno asincrono; per forzare un disegno asincrono, chiamare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> metodo dopo la chiamata di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">Quando questo metodo viene chiamato senza parametri, l'intera area client viene aggiunto all'area di aggiornamento.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>Occurs when a control's display requires redrawing.</source>
          <target state="translated">Si verifica quando è necessario ridisegnare la visualizzazione di un controllo.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidated&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidated&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invalidated&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invalidated&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Executes a delegate on the thread that owns the control's underlying window handle.</source>
          <target state="translated">Esegue un delegato nel thread proprietario del punto di controllo di finestra sottostante del controllo.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>A delegate that contains a method to be called in the control's thread context.</source>
          <target state="translated">Delegato che contiene un metodo da chiamare nel contesto del thread del controllo.</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Executes the specified delegate on the thread that owns the control's underlying window handle.</source>
          <target state="translated">Esegue il delegato specificato nel thread proprietario del punto di controllo di finestra sottostante del controllo.</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The return value from the delegate being invoked, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the delegate has no return value.</source>
          <target state="translated">Valore restituito dal delegato richiamato oppure <ph id="ph1">&lt;see langword="null" /&gt;</ph> se il delegato non restituisce alcun valore.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Delegates are similar to function pointers in C or C++ languages.</source>
          <target state="translated">I delegati sono simili ai puntatori a funzione nel linguaggio C o C++.</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Delegates encapsulate a reference to a method inside a delegate object.</source>
          <target state="translated">I delegati incapsulare un riferimento a un metodo all'interno di un oggetto delegato.</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</source>
          <target state="translated">L'oggetto delegato può quindi essere passato al codice che chiama il metodo di cui viene fatto riferimento e il metodo da richiamare in fase di compilazione può essere sconosciuto.</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</source>
          <target state="translated">A differenza dei puntatori a funzione in C o C++, i delegati sono orientata agli oggetti, indipendenti dai tipi e più sicuro.</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> ricerche metodo catena del controllo padre finché trova un controllo o un form che dispone di una finestra gestiscono se l'handle di finestra sottostante del controllo corrente non esiste ancora.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>If no appropriate handle can be found, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method will throw an exception.</source>
          <target state="translated">Se non viene trovato alcun handle appropriato, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> metodo genererà un'eccezione.</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Exceptions that are raised during the call will be propagated back to the caller.</source>
          <target state="translated">Le eccezioni generate durante la chiamata verranno propagate al chiamante.</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Oltre al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> proprietà, sono disponibili quattro metodi su un controllo che sono thread-safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se è già stato creato l'handle per il controllo.</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> prima di aver creato l'handle del controllo in un thread in background può causare valido chiamate tra thread.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">Per tutte le altre chiamate di metodo, è necessario utilizzare uno dei metodi invoke per effettuare il marshalling della chiamata al thread del controllo.</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The delegate can be an instance of <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>, in which case the sender parameter will contain this control, and the event parameter will contain <ph id="ph2">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Il delegato può essere un'istanza di <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>, nel qual caso il parametro mittente conterrà questo controllo e il parametro dell'evento conterrà <ph id="ph2">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The delegate can also be an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>, or any other delegate that takes a void parameter list.</source>
          <target state="translated">Il delegato può anche essere un'istanza di <ph id="ph1">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>, o qualsiasi altro tipo di delegato che accetta un elenco di parametri void.</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>A call to an <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph> delegate will be faster than a call to another type of delegate.</source>
          <target state="translated">Una chiamata a un <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph> delegato sarà più veloce rispetto a una chiamata a un altro tipo di delegato.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">Potrebbe essere generata un'eccezione se il thread che deve elaborare il messaggio non è più attivo.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The following code example shows controls that contain a delegate.</source>
          <target state="translated">Esempio di codice seguente mostra i controlli che contengono un delegato.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form.</source>
          <target state="translated">Il delegato incapsula un metodo che aggiunge elementi alla casella di riepilogo e questo metodo viene eseguito nel thread proprietario dell'handle sottostante del form.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>When the user clicks on the button, <ph id="ph1">`Invoke`</ph> runs the delegate.</source>
          <target state="translated">Quando l'utente fa clic sul pulsante, <ph id="ph1">`Invoke`</ph> esegue il delegato.</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>A delegate to a method that takes parameters of the same number and type that are contained in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Delegato di un metodo che accetta parametri dello stesso tipo e numero contenuti nel parametro <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>An array of objects to pass as arguments to the specified method.</source>
          <target state="translated">Matrice di oggetti da passare come argomenti al metodo specificato.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the method takes no arguments.</source>
          <target state="translated">Se il metodo non accetta alcun argomento, questo parametro può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.</source>
          <target state="translated">Esegue il delegato specificato nel thread proprietario del punto di controllo di finestra sottostante del controllo con l'elenco di argomenti specificato.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the return value from the delegate being invoked, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the delegate has no return value.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che contiene il valore restituito dal delegato richiamato oppure <ph id="ph2">&lt;see langword="null" /&gt;</ph> se il delegato non restituisce alcun valore.</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Delegates are similar to function pointers in C or C++ languages.</source>
          <target state="translated">I delegati sono simili ai puntatori a funzione nel linguaggio C o C++.</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Delegates encapsulate a reference to a method inside a delegate object.</source>
          <target state="translated">I delegati incapsulare un riferimento a un metodo all'interno di un oggetto delegato.</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</source>
          <target state="translated">L'oggetto delegato può quindi essere passato al codice che chiama il metodo di cui viene fatto riferimento e il metodo da richiamare in fase di compilazione può essere sconosciuto.</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</source>
          <target state="translated">A differenza dei puntatori a funzione in C o C++, i delegati sono orientata agli oggetti, indipendenti dai tipi e più sicuro.</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</source>
          <target state="translated">Se l'handle del controllo non esiste ancora, questo metodo cerca catena padre del controllo finché trova un controllo o un form che dispone di un handle di finestra.</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>If no appropriate handle can be found, this method throws an exception.</source>
          <target state="translated">Se non viene trovato alcun handle appropriato, questo metodo genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Exceptions that are raised during the call will be propagated back to the caller.</source>
          <target state="translated">Le eccezioni generate durante la chiamata verranno propagate al chiamante.</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Oltre al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> proprietà, sono disponibili quattro metodi su un controllo che sono thread-safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se è già stato creato l'handle per il controllo.</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> prima di aver creato l'handle del controllo in un thread in background può causare valido chiamate tra thread.</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">Per tutte le altre chiamate di metodo, è necessario utilizzare uno dei metodi invoke per effettuare il marshalling della chiamata al thread del controllo.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The delegate can be an instance of <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>, in which case the sender parameter will contain this control, and the event parameter will contain <ph id="ph2">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Il delegato può essere un'istanza di <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>, nel qual caso il parametro mittente conterrà questo controllo e il parametro dell'evento conterrà <ph id="ph2">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The delegate can also be an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>, or any other delegate that takes a void parameter list.</source>
          <target state="translated">Il delegato può anche essere un'istanza di <ph id="ph1">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>, o qualsiasi altro tipo di delegato che accetta un elenco di parametri void.</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>A call to an <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph> delegate will be faster than a call to another type of delegate.</source>
          <target state="translated">Una chiamata a un <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph> delegato sarà più veloce rispetto a una chiamata a un altro tipo di delegato.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">Potrebbe essere generata un'eccezione se il thread che deve elaborare il messaggio non è più attivo.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The following code example shows controls that contain a delegate.</source>
          <target state="translated">Esempio di codice seguente mostra i controlli che contengono un delegato.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form, using the specified arguments.</source>
          <target state="translated">Il delegato incapsula un metodo che aggiunge elementi alla casella di riepilogo e questo metodo viene eseguito nel thread proprietario dell'handle sottostante del form, usando gli argomenti specificati.</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>When the user clicks on the button, <ph id="ph1">`Invoke`</ph> runs the delegate.</source>
          <target state="translated">Quando l'utente fa clic sul pulsante, <ph id="ph1">`Invoke`</ph> esegue il delegato.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the event to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> a cui assegnare l'evento.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> event for the specified control.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> per il controllo specificato.</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the event to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> a cui assegnare l'evento.</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> event for the specified control.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> per il controllo specificato.</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> a cui assegnare l'evento <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event for the specified control.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> per il controllo specificato.</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> a cui assegnare l'evento <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event for the specified control.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> per il controllo specificato.</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> a cui assegnare l'evento <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see langword="PaintBackground" /&gt;</ph> event for the specified control.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see langword="PaintBackground" /&gt;</ph> per il controllo specificato.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.</source>
          <target state="translated">Ottiene un valore che indica se il chiamante deve usare un metodo Invoke per eseguire chiamate di metodo al controllo, in quanto si trova in un thread diverso da quello in cui è stato creato il controllo.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> del controllo è stato creato in un thread diverso da quello del chiamante, ovvero è necessario effettuare chiamate al controllo tramite un metodo Invoke; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Controls in Windows Forms are bound to a specific thread and are not thread safe.</source>
          <target state="translated">Controlli Windows Form sono associati a un thread specifico e non sono thread-safe.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Therefore, if you are calling a control's method from a different thread, you must use one of the control's invoke methods to marshal the call to the proper thread.</source>
          <target state="translated">Pertanto, se si chiama un metodo di controllo da un thread differente, è necessario utilizzare uno dei metodi per il marshalling della chiamata al thread appropriato di richiamare il controllo.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.</source>
          <target state="translated">Questa proprietà può essere utilizzata per determinare se è necessario chiamare un metodo invoke, che può essere utile se non si conosce il thread proprietario di un controllo.</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe to call: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>,<ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Oltre al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> proprietà, sono disponibili quattro metodi su un controllo che sono thread-safe chiamare: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>,<ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se è già stato creato l'handle per il controllo.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> prima di aver creato l'handle del controllo in un thread in background può causare valido chiamate tra thread.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>For all other method calls, you should use one of these invoke methods when calling from a different thread.</source>
          <target state="translated">Per tutte le altre chiamate di metodo, è necessario utilizzare uno di questi metodi invoke quando la chiamata da un thread diverso.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>If the control's handle does not yet exist, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> searches up the control's parent chain until it finds a control or form that does have a window handle.</source>
          <target state="translated">Se l'handle del controllo non esiste ancora, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> Cerca catena padre del controllo finché trova un controllo o un form che dispone di un handle di finestra.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>If no appropriate handle can be found, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> method returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Se non viene trovato alcun handle appropriato, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> restituisce <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>This means that <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> can return <ph id="ph2">`false`</ph> if <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> is not required (the call occurs on the same thread), or if the control was created on a different thread but the control's handle has not yet been created.</source>
          <target state="translated">Ciò significa che <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> può restituire <ph id="ph2">`false`</ph> se <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> non è obbligatorio (la chiamata viene eseguita sullo stesso thread), o se è stato creato il controllo in un thread differente, ma non è ancora stato creato l'handle del controllo.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>In the case where the control's handle has not yet been created, you should not simply call properties, methods, or events on the control.</source>
          <target state="translated">Nel caso in cui l'handle del controllo non è ancora stato creato, è necessario non è sufficiente chiamare proprietà, metodi o eventi sul controllo.</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>This might cause the control's handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.</source>
          <target state="translated">Ciò potrebbe causare l'handle del controllo da creare sul thread in background, il controllo su un thread senza un message pump di isolare e rendendo instabile l'applicazione.</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>You can protect against this case by also checking the value of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> when <ph id="ph2">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> returns <ph id="ph3">`false`</ph> on a background thread.</source>
          <target state="translated">È possibile evitare questa eventualità anche controllando il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> quando <ph id="ph2">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph> in un thread in background.</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>If the control handle has not yet been created, you must wait until it has been created before calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>.</source>
          <target state="translated">Se non è ancora stato creato l'handle del controllo, è necessario attendere che è stato creato prima di chiamare <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in <ph id="ph1">`Application.Run(new MainForm())`</ph>, before the form has been shown or <ph id="ph2">`Application.Run`</ph> has been called.</source>
          <target state="translated">In genere, ciò si verifica solo se viene creato un thread in background nel costruttore del form principale per l'applicazione (come in <ph id="ph1">`Application.Run(new MainForm())`</ph>, prima che sia stato visualizzato il form o <ph id="ph2">`Application.Run`</ph> è stato chiamato.</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>One solution is to wait until the form's handle has been created before starting the background thread.</source>
          <target state="translated">Una soluzione è in attesa fino a quando l'handle del modulo è stato creato prima di avviare il thread in background.</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Either force handle creation by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property, or wait until the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event to start the background process.</source>
          <target state="translated">È possibile imporre la creazione dell'handle chiamando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> proprietà o attenderne il <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> evento per avviare il processo in background.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>An even better solution is to use the <ph id="ph1">`SynchronizationContext`</ph> returned by <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> rather than a control for cross-thread marshaling.</source>
          <target state="translated">Una soluzione migliore consiste nell'utilizzare il <ph id="ph1">`SynchronizationContext`</ph> restituito da <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> anziché un controllo per il marshalling cross-thread.</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">Potrebbe essere generata un'eccezione se il thread che deve elaborare il messaggio non è più attivo.</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>For more information about multithreaded Windows Forms controls, see <bpt id="p1">[</bpt>How to: Use a Background Thread to Search for Files<ept id="p1">](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md)</ept> and <bpt id="p2">[</bpt>How to: Make Thread-Safe Calls to Windows Forms Controls<ept id="p2">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui controlli Windows Form con multithreading, vedere <bpt id="p1">[</bpt>procedura: utilizzare un Thread in Background per la ricerca di file<ept id="p1">](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md)</ept> e <bpt id="p2">[</bpt>procedura: effettuare chiamate Thread-Safe a controlli Windows Form<ept id="p2">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.IsAccessible">
          <source>Gets or sets a value indicating whether the control is visible to accessibility applications.</source>
          <target state="translated">Ottiene o imposta un valore che indica se il controllo è visibile per le applicazioni di accessibilità.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsAccessible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is visible to accessibility applications; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo è visibile per le applicazioni di accessibilità; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source>Gets a value indicating whether the control has been disposed of.</source>
          <target state="translated">Ottiene un valore che indica se il controllo è stato eliminato.</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has been disposed of; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo è stato eliminato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source>When this property returns <ph id="ph1">`true`</ph>, the control is disposed of and can no longer be referenced as a valid Windows control.</source>
          <target state="translated">Quando questa proprietà restituisce <ph id="ph1">`true`</ph>, il controllo viene eliminato e non può più essere riferimento come un controllo di Windows valido.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source>Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</source>
          <target state="translated">Anche se l'istanza di un controllo viene eliminata, viene comunque mantenuto in memoria fino a quando non viene rimosso dalla memoria tramite garbage collection.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source>When a control is disposed, you cannot call its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.</source>
          <target state="translated">Quando viene eliminato un controllo, è possibile chiamare il relativo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.IsHandleCreated">
          <source>Gets a value indicating whether the control has a handle associated with it.</source>
          <target state="translated">Ottiene un valore che indica se un punto di controllo è associato al controllo.</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsHandleCreated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a handle has been assigned to the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se è stato assegnato un punto di controllo al controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsHandleCreated">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> property to determine whether <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> has been called.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> proprietà per determinare se <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> è stato chiamato.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>The character to test.</source>
          <target state="translated">Carattere da testare.</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>Determines if a character is an input character that the control recognizes.</source>
          <target state="translated">Determina se un carattere è un carattere di input riconosciuto dal controllo.</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character should be sent directly to the control and not preprocessed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il carattere deve essere inviato direttamente al controllo e non pre-elaborato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> method to determine whether the character specified by the <ph id="ph2">`charCode`</ph> parameter is an input character that the control wants.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> metodo per determinare se il carattere specificato da di <ph id="ph2">`charCode`</ph> parametro è un carattere di input accettato dal controllo.</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control.</source>
          <target state="translated">Questo metodo viene chiamato durante la pre-elaborazione messaggio finestra per determinare se il carattere di input specificato deve essere pre-elaborato o inviato direttamente al controllo.</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, the specified character is sent directly to the control.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> restituisce <ph id="ph2">`true`</ph>, il carattere specificato viene inviato direttamente al controllo.</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> restituisce <ph id="ph2">`false`</ph>, il carattere specificato viene pre-elaborato e inviato al controllo solo se non è stato utilizzato nella fase di pre-elaborazione.</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>The preprocessing of a character includes checking whether the character is a mnemonic of another control.</source>
          <target state="translated">La pre-elaborazione di un carattere include il controllo se il carattere è un tasto di scelta di un altro controllo.</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">per tutte le finestre per classi che ereditano per chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</source>
          <target state="translated">Determina se il tasto specificato è un normale tasto di input o un tasto speciale che richiede una pre-elaborazione.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified key is a regular input key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il tasto specificato è un normale tasto di input; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method to determine whether the key specified by the <ph id="ph2">`keyData`</ph> parameter is an input key that the control wants.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> metodo per determinare se la chiave specificata dal <ph id="ph2">`keyData`</ph> parametro è un tasto di input accettato dal controllo.</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control.</source>
          <target state="translated">Questo metodo viene chiamato durante la pre-elaborazione messaggio finestra per determinare se la chiave di input specificata deve essere pre-elaborata o inviata direttamente al controllo.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, the specified key is sent directly to the control.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> restituisce <ph id="ph2">`true`</ph>, la chiave specificata viene inviata direttamente al controllo.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> restituisce <ph id="ph2">`false`</ph>, la chiave specificata è pre-elaborata e inviata al controllo solo se non è stato utilizzato nella fase di pre-elaborazione.</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>Keys that are preprocessed include the TAB, RETURN, ESC, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.</source>
          <target state="translated">Chiavi di pre-elaborati sono includono la scheda, RETURN, ESC e i tasti freccia su, freccia giù, freccia sinistra e freccia destra.</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>The following code example shows you how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method for a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">Esempio di codice seguente mostra come eseguire l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> metodo per un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>In this example, the <ph id="ph1">`TabTextBox`</ph> class handles the TAB key.</source>
          <target state="translated">In questo esempio, la <ph id="ph1">`TabTextBox`</ph> classe gestisce il tasto TAB.</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>When the <ph id="ph1">`TabTextBox`</ph> has the focus and the user presses the TAB key four spaces are added at the text insertion point, replacing any selected text.</source>
          <target state="translated">Quando il <ph id="ph1">`TabTextBox`</ph> ha lo stato attivo e l'utente preme il tasto TAB quattro spazi vengono aggiunti al punto di inserimento di testo, sostituendo il testo selezionato.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control handles the TAB key by moving the input focus to the next control.</source>
          <target state="translated">Per impostazione predefinita, il <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controllo gestisce il tasto TAB per spostare lo stato attivo al controllo successivo.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>In this case, the keypress never reaches the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph> method override.</source>
          <target state="translated">In questo caso, la pressione del tasto non raggiunge mai il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph> override del metodo.</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>To prevent this default behavior, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method override returns <ph id="ph2">`true`</ph> when the user presses the TAB key.</source>
          <target state="translated">Per evitare questo comportamento predefinito, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> restituisce l'override del metodo <ph id="ph2">`true`</ph> quando l'utente preme il tasto TAB.</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>For all other keypresses, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method override returns the result of calling the base-class version of the method.</source>
          <target state="translated">Per tutti gli altri tasti, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> override del metodo restituisce il risultato della chiamata alla versione della classe di base del metodo.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">per tutte le finestre per classi che ereditano per chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> enumeration.</source>
          <target state="translated">Membro BLOC MAIUSC, BLOC NUM o BLOC SCORR dell'enumerazione <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.</source>
          <target state="translated">Determina se il tasto BLOC MAIUSC, BLOC NUM o BLOC SCORR è attivo.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified key or keys are in effect; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il tasto o i tasti specificati sono attivi; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsKeyLocked%2A&gt;</ph> property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsKeyLocked%2A&gt;</ph> proprietà per determinare se le chiavi BLOC MAIUSC, BLOC NUM o BLOC SCORR, singolarmente o in combinazione.</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>The following code example displays a message box indicating whether the specified key (the Caps Lock key in this case) is in effect.</source>
          <target state="translated">Esempio di codice seguente consente di visualizzare una finestra di messaggio che indica se la chiave specificata (in questo caso il tasto BLOC MAIUSC) è attivo.</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;paramref name="keyVal" /&gt;</ph> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="keyVal" /&gt;</ph> fa riferimento a un tasto diverso dai tasti BLOC MAIUSC, BLOC NUM o BLOC SCORR.</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.IsMirrored">
          <source>Gets a value indicating whether the control is mirrored.</source>
          <target state="translated">Ottiene un valore che indica se il controllo è sottoposto a mirroring.</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsMirrored">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is mirrored; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo è sottoposto a mirroring; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsMirrored">
          <source>A mirrored control displays both layout and text from right to left.</source>
          <target state="translated">Consente di visualizzare un controllo con mirroring sia layout e il testo da destra a sinistra.</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsMirrored">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create Mirrored Windows Forms and Controls<ept id="p1">](http://msdn.microsoft.com/library/7c5c4ecc-9bfb-4508-8383-753e306719b1)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedura: creare Windows Form con mirroring e controlli<ept id="p1">](http://msdn.microsoft.com/library/7c5c4ecc-9bfb-4508-8383-753e306719b1)</ept>.</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The character to test.</source>
          <target state="translated">Carattere da testare.</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The string to search.</source>
          <target state="translated">Stringa in cui effettuare la ricerca.</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>Determines if the specified character is the mnemonic character assigned to the control in the specified string.</source>
          <target state="translated">Determina se il carattere specificato è il carattere per i tasti di scelta rapida assegnato al controllo nella stringa specificata.</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="charCode" /&gt;</ph> character is the mnemonic character assigned to the control; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il carattere <ph id="ph2">&lt;paramref name="charCode" /&gt;</ph> è il carattere per i tasti di scelta rapida assegnato al controllo; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The mnemonic character is the character immediately following the first instance of "&amp;" in a <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Il carattere mnemonico è il carattere che segue immediatamente la prima istanza di "&amp;" in un <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The following code example demonstrates an extension of the button class that overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> method to exhibit custom behavior.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come un'estensione della classe di pulsanti che esegue l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> metodo possono presentare un comportamento personalizzato.</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The example also demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> properties.</source>
          <target state="translated">Nell'esempio viene inoltre illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>To run this example paste the following code after a form class, in the same file.</source>
          <target state="translated">Per eseguire questo esempio, incollare il codice seguente dopo una classe del modulo, nello stesso file.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>Add a button of type <ph id="ph1">`MnemonicButton`</ph> to the form.</source>
          <target state="translated">Aggiungere un pulsante di tipo <ph id="ph1">`MnemonicButton`</ph> al form.</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">per tutte le finestre per classi che ereditano per chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>Occurs when a key is pressed while the control has focus.</source>
          <target state="translated">Si verifica quando si preme un tasto mentre il controllo ha lo stato attivo.</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>Key events occur in the following order:</source>
          <target state="translated">Chiavi eventi si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> property in your form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event-handling method to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Per gestire gli eventi di tastiera solo a livello di modulo e non abilitare altri controlli per la ricezione di eventi della tastiera, impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> proprietà del modulo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> il metodo di gestione degli eventi per <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</source>
          <target state="translated">Alcuni tasti, ad esempio, RETURN, ESC, freccia e TAB vengono gestiti automaticamente dai controlli.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>To have these keys raise the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event, you must override the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method in each control on your form.</source>
          <target state="translated">Per generare queste chiavi il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> evento, è necessario eseguire l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> metodo in ogni controllo nel form.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>The code for the override of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> would need to determine if one of the special keys is pressed and return a value of <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Il codice esegue l'override del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> sarà necessario determinare se si preme uno dei tasti speciali e restituiscono un valore di <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>Instead of overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method, you can handle the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event and set the <ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Anziché eseguire l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> (metodo), è possibile gestire il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> evento e set il <ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>For a code example, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event.</source>
          <target state="translated">Per un esempio di codice, vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event to determine the type of character entered into the control.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> evento per determinare il tipo di carattere immesso nel controllo.</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>Occurs when a character.</source>
          <target state="translated">Si verifica quando si preme un tasto carattere,</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>space or backspace key is pressed while the control has focus.</source>
          <target state="translated">la barra spaziatrice o il tasto backspace mentre il controllo ha lo stato attivo.</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>Key events occur in the following order:</source>
          <target state="translated">Chiavi eventi si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> events.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> evento non viene generato da chiavi di carattere diversi da spazi e backspace; tuttavia, le chiavi non carattere generano il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A&gt;</ph> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A&gt;</ph> proprietà per campionare le sequenze di tasti in fase di esecuzione e per utilizzare o modificare un sottoinsieme di sequenze di tasti comuni.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> property in your form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event-handling method to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Per gestire gli eventi di tastiera solo a livello di modulo e non abilitare altri controlli per la ricezione di eventi della tastiera, impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> proprietà del modulo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> il metodo di gestione degli eventi per <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event to prevent characters from entering the control.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> evento per impedire l'accesso al controllo di caratteri.</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>Occurs when a key is released while the control has focus.</source>
          <target state="translated">Si verifica quando si rilascia un tasto mentre il controllo ha lo stato attivo.</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>Key events occur in the following order:</source>
          <target state="translated">Chiavi eventi si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> property in your form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event-handling method to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Per gestire gli eventi di tastiera solo a livello di modulo e non abilitare altri controlli per la ricezione di eventi della tastiera, impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> proprietà del modulo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> il metodo di gestione degli eventi per <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</source>
          <target state="translated">Alcuni tasti, ad esempio, RETURN, ESC, freccia e TAB vengono gestiti automaticamente dai controlli.</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>To have these keys raise the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event, you must override the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method in each control on your form.</source>
          <target state="translated">Per generare queste chiavi il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> evento, è necessario eseguire l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> metodo in ogni controllo nel form.</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>The code for the override of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> would need to determine if one of the special keys is pressed and return a value of <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Il codice esegue l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> sarà necessario determinare se si preme uno dei tasti speciali e restituiscono un valore di <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style help to the user.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> evento con la <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> classe per visualizzare una finestra popup della Guida l'utente.</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Layout">
          <source>Occurs when a control should reposition its child controls.</source>
          <target state="translated">Si verifica quando è necessario riposizionare i controlli figlio di un controllo.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> evento si verifica quando i controlli figlio vengono aggiunti o rimossi, quando i limiti del controllo cambia e quando vengono apportate altre modifiche che possono influenzare il layout del controllo.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>The layout event can be suppressed using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods.</source>
          <target state="translated">L'evento layout può essere soppresso mediante il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change.</source>
          <target state="translated">La sospensione del layout consente di eseguire più azioni su un controllo senza dover eseguire un layout per ogni modifica.</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>For example, if you resize and move a control, each operation would raise a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event.</source>
          <target state="translated">Ad esempio, se si ridimensionare e spostare un controllo, ogni operazione genererebbe un <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>The following code example centers a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> on the screen in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event.</source>
          <target state="translated">I centri di esempio di codice seguente un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nella schermata di <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>This will keep the form centered as the user resizes it.</source>
          <target state="translated">Il modulo centrato durante il ridimensionamento verrà mantenuta.</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>This example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> control.</source>
          <target state="translated">In questo esempio presuppone che sia stato creato un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.LayoutEngine">
          <source>Gets a cached instance of the control's layout engine.</source>
          <target state="translated">Ottiene un'istanza memorizzata nella cache del modulo di layout del controllo.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.LayoutEngine">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Layout.LayoutEngine" /&gt;</ph> for the control's contents.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Layout.LayoutEngine" /&gt;</ph> per il contenuto del controllo.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.LayoutEngine">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> property gets the layout engine for the control's children rather than for the control itself.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> proprietà ottiene il motore di layout per gli elementi figlio del controllo anziché per il controllo stesso.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Leave">
          <source>Occurs when the input focus leaves the control.</source>
          <target state="translated">Si verifica quando lo stato attivo per l'input esce dall'area del controllo.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo dalla tastiera (TAB, MAIUSC + TAB e così via), chiamando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> , metodi o impostando la <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> proprietà sul form corrente, gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo usando il mouse o chiamando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> (metodo), gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> è impostata su <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> vengono soppressi.</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are suppressed by the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> vengono eliminati gli eventi per il <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>The equivalent events in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class are the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.</source>
          <target state="translated">Gli eventi equivalenti nella <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe sono il <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> sono gerarchici e deve essere propagata in su e giù la catena padre finché non viene raggiunto il controllo appropriato.</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>For example, assume you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with two <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controls, and each <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control has one <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">Ad esempio, si supponga un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> con due <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controlli e ogni <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controllo dispone di uno <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>When the caret is moved from one <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to the other, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event is raised for the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, and the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event is raised for the other <ph id="ph6">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and <ph id="ph7">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Quando il cursore viene spostato da uno <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> a altro, il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> evento viene generato per il <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> evento viene generato per gli altri <ph id="ph6">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e <ph id="ph7">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">Non tentare di impostare lo stato attivo dall'interno di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, o <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> gestori eventi.</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">Questa operazione può causare l'applicazione o del sistema operativo di rispondere.</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>For more information, see the <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere il <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> argomento.</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event to reset a control to its former state.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> evento per reimpostare un controllo allo stato precedente.</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Left">
          <source>Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</source>
          <target state="translated">Ottiene o imposta la distanza in pixel tra il bordo sinistro del controllo e il bordo sinistro dell'area client del contenitore.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> representing the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che rappresenta la distanza in pixel tra il bordo sinistro del controllo e il bordo sinistro dell'area client del contenitore.</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property value is equivalent to the <ph id="ph2">&lt;xref:System.Drawing.Point.X%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property value of the control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> è equivalente al valore della proprietà di <ph id="ph2">&lt;xref:System.Drawing.Point.X%2A?displayProperty=nameWithType&gt;</ph> proprietà del <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> valore della proprietà del controllo.</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>Changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property values cause the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property value of the control to change.</source>
          <target state="translated">Le modifiche apportate al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> causa i valori delle proprietà di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> valore della proprietà del controllo da modificare.</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">Esempio di codice seguente crea tre <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> i controlli in un form e imposta le dimensioni e posizione utilizzando le varie dimensioni correlate e relative proprietà.</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che ha una larghezza e l'altezza di almeno 300 pixel.</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Location">
          <source>Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</source>
          <target state="translated">Ottiene o imposta le coordinate dell'angolo superiore sinistro del controllo in relazione all'angolo superiore sinistro del relativo contenitore.</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the upper-left corner of the control relative to the upper-left corner of its container.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta l'angolo superiore sinistro del controllo in relazione all'angolo superiore sinistro del relativo contenitore.</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> class is a value type (<ph id="ph2">`Structure`</ph> in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph4">`struct`</ph> in Visual C#), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> classe è un tipo valore (<ph id="ph2">`Structure`</ph> in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph4">`struct`</ph> in Visual c#), viene restituito per valore, ovvero l'accesso alla proprietà restituisce una copia del punto superiore sinistro del controllo.</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>So, adjusting the <ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> returned from this property will not affect the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, or <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property values of the control.</source>
          <target state="translated">In tal caso, regolare il <ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> le proprietà del <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> restituito da questa non avrà effetto sulle proprietà di <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, o <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> i valori delle proprietà del controllo.</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>To adjust these properties set each property value individually, or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property with a new <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
          <target state="translated">Per modificare queste proprietà, impostare singolarmente ogni valore della proprietà o impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> proprietà con un nuovo <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> is a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property value represents the upper-left corner of the <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> in screen coordinates.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> è un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> valore della proprietà rappresenta l'angolo superiore sinistro del <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> nelle coordinate dello schermo.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">L'esempio di codice seguente crea un <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e vengono impostate alcune proprietà comuni.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> within the group box.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e imposta il relativo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> all'interno della casella di gruppo.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>Next, it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the group box, and docks the group box to the top of the form.</source>
          <target state="translated">Viene quindi impostata la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> proprietà della casella di gruppo e il controllo viene ancorato casella del gruppo nella parte superiore del form.</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>Lastly, it disables the group box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, which causes all controls contained within the group box to be disabled.</source>
          <target state="translated">Infine, viene disabilitata la casella di gruppo impostando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> proprietà <ph id="ph2">`false`</ph>, che fa sì che tutti i controlli contenuti all'interno della casella di gruppo deve essere disabilitata.</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.LocationChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Location" /&gt;</ph> property value has changed.</source>
          <target state="translated">Si verifica quando viene modificato il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Location" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LocationChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
          <target state="translated">Questo evento viene generato se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> viene modificata una proprietà di una modifica a livello di codice o tramite interazione.</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LocationChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LocationChanged">
          <source>The following code example raises the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event on a <ph id="ph2">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph> when the form is resized.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene genera il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> evento su un <ph id="ph2">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph> quando il form viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)">
          <source>The Logical value to convert.</source>
          <target state="translated">Valore logico da convertire.</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)">
          <source>Converts a Logical DPI value to it's equivalent DeviceUnit DPI value.</source>
          <target state="translated">Converte un valore DPI logico nel valore DPI DeviceUnit equivalente.</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)">
          <source>The resulting DeviceUnit value.</source>
          <target state="translated">Valore DeviceUnit risultante.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Occurs when the control loses focus.</source>
          <target state="translated">Si verifica quando il controllo perde lo stato attivo.</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo dalla tastiera (TAB, MAIUSC + TAB e così via), chiamando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> , metodi o impostando la <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> proprietà sul form corrente, gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo usando il mouse o chiamando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> (metodo), gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> è impostata su <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> vengono soppressi.</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> is set to <ph id="ph3">`true`</ph> in the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event delegate, all events that would usually occur after the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event are suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> proprietà del <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> è impostato su <ph id="ph3">`true`</ph> nel <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> delegato dell'evento, tutti gli eventi che in genere si verificano dopo il <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> evento verranno soppressi.</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> gli eventi sono eventi di attivazione di basso livello che sono associati ai messaggi WM_KILLFOCUS e WM_SETFOCUS di Windows.</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are only used when updating <ph id="ph3">&lt;xref:System.Windows.Forms.UICues&gt;</ph> or when writing custom controls.</source>
          <target state="translated">In genere, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> vengono utilizzati solo quando si aggiorna <ph id="ph3">&lt;xref:System.Windows.Forms.UICues&gt;</ph> o la scrittura di controlli personalizzati.</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Instead the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events should be used for all controls except the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, which uses the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.</source>
          <target state="translated">Invece di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> eventi devono essere utilizzati per tutti i controlli, ad eccezione di <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe, che utilizza il <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events, see the <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> and <bpt id="p2">[</bpt>WM_KILLFOCUS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topics.</source>
          <target state="translated">Per ulteriori informazioni sul <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> eventi, vedere il <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> e <bpt id="p2">[</bpt>WM_KILLFOCUS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> argomenti.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">Non tentare di impostare lo stato attivo dall'interno di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, o <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> gestori eventi.</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">Questa operazione può causare l'applicazione o del sistema operativo di rispondere.</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>For more information, see the <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere il <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> argomento.</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>The following code example demonstrates validating the text for TextBox1.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come convalidare il testo di TextBox1.</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>It also demonstrates handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> event by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType&gt;</ph> property to the text in TextBox1.</source>
          <target state="translated">Viene inoltre illustrato come la gestione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> evento impostando il <ph id="ph2">&lt;xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType&gt;</ph> proprietà per il testo in TextBox1.</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>The code example used the <ph id="ph1">&lt;xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType&gt;</ph> method to check for an error before opening the file dialog box.</source>
          <target state="translated">L'esempio di codice viene utilizzato il <ph id="ph1">&lt;xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType&gt;</ph> metodo per verificare la presenza di errori prima di aprire la finestra di dialogo file.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>To run this example, paste the following code into a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph2">`TextBox1`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> named <ph id="ph4">`OpenFileDialog1`</ph>, a <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph6">`Button1`</ph>, and an <ph id="ph7">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> named <ph id="ph8">`ErrorProvider1`</ph>.</source>
          <target state="translated">Per eseguire questo esempio, incollare il codice seguente in un form contenente un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> denominato <ph id="ph2">`TextBox1`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> denominato <ph id="ph4">`OpenFileDialog1`</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph> denominato <ph id="ph6">`Button1`</ph>e un <ph id="ph7">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> denominato <ph id="ph8">`ErrorProvider1`</ph>.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">Verificare che tutti gli eventi sono associati i gestori di eventi.</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Margin">
          <source>Gets or sets the space between controls.</source>
          <target state="translated">Ottiene o imposta lo spazio tra i controlli.</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Margin">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> representing the space between controls.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> che rappresenta lo spazio tra i controlli.</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Margin">
          <source>Controls receive default values for <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> that are reasonably close to Windows user interface guidelines.</source>
          <target state="translated">I valori predefiniti per i controlli ricevono <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> che ragionevolmente sta per raggiungere linee guida sull'interfaccia utente di Windows.</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Margin">
          <source>Some adjustments might still be necessary for particular applications.</source>
          <target state="translated">Alcune modifiche potrebbero essere ancora necessari per determinate applicazioni.</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Margin">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> property on a docked control has no effect on the distance of the control from the edges of its container.</source>
          <target state="translated">L'impostazione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> proprietà in un controllo ancorato non ha effetto sulla distanza del controllo dai bordi del contenitore.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>Occurs when the control's margin changes.</source>
          <target state="translated">Si verifica quando cambia il margine del controllo.</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MarginChanged&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MarginChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MarginChanged&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MarginChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.MaximumSize">
          <source>Gets or sets the size that is the upper limit that <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /&gt;</ph> can specify.</source>
          <target state="translated">Ottiene o imposta la dimensione che rappresenta il limite superiore specificabile dal metodo <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MaximumSize">
          <source>An ordered pair of type <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the width and height of a rectangle.</source>
          <target state="translated">Coppia ordinata di tipo <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> che rappresenta la larghezza e l'altezza di un rettangolo.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.MinimumSize">
          <source>Gets or sets the size that is the lower limit that <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /&gt;</ph> can specify.</source>
          <target state="translated">Ottiene o imposta la dimensione che rappresenta il limite inferiore specificabile dal metodo <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MinimumSize">
          <source>An ordered pair of type <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the width and height of a rectangle.</source>
          <target state="translated">Coppia ordinata di tipo <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> che rappresenta la larghezza e l'altezza di un rettangolo.</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.</source>
          <target state="translated">Ottiene un valore che indica quale tasto di modifica (MAIUSC, CTRL e ALT) è premuto.</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values.</source>
          <target state="translated">Combinazione bit per bit dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.Keys.None" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see cref="F:System.Windows.Forms.Keys.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>The following code example hides a button when the CTRL key is pressed while the button is clicked.</source>
          <target state="translated">L'esempio di codice seguente consente di nascondere un pulsante quando viene premuto il tasto CTRL mentre si fa clic sul pulsante.</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph2">`button1`</ph> on a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> denominato <ph id="ph2">`button1`</ph> su un <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>Gets a value indicating which of the mouse buttons is in a pressed state.</source>
          <target state="translated">Ottiene un valore che indica quale pulsante del mouse è premuto.</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> enumeration values.</source>
          <target state="translated">Combinazione bit per bit dei valori di enumerazione di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.MouseButtons.None" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see cref="F:System.Windows.Forms.MouseButtons.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> members.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> membri.</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>To run the example, paste the following code in a form called Form1 containing several controls.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente in un form denominato Form1 contenente diversi controlli.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> events are connected to the event handlers defined in the example.</source>
          <target state="translated">Questo esempio si presuppone che il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> gli eventi siano connessi ai gestori di eventi definiti nell'esempio.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Occurs when the control loses mouse capture.</source>
          <target state="translated">Si verifica quando il controllo perde il mouse capture.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>In rare scenarios, you might need to detect unexpected input.</source>
          <target state="translated">In rari casi potrebbe essere necessario rilevare input imprevisto.</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>For example, consider the following scenarios.</source>
          <target state="translated">Ad esempio, considerare gli scenari seguenti.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>During a mouse operation, the user opens the Start menu by pressing the Windows key or CTRL+ESC.</source>
          <target state="translated">Durante un'operazione del mouse, l'utente apre il menu Start premendo il tasto Windows o CTRL + ESC.</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>During a mouse operation, the user switches to another program by pressing ALT+TAB.</source>
          <target state="translated">Durante un'operazione del mouse, l'utente passa a un altro programma premendo ALT + TAB.</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>During a mouse operation, another program displays a window or a message box that takes focus away from the current application.</source>
          <target state="translated">Durante un'operazione del mouse, un altro programma visualizza una finestra o una finestra di messaggio che riceve lo stato attivo dall'applicazione corrente.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation.</source>
          <target state="translated">Possono includere le operazioni del mouse facendo clic e tenere il mouse su un form o un controllo o esecuzione di un'operazione di trascinamento.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> event.</source>
          <target state="translated">Se è necessario rilevare quando un form o un controllo perde lo stato mouse capture per questi e scenari imprevisti correlati, è possibile utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> event for a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
          <target state="translated">L'esempio di codice seguente illustra il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> evento per un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>To test this example, run it in the debugger by pressing F5.</source>
          <target state="translated">Per testare questo esempio, eseguirlo nel debugger premendo F5.</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Open the <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window in Visual Studio so that you can see when events are raised.</source>
          <target state="translated">Aprire il <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> finestra in Visual Studio in modo da visualizzare quando vengono generati eventi.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Click the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> and notice the following output.</source>
          <target state="translated">Fare clic su di <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> e notare l'output seguente.</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Now, click and hold the left mouse button on the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
          <target state="translated">A questo punto, fare clic e tenere premuto il pulsante sinistro del mouse di <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>While still clicking the mouse, press ALT+TAB to switch to another program.</source>
          <target state="translated">Mentre si fa clic del mouse, premere ALT + TAB per passare a un altro programma.</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Notice that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> event is raised enabling you to potentially handle this scenario.</source>
          <target state="translated">Si noti che il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> evento consente di gestire potenzialmente questo scenario.</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Depending on your actions, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event might not be raised.</source>
          <target state="translated">A seconda delle azioni, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> evento potrebbe non essere generato.</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>You can also try this test with the Windows key or CTRL+ESC.</source>
          <target state="translated">È anche possibile provare il test con il tasto Windows o CTRL + ESC.</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>Occurs when the control is clicked by the mouse.</source>
          <target state="translated">Si verifica quando si fa clic con il mouse sul controllo.</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>Depressing a mouse button when the cursor is over a control typically raises the following series of events from the control:</source>
          <target state="translated">Pressione di un pulsante del mouse quando il cursore si trova su un controllo in genere genera una serie di eventi dal controllo seguenti:</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>For this to occur, the various events cannot be disabled in the control's class.</source>
          <target state="translated">A questo scopo, i vari eventi non possono essere disabilitati nella classe del controllo.</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>Two single clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event instead of the second <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">Due singoli clic che si verificano nel tempo, come determinato dalle impostazioni del mouse del sistema operativo dell'utente, generano un <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> evento anziché il secondo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> events are logically higher-level events of a control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> gli eventi sono eventi in modo logico di livello superiore di un controllo.</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>They are often raised by other actions, such as pressing the ENTER key when the control has focus.</source>
          <target state="translated">Vengono spesso generati da altre azioni, ad esempio premendo il tasto INVIO quando il controllo ha lo stato attivo.</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>Occurs when the control is double clicked by the mouse.</source>
          <target state="translated">Si verifica quando si fa doppio clic con il mouse sul controllo.</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> evento si verifica quando l'utente preme un pulsante del mouse due volte in rapida successione, mentre il cursore si trova sul controllo.</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user's operating system.</source>
          <target state="translated">L'intervallo di tempo che separa i due clic singolo da un doppio clic è determinato dalle impostazioni del mouse del sistema operativo dell'utente.</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>The following series of events is raised by the control when such a user action takes place:</source>
          <target state="translated">La seguente serie di eventi viene generata dal controllo quando si verifica tale azione utente:</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>For this to occur, the various events cannot be disabled in the control's class.</source>
          <target state="translated">A questo scopo, i vari eventi non possono essere disabilitati nella classe del controllo.</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events are logically higher-level events of a control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> gli eventi sono eventi in modo logico di livello superiore di un controllo.</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>They may be raised by other user actions, such as shortcut key combinations.</source>
          <target state="translated">Essi possono essere generati da altre azioni utente, ad esempio le combinazioni di tasti di scelta rapida.</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>Occurs when the mouse pointer is over the control and a mouse button is pressed.</source>
          <target state="translated">Si verifica quando il puntatore del mouse si trova sul controllo mentre viene premuto un pulsante del mouse.</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Gli eventi del mouse si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">I seguenti eventi non vengono generati per il <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a meno che non sia presente almeno un <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nel <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> raccolta: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se è presente almeno un <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nella raccolta, e l'utente interagisce con l'intestazione del controllo struttura a schede (in cui il <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> i nomi visualizzati), il <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Tuttavia, se l'interazione dell'utente è all'interno dell'area client della scheda, il <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di eventi del mouse differenti per disegnare il tracciato del mouse su un <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Viene aggiunto un segmento di linea per il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> per ogni <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventi che si verificano.</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Per aggiornare la grafica, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo viene chiamato per il <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> in ogni <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Inoltre, il percorso grafico è necessario scorrere verso l'alto o verso il basso quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> si verifica l'evento.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Ulteriori eventi del mouse, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, vengono identificati anche sullo schermo.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Viene visualizzato anche sullo schermo è ulteriori informazioni sul mouse dalla <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>Occurs when the mouse pointer enters the control.</source>
          <target state="translated">Si verifica quando il puntatore del mouse entra nell'area del controllo.</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Gli eventi del mouse si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">I seguenti eventi non vengono generati per il <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a meno che non sia presente almeno un <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nel <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> raccolta: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se è presente almeno un <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nella raccolta, e l'utente interagisce con l'intestazione del controllo struttura a schede (in cui il <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> i nomi visualizzati), il <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Tuttavia, se l'interazione dell'utente è all'interno dell'area client della scheda, il <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di eventi del mouse differenti per disegnare il tracciato del mouse su un <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Viene aggiunto un segmento di linea per il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> per ogni <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventi che si verificano.</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Per aggiornare la grafica, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo viene chiamato per il <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> in ogni <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Inoltre, il percorso grafico è necessario scorrere verso l'alto o verso il basso quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> si verifica l'evento.</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Ulteriori eventi del mouse, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, vengono identificati anche sullo schermo.</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Viene visualizzato anche sullo schermo è ulteriori informazioni sul mouse dalla <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>Occurs when the mouse pointer rests on the control.</source>
          <target state="translated">Si verifica quando il puntatore del mouse si sofferma sul controllo.</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>A typical use of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the "hover rectangle").</source>
          <target state="translated">Un tipico utilizzo di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> consiste nel visualizzare una descrizione comandi quando il puntatore del mouse si sofferma su un controllo all'interno di una determinata area intorno al controllo (il "area rettangolare").</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>The pause required for this event to be raised is specified in milliseconds by the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph> property.</source>
          <target state="translated">Necessario generare questo evento viene specificato in millisecondi per il <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> event is defined and detected in connection with the <ph id="ph2">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph> properties.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> evento viene definito e rilevato in relazione la <ph id="ph2">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Gli eventi del mouse si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">I seguenti eventi non vengono generati per il <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a meno che non sia presente almeno un <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nel <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> raccolta: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se è presente almeno un <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nella raccolta, e l'utente interagisce con l'intestazione del controllo struttura a schede (in cui il <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> i nomi visualizzati), il <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Tuttavia, se l'interazione dell'utente è all'interno dell'area client della scheda, il <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di eventi del mouse differenti per disegnare il tracciato del mouse su un <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Viene aggiunto un segmento di linea per il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> per ogni <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventi che si verificano.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Per aggiornare la grafica, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo viene chiamato per il <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> in ogni <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Inoltre, il percorso grafico è necessario scorrere verso l'alto o verso il basso quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> si verifica l'evento.</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Ulteriori eventi del mouse, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, vengono identificati anche sullo schermo.</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Viene visualizzato anche sullo schermo è ulteriori informazioni sul mouse dalla <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>Occurs when the mouse pointer leaves the control.</source>
          <target state="translated">Si verifica quando il puntatore del mouse esce dall'area del controllo.</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Gli eventi del mouse si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">I seguenti eventi non vengono generati per il <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a meno che non sia presente almeno un <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nel <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> raccolta: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se è presente almeno un <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nella raccolta, e l'utente interagisce con l'intestazione del controllo struttura a schede (in cui il <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> i nomi visualizzati), il <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Tuttavia, se l'interazione dell'utente è all'interno dell'area client della scheda, il <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di eventi del mouse differenti per disegnare il tracciato del mouse su un <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Viene aggiunto un segmento di linea per il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> per ogni <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventi che si verificano.</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Per aggiornare la grafica, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo viene chiamato per il <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> in ogni <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Inoltre, il percorso grafico è necessario scorrere verso l'alto o verso il basso quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> si verifica l'evento.</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Ulteriori eventi del mouse, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, vengono identificati anche sullo schermo.</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Viene visualizzato anche sullo schermo è ulteriori informazioni sul mouse dalla <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Occurs when the mouse pointer is moved over the control.</source>
          <target state="translated">Si verifica quando il puntatore del mouse viene spostato sul controllo.</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Typical uses of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> are to change the control's color or to paint a raised rectangle around the control.</source>
          <target state="translated">Utilizzi tipici di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> sono per modificare il colore del controllo o per disegnare un rettangolo generato intorno al controllo.</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Gli eventi del mouse si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">I seguenti eventi non vengono generati per il <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a meno che non sia presente almeno un <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nel <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> raccolta: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se è presente almeno un <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nella raccolta, e l'utente interagisce con l'intestazione del controllo struttura a schede (in cui il <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> i nomi visualizzati), il <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Tuttavia, se l'interazione dell'utente è all'interno dell'area client della scheda, il <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di eventi del mouse differenti per disegnare il tracciato del mouse su un <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Viene aggiunto un segmento di linea per il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> per ogni <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventi che si verificano.</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Per aggiornare la grafica, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo viene chiamato per il <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> in ogni <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Inoltre, il percorso grafico è necessario scorrere verso l'alto o verso il basso quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> si verifica l'evento.</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Ulteriori eventi del mouse, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, vengono identificati anche sullo schermo.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Viene visualizzato anche sullo schermo è ulteriori informazioni sul mouse dalla <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>Gets the position of the mouse cursor in screen coordinates.</source>
          <target state="translated">Ottiene la posizione del cursore del mouse in base alle coordinate dello schermo.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che contiene le coordinate del cursore del mouse in relazione all'angolo superiore sinistro dello schermo.</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph> that represents the mouse cursor position at the time the property was referenced.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> proprietà restituisce un <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph> che rappresenta la posizione del cursore del mouse quando la proprietà è stato fatto riferimento.</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control.</source>
          <target state="translated">Le coordinate indicano la posizione sullo schermo, non rispetto al controllo e vengono restituite indipendentemente dal fatto che il cursore viene posizionato sul controllo.</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The coordinates of the upper-left corner of the screen are 0,0.</source>
          <target state="translated">Le coordinate dell'angolo superiore sinistro dello schermo sono 0,0.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> property is identical to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> è identica al <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The following code example puts a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> label into an editable state when the user presses ALT+E while the mouse cursor is over the tree node.</source>
          <target state="translated">Il codice seguente viene inserita una <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> etichetta in uno stato modificabile quando l'utente preme ALT + E, quando il cursore del mouse è posizionato il nodo dell'albero.</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>After the user is done editing the label, the labels cannot be edited again until the ALT+E key combination is pressed again.</source>
          <target state="translated">Dopo l'utente modifica l'etichetta, le etichette non sarà più possibile modificarla fino a quando la combinazione di tasti ALT + E viene premuta nuovamente.</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> su un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The tree view should also have at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> in its <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.Nodes%2A&gt;</ph> collection.</source>
          <target state="translated">Visualizzazione albero deve inoltre essere presente almeno un <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> nel relativo <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.Nodes%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>Occurs when the mouse pointer is over the control and a mouse button is released.</source>
          <target state="translated">Si verifica quando il puntatore del mouse si trova sul controllo mentre viene rilasciato un pulsante del mouse.</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Gli eventi del mouse si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">I seguenti eventi non vengono generati per il <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a meno che non sia presente almeno un <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nel <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> raccolta: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se è presente almeno un <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nella raccolta, e l'utente interagisce con l'intestazione del controllo struttura a schede (in cui il <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> i nomi visualizzati), il <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Tuttavia, se l'interazione dell'utente è all'interno dell'area client della scheda, il <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> genera l'evento appropriato.</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di eventi del mouse differenti per disegnare il tracciato del mouse su un <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Viene aggiunto un segmento di linea per il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> per ogni <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventi che si verificano.</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Per aggiornare la grafica, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo viene chiamato per il <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> in ogni <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Inoltre, il percorso grafico è necessario scorrere verso l'alto o verso il basso quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> si verifica l'evento.</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Ulteriori eventi del mouse, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, vengono identificati anche sullo schermo.</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Viene visualizzato anche sullo schermo è ulteriori informazioni sul mouse dalla <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>Occurs when the mouse wheel moves while the control has focus.</source>
          <target state="translated">Si verifica quando si sposta la rotellina del mouse mentre il controllo ha lo stato attivo.</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>When handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event it is important to follow the user interface (UI) standards associated with the mouse wheel.</source>
          <target state="translated">Quando si gestisce il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> eventi è importante seguire gli standard di interfaccia utente associati con la rotellina del mouse.</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType&gt;</ph> property value indicates the amount the mouse wheel has been moved.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType&gt;</ph> valore della proprietà indica la quantità la rotellina del mouse è stata spostata.</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>The UI should scroll when the accumulated delta is plus or minus 120.</source>
          <target state="translated">È necessario scorrere l'interfaccia utente quando il delta accumulato è più o meno 120.</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>The UI should scroll the number of logical lines returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType&gt;</ph> property for every delta value reached.</source>
          <target state="translated">L'interfaccia utente è necessario scorrere il numero di righe logiche restituite dal <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType&gt;</ph> proprietà per ciascun valore delta raggiunto.</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType&gt;</ph> lines scrolled per 120 delta units of wheel movement.</source>
          <target state="translated">È possibile anche scorrimento inferiori che incrementi di 120 unità, ma il rapporto deve rimanere costante, ovvero <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType&gt;</ph> righe scorse per 120 unità delta di spostamento della rotellina.</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>For more information about handling mouse wheel messages, see the<bpt id="p1">[</bpt>WM_MOUSEWHEEL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645617\(v=vs.85\).aspx)</ept>topic.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione di messaggi rotellina del mouse, vedere il<bpt id="p1">[</bpt>WM_MOUSEWHEEL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645617\(v=vs.85\).aspx)</ept>argomento.</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Gli eventi del mouse si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di eventi del mouse differenti per disegnare il tracciato del mouse su un <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Viene aggiunto un segmento di linea per il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> per ogni <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventi che si verificano.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Per aggiornare la grafica, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo viene chiamato per il <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> in ogni <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Inoltre, il percorso grafico è necessario scorrere verso l'alto o verso il basso quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> si verifica l'evento.</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Ulteriori eventi del mouse, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, vengono identificati anche sullo schermo.</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Viene visualizzato anche sullo schermo è ulteriori informazioni sul mouse dalla <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Move">
          <source>Occurs when the control is moved.</source>
          <target state="translated">Si verifica quando il controllo viene spostato.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Move">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Move">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Move&gt;</ph> event to display the location of the form in screen coordinates on the caption bar of the form.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Move&gt;</ph> evento per visualizzare la posizione del form in coordinate dello schermo nella barra del titolo del form.</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Name">
          <source>Gets or sets the name of the control.</source>
          <target state="translated">Ottiene o imposta il nome del controllo.</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>The name of the control.</source>
          <target state="translated">Nome del controllo.</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>The default is an empty string ("").</source>
          <target state="translated">Il valore predefinito è una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> property can be used at run time to evaluate the object by name rather than type and programmatic name.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> proprietà può essere utilizzata in fase di esecuzione per valutare l'oggetto per nome anziché tipo e il nome a livello di codice.</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.String&gt;</ph> type, it can be evaluated in case-style logic statements (<ph id="ph3">`Select`</ph> statement in <ph id="ph4">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph5">`switch`</ph> statement in Visual C# and <ph id="ph6">[!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]</ph>).</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> proprietà restituisce un <ph id="ph2">&lt;xref:System.String&gt;</ph> tipo, possono essere valutata in istruzioni case stile logiche (<ph id="ph3">`Select`</ph> istruzione nel <ph id="ph4">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph5">`switch`</ph> istruzione in Visual c# e <ph id="ph6">[!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>The following code example displays the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> of a control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> when the control is added or removed from a form.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene visualizza la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> di un controllo in un <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> quando il controllo viene aggiunto o rimosso da un modulo.</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> representing the area to invalidate.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta l'area da invalidare.</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Invalidated" /&gt;</ph> event with a specified region of the control to invalidate.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Invalidated" /&gt;</ph> con un'area specificata del controllo da invalidare.</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.AutoSizeChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.AutoSizeChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackColorChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBindingContextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBindingContextChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CausesValidationChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CausesValidationChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UICuesEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UICuesEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ChangeUICues" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ChangeUICues" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnChangeUICues%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnChangeUICues%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>The following code example demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> method in a derived class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> metodo in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>To run the example, paste the following code after a form class, in the same file.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente dopo una classe del modulo, nello stesso file.</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>Add a textbox of type <ph id="ph1">`SingleClickTextBox`</ph> to the form.</source>
          <target state="translated">Aggiungere una casella di testo di tipo <ph id="ph1">`SingleClickTextBox`</ph> al form.</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>The following code example shows one of the many uses of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event and event handler.</source>
          <target state="translated">Esempio di codice seguente viene illustrato uno dei numerosi impieghi del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento e gestore eventi.</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClientSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClientSizeChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnContextMenuChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnContextMenuChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ControlAdded" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ControlAdded" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>Called when a child control is added to the control.</source>
          <target state="translated">Chiamato quando un controllo figlio viene aggiunto al controllo.</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnControlAdded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnControlAdded%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAdded&gt;</ph> to add a control to a form and displays the name of the added control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAdded&gt;</ph> per aggiungere un controllo a un form e visualizza il nome del controllo aggiunto in un <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ControlRemoved" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ControlRemoved" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>Called when a child control is removed from the control.</source>
          <target state="translated">Chiamato quando un controllo figlio viene rimosso dal controllo.</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnControlRemoved%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnControlRemoved%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlRemoved&gt;</ph> to remove a control from a form and displays the name of the removed control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlRemoved&gt;</ph> per rimuovere un controllo da un form e visualizza il nome del controllo rimosso in una <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateControl" /&gt;</ph> method.</source>
          <target state="translated">Genera il metodo <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateControl" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> method is called when the control is first created.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> metodo viene chiamato quando il controllo viene creato.</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCreateControl" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCreateControl" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCreateControl" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCreateControl" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCursorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCursorChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DockChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DockChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDockChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDockChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> to load text files listed in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> into a <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> evento di un <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> per caricare i file di testo elencati nel <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> in un <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragDrop%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragDrop%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragEnter%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragLeave" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragLeave" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragLeave%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragOver%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragOver%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnEnabledChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnEnabledChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnEnter%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event to change the foreground and background colors of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> under particular conditions.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> evento per modificare i colori di primo piano e sfondo di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> in condizioni particolari.</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnFontChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnForeColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnForeColorChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GiveFeedback" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GiveFeedback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnGiveFeedback%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnGiveFeedback%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnGotFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnGotFocus%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHandleCreated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHandleCreated%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHandleDestroyed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHandleDestroyed%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HelpEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HelpEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HelpRequested" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HelpRequested" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHelpRequested%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHelpRequested%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ImeModeChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ImeModeChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnImeModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnImeModeChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InvalidateEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InvalidateEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Invalidated" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Invalidated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnInvalidated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnInvalidated%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event to determine the type of character entered into the control.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> evento per determinare il tipo di carattere immesso nel controllo.</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyPressEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyPressEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyPress" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyPress" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event to prevent characters from entering the control.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> evento per impedire l'accesso al controllo di caratteri.</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style help to the user.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> evento con la <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> classe per visualizzare una finestra popup della Guida l'utente.</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LayoutEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LayoutEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLayout%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLayout%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> method so that registered delegates receive the event and for typical docking and anchoring functions to work.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> in una classe derivata, assicurarsi di chiamare la classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> metodo in modo che i delegati registrati ricevano l'evento e per l'ancoraggio tipico e funzioni di ancoraggio.</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Derived classes should override this method to do any custom layout logic.</source>
          <target state="translated">Le classi derivate devono eseguire l'override di questo metodo per eseguire qualsiasi logica di layout personalizzato.</target>       </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Leave" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Leave" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLeave%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event to reset a control to its former state.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> evento per reimpostare un controllo allo stato precedente.</target>       </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LocationChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LocationChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLocationChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLocationChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLostFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLostFocus%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MarginChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MarginChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMarginChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMarginChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseClick" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseClick" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseClick%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDown" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseEnter" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseEnter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseHover" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseHover" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> methods in a derived class.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> metodi in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente in un nuovo form e incollare questa classe, che costituiscono lo stesso file, dopo il modulo.</target>       </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>Add a button of type <ph id="ph1">`FunButton`</ph> to the form.</source>
          <target state="translated">Aggiungere un pulsante di tipo <ph id="ph1">`FunButton`</ph> al form.</target>       </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseMove" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseMove" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> methods in a derived class.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> metodi in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente in un nuovo form e incollare questa classe, che costituiscono lo stesso file, dopo il modulo.</target>       </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Add a button of type <ph id="ph1">`FunButton`</ph> to the form.</source>
          <target state="translated">Aggiungere un pulsante di tipo <ph id="ph1">`FunButton`</ph> al form.</target>       </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseWheel" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseWheel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Move" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Move" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMove%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Move&gt;</ph> event to display the location of the form in screen coordinates on the caption bar of the form.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Move&gt;</ph> evento per visualizzare la posizione del form in coordinate dello schermo nella barra del titolo del form.</target>       </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> that represents the Windows message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> che rappresenta il messaggio di Windows.</target>       </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>Notifies the control of Windows messages.</source>
          <target state="translated">Notifica al controllo i messaggi di Windows.</target>       </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnNotifyMessage%2A&gt;</ph> method is called if the control's <ph id="ph2">`EnableNotifyMessage`</ph> style bit is set in <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnNotifyMessage%2A&gt;</ph> metodo viene chiamato se il controllo <ph id="ph2">`EnableNotifyMessage`</ph> bit di stile è impostato in <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>The <ph id="ph1">`EnableNotifyMessage`</ph> style in <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> enables the control to be notified when the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method receives a Windows message.</source>
          <target state="translated">Il <ph id="ph1">`EnableNotifyMessage`</ph> stile <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> consente di ricevere una notifica quando il controllo di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> metodo riceve un messaggio di Windows.</target>       </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>With this method, semi-trusted controls can listen for Windows messages without enabling them to modify the message.</source>
          <target state="translated">Con questo metodo, controlli semi-trusted possono rimanere in ascolto dei messaggi di Windows senza dover modificare il messaggio.</target>       </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> in a derived class, calling the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> method is not necessary because there is no initial implementation.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> in una classe derivata, chiamare la classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> (metodo) non è necessaria perché non vi è Nessuna implementazione iniziale.</target>       </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.PaddingChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.PaddingChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaddingChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaddingChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on which it is dropped.</source>
          <target state="translated">Esempio di codice seguente consente all'utente di trascinare un'immagine o un file di immagine nel form e fare in modo da visualizzare nel punto in cui viene eliminato.</target>       </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> viene eseguito l'override di metodo per aggiornare l'immagine ogni volta che viene disegnato il form; in caso contrario l'immagine verrà mantenuta solo fino al successivo ridisegno.</target>       </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> metodo di gestione di eventi determina il tipo di dati trascinati nel form e fornisce le informazioni appropriate.</target>       </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event-handling method displays the image on the form, if an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> can be created from the data.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> il metodo di gestione degli eventi visualizza l'immagine del form, se un <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> possono essere creati dai dati.</target>       </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> values are screen coordinates, the example uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> method to convert them to client coordinates.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> sono coordinate dello schermo, nell'esempio viene utilizzato il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> metodo per convertirli in coordinate client.</target>       </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains information about the control to paint.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> che contiene informazioni sul controllo da disegnare.</target>       </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>Paints the background of the control.</source>
          <target state="translated">Disegna lo sfondo del controllo.</target>       </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> method enables derived classes to handle Windows background erase requests.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> le richieste di cancellazione metodo consente alle classi derivate di gestire in background di Windows.</target>       </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>Inheriting classes should override this method to handle the erase background request from windows.</source>
          <target state="translated">Le classi che ereditano devono eseguire l'override di questo metodo per gestire la richiesta di cancellazione in background da windows.</target>       </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> in a derived class it is not necessary to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph>.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> in una classe derivata non è necessario chiamare la classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> quando il valore della proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> del contenitore del controllo cambia.</target>       </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> quando il valore della proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> del contenitore del controllo cambia.</target>       </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> quando il valore della proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> del contenitore del controllo cambia.</target>       </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ParentChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ParentChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentCursorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentCursorChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Enabled" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> quando il valore della proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Enabled" /&gt;</ph> del contenitore del controllo cambia.</target>       </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> quando il valore della proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> del contenitore del controllo cambia.</target>       </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentFontChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentFontChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> quando il valore della proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> del contenitore del controllo cambia.</target>       </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph> quando il valore della proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> del contenitore del controllo cambia.</target>       </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> quando il valore della proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> del contenitore del controllo cambia.</target>       </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.PreviewKeyDown" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.PreviewKeyDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>If the <ph id="ph1">`UserPaint`</ph> bit of the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> is set, you can override <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph> to do layered painting.</source>
          <target state="translated">Se il <ph id="ph1">`UserPaint`</ph> bit del <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> è impostato, è possibile eseguire l'override <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph> per eseguire un disegno a più livelli.</target>       </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> for more information.</source>
          <target state="translated">Per altre informazioni, vedere <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;paramref name="e" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="e" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>After dragging has begun, this method is called repeatedly by the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> until the drag operation is either canceled or completed.</source>
          <target state="translated">Dopo aver iniziato il trascinamento, questo metodo viene chiamato più volte dal <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> fino a quando l'operazione di trascinamento viene annullata o completata.</target>       </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>Override this method if you want to change the point at which dragging is canceled or at which a drop occurs.</source>
          <target state="translated">Eseguire l'override di questo metodo se si desidera modificare il punto in cui il trascinamento viene annullato o in cui viene eseguito un rilascio.</target>       </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RegionChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RegionChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnRegionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnRegionChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnResize%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnResize%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> method can be called during construction, so if you override <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> it can be called before the control constructor is called.</source>
          <target state="translated">Il <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> metodo può essere chiamato durante la costruzione, pertanto se si esegue l'override <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> può essere chiamato prima della chiamata al costruttore del controllo.</target>       </trans-unit>
        <trans-unit id="2621" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2622" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2633" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2634" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.SizeChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.SizeChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnSizeChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnSizeChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2640" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2641" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.StyleChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.StyleChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnStyleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnStyleChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2647" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2648" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2654" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2655" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TabIndexChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TabIndexChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTabIndexChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTabIndexChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2661" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2662" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TabStopChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TabStopChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTabStopChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTabStopChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2673" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2674" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTextChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTextChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2683" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2684" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnValidated%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnValidated%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2690" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2691" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnValidating%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnValidating%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2697" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2698" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="2700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnVisibleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnVisibleChanged%2A&gt;</ph> metodo consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="2702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="2703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un metodo di generazione di eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="2704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> che generano corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> eventi quando il <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> modificato il valore (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="2705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derivata la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="2706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="2707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe che deriva dalla <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /&gt;</ph> in una classe derivata, verificare di chiamare il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /&gt;</ph> della classe di base in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="2709" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Padding">
          <source>Gets or sets padding within the control.</source>
          <target state="translated">Ottiene o imposta la spaziatura interna del controllo.</target>       </trans-unit>
        <trans-unit id="2710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> representing the control's internal spacing characteristics.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> che rappresenta le caratteristiche di spaziatura interna del controllo.</target>       </trans-unit>
        <trans-unit id="2711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>For containers such as <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> property gets or sets their respective <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph> properties.</source>
          <target state="translated">Per i contenitori, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> proprietà ottiene o imposta le rispettive <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="2712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType&gt;</ph> property is equal to its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType&gt;</ph> proprietà è uguale al relativo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="2713" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>Controls receive default values for <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> that are reasonably close to Windows user interface guidelines.</source>
          <target state="translated">I valori predefiniti per i controlli ricevono <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> che ragionevolmente sta per raggiungere linee guida sull'interfaccia utente di Windows.</target>       </trans-unit>
        <trans-unit id="2714" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>Some adjustments might still be necessary for particular applications.</source>
          <target state="translated">Alcune modifiche potrebbero essere ancora necessari per determinate applicazioni.</target>       </trans-unit>
        <trans-unit id="2715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>All controls that implement <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> are enlarged by the amount in <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> when <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> is <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Tutti i controlli che implementano <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> sono aumentati quantità in <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> quando <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> è <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="2716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>The following controls do not use <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph>:</source>
          <target state="translated">Non utilizzano i seguenti controlli <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="2717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>Controls that do not implement <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> through <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph></source>
          <target state="translated">I controlli che non implementano <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> tramite <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="2718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>Custom controls that directly inherit from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph></source>
          <target state="translated">Controlli personalizzati che ereditano direttamente dalla <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph></target>       </trans-unit>
        <trans-unit id="2719" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>Occurs when the control's padding changes.</source>
          <target state="translated">Si verifica quando la spaziatura interna del controllo cambia.</target>       </trans-unit>
        <trans-unit id="2720" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2721" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="2722" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PaddingChanged&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PaddingChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="2723" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="2724" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2725" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2726" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PaddingChanged&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PaddingChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="2727" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Paint">
          <source>Occurs when the control is redrawn.</source>
          <target state="translated">Si verifica quando il controllo viene ridisegnato.</target>       </trans-unit>
        <trans-unit id="2728" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event is raised when the control is redrawn.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento viene generato quando il controllo viene ridisegnato.</target>       </trans-unit>
        <trans-unit id="2729" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>It passes an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> to the method(s) that handles the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event.</source>
          <target state="translated">Passa a un'istanza di <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> per il metodo che gestisce il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="2730" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method.</source>
          <target state="translated">Quando si crea un nuovo controllo personalizzato o un controllo ereditato con un aspetto visivo diverso, è necessario fornire il codice per il rendering del controllo eseguendo l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="2731" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>For more information, see <bpt id="p1">[</bpt>Overriding the OnPaint Method<ept id="p1">](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md)</ept> and <bpt id="p2">[</bpt>Custom Control Painting and Rendering<ept id="p2">](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>l'override del metodo OnPaint<ept id="p1">](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md)</ept> e <bpt id="p2">[</bpt>il disegno del controllo personalizzato e il Rendering<ept id="p2">](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2732" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2733" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> control on the form and uses the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event to draw to it.</source>
          <target state="translated">L'esempio di codice seguente crea un <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> controllo sulla forma e viene utilizzato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento per tracciare il.</target>       </trans-unit>
        <trans-unit id="2734" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Parent">
          <source>Gets or sets the parent container of the control.</source>
          <target state="translated">Ottiene o imposta il contenitore padre del controllo.</target>       </trans-unit>
        <trans-unit id="2735" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the parent or container control of the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> che rappresenta il controllo padre o contenitore del controllo.</target>       </trans-unit>
        <trans-unit id="2736" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property value to <ph id="ph2">`null`</ph> removes the control from the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> of its current parent control.</source>
          <target state="translated">L'impostazione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> valore della proprietà da <ph id="ph2">`null`</ph> rimuove il controllo dal <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> del relativo controllo padre corrente.</target>       </trans-unit>
        <trans-unit id="2737" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph> method to set properties on the parent control of a button and its form.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> proprietà e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph> metodo per impostare le proprietà del controllo padre di un pulsante e il relativo modulo.</target>       </trans-unit>
        <trans-unit id="2738" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>for all windows to get this property value.</source>
          <target state="translated">per tutte le finestre ottenere il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="2739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="2740" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ParentChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Parent" /&gt;</ph> property value changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Parent" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="2741" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ParentChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="2742" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ParentChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2743" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Forces the control to apply layout logic to child controls.</source>
          <target state="translated">Determina l'applicazione della logica di layout del controllo ai controlli figlio.</target>       </trans-unit>
        <trans-unit id="2744" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>Forces the control to apply layout logic to all its child controls.</source>
          <target state="translated">Determina l'applicazione della logica di layout del controllo a tutti i rispettivi controlli figlio.</target>       </trans-unit>
        <trans-unit id="2745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method was called before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> metodo è stato chiamato prima di chiamare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> (metodo), il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> evento viene eliminato.</target>       </trans-unit>
        <trans-unit id="2746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph> created are set to <ph id="ph4">`null`</ph> if no values were provided when the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method was called.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph> le proprietà del <ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph> creato vengono impostate su <ph id="ph4">`null`</ph> se viene fornito alcun valore quando il <ph id="ph5">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> metodo è stato chiamato.</target>       </trans-unit>
        <trans-unit id="2747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>It also demonstrates ways in which the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised.</source>
          <target state="translated">Vengono inoltre illustrati i modi in cui il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="2749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>In this example, the <ph id="ph1">`Click`</ph> event handler for <ph id="ph2">`Button1`</ph> explicitly calls <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</source>
          <target state="translated">In questo esempio, il <ph id="ph1">`Click`</ph> gestore eventi per <ph id="ph2">`Button1`</ph> chiama in modo esplicito <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>The <ph id="ph1">`Click`</ph> event handler for <ph id="ph2">`Button2`</ph> implicitly calls <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">`Click`</ph> gestore eventi per <ph id="ph2">`Button2`</ph> chiama in modo implicito <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> is also called when the form is loaded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> viene inoltre chiamato quando viene caricato il modulo.</target>       </trans-unit>
        <trans-unit id="2752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source><ph id="ph1">`Button3`</ph> returns the control to the state it was in when loaded.</source>
          <target state="translated"><ph id="ph1">`Button3`</ph> Restituisce il controllo lo stato quando caricato.</target>       </trans-unit>
        <trans-unit id="2753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised.</source>
          <target state="translated">In ogni caso, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="2754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>This is a complete example.</source>
          <target state="translated">Questo è un esempio completo.</target>       </trans-unit>
        <trans-unit id="2755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>To run the example, paste the following code in a blank form.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente in un form vuoto.</target>       </trans-unit>
        <trans-unit id="2756" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the most recently changed control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> che rappresenta il controllo modificato più di recente.</target>       </trans-unit>
        <trans-unit id="2757" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>The name of the most recently changed property on the control.</source>
          <target state="translated">Nome della proprietà del controllo modificata più di recente.</target>       </trans-unit>
        <trans-unit id="2758" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>Forces the control to apply layout logic to all its child controls.</source>
          <target state="translated">Determina l'applicazione della logica di layout del controllo a tutti i rispettivi controlli figlio.</target>       </trans-unit>
        <trans-unit id="2759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method was called before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> metodo è stato chiamato prima di chiamare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> (metodo), il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> evento viene eliminato.</target>       </trans-unit>
        <trans-unit id="2760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>The <ph id="ph1">`affectedControl`</ph> and <ph id="ph2">`affectedProperty`</ph> parameters can both be set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Il <ph id="ph1">`affectedControl`</ph> e <ph id="ph2">`affectedProperty`</ph> parametri possono essere entrambe impostati su <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="2761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>Doing so causes the <ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph> created to be set to <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Determina il <ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph> le proprietà del <ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph> creato per essere impostato su <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="2762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>It also demonstrates ways in which the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised.</source>
          <target state="translated">Vengono inoltre illustrati i modi in cui il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="2764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>In this example, the <ph id="ph1">`Click`</ph> event handler for <ph id="ph2">`Button1`</ph> explicitly calls <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</source>
          <target state="translated">In questo esempio, il <ph id="ph1">`Click`</ph> gestore eventi per <ph id="ph2">`Button1`</ph> chiama in modo esplicito <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>The <ph id="ph1">`Click`</ph> event handler for <ph id="ph2">`Button2`</ph> implicitly calls <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">`Click`</ph> gestore eventi per <ph id="ph2">`Button2`</ph> chiama in modo implicito <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> is also called when the form is loaded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> viene inoltre chiamato quando viene caricato il modulo.</target>       </trans-unit>
        <trans-unit id="2767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source><ph id="ph1">`Button3`</ph> returns the control to the state it was in when loaded.</source>
          <target state="translated"><ph id="ph1">`Button3`</ph> Restituisce il controllo lo stato quando caricato.</target>       </trans-unit>
        <trans-unit id="2768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised.</source>
          <target state="translated">In ogni caso, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="2769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>This is a complete example.</source>
          <target state="translated">Questo è un esempio completo.</target>       </trans-unit>
        <trans-unit id="2770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>To run the example, paste the following code in a blank form.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente in un form vuoto.</target>       </trans-unit>
        <trans-unit id="2771" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The screen coordinate <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> to convert.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> delle coordinate dello schermo da convertire.</target>       </trans-unit>
        <trans-unit id="2772" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>Computes the location of the specified screen point into client coordinates.</source>
          <target state="translated">Calcola la posizione del punto dello schermo specificato nelle coordinate client.</target>       </trans-unit>
        <trans-unit id="2773" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the converted <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, in client coordinates.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta l'oggetto <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> convertito, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, nelle coordinate client.</target>       </trans-unit>
        <trans-unit id="2774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</source>
          <target state="translated">Il codice esempio seguente viene abilitata all'utente di trascinare un'immagine o un file di immagine nel form e fare in modo da visualizzare nel punto in cui è stato eliminato.</target>       </trans-unit>
        <trans-unit id="2775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> viene eseguito l'override di metodo per aggiornare l'immagine ogni volta che viene disegnato il form; in caso contrario l'immagine verrà mantenuta solo fino al successivo ridisegno.</target>       </trans-unit>
        <trans-unit id="2776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> metodo di gestione di eventi determina il tipo di dati trascinati nel form e fornisce le informazioni appropriate.</target>       </trans-unit>
        <trans-unit id="2777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event-handling method displays the image on the form, if an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> can be created from the data.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> il metodo di gestione degli eventi visualizza l'immagine del form, se un <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> possono essere creati dai dati.</target>       </trans-unit>
        <trans-unit id="2778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> values are screen coordinates, the example uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> method to convert them to client coordinates.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> sono coordinate dello schermo, nell'esempio viene utilizzato il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> metodo per convertirli in coordinate client.</target>       </trans-unit>
        <trans-unit id="2779" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>The client coordinate <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> to convert.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> delle coordinate client da convertire.</target>       </trans-unit>
        <trans-unit id="2780" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>Computes the location of the specified client point into screen coordinates.</source>
          <target state="translated">Calcola la posizione del punto client specificato nelle coordinate dello schermo.</target>       </trans-unit>
        <trans-unit id="2781" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the converted <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, in screen coordinates.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta l'oggetto <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> convertito, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, nelle coordinate dello schermo.</target>       </trans-unit>
        <trans-unit id="2782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> members.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> membri.</target>       </trans-unit>
        <trans-unit id="2783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>To run the example, paste the following code in a form called Form1 containing several controls.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente in un form denominato Form1 contenente diversi controlli.</target>       </trans-unit>
        <trans-unit id="2784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> events are connected to the event handlers defined in the example.</source>
          <target state="translated">Questo esempio si presuppone che il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> gli eventi siano connessi ai gestori di eventi definiti nell'esempio.</target>       </trans-unit>
        <trans-unit id="2785" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.PreferredSize">
          <source>Gets the size of a rectangular area into which the control can fit.</source>
          <target state="translated">Ottiene le dimensioni di un'area rettangolare in cui è possibile inserire un controllo.</target>       </trans-unit>
        <trans-unit id="2786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.PreferredSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> containing the height and width, in pixels.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> contenente l'altezza e la larghezza, espresse in pixel.</target>       </trans-unit>
        <trans-unit id="2787" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> that represents the message to process.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> che rappresenta il messaggio da elaborare.</target>       </trans-unit>
        <trans-unit id="2788" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)">
          <source>Preprocesses keyboard or input messages within the message loop before they are dispatched.</source>
          <target state="translated">Consente la pre-elaborazione dei messaggi di tastiera o di input all'interno del ciclo di messaggi prima che vengano inviati.</target>       </trans-unit>
        <trans-unit id="2789" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PreProcessControlState" /&gt;</ph> values, depending on whether <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph> or <ph id="ph4">&lt;see langword="false" /&gt;</ph> and whether <ph id="ph5">&lt;see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /&gt;</ph> or <ph id="ph6">&lt;see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /&gt;</ph> are <ph id="ph7">&lt;see langword="true" /&gt;</ph> or <ph id="ph8">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PreProcessControlState" /&gt;</ph>, a seconda se il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /&gt;</ph> è <ph id="ph3">&lt;see langword="true" /&gt;</ph> o <ph id="ph4">&lt;see langword="false" /&gt;</ph> e se i metodi <ph id="ph5">&lt;see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /&gt;</ph> o <ph id="ph6">&lt;see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /&gt;</ph> sono <ph id="ph7">&lt;see langword="true" /&gt;</ph> o <ph id="ph8">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2790" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the message to process.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passato per riferimento, che rappresenta il messaggio da elaborare.</target>       </trans-unit>
        <trans-unit id="2791" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</source>
          <target state="translated">I valori possibili sono WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR e WM_SYSCHAR.</target>       </trans-unit>
        <trans-unit id="2792" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Preprocesses keyboard or input messages within the message loop before they are dispatched.</source>
          <target state="translated">Consente la pre-elaborazione dei messaggi di tastiera o di input all'interno del ciclo di messaggi prima che vengano inviati.</target>       </trans-unit>
        <trans-unit id="2793" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il messaggio è stato elaborato dal controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> is called by the application's message loop to preprocess input messages before they are dispatched.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> viene chiamato dal ciclo di messaggi dell'applicazione da pre-elaborare i messaggi di input prima che vengano inviati.</target>       </trans-unit>
        <trans-unit id="2795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Possible values for the <ph id="ph1">`msg`</ph> parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</source>
          <target state="translated">I valori possibili per il <ph id="ph1">`msg`</ph> parametro sono WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR e WM_SYSCHAR.</target>       </trans-unit>
        <trans-unit id="2796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>When overriding <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>, a control should return <ph id="ph2">`true`</ph> to indicate that it has processed the message.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>, deve restituire un controllo <ph id="ph2">`true`</ph> per indicare che è stato elaborato il messaggio.</target>       </trans-unit>
        <trans-unit id="2797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>For messages that are not processed by the control, the result of <ph id="ph1">`base.PreProcessMessage`</ph> should be returned.</source>
          <target state="translated">Per i messaggi non elaborati dal controllo, il risultato di <ph id="ph1">`base.PreProcessMessage`</ph> deve essere restituito.</target>       </trans-unit>
        <trans-unit id="2798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Controls will typically override one of the more specialized methods such as <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> instead of overriding <ph id="ph6">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>.</source>
          <target state="translated">I controlli in genere sostituiranno uno dei metodi più specializzati, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph>, o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> anziché eseguire l'override <ph id="ph6">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>for all windows for the immediate caller to call this method.</source>
          <target state="translated">per tutte le finestre per il chiamante immediato chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="2800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2801" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>Occurs before the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> event when a key is pressed while focus is on this control.</source>
          <target state="translated">Si verifica prima dell'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> quando viene premuto un tasto mentre il controllo ha lo stato attivo.</target>       </trans-unit>
        <trans-unit id="2802" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>Some key presses, such as the TAB, RETURN, ESC, and arrow keys, are typically ignored by some controls because they are not considered input key presses.</source>
          <target state="translated">Alcuni tasti, ad esempio la scheda, RETURN, ESC e tasti di direzione, in genere vengono ignorati da alcuni controlli perché non sono considerati inpue pressioni dei tasti.</target>       </trans-unit>
        <trans-unit id="2803" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>For example, by default, a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> control ignores the arrow keys.</source>
          <target state="translated">Ad esempio, per impostazione predefinita, un <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> controllo Ignora i tasti di direzione.</target>       </trans-unit>
        <trans-unit id="2804" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>Pressing the arrow keys typically causes the focus to move to the previous or next control.</source>
          <target state="translated">Premere i tasti di direzione in genere determina lo stato attivo spostare il controllo precedente o successivo.</target>       </trans-unit>
        <trans-unit id="2805" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>The arrow keys are considered navigation keys and pressing these keys typically do not raise the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event for a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">I tasti di direzione sono considerati tasti di navigazione e premendo queste chiavi non è in genere aumentare di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> evento per un <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2806" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>However, pressing the arrow keys for a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> does raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event.</source>
          <target state="translated">Tuttavia, premere la freccia di chiavi per un <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> generare la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="2807" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>By handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event for a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> and setting the <ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property to <ph id="ph4">`true`</ph>, you can raise the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event when the arrow keys are pressed.</source>
          <target state="translated">Gestendo il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> evento per un <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> e impostando il <ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> proprietà <ph id="ph4">`true`</ph>, è possibile generare il <ph id="ph5">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> evento quando vengono premuti i tasti di direzione.</target>       </trans-unit>
        <trans-unit id="2808" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>However, if you handle the arrow keys, the focus will no longer move to the previous or next control.</source>
          <target state="translated">Tuttavia, se si gestiscono i tasti di direzione, lo stato attivo non è più passerà al controllo precedente o successivo.</target>       </trans-unit>
        <trans-unit id="2809" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2810" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>The following code example demonstrates a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> that includes a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
          <target state="translated">L'esempio di codice seguente illustra un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> che include un <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2811" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> has the focus and you press the UP ARROW or DOWN ARROW keys, the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph> appears.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> ha lo stato attivo e si premono i tasti freccia su o freccia giù, il <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph> viene visualizzato.</target>       </trans-unit>
        <trans-unit id="2812" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event handler detects when the UP ARROW or DOWN ARROW keys are pressed and sets the <ph id="ph2">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> gestore rileva quando vengono premuti i tasti freccia su o freccia giù e imposta il <ph id="ph2">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> proprietà <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="2813" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>This raises the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event so that you can display the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
          <target state="translated">Questo genera il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> evento in modo che sia possibile visualizzare il <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2814" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>You should not put any logic in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event handler, other than to set the <ph id="ph2">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property.</source>
          <target state="translated">Non è opportuno inserire qualsiasi logica <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> gestore dell'evento, se non per impostare il <ph id="ph2">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="2815" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>Instead, you should put your logic in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event handler.</source>
          <target state="translated">In alternativa, è necessario inserire la logica nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="2816" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passato per riferimento, che rappresenta il messaggio della finestra da elaborare.</target>       </trans-unit>
        <trans-unit id="2817" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> che rappresenta il tasto da elaborare.</target>       </trans-unit>
        <trans-unit id="2818" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Processes a command key.</source>
          <target state="translated">Elabora un tasto di comando.</target>       </trans-unit>
        <trans-unit id="2819" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il carattere è stato elaborato dal controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>This method is called during message preprocessing to handle command keys.</source>
          <target state="translated">Questo metodo viene chiamato durante la pre-elaborazione di messaggi per gestire le chiavi di comando.</target>       </trans-unit>
        <trans-unit id="2821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Command keys are keys that always take precedence over regular input keys.</source>
          <target state="translated">Tasti di comando sono chiavi che hanno la precedenza sui tasti di input regolare.</target>       </trans-unit>
        <trans-unit id="2822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Examples of command keys include accelerators and menu shortcuts.</source>
          <target state="translated">Tasti di scelta rapida e menu di scelta rapida sono esempi di tasti di comando.</target>       </trans-unit>
        <trans-unit id="2823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>The method must return <ph id="ph1">`true`</ph> to indicate that it has processed the command key, or <ph id="ph2">`false`</ph> to indicate that the key is not a command key.</source>
          <target state="translated">Il metodo deve restituire <ph id="ph1">`true`</ph> per indicare che è stato elaborato il tasto di comando o <ph id="ph2">`false`</ph> per indicare che la chiave non è un tasto di comando.</target>       </trans-unit>
        <trans-unit id="2824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</source>
          <target state="translated">Questo metodo viene chiamato solo quando il controllo è ospitato in un'applicazione Windows Forms o come un controllo ActiveX.</target>       </trans-unit>
        <trans-unit id="2825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph> method first determines whether the control has a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, and if so, enables the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> to process the command key.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph> metodo determina innanzitutto se il controllo ha un <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, garantendo in tal caso, il <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> per elaborare il tasto di comando.</target>       </trans-unit>
        <trans-unit id="2826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph> method.</source>
          <target state="translated">Se il tasto di comando non è un collegamento di menu e il controllo ha un padre, la chiave viene passata al padre <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="2827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>The net effect is that command keys are "bubbled" up the control hierarchy.</source>
          <target state="translated">L'effetto finale è comando chiavi vengono "trasmessi" la gerarchia dei controlli.</target>       </trans-unit>
        <trans-unit id="2828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key.</source>
          <target state="translated">Oltre alla chiave, l'utente ha premuto, i dati della chiave indicano inoltre che, se presente, in sono stati premuti i tasti di modifica alla stessa ora la chiave.</target>       </trans-unit>
        <trans-unit id="2829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Modifier keys include the SHIFT, CTRL, and ALT keys.</source>
          <target state="translated">Tasti di modifica sono i tasti MAIUSC, CTRL e ALT.</target>       </trans-unit>
        <trans-unit id="2830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>for the immediate caller and inheriting classes to call this method.</source>
          <target state="translated">per il chiamante immediato e le classi che ereditano da chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="2831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> metodo in una classe derivata, deve restituire un controllo <ph id="ph2">&lt;see langword="true" /&gt;</ph> per indicare che il tasto è stato elaborato.</target>       </trans-unit>
        <trans-unit id="2833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> method should be returned.</source>
          <target state="translated">Per le chiavi che non vengono elaborate dal controllo, il risultato della chiamata della classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> (metodo) deve essere restituito.</target>       </trans-unit>
        <trans-unit id="2834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">Controlli raramente, se applicabile, dovrà eseguire l'override di questo metodo.</target>       </trans-unit>
        <trans-unit id="2835" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>The character to process.</source>
          <target state="translated">Carattere da elaborare.</target>       </trans-unit>
        <trans-unit id="2836" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>Processes a dialog character.</source>
          <target state="translated">Elabora un carattere della finestra di dialogo.</target>       </trans-unit>
        <trans-unit id="2837" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il carattere è stato elaborato dal controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>This method is called during message preprocessing to handle dialog characters, such as control mnemonics.</source>
          <target state="translated">Questo metodo viene chiamato durante la pre-elaborazione per gestire i caratteri di finestra di dialogo, ad esempio i tasti di scelta di controllo dei messaggi.</target>       </trans-unit>
        <trans-unit id="2839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>This method is called only if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> method indicates that the control is not processing the character.</source>
          <target state="translated">Questo metodo viene chiamato solo se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> metodo indica che il controllo non elabora il carattere.</target>       </trans-unit>
        <trans-unit id="2840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph> method simply sends the character to the parent's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph> method, or returns <ph id="ph3">`false`</ph> if the control has no parent.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph> metodo invia semplicemente il carattere dell'elemento padre <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph> metodo oppure restituisce <ph id="ph3">`false`</ph> se il controllo non ha elementi padre.</target>       </trans-unit>
        <trans-unit id="2841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class overrides this method to perform actual processing of dialog characters.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe esegue l'override di questo metodo per eseguire operazioni di elaborazione effettivo di caratteri di finestra di dialogo.</target>       </trans-unit>
        <trans-unit id="2842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</source>
          <target state="translated">Questo metodo viene chiamato solo quando il controllo è ospitato in un'applicazione Windows Forms o come un controllo ActiveX.</target>       </trans-unit>
        <trans-unit id="2843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">per tutte le finestre per classi che ereditano per chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="2844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the character.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> metodo in una classe derivata, deve restituire un controllo <ph id="ph2">&lt;see langword="true" /&gt;</ph> per indicare che è stato elaborato il carattere.</target>       </trans-unit>
        <trans-unit id="2846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>For characters that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> method should be returned.</source>
          <target state="translated">Per i caratteri che non vengono elaborati dal controllo, il risultato della chiamata della classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> (metodo) deve essere restituito.</target>       </trans-unit>
        <trans-unit id="2847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">Controlli raramente, se applicabile, dovrà eseguire l'override di questo metodo.</target>       </trans-unit>
        <trans-unit id="2848" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> che rappresenta il tasto da elaborare.</target>       </trans-unit>
        <trans-unit id="2849" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Processes a dialog key.</source>
          <target state="translated">Elabora un tasto della finestra di dialogo.</target>       </trans-unit>
        <trans-unit id="2850" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il tasto è stato elaborato dal controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESC, and arrow keys.</source>
          <target state="translated">Questo metodo viene chiamato durante la pre-elaborazione di messaggi per gestire i caratteri di finestra di dialogo, ad esempio, RETURN, ESC, tasti freccia e TAB.</target>       </trans-unit>
        <trans-unit id="2852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>This method is called only if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method indicates that the control is not processing the key.</source>
          <target state="translated">Questo metodo viene chiamato solo se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> metodo indica che il controllo non elabora il tasto.</target>       </trans-unit>
        <trans-unit id="2853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> simply sends the character to the parent's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> method, or returns <ph id="ph3">`false`</ph> if the control has no parent.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> invia semplicemente il carattere dell'elemento padre <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> metodo oppure restituisce <ph id="ph3">`false`</ph> se il controllo non ha elementi padre.</target>       </trans-unit>
        <trans-unit id="2854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class overrides this method to perform actual processing of dialog keys.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe esegue l'override di questo metodo per eseguire l'elaborazione effettiva di finestre di dialogo.</target>       </trans-unit>
        <trans-unit id="2855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</source>
          <target state="translated">Questo metodo viene chiamato solo quando il controllo è ospitato in un'applicazione Windows Forms o come un controllo ActiveX.</target>       </trans-unit>
        <trans-unit id="2856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">per tutte le finestre per classi che ereditano per chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="2857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /&gt;</ph> metodo in una classe derivata, deve restituire un controllo <ph id="ph2">&lt;see langword="true" /&gt;</ph> per indicare che il tasto è stato elaborato.</target>       </trans-unit>
        <trans-unit id="2859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> method should be returned.</source>
          <target state="translated">Per le chiavi che non vengono elaborate dal controllo, il risultato della chiamata della classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> (metodo) deve essere restituito.</target>       </trans-unit>
        <trans-unit id="2860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">Controlli raramente, se applicabile, dovrà eseguire l'override di questo metodo.</target>       </trans-unit>
        <trans-unit id="2861" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passato per riferimento, che rappresenta il messaggio della finestra da elaborare.</target>       </trans-unit>
        <trans-unit id="2862" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Processes a key message and generates the appropriate control events.</source>
          <target state="translated">Elabora un messaggio relativo ai tasti e generare gli eventi appropriati del controllo.</target>       </trans-unit>
        <trans-unit id="2863" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il messaggio è stato elaborato dal controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>This method is called when a control receives a keyboard message.</source>
          <target state="translated">Questo metodo viene chiamato quando un controllo riceve un messaggio della tastiera.</target>       </trans-unit>
        <trans-unit id="2865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>The method is responsible for generating the appropriate key events for the message by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> methods.</source>
          <target state="translated">Il metodo è responsabile della generazione di eventi chiavi appropriati per il messaggio chiamando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="2866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">`m`</ph> parameter contains the window message that must be processed.</source>
          <target state="translated">Il <ph id="ph1">`m`</ph> parametro contiene la finestra di messaggio che deve essere elaborato.</target>       </trans-unit>
        <trans-unit id="2867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Possible values for the <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR.</source>
          <target state="translated">I valori possibili per il <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> proprietà sono WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP e WM_IME_CHAR.</target>       </trans-unit>
        <trans-unit id="2868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">per tutte le finestre per classi che ereditano per chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="2869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">per il chiamante immediato chiamare codice non gestito.</target>       </trans-unit>
        <trans-unit id="2871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="2872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> metodo in una classe derivata, deve restituire un controllo <ph id="ph2">&lt;see langword="true" /&gt;</ph> per indicare che il tasto è stato elaborato.</target>       </trans-unit>
        <trans-unit id="2873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> method should be returned.</source>
          <target state="translated">Per le chiavi che non vengono elaborate dal controllo, il risultato della chiamata della classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> (metodo) deve essere restituito.</target>       </trans-unit>
        <trans-unit id="2874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">Controlli raramente, se applicabile, dovrà eseguire l'override di questo metodo.</target>       </trans-unit>
        <trans-unit id="2875" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passato per riferimento, che rappresenta il messaggio della finestra da elaborare.</target>       </trans-unit>
        <trans-unit id="2876" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>Processes a keyboard message.</source>
          <target state="translated">Elabora un messaggio della tastiera.</target>       </trans-unit>
        <trans-unit id="2877" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il messaggio è stato elaborato dal controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>This method is called when a control receives a keyboard message.</source>
          <target state="translated">Questo metodo viene chiamato quando un controllo riceve un messaggio della tastiera.</target>       </trans-unit>
        <trans-unit id="2879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>The method first determines whether the control has a parent; if so, it calls the parent's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method.</source>
          <target state="translated">Il metodo determina innanzitutto se il controllo ha un padre. Se in tal caso, l'elemento padre chiama <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="2880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>If the parent's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method does not process the message then the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A&gt;</ph> method is called to generate the appropriate keyboard events.</source>
          <target state="translated">Se l'elemento padre <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> metodo non elabora il messaggio il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A&gt;</ph> metodo viene chiamato per generare gli eventi della tastiera appropriata.</target>       </trans-unit>
        <trans-unit id="2881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">`m`</ph> parameter contains the window message that must be processed.</source>
          <target state="translated">Il <ph id="ph1">`m`</ph> parametro contiene la finestra di messaggio che deve essere elaborato.</target>       </trans-unit>
        <trans-unit id="2882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>Possible values for the <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</source>
          <target state="translated">I valori possibili per il <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> proprietà sono WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP e WM_SYSKEYUP.</target>       </trans-unit>
        <trans-unit id="2883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">per tutte le finestre per classi che ereditano per chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="2884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /&gt;</ph> method, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /&gt;</ph> metodo deve restituire un controllo <ph id="ph2">&lt;see langword="true" /&gt;</ph> per indicare che il tasto è stato elaborato.</target>       </trans-unit>
        <trans-unit id="2886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>For keys that are not processed by the control, the result of the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> should be returned.</source>
          <target state="translated">Per le chiavi che non vengono elaborate dal controllo, il risultato della classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> deve essere restituito.</target>       </trans-unit>
        <trans-unit id="2887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">Controlli raramente, se applicabile, dovrà eseguire l'override di questo metodo.</target>       </trans-unit>
        <trans-unit id="2888" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passato per riferimento, che rappresenta il messaggio della finestra da elaborare.</target>       </trans-unit>
        <trans-unit id="2889" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Previews a keyboard message.</source>
          <target state="translated">Visualizza in anteprima un messaggio della tastiera.</target>       </trans-unit>
        <trans-unit id="2890" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il messaggio è stato elaborato dal controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>This method is called by a child control when the child control receives a keyboard message.</source>
          <target state="translated">Questo metodo viene chiamato da un controllo figlio quando il controllo figlio riceve un messaggio della tastiera.</target>       </trans-unit>
        <trans-unit id="2892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The child control calls this method before generating any keyboard events for the message.</source>
          <target state="translated">Il controllo figlio chiama questo metodo prima di generare tutti gli eventi della tastiera per il messaggio.</target>       </trans-unit>
        <trans-unit id="2893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the child control considers the message processed and does not generate any keyboard events.</source>
          <target state="translated">Se questo metodo restituisce <ph id="ph1">`true`</ph>, il controllo figlio considera elaborato il messaggio e non genera alcun evento della tastiera.</target>       </trans-unit>
        <trans-unit id="2894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">`m`</ph> parameter contains the window message to preview.</source>
          <target state="translated">Il <ph id="ph1">`m`</ph> parametro contiene il messaggio della finestra per visualizzare in anteprima.</target>       </trans-unit>
        <trans-unit id="2895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Possible values for the <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</source>
          <target state="translated">I valori possibili per il <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> proprietà sono WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP e WM_SYSKEYUP.</target>       </trans-unit>
        <trans-unit id="2896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method simply sends the character to the parent's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method, or returns <ph id="ph3">`false`</ph> if the control has no parent.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> metodo invia semplicemente il carattere dell'elemento padre <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> metodo oppure restituisce <ph id="ph3">`false`</ph> se il controllo non ha elementi padre.</target>       </trans-unit>
        <trans-unit id="2897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class overrides this method to perform actual processing of dialog keys.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe esegue l'override di questo metodo per eseguire l'elaborazione effettiva di finestre di dialogo.</target>       </trans-unit>
        <trans-unit id="2898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">per tutte le finestre per classi che ereditano per chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="2899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">per il chiamante immediato chiamare codice non gestito.</target>       </trans-unit>
        <trans-unit id="2901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="2902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /&gt;</ph> metodo in una classe derivata, deve restituire un controllo <ph id="ph2">&lt;see langword="true" /&gt;</ph> per indicare che il tasto è stato elaborato.</target>       </trans-unit>
        <trans-unit id="2903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /&gt;</ph> method should be returned.</source>
          <target state="translated">Per le chiavi che non vengono elaborate dal controllo, il risultato della chiamata della classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /&gt;</ph> (metodo) deve essere restituito.</target>       </trans-unit>
        <trans-unit id="2904" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>The character to process.</source>
          <target state="translated">Carattere da elaborare.</target>       </trans-unit>
        <trans-unit id="2905" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>Processes a mnemonic character.</source>
          <target state="translated">Elabora un carattere per il tasto di scelta.</target>       </trans-unit>
        <trans-unit id="2906" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed as a mnemonic by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il carattere è stato elaborato come tasto di scelta dal controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>This method is called to give a control the opportunity to process a mnemonic character.</source>
          <target state="translated">Questo metodo viene chiamato per consentire a un controllo per l'elaborazione di un tasto mnemonico.</target>       </trans-unit>
        <trans-unit id="2908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic.</source>
          <target state="translated">Il metodo deve determinare se il controllo è in uno stato per i tasti di scelta di processo e se il carattere specificato rappresenta un tasto di scelta rapida.</target>       </trans-unit>
        <trans-unit id="2909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>If so, the method should perform the action associated with the mnemonic and return <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Se in tal caso, il metodo deve eseguire l'azione associata con il tasto di scelta e restituire <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="2910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>If not, the method should return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se non, il metodo deve restituire <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="2911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>Implementations of this method often use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> method to determine whether the given character matches a mnemonic in the control's text.</source>
          <target state="translated">Le implementazioni di questo metodo utilizzano spesso la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> metodo per determinare se il carattere specificato corrisponde a un tasto di scelta nel testo del controllo.</target>       </trans-unit>
        <trans-unit id="2912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>For example:</source>
          <target state="translated">Ad esempio:</target>       </trans-unit>
        <trans-unit id="2913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>This default implementation of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> method simply returns <ph id="ph2">`false`</ph> to indicate that the control has no mnemonic.</source>
          <target state="translated">Questa implementazione predefinita del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> metodo restituisce semplicemente <ph id="ph2">`false`</ph> per indicare che il controllo non dispone di alcun tasto di scelta.</target>       </trans-unit>
        <trans-unit id="2914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>The following code example demonstrates an extension of the button class that overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> method to exhibit custom behavior.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come un'estensione della classe di pulsanti che esegue l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> metodo possono presentare un comportamento personalizzato.</target>       </trans-unit>
        <trans-unit id="2915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>The example also demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> properties.</source>
          <target state="translated">Nell'esempio viene inoltre illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="2916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>To run this example paste the following code after a form class, in the same file.</source>
          <target state="translated">Per eseguire questo esempio, incollare il codice seguente dopo una classe del modulo, nello stesso file.</target>       </trans-unit>
        <trans-unit id="2917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>Add a button of type <ph id="ph1">`MnemonicButton`</ph> to the form.</source>
          <target state="translated">Aggiungere un pulsante di tipo <ph id="ph1">`MnemonicButton`</ph> al form.</target>       </trans-unit>
        <trans-unit id="2918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">per tutte le finestre per classi che ereditano per chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="2919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2920" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ProductName">
          <source>Gets the product name of the assembly containing the control.</source>
          <target state="translated">Ottiene il nome del prodotto dell'assembly che contiene il controllo.</target>       </trans-unit>
        <trans-unit id="2921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>The product name of the assembly containing the control.</source>
          <target state="translated">Nome del prodotto dell'assembly che contiene il controllo.</target>       </trans-unit>
        <trans-unit id="2922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> property is a read-only property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> è una proprietà di sola lettura.</target>       </trans-unit>
        <trans-unit id="2923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>To change the value of this property, set the <ph id="ph1">&lt;xref:System.Reflection.AssemblyProductAttribute.Product%2A&gt;</ph> property value of the <ph id="ph2">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph>.</source>
          <target state="translated">Per modificare il valore di questa proprietà, impostare il <ph id="ph1">&lt;xref:System.Reflection.AssemblyProductAttribute.Product%2A&gt;</ph> valore della proprietà di <ph id="ph2">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>The following line of C# code sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> property.</source>
          <target state="translated">La seguente riga del set di codice c# di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="2925" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>It is strongly recommended that you provide the company name, product name, and product version.</source>
          <target state="translated">È consigliabile fornire il nome della società, il nome del prodotto e versione del prodotto.</target>       </trans-unit>
        <trans-unit id="2926" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>Providing this information enables the use of Windows Forms features such as <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType&gt;</ph> that make it easier to write applications that comply with the "Certified for Windows" program.</source>
          <target state="translated">Queste informazioni consentono l'uso delle funzionalità di Windows Form, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType&gt;</ph> che semplificano la creazione di applicazioni compatibili con il programma "Certified for Windows".</target>       </trans-unit>
        <trans-unit id="2927" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>For more information about the Certified for Windows program, see <ph id="ph1">http://msdn.microsoft.com/certification</ph>.</source>
          <target state="translated">Per ulteriori informazioni sul programma Certified for Windows, vedere <ph id="ph1">http://msdn.microsoft.com/certification</ph>.</target>       </trans-unit>
        <trans-unit id="2928" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>The following code example displays information about the application in a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contained by a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente consente di visualizzare informazioni sull'applicazione in un <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contenuti in un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2929" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> have been set.</source>
          <target state="translated">Questo esempio si presuppone che il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> sono state impostate.</target>       </trans-unit>
        <trans-unit id="2930" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>Gets the version of the assembly containing the control.</source>
          <target state="translated">Ottiene la versione dell'assembly che contiene il controllo.</target>       </trans-unit>
        <trans-unit id="2931" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>The file version of the assembly containing the control.</source>
          <target state="translated">Versione del file dell'assembly che contiene il controllo.</target>       </trans-unit>
        <trans-unit id="2932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> property is a read-only property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> è una proprietà di sola lettura.</target>       </trans-unit>
        <trans-unit id="2933" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>To change the value of this property, set the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute.Version%2A&gt;</ph> property value of the <ph id="ph2">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph>.</source>
          <target state="translated">Per modificare il valore di questa proprietà, impostare il <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute.Version%2A&gt;</ph> valore della proprietà di <ph id="ph2">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2934" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>The following line of C# code sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> property.</source>
          <target state="translated">La seguente riga del set di codice c# di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="2935" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>It is strongly recommended that you provide the company name, product name, and product version.</source>
          <target state="translated">È consigliabile fornire il nome della società, il nome del prodotto e versione del prodotto.</target>       </trans-unit>
        <trans-unit id="2936" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>Providing this information enables the use of Windows Forms features such as <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType&gt;</ph> that make it easier to write applications that comply with the "Certified for Windows" program.</source>
          <target state="translated">Queste informazioni consentono l'uso delle funzionalità di Windows Form, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType&gt;</ph> che semplificano la creazione di applicazioni compatibili con il programma "Certified for Windows".</target>       </trans-unit>
        <trans-unit id="2937" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>For more information about the Certified for Windows program, see <ph id="ph1">http://msdn.microsoft.com/certification</ph>.</source>
          <target state="translated">Per ulteriori informazioni sul programma Certified for Windows, vedere <ph id="ph1">http://msdn.microsoft.com/certification</ph>.</target>       </trans-unit>
        <trans-unit id="2938" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>The following code example displays information about the application in a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contained by a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente consente di visualizzare informazioni sull'applicazione in un <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contenuti in un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2939" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> have been set.</source>
          <target state="translated">Questo esempio si presuppone che il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> sono state impostate.</target>       </trans-unit>
        <trans-unit id="2940" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.PropagatingImeMode">
          <source>Gets an object that represents a propagating IME mode.</source>
          <target state="translated">Ottiene un oggetto che rappresenta una modalità IME di propagazione.</target>       </trans-unit>
        <trans-unit id="2941" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.PropagatingImeMode">
          <source>An object that represents a propagating IME mode.</source>
          <target state="translated">Oggetto che rappresenta una modalità IME di propagazione.</target>       </trans-unit>
        <trans-unit id="2942" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>Occurs when <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> is providing help to accessibility applications.</source>
          <target state="translated">Si verifica quando l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> fornisce la Guida per le applicazioni di accessibilità.</target>       </trans-unit>
        <trans-unit id="2943" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>You should use the <ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> class to enable users to invoke help on your accessible object by pressing the F1 key.</source>
          <target state="translated">È consigliabile utilizzare la <ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> classe per consentire agli utenti di richiamare la Guida relativa all'oggetto accessibile premendo il tasto F1.</target>       </trans-unit>
        <trans-unit id="2944" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> provides you with complete information in the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs&gt;</ph>.</source>
          <target state="translated">Utilizzo di <ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> vengono fornite informazioni complete nel <ph id="ph2">&lt;xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2945" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2946" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>The following code example demonstrates the creation of an accessibility-aware chart control, using the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes to expose accessible information.</source>
          <target state="translated">Esempio di codice seguente viene illustrata la creazione di un grafico di supporto per l'accessibilità controllare, tramite il <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> alle classi di esporre le informazioni accessibili.</target>       </trans-unit>
        <trans-unit id="2947" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>The control plots two curves along with a legend.</source>
          <target state="translated">Il controllo traccia due curve e una legenda.</target>       </trans-unit>
        <trans-unit id="2948" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>The <ph id="ph1">`ChartControlAccessibleObject`</ph> class, which derives from <ph id="ph2">`ControlAccessibleObject`</ph>, is used in the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method to provide custom accessible information for the chart control.</source>
          <target state="translated">Il <ph id="ph1">`ChartControlAccessibleObject`</ph> classe che deriva da <ph id="ph2">`ControlAccessibleObject`</ph>, viene utilizzata la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> metodo per fornire informazioni accessibili personalizzate per il controllo chart.</target>       </trans-unit>
        <trans-unit id="2949" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>Since the chart legend is not an actual <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</source>
          <target state="translated">Poiché la legenda del grafico non è una vera e propria <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -controllo di base, ma viene disegnata dal controllo chart, non non contiene informazioni accessibili.</target>       </trans-unit>
        <trans-unit id="2950" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>Because of this, the <ph id="ph1">`ChartControlAccessibleObject`</ph> class overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> method to return the <ph id="ph3">`CurveLegendAccessibleObject`</ph> that represents accessible information for each part of the legend.</source>
          <target state="translated">Per questo motivo, il <ph id="ph1">`ChartControlAccessibleObject`</ph> classe esegue l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> per restituire il <ph id="ph3">`CurveLegendAccessibleObject`</ph> che rappresenta le informazioni accessibili per ogni parte della legenda.</target>       </trans-unit>
        <trans-unit id="2951" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>When an accessible-aware application uses this control, the control can provide the necessary accessible information.</source>
          <target state="translated">Quando viene utilizzato da un'applicazione accessibile abilitata, il controllo può fornire le informazioni accessibili necessarie.</target>       </trans-unit>
        <trans-unit id="2952" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>This code excerpt demonstrates handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryAccessibilityHelp&gt;</ph> event.</source>
          <target state="translated">Questo estratto di codice viene illustrata la gestione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryAccessibilityHelp&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="2953" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class overview for the complete code example.</source>
          <target state="translated">Vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> Cenni preliminari sulla classe per l'esempio di codice completo.</target>       </trans-unit>
        <trans-unit id="2954" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</source>
          <target state="translated">Si verifica durante un'operazione di trascinamento della selezione e consente all'origine del trascinamento di determinare se l'operazione deve essere annullata.</target>       </trans-unit>
        <trans-unit id="2955" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento viene generato quando viene apportata una modifica nello stato pulsante layout di tastiera o mouse durante un'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="2956" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento consente all'origine del trascinamento di determinare se l'operazione di trascinamento e rilascio deve essere annullata.</target>       </trans-unit>
        <trans-unit id="2957" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">Di seguito vengono illustrate le modalità e le circostanze in cui vengono generati eventi relativi a operazioni di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="2958" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo determina il controllo sotto la posizione corrente del cursore.</target>       </trans-unit>
        <trans-unit id="2959" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">Viene quindi verificato se il controllo è un obiettivo di rilascio valido.</target>       </trans-unit>
        <trans-unit id="2960" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">Se il controllo è un obiettivo di rilascio valido, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> evento viene generato con l'effetto di trascinamento e rilascio specificato.</target>       </trans-unit>
        <trans-unit id="2961" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Per un elenco degli effetti di trascinamento, vedere l'enumerazione <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2962" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">Viene tenuta traccia delle modifiche apportate alla posizione del cursore del mouse, allo stato della tastiera e allo stato dei pulsanti del mouse.</target>       </trans-unit>
        <trans-unit id="2963" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se l'utente si sposta al di fuori di una finestra, verrà generato un evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2964" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">Se il mouse viene spostato su un altro controllo, verrà generato l'evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> per tale controllo.</target>       </trans-unit>
        <trans-unit id="2965" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">Se il mouse viene spostato ma sempre all'interno dello stesso controllo, verrà generato l'evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2966" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">Se si verifica un cambiamento nello stato pulsante mouse o tastiera, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento viene generato e verrà determinato se continuare l'operazione di trascinamento, rilasciare i dati, o per annullare l'operazione in base al valore del <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> proprietà dell'evento <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2967" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Continue`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> evento viene generato per continuare l'operazione e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> viene generato l'evento con il nuovo effetto, consentire l'impostazione della risposta visiva appropriata.</target>       </trans-unit>
        <trans-unit id="2968" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Per un elenco degli effetti di trascinamento validi, vedere l'enumerazione <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2969" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> gli eventi vengono abbinati in modo che, mentre il mouse viene spostato sulla destinazione di trascinamento, l'utente riceva le informazioni più aggiornate sulla posizione del mouse.</target>       </trans-unit>
        <trans-unit id="2970" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Drop`</ph>, il valore dell'effetto di rilascio viene restituito all'origine, in modo che l'applicazione di origine può eseguire l'operazione appropriata sui dati di origine, ad esempio il taglio dei dati se l'operazione è un'operazione di spostamento.</target>       </trans-unit>
        <trans-unit id="2971" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> è <ph id="ph2">`Cancel`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="2972" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event sets <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> to <ph id="ph3">`Cancel`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> if the ESC key was pressed and sets <ph id="ph5">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> to <ph id="ph6">`Drop`</ph> in <ph id="ph7">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> if the left, middle, or right mouse button is pressed.</source>
          <target state="translated">Per impostazione predefinita, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> set di eventi <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> a <ph id="ph3">`Cancel`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> se viene premuto il tasto ESC e imposta <ph id="ph5">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> a <ph id="ph6">`Drop`</ph> in <ph id="ph7">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> se viene premuto il pulsante sinistro, centrale o destro del mouse.</target>       </trans-unit>
        <trans-unit id="2973" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2974" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">Esempio di codice seguente viene illustrata un'operazione di trascinamento e rilascio tra due <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controlli.</target>       </trans-unit>
        <trans-unit id="2975" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">Nell'esempio viene chiamato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo quando si avvia l'azione di trascinamento.</target>       </trans-unit>
        <trans-unit id="2976" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">L'azione di trascinamento viene avviata se il mouse viene spostato più <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> dalla posizione del mouse durante la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="2977" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il <ph id="ph2">`MouseDown`</ph> evento.</target>       </trans-unit>
        <trans-unit id="2978" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio.</target>       </trans-unit>
        <trans-unit id="2979" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The example requires that two cursor files,<ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">Nell'esempio si presuppone che due file cursore,<ph id="ph1">`3dwarro.cur`</ph> e <ph id="ph2">`3dwno.cur`</ph>, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente.</target>       </trans-unit>
        <trans-unit id="2980" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">I cursori personalizzati da utilizzare se il <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> è selezionata.</target>       </trans-unit>
        <trans-unit id="2981" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">I cursori personalizzati vengono impostati <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="2982" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">Lo stato della tastiera viene valutato nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> il gestore eventi per il diritto <ph id="ph2">`ListBox`</ph>, per determinare l'operazione di trascinamento in base allo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT.</target>       </trans-unit>
        <trans-unit id="2983" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">Il percorso nel <ph id="ph1">`ListBox`</ph> in cui si verificherà il rilascio è determinato anche durante la <ph id="ph2">`DragOver`</ph> evento.</target>       </trans-unit>
        <trans-unit id="2984" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">Se i dati da eliminare non sono un <ph id="ph1">`String`</ph>, quindi il <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> è impostato su <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2985" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">Infine, lo stato del trascinamento viene visualizzato nel <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2986" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">I dati da eliminare per il diritto <ph id="ph1">`ListBox`</ph> viene determinato nel <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> gestore dell'evento e il <ph id="ph3">`String`</ph> valore viene aggiunto nella posizione appropriata all'interno di <ph id="ph4">`ListBox`</ph>.</target>       </trans-unit>
        <trans-unit id="2987" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="2988" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event.</source>
          <target state="translated">Questo estratto di codice viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="2989" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">Vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> metodo per l'esempio di codice completo.</target>       </trans-unit>
        <trans-unit id="2990" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)">
          <source>The event to raise.</source>
          <target state="translated">Evento da generare.</target>       </trans-unit>
        <trans-unit id="2991" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2992" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)">
          <source>Raises the appropriate drag event.</source>
          <target state="translated">Genera l'evento di trascinamento appropriato.</target>       </trans-unit>
        <trans-unit id="2993" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>The event to raise.</source>
          <target state="translated">Evento da generare.</target>       </trans-unit>
        <trans-unit id="2994" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2995" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>Raises the appropriate key event.</source>
          <target state="translated">Genera l'evento del tasto appropriato.</target>       </trans-unit>
        <trans-unit id="2996" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)">
          <source>The event to raise.</source>
          <target state="translated">Evento da generare.</target>       </trans-unit>
        <trans-unit id="2997" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="2998" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)">
          <source>Raises the appropriate mouse event.</source>
          <target state="translated">Genera l'evento del mouse appropriato.</target>       </trans-unit>
        <trans-unit id="2999" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)">
          <source>The event to raise.</source>
          <target state="translated">Evento da generare.</target>       </trans-unit>
        <trans-unit id="3000" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="3001" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)">
          <source>Raises the appropriate paint event.</source>
          <target state="translated">Genera l'evento di disegno appropriato.</target>       </trans-unit>
        <trans-unit id="3002" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RecreateHandle">
          <source>Forces the re-creation of the handle for the control.</source>
          <target state="translated">Determina la creazione di un nuovo handle per il controllo.</target>       </trans-unit>
        <trans-unit id="3003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RecreateHandle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method is called whenever parameters are needed for a new control, but using a call from <ph id="ph2">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> is insufficient.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> metodo viene chiamato ogni volta che i parametri sono necessari per un nuovo controllo, ma tramite una chiamata da <ph id="ph2">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph> a <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> è insufficiente.</target>       </trans-unit>
        <trans-unit id="3004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RecreateHandle">
          <source>This method also calls <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DestroyHandle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> and sets <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph> to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Questo metodo chiama anche <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DestroyHandle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> e imposta <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph> a <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="3005" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.RecreatingHandle">
          <source>Gets a value indicating whether the control is currently re-creating its handle.</source>
          <target state="translated">Ottiene un valore che indica se il controllo sta creando nuovamente il relativo punto di controllo.</target>       </trans-unit>
        <trans-unit id="3006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RecreatingHandle">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is currently re-creating its handle; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo sta creando nuovamente il relativo punto di controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RecreatingHandle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method is still running on the control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph> restituisce proprietà <ph id="ph2">`true`</ph> se il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> metodo è ancora in esecuzione sul controllo.</target>       </trans-unit>
        <trans-unit id="3008" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)">
          <source>The screen coordinate <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> to convert.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> delle coordinate dello schermo da convertire.</target>       </trans-unit>
        <trans-unit id="3009" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)">
          <source>Computes the size and location of the specified screen rectangle in client coordinates.</source>
          <target state="translated">Calcola le dimensioni e la posizione del rettangolo dello schermo specificato nelle coordinate client.</target>       </trans-unit>
        <trans-unit id="3010" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the converted <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>, <ph id="ph3">&lt;paramref name="r" /&gt;</ph>, in client coordinates.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta l'oggetto <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> convertito, <ph id="ph3">&lt;paramref name="r" /&gt;</ph>, nelle coordinate client.</target>       </trans-unit>
        <trans-unit id="3011" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>The client coordinate <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> to convert.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> delle coordinate client da convertire.</target>       </trans-unit>
        <trans-unit id="3012" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>Computes the size and location of the specified client rectangle in screen coordinates.</source>
          <target state="translated">Calcola le dimensioni e la posizione del rettangolo client specificato nelle coordinate dello schermo.</target>       </trans-unit>
        <trans-unit id="3013" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the converted <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, in screen coordinates.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta l'oggetto <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> convertito, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, nelle coordinate dello schermo.</target>       </trans-unit>
        <trans-unit id="3014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> members.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> membri.</target>       </trans-unit>
        <trans-unit id="3015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>To run the example, paste the following code in a form called <bpt id="p1">**</bpt>Form1<ept id="p1">**</ept> containing several controls.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente in un form denominato <bpt id="p1">**</bpt>Form1<ept id="p1">**</ept> contenente diversi controlli.</target>       </trans-unit>
        <trans-unit id="3016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> events are connected to the event handlers defined in the example.</source>
          <target state="translated">Questo esempio si presuppone che il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> gli eventi siano connessi ai gestori di eventi definiti nell'esempio.</target>       </trans-unit>
        <trans-unit id="3017" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> representing the handle of the control to reflect the message to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> che rappresenta il punto di controllo del controllo in cui riprodurre il messaggio.</target>       </trans-unit>
        <trans-unit id="3018" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> representing the Windows message to reflect.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> che rappresenta il messaggio di Windows da riprodurre.</target>       </trans-unit>
        <trans-unit id="3019" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>Reflects the specified message to the control that is bound to the specified handle.</source>
          <target state="translated">Riproduce il messaggio specificato nel controllo associato al punto di controllo specificato.</target>       </trans-unit>
        <trans-unit id="3020" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was reflected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il messaggio è stato riprodotto; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> method is an infrastructure method and typically should not be called from your code.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> metodo è un metodo di infrastruttura e che non deve essere chiamato dal codice.</target>       </trans-unit>
        <trans-unit id="3022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>If the <ph id="ph1">`hWnd`</ph> parameter does not represent a valid control, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> method returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se il <ph id="ph1">`hWnd`</ph> parametro non rappresenta un controllo valido, il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="3023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>Because Windows messages are returned to the top-level window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> method is used to propagate the return message to the control that sent the message.</source>
          <target state="translated">Poiché i messaggi di Windows vengono restituiti alla finestra di primo livello, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> metodo viene utilizzato per trasmettere il messaggio restituito al controllo che ha inviato il messaggio.</target>       </trans-unit>
        <trans-unit id="3024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>for all windows to call this method.</source>
          <target state="translated">per tutte le finestre di chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="3025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3026" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Refresh">
          <source>Forces the control to invalidate its client area and immediately redraw itself and any child controls.</source>
          <target state="translated">Determina l'invalidazione dell'area client del controllo e il nuovo disegno di quest'ultimo e degli eventuali controlli figlio.</target>       </trans-unit>
        <trans-unit id="3027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Refresh">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.Refresh" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.Refresh" /&gt;</ph> method so the control and its child controls are invalidated and redrawn.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.Refresh" /&gt;</ph> in una classe derivata, assicurarsi di chiamare la classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.Refresh" /&gt;</ph> metodo in modo che il controllo e i relativi controlli figlio vengono invalidate e ridisegnati.</target>       </trans-unit>
        <trans-unit id="3028" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Region">
          <source>Gets or sets the window region associated with the control.</source>
          <target state="translated">Ottiene o imposta l'area della finestra associata al controllo.</target>       </trans-unit>
        <trans-unit id="3029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The window <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> associated with the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> della finestra associato al controllo.</target>       </trans-unit>
        <trans-unit id="3030" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The window region is a collection of pixels within the window where the operating system permits drawing.</source>
          <target state="translated">L'area della finestra è una raccolta di pixel all'interno della finestra in cui il sistema operativo consente il disegno.</target>       </trans-unit>
        <trans-unit id="3031" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The operating system does not display any portion of a window that lies outside of the window region.</source>
          <target state="translated">Il sistema operativo non viene visualizzata una parte di una finestra che si trova di fuori dell'area della finestra.</target>       </trans-unit>
        <trans-unit id="3032" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.</source>
          <target state="translated">Le coordinate dell'area del controllo sono rispetto all'angolo superiore sinistro del controllo, non l'area client del controllo.</target>       </trans-unit>
        <trans-unit id="3033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The collection of pixels contained with the region can be noncontiguous.</source>
          <target state="translated">La raccolta di contenuto nell'area di pixel può essere non contigua.</target>       </trans-unit>
        <trans-unit id="3034" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Region%2A&gt;</ph> property by creating a round button.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Region%2A&gt;</ph> proprietà mediante la creazione di un pulsante circolare.</target>       </trans-unit>
        <trans-unit id="3035" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>To run the example, paste the following code in a form containing a button called <ph id="ph1">`roundButton`</ph>.</source>
          <target state="translated">Per eseguire l'esempio, incollare il codice seguente in un form contenente un pulsante chiamato <ph id="ph1">`roundButton`</ph>.</target>       </trans-unit>
        <trans-unit id="3036" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event is connected to the event handler defined in the example.</source>
          <target state="translated">Questo esempio si presuppone che il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento sia connesso al gestore dell'evento definito nell'esempio.</target>       </trans-unit>
        <trans-unit id="3037" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>for all windows to set this property value.</source>
          <target state="translated">per tutte le finestre impostare il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="3038" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3039" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Region" /&gt;</ph> property changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Region" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="3040" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3041" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="3042" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RegionChanged&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RegionChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3043" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="3044" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3045" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3046" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RegionChanged&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RegionChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3047" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.RenderRightToLeft">
          <source>This property is now obsolete.</source>
          <target state="translated">Questa proprietà è ora obsoleta.</target>       </trans-unit>
        <trans-unit id="3048" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RenderRightToLeft">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is rendered from right to left; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se viene eseguito il rendering del controllo da destra a sinistra; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3049" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RenderRightToLeft">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3050" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)">
          <source>The DPI value prior to the change.</source>
          <target state="translated">Valore DPI prima della modifica.</target>       </trans-unit>
        <trans-unit id="3051" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)">
          <source>The DPI value after the change.</source>
          <target state="translated">Valore DPI dopo la modifica.</target>       </trans-unit>
        <trans-unit id="3052" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)">
          <source>Provides constants for rescaling the control when a DPI change occurs.</source>
          <target state="translated">Fornisce le costanti per il ridimensionamento del controllo quando si verifica una modifica del valore DPI.</target>       </trans-unit>
        <trans-unit id="3053" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetBackColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property to its default value.</source>
          <target state="translated">Reimposta il valore predefinito della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetBackColor">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Questo metodo non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="3055" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetBindings">
          <source>Causes a control bound to the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingSource" /&gt;</ph> to reread all the items in the list and refresh their displayed values.</source>
          <target state="translated">Fa sì che un controllo associato all'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingSource" /&gt;</ph> esegua la rilettura di tutti gli elementi dell'elenco e aggiorni i relativi valori visualizzati.</target>       </trans-unit>
        <trans-unit id="3056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetBindings">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Questo metodo non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="3057" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetCursor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property to its default value.</source>
          <target state="translated">Reimposta il valore predefinito della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetCursor">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Questo metodo non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="3059" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetFont">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property to its default value.</source>
          <target state="translated">Reimposta il valore predefinito della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetFont">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Questo metodo non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="3061" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetForeColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property to its default value.</source>
          <target state="translated">Reimposta il valore predefinito della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetForeColor">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Questo metodo non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="3063" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetImeMode">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> property to its default value.</source>
          <target state="translated">Reimposta il valore predefinito della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetImeMode">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Questo metodo non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="3065" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetMouseEventArgs">
          <source>Resets the control to handle the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph> event.</source>
          <target state="translated">Reimposta il controllo per gestire l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3066" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetRightToLeft">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property to its default value.</source>
          <target state="translated">Reimposta il valore predefinito della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetRightToLeft">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Questo metodo non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="3068" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetText">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property to its default value.</source>
          <target state="translated">Reimposta il valore predefinito della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetText">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
          <target state="translated">Utilizzare questo metodo in genere se si crea una finestra di progettazione per il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> o la creazione di controllo personalizzato che includa il <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3070" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Resize">
          <source>Occurs when the control is resized.</source>
          <target state="translated">Si verifica quando il controllo viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="3071" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>To determine the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the resized control, you can cast the <ph id="ph2">`sender`</ph> parameter of the registered <ph id="ph3">&lt;xref:System.Windows.Forms.ControlEventHandler&gt;</ph> method  to a <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> and get its <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property (or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> properties individually).</source>
          <target state="translated">Per determinare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> del controllo ridimensionato, è possibile eseguire il cast di <ph id="ph2">`sender`</ph> parametro di tipo registrato <ph id="ph3">&lt;xref:System.Windows.Forms.ControlEventHandler&gt;</ph> metodo da un <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> e ottenere relativo <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> proprietà (o <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> e <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> proprietà singolarmente).</target>       </trans-unit>
        <trans-unit id="3072" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>To handle custom layouts, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event instead of the Resize event.</source>
          <target state="translated">Per gestire layout personalizzati, utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> evento anziché l'evento di ridimensionamento.</target>       </trans-unit>
        <trans-unit id="3073" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised in response to a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event, but also in response to other changes that affect the layout of the control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> evento viene generato in risposta a un <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> evento, ma anche in risposta ad altre modifiche che hanno effetto sul layout del controllo.</target>       </trans-unit>
        <trans-unit id="3074" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3075" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>The following code example handles the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Gli handle di esempio di codice seguente il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> evento di un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3076" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>When the form is resized, the event handler ensures that the form stays square (its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> remain equal).</source>
          <target state="translated">Quando il form viene ridimensionato, il gestore eventi assicura che il modulo resta quadrato (il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> rimangono uguali).</target>       </trans-unit>
        <trans-unit id="3077" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>To run this example, make sure and associate this event-handling method with the form’s <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event.</source>
          <target state="translated">Per eseguire questo esempio, verificare e associare questo metodo di gestione degli eventi con il modulo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3078" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ResizeRedraw">
          <source>Gets or sets a value indicating whether the control redraws itself when resized.</source>
          <target state="translated">Ottiene o imposta un valore che indica se il controllo viene ridisegnato quando è ridimensionato.</target>       </trans-unit>
        <trans-unit id="3079" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ResizeRedraw">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control redraws itself when resized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo viene ridisegnato quando è ridimensionato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3080" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ResizeRedraw">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResizeRedraw%2A&gt;</ph> property value is equivalent to the return value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> method when passing in the <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType&gt;</ph> value as a parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResizeRedraw%2A&gt;</ph> valore della proprietà è equivalente al valore restituito del <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> metodo quando si passa il <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType&gt;</ph> come parametro un valore.</target>       </trans-unit>
        <trans-unit id="3081" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Resumes the usual layout logic.</source>
          <target state="translated">Riprende la consueta logica di layout.</target>       </trans-unit>
        <trans-unit id="3082" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>Resumes usual layout logic.</source>
          <target state="translated">Riprende la consueta logica di layout.</target>       </trans-unit>
        <trans-unit id="3083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method forces an immediate layout if there are any pending layout requests.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> metodo impone un layout immediato se vi sono in attesa di richieste di layout.</target>       </trans-unit>
        <trans-unit id="3084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods are used in tandem to suppress multiple <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events while you adjust multiple attributes of the control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> vengono utilizzati insieme per eliminare più <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> eventi durante la regolazione di più attributi del controllo.</target>       </trans-unit>
        <trans-unit id="3085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>For example, you would typically call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method, then set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties of the control, and then call the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method to enable the changes to take effect.</source>
          <target state="translated">Ad esempio, in genere chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> (metodo), quindi impostare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> le proprietà del controllo e quindi chiamare il <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> metodo per consentire le modifiche abbiano effetto.</target>       </trans-unit>
        <trans-unit id="3086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>There must be no pending calls to <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> for <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> to be successfully called.</source>
          <target state="translated">Devono essere chiamate in sospeso per <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> per <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> sia chiamato correttamente.</target>       </trans-unit>
        <trans-unit id="3087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>The following code example adds two buttons to a form.</source>
          <target state="translated">Esempio di codice seguente aggiunge due pulsanti a un form.</target>       </trans-unit>
        <trans-unit id="3088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>The example transactions the addition of the buttons by using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods.</source>
          <target state="translated">Nell'esempio viene eseguita l'aggiunta dei pulsanti utilizzando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="3089" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to execute pending layout requests; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per eseguire le richieste di layout in attesa; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3090" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.</source>
          <target state="translated">Riprende la consueta logica di layout, imponendo, eventualmente, l'esecuzione di un layout immediato delle richieste di layout in sospeso.</target>       </trans-unit>
        <trans-unit id="3091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method forces an immediate layout if there are any pending layout requests.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> metodo impone un layout immediato se vi sono in attesa di richieste di layout.</target>       </trans-unit>
        <trans-unit id="3092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>When the <ph id="ph1">`performLayout`</ph> parameter is set to <ph id="ph2">`true`</ph>, an immediate layout occurs if there are any pending layout requests.</source>
          <target state="translated">Quando il <ph id="ph1">`performLayout`</ph> parametro è impostato su <ph id="ph2">`true`</ph>, si verifica un layout immediato se vi sono in attesa di richieste di layout.</target>       </trans-unit>
        <trans-unit id="3093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods are used in tandem to suppress multiple <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events while you adjust multiple attributes of the control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> vengono utilizzati insieme per eliminare più <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> eventi durante la regolazione di più attributi del controllo.</target>       </trans-unit>
        <trans-unit id="3094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>For example, you would typically call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method, then set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties of the control, and then call the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method to enable the changes to take effect.</source>
          <target state="translated">Ad esempio, in genere chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> (metodo), quindi impostare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> le proprietà del controllo e quindi chiamare il <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> metodo per consentire le modifiche abbiano effetto.</target>       </trans-unit>
        <trans-unit id="3095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>There must be no pending calls to <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> for <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> to be successfully called.</source>
          <target state="translated">Devono essere chiamate in sospeso per <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> per <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> sia chiamato correttamente.</target>       </trans-unit>
        <trans-unit id="3096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>When adding several controls to a parent control, it is recommended that you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method before initializing the controls to be added.</source>
          <target state="translated">Quando si aggiungono più controlli a un controllo padre, è consigliabile chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> metodo prima di inizializzare i controlli da aggiungere.</target>       </trans-unit>
        <trans-unit id="3097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>After adding the controls to the parent control, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method.</source>
          <target state="translated">Dopo l'aggiunta di controlli al controllo padre, chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="3098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>This will increase the performance of applications with many controls.</source>
          <target state="translated">Ciò aumenta le prestazioni delle applicazioni con molti controlli.</target>       </trans-unit>
        <trans-unit id="3099" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Right">
          <source>Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</source>
          <target state="translated">Ottiene la distanza in pixel tra il bordo destro del controllo e il bordo sinistro dell'area client del contenitore.</target>       </trans-unit>
        <trans-unit id="3100" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> representing the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che rappresenta la distanza in pixel tra il bordo destro del controllo e il bordo sinistro dell'area client del contenitore.</target>       </trans-unit>
        <trans-unit id="3101" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property is equal to the sum of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property value and the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> property value.</source>
          <target state="translated">Il valore del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> proprietà è uguale alla somma dei valori di <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> valore della proprietà e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> valore della proprietà.</target>       </trans-unit>
        <trans-unit id="3102" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property is read-only.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> è di sola lettura.</target>       </trans-unit>
        <trans-unit id="3103" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>You can change this property value indirectly by changing the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> properties or calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> methods.</source>
          <target state="translated">È possibile modificare il valore della proprietà indirettamente modificando il valore del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> proprietà o chiamare il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>, o <ph id="ph6">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="3104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">Esempio di codice seguente crea tre <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> i controlli in un form e imposta le dimensioni e posizione utilizzando le varie dimensioni correlate e relative proprietà.</target>       </trans-unit>
        <trans-unit id="3105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che ha una larghezza e l'altezza di almeno 300 pixel.</target>       </trans-unit>
        <trans-unit id="3106" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</source>
          <target state="translated">Ottiene o imposta un valore che indica se gli elementi del controllo sono allineati per supportare le impostazioni locali che prevedono la scrittura da destra a sinistra.</target>       </trans-unit>
        <trans-unit id="3107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.RightToLeft.Inherit" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see cref="F:System.Windows.Forms.RightToLeft.Inherit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> proprietà è una proprietà di ambiente.</target>       </trans-unit>
        <trans-unit id="3110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">Una proprietà di ambiente è una proprietà del controllo che, se non impostato, viene recuperato dal controllo padre.</target>       </trans-unit>
        <trans-unit id="3111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">Ad esempio, un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> avrà lo stesso <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> come padre <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="3112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">Per ulteriori informazioni sulle proprietà di ambiente, vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> classe o <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="3113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> proprietà viene utilizzata per le applicazioni interne in cui la lingua è scritto da destra a sinistra, quale l'ebraico o l'arabo.</target>       </trans-unit>
        <trans-unit id="3114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>When this property is set to <ph id="ph1">&lt;xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType&gt;</ph>, control elements that include text are displayed from right to left.</source>
          <target state="translated">Quando questa proprietà è impostata su <ph id="ph1">&lt;xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType&gt;</ph>, gli elementi di controllo che includono testo vengono visualizzati da destra a sinistra.</target>       </trans-unit>
        <trans-unit id="3115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is changed at run time, only raw text without formatting is preserved.</source>
          <target state="translated">Se il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> proprietà viene modificata in fase di esecuzione, viene mantenuto solo il testo non elaborato senza formattazione.</target>       </trans-unit>
        <trans-unit id="3116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The following are a few examples of how control elements are affected by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType&gt;</ph> :</source>
          <target state="translated">Ecco alcuni esempi di come gli elementi del controllo sono interessati i <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> valore della proprietà <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType&gt;</ph> :</target>       </trans-unit>
        <trans-unit id="3117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>, multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>).</source>
          <target state="translated">Vengono visualizzate barre di scorrimento verticale sul lato sinistro anziché sul lato destro dei controlli scorrevoli (ad esempio, <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>su più righe <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, e <ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="3118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Horizontal scroll bars start with the scroll box (thumb) right-aligned.</source>
          <target state="translated">Barre di scorrimento orizzontale iniziano con la casella di scorrimento (pulsante di scorrimento) allineata a destra.</target>       </trans-unit>
        <trans-unit id="3119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The check box element alignment, controlled by the <ph id="ph1">`CheckAlign`</ph> property, is reversed for <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls.</source>
          <target state="translated">L'allineamento dell'elemento casella di controllo, applicando il <ph id="ph1">`CheckAlign`</ph> proprietà, è invertita per <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controlli.</target>       </trans-unit>
        <trans-unit id="3120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Items in list box, combo box, and up-down controls are right aligned.</source>
          <target state="translated">Gli elementi nella casella di riepilogo, casella combinata e controlli di scorrimento sono allineati a destra.</target>       </trans-unit>
        <trans-unit id="3121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Up and down buttons are left-aligned on <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DomainUpDown&gt;</ph> controls.</source>
          <target state="translated">Pulsanti su e giù sono allineati a sinistra in <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DomainUpDown&gt;</ph> controlli.</target>       </trans-unit>
        <trans-unit id="3122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Menus (<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>) are displayed right-aligned.</source>
          <target state="translated">Menu (<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>) sono allineati a destra.</target>       </trans-unit>
        <trans-unit id="3123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The alignment of toolbar buttons on a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> control or the alignment of text on a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolBarButton&gt;</ph> is not affected by the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property.</source>
          <target state="translated">L'allineamento dei pulsanti della barra degli strumenti in un <ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> controllo o l'allineamento del testo in un <ph id="ph2">&lt;xref:System.Windows.Forms.ToolBarButton&gt;</ph> non è interessata dal <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="3124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> supporta l'allineamento a destra a sinistra; Tuttavia, l'effetto su un controllo ActiveX dipende l'entità a cui l'autore di controllo implementato il supporto per la visualizzazione da destra a sinistra.</target>       </trans-unit>
        <trans-unit id="3125" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The assigned value is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> values.</source>
          <target state="translated">Il valore assegnato non è uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="3127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="3128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Non è necessario eseguire l'override di entrambi i <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> funzioni di accesso il <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> proprietà; è possibile sostituire un solo se necessario.</target>       </trans-unit>
        <trans-unit id="3129" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property value changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="3130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="3131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">Esempio di codice seguente è un gestore eventi che viene eseguita quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valore proprietà viene modificato.</target>       </trans-unit>
        <trans-unit id="3133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe dispone di diversi metodi con il modello di nome <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> che sono generati quando corrispondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> modificato il valore (<bpt id="p3">*</bpt> PropertyName<ept id="p3">*</ept> rappresenta il nome della proprietà corrispondente).</target>       </trans-unit>
        <trans-unit id="3134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="3135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="3136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che contiene un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3137" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Converts the current alignment to the appropriate alignment to support right-to-left text.</source>
          <target state="translated">Converte l'allineamento corrente nell'allineamento appropriato per il supporto di testo con scrittura da destra a sinistra.</target>       </trans-unit>
        <trans-unit id="3138" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3139" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">Converte l'oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> specificato nell'oggetto <ph id="ph2">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> appropriato per il supporto di testo con scrittura da destra a sinistra.</target>       </trans-unit>
        <trans-unit id="3140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> proprietà di <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> è impostato su <ph id="ph3">`No`</ph>, il valore restituito è uguale al <ph id="ph4">`align`</ph> parametro passato.</target>       </trans-unit>
        <trans-unit id="3142" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">Converte l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> specificato nell'oggetto <ph id="ph2">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> appropriato per il supporto di testo con scrittura da destra a sinistra.</target>       </trans-unit>
        <trans-unit id="3144" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> proprietà di <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> è impostato su <ph id="ph3">`No`</ph>, il valore restituito è uguale al <ph id="ph4">`align`</ph> parametro passato.</target>       </trans-unit>
        <trans-unit id="3146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">Converte l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> specificato nell'oggetto <ph id="ph2">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> appropriato per il supporto di testo con scrittura da destra a sinistra.</target>       </trans-unit>
        <trans-unit id="3148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> proprietà di <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> è impostato su <ph id="ph3">`No`</ph>, il valore restituito è uguale al <ph id="ph4">`align`</ph> parametro passato.</target>       </trans-unit>
        <trans-unit id="3150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">Converte l'oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> specificato nell'oggetto <ph id="ph2">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> appropriato per il supporto di testo con scrittura da destra a sinistra.</target>       </trans-unit>
        <trans-unit id="3152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> proprietà di <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> è impostato su <ph id="ph3">`No`</ph>, il valore restituito è uguale al <ph id="ph4">`align`</ph> parametro passato.</target>       </trans-unit>
        <trans-unit id="3154" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">Converte l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> specificato nell'oggetto <ph id="ph2">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> appropriato per il supporto di testo con scrittura da destra a sinistra.</target>       </trans-unit>
        <trans-unit id="3156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> proprietà di <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> è impostato su <ph id="ph3">`No`</ph>, il valore restituito è uguale al <ph id="ph4">`align`</ph> parametro passato.</target>       </trans-unit>
        <trans-unit id="3158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">Converte l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> specificato nell'oggetto <ph id="ph2">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> appropriato per il supporto di testo con scrittura da destra a sinistra.</target>       </trans-unit>
        <trans-unit id="3160" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> proprietà di <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> è impostato su <ph id="ph3">`No`</ph>, il valore restituito è uguale al <ph id="ph4">`align`</ph> parametro passato.</target>       </trans-unit>
        <trans-unit id="3162" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Scales the control and any child controls.</source>
          <target state="translated">Scala il controllo e degli eventuali controlli figlio.</target>       </trans-unit>
        <trans-unit id="3163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> containing the horizontal and vertical scaling factors.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> contenente i fattori di scala orizzontale e verticale.</target>       </trans-unit>
        <trans-unit id="3164" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>Scales the control and all child controls by the specified scaling factor.</source>
          <target state="translated">Ridimensiona il controllo e tutti i relativi controlli figlio in base al fattore di scala specificato.</target>       </trans-unit>
        <trans-unit id="3165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph> method scales the control by the specified scaling <ph id="ph2">`factor`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph> metodo ridimensiona il controllo per la scala specificato <ph id="ph2">`factor`</ph>.</target>       </trans-unit>
        <trans-unit id="3166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>It also recursively scales all child controls if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">È inoltre Ridimensiona tutti i controlli figlio in modo ricorsivo se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> proprietà <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="3167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>Internally, this method calls <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> to scale each control.</source>
          <target state="translated">Internamente, questo metodo chiama <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> per ridimensionare ogni controllo.</target>       </trans-unit>
        <trans-unit id="3168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single)">
          <source>The ratio to use for scaling.</source>
          <target state="translated">Il rapporto da usare per l'adattamento in scala.</target>       </trans-unit>
        <trans-unit id="3169" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single)">
          <source>Scales the control and any child controls.</source>
          <target state="translated">Scala il controllo e degli eventuali controlli figlio.</target>       </trans-unit>
        <trans-unit id="3170" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)">
          <source>The horizontal scaling factor.</source>
          <target state="translated">Fattore di scala orizzontale.</target>       </trans-unit>
        <trans-unit id="3171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)">
          <source>The vertical scaling factor.</source>
          <target state="translated">Fattore di scala verticale.</target>       </trans-unit>
        <trans-unit id="3172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)">
          <source>Scales the entire control and any child controls.</source>
          <target state="translated">Scala l'intero controllo ed eventuali controlli figlio.</target>       </trans-unit>
        <trans-unit id="3173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)">
          <source>The bitmap to scale.</source>
          <target state="translated">Bitmap da ridimensionare.</target>       </trans-unit>
        <trans-unit id="3174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)">
          <source>Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.</source>
          <target state="translated">Ridimensiona un valore di bitmap logica in base al valore unitario del dispositivo equivalente quando si verifica una modifica del valore DPI.</target>       </trans-unit>
        <trans-unit id="3175" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>Gets a value that determines the scaling of child controls.</source>
          <target state="translated">Ottiene un valore che determina il ridimensionamento dei controlli figlio.</target>       </trans-unit>
        <trans-unit id="3176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if child controls will be scaled when the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /&gt;</ph> method on this control is called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se i controlli figlio verranno ridimensionati alla chiamata del metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /&gt;</ph> su questo controllo; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, then the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph> method will recursively call the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> method of each of its child controls.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> proprietà <ph id="ph2">`true`</ph>, quindi il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph> metodo verrà chiamata in modo ricorsivo il <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> metodo di ciascuno dei relativi controlli figlio.</target>       </trans-unit>
        <trans-unit id="3179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> always returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">L'implementazione predefinita di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> restituisce sempre <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="3180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>Derived classes can override <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> to return <ph id="ph2">`false`</ph> to indicate that scaling should not be performed on their children.</source>
          <target state="translated">Le classi derivate possono eseguire l'override <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> per restituire <ph id="ph2">`false`</ph> per indicare che il ridimensionamento non deve essere eseguito sugli elementi figlio.</target>       </trans-unit>
        <trans-unit id="3181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The factor by which the height and width of the control will be scaled.</source>
          <target state="translated">Fattore di scala per l'altezza e la larghezza del controllo.</target>       </trans-unit>
        <trans-unit id="3182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> value that specifies the bounds of the control to use when defining its size and position.</source>
          <target state="translated">Valore di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> che specifica i limiti del controllo da usare per definirne le dimensioni e la posizione.</target>       </trans-unit>
        <trans-unit id="3183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Scales a control's location, size, padding and margin.</source>
          <target state="translated">Scala la posizione, le dimensioni, la spaziatura interna e il margine di un controllo.</target>       </trans-unit>
        <trans-unit id="3184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>If the control is top level, this will not scale the control's location.</source>
          <target state="translated">Se il controllo è di livello superiore, il percorso del controllo non verrà ridimensionata.</target>       </trans-unit>
        <trans-unit id="3185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>This does not scale children or the size of automatically sized controls.</source>
          <target state="translated">Non consente una scalabilità elementi figlio o delle dimensioni dei controlli automaticamente ridimensionati.</target>       </trans-unit>
        <trans-unit id="3186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>You can omit scaling in any direction by changing the value of the <ph id="ph1">`specified`</ph> parameter.</source>
          <target state="translated">È possibile omettere il ridimensionamento in qualsiasi direzione modificando il valore della <ph id="ph1">`specified`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="3187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
          <source>The horizontal scaling factor.</source>
          <target state="translated">Fattore di scala orizzontale.</target>       </trans-unit>
        <trans-unit id="3188" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
          <source>The vertical scaling factor.</source>
          <target state="translated">Fattore di scala verticale.</target>       </trans-unit>
        <trans-unit id="3189" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Questo metodo non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="3190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Questo metodo non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="3191" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Activates a control.</source>
          <target state="translated">Attiva un controllo.</target>       </trans-unit>
        <trans-unit id="3192" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select">
          <source>Activates the control.</source>
          <target state="translated">Attiva il controllo.</target>       </trans-unit>
        <trans-unit id="3193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> method activates the control if the control's <ph id="ph2">`Selectable`</ph> style bit is set to <ph id="ph3">`true`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> metodo attiva il controllo se il controllo <ph id="ph2">`Selectable`</ph> bit di stile è impostato su <ph id="ph3">`true`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, è contenuto in un altro controllo e tutti i controlli padre sono visibili e abilitati.</target>       </trans-unit>
        <trans-unit id="3194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source>The Windows Forms controls in the following list are not selectable.</source>
          <target state="translated">I controlli Windows Form nell'elenco seguente non sono selezionabili.</target>       </trans-unit>
        <trans-unit id="3195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source>Controls derived from controls in the list will also not be selectable.</source>
          <target state="translated">I controlli derivati da controlli nell'elenco anche non saranno selezionabili.</target>       </trans-unit>
        <trans-unit id="3196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (quando è presente alcun collegamento presente nel controllo)</target>       </trans-unit>
        <trans-unit id="3197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source>The following code example selects the specified <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, if it is selectable.</source>
          <target state="translated">L'esempio di codice seguente seleziona specificato <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, se è selezionabile.</target>       </trans-unit>
        <trans-unit id="3198" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify the direction of the control to select; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per specificare la direzione del controllo da selezionare; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3199" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to move forward in the tab order; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to move backward in the tab order.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per spostarsi in avanti nell'ordine di tabulazione, <ph id="ph2">&lt;see langword="false" /&gt;</ph> per spostarsi all'indietro.</target>       </trans-unit>
        <trans-unit id="3200" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>Activates a child control.</source>
          <target state="translated">Attiva un controllo figlio.</target>       </trans-unit>
        <trans-unit id="3201" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>Optionally specifies the direction in the tab order to select the control from.</source>
          <target state="translated">Può anche specificare la direzione nell'ordine di tabulazione da cui selezionare il controllo.</target>       </trans-unit>
        <trans-unit id="3202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">`directed`</ph> and <ph id="ph2">`forward`</ph> parameters are used by container-style controls.</source>
          <target state="translated">Il <ph id="ph1">`directed`</ph> e <ph id="ph2">`forward`</ph> parametri vengono utilizzati dai controlli contenitore.</target>       </trans-unit>
        <trans-unit id="3203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>When the <ph id="ph1">`directed`</ph> parameter is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">`forward`</ph> parameter is evaluated to determine which control to select.</source>
          <target state="translated">Quando il <ph id="ph1">`directed`</ph> parametro è impostato su <ph id="ph2">`true`</ph>, <ph id="ph3">`forward`</ph> parametro viene valutato per determinare il controllo da selezionare.</target>       </trans-unit>
        <trans-unit id="3204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>When <ph id="ph1">`forward`</ph> is set to <ph id="ph2">`true`</ph>, the next control in the tab order is selected; when <ph id="ph3">`false`</ph>, the previous control in the tab order is selected.</source>
          <target state="translated">Quando <ph id="ph1">`forward`</ph> è impostato su <ph id="ph2">`true`</ph>, viene selezionato il controllo successivo nell'ordine di tabulazione; quando <ph id="ph3">`false`</ph>, viene selezionato il controllo precedente nell'ordine di tabulazione.</target>       </trans-unit>
        <trans-unit id="3205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> method activates the control if the control's <ph id="ph2">`Selectable`</ph> style bit is set to <ph id="ph3">`true`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> metodo attiva il controllo se il controllo <ph id="ph2">`Selectable`</ph> bit di stile è impostato su <ph id="ph3">`true`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, è contenuto in un altro controllo e tutti i controlli padre sono visibili e abilitati.</target>       </trans-unit>
        <trans-unit id="3206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>The Windows Forms controls in the following list are not selectable.</source>
          <target state="translated">I controlli Windows Form nell'elenco seguente non sono selezionabili.</target>       </trans-unit>
        <trans-unit id="3207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>Controls derived from controls in the list will also not be selectable.</source>
          <target state="translated">I controlli derivati da controlli nell'elenco anche non saranno selezionabili.</target>       </trans-unit>
        <trans-unit id="3208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (quando è presente alcun collegamento presente nel controllo)</target>       </trans-unit>
        <trans-unit id="3209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> at which to start the search.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> da cui iniziare la ricerca.</target>       </trans-unit>
        <trans-unit id="3210" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to move forward in the tab order; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to move backward in the tab order.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per spostarsi in avanti nell'ordine di tabulazione, <ph id="ph2">&lt;see langword="false" /&gt;</ph> per spostarsi all'indietro.</target>       </trans-unit>
        <trans-unit id="3211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the controls with the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.TabStop" /&gt;</ph> property set to <ph id="ph3">&lt;see langword="false" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per ignorare i controlli con la proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.TabStop" /&gt;</ph> impostata su <ph id="ph3">&lt;see langword="false" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include nested (children of child controls) child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per includere controlli figlio annidati, ovvero controlli figlio di controlli figlio; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to continue searching from the first control in the tab order after the last control has been reached; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per continuare la ricerca dal primo controllo nell'ordine di tabulazione dopo avere raggiunto l'ultimo controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3214" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Activates the next control.</source>
          <target state="translated">Attiva il controllo successivo.</target>       </trans-unit>
        <trans-unit id="3215" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a control was activated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il controllo è stato attivato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> method activates the next control in the tab order if the control's <ph id="ph2">`Selectable`</ph> style bit is set to <ph id="ph3">`true`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> metodo attiva il controllo successivo nell'ordine di tabulazione, se il controllo <ph id="ph2">`Selectable`</ph> bit di stile è impostato su <ph id="ph3">`true`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, è contenuto in un altro controllo e tutti i controlli padre sono visibili e abilitati.</target>       </trans-unit>
        <trans-unit id="3217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The Windows Forms controls in the following list are not selectable.</source>
          <target state="translated">I controlli Windows Form nell'elenco seguente non sono selezionabili.</target>       </trans-unit>
        <trans-unit id="3218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Controls derived from controls in the list will also not be selectable.</source>
          <target state="translated">I controlli derivati da controlli nell'elenco anche non saranno selezionabili.</target>       </trans-unit>
        <trans-unit id="3219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (quando è presente alcun collegamento presente nel controllo)</target>       </trans-unit>
        <trans-unit id="3220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo dalla tastiera (TAB, MAIUSC + TAB e così via), chiamando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> , metodi o impostando la <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> proprietà sul form corrente, gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="3221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> è impostata su <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> vengono soppressi.</target>       </trans-unit>
        <trans-unit id="3222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The following code exampleshows the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> method being used in a form that has some controls.</source>
          <target state="translated">Nell'esempio di codice exampleshows il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> il metodo utilizzato in un form che dispone di alcuni controlli.</target>       </trans-unit>
        <trans-unit id="3223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Each time that you click the form, the next control is activated.</source>
          <target state="translated">Ogni volta che si fa clic su form, viene attivato il controllo successivo.</target>       </trans-unit>
        <trans-unit id="3224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property gets the currently active control in the container control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> proprietà ottiene il controllo attualmente attivo nel controllo contenitore.</target>       </trans-unit>
        <trans-unit id="3225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> method being used in a form that has a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> and some other controls.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene illustrato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> il metodo utilizzato in un form con un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> e altri controlli.</target>       </trans-unit>
        <trans-unit id="3226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>When you click the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>, the next control after the <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> is activated.</source>
          <target state="translated">Quando si fa clic il <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>, il controllo successivo dopo il <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> è attivato.</target>       </trans-unit>
        <trans-unit id="3227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Notice that you have to get the parent of the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
          <target state="translated">Si noti che è necessario ottenere l'elemento padre del <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="3228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Since <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> is not a container, calling <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> directly on the <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> would not change the activation.</source>
          <target state="translated">Poiché <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> non è un contenitore, chiamare <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> direttamente sul <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> non modifica l'attivazione.</target>       </trans-unit>
        <trans-unit id="3229" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>Sends the control to the back of the z-order.</source>
          <target state="translated">Porta il controllo in background nell'ordine z.</target>       </trans-unit>
        <trans-unit id="3230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>The control is moved to the back of the z-order.</source>
          <target state="translated">Il controllo viene spostato nella parte posteriore dello z-order.</target>       </trans-unit>
        <trans-unit id="3231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>If the control is a child of another control, the child control is moved to the back of the z-order.</source>
          <target state="translated">Se il controllo è un elemento figlio di un altro controllo, il controllo figlio viene spostato nella parte posteriore dello z-order.</target>       </trans-unit>
        <trans-unit id="3232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>If the control is a top-level control, this method will not work correctly unless the control is active.</source>
          <target state="translated">Se il controllo è un controllo di primo livello, questo metodo non funzionerà correttamente a meno che il controllo è attivo.</target>       </trans-unit>
        <trans-unit id="3233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>A top-level control is a control, such as a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, that is not a child of another control.</source>
          <target state="translated">Controllo di primo livello è un controllo, ad esempio un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, ovvero non è un figlio di un altro controllo.</target>       </trans-unit>
        <trans-unit id="3234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>An active control is a visible control that has input focus.</source>
          <target state="translated">Un controllo attivo è un controllo visibile che contiene lo stato attivo di input.</target>       </trans-unit>
        <trans-unit id="3235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>To use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SendToBack%2A&gt;</ph> method with an inactive, top-level control, first call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> method on the control.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SendToBack%2A&gt;</ph> metodo con un controllo di primo livello inattivo, chiamare innanzitutto il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> metodo sul controllo.</target>       </trans-unit>
        <trans-unit id="3236" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3237" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)">
          <source>Sets a value indicating how a control will behave when its <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AutoSize" /&gt;</ph> property is enabled.</source>
          <target state="translated">Imposta un valore che indica il comportamento di un controllo quando la relativa proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AutoSize" /&gt;</ph> è abilitata.</target>       </trans-unit>
        <trans-unit id="3238" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Sets the bounds of the control.</source>
          <target state="translated">Imposta i limiti del controllo.</target>       </trans-unit>
        <trans-unit id="3239" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuovo valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3240" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuovo valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3241" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuovo valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3242" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuovo valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3243" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Sets the bounds of the control to the specified location and size.</source>
          <target state="translated">Imposta i limiti del controllo sulla posizione e le dimensioni specificate.</target>       </trans-unit>
        <trans-unit id="3244" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuovo valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3245" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuovo valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuovo valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuovo valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3248" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated">Combinazione bit per bit dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3249" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For any parameter not specified, the current value will be used.</source>
          <target state="translated">Nel caso di parametri non specificati, verrà usato il valore corrente.</target>       </trans-unit>
        <trans-unit id="3250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Sets the specified bounds of the control to the specified location and size.</source>
          <target state="translated">Imposta i limiti specificati del controllo sulla posizione e le dimensioni specificate.</target>       </trans-unit>
        <trans-unit id="3251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The following code example centers a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> on the screen in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event.</source>
          <target state="translated">I centri di esempio di codice seguente un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nella schermata di <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>This will keep the form centered as the user resizes it.</source>
          <target state="translated">Il modulo centrato durante il ridimensionamento verrà mantenuta.</target>       </trans-unit>
        <trans-unit id="3253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>This example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> control.</source>
          <target state="translated">In questo esempio presuppone che sia stato creato un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="3254" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuovo valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuovo valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3256" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuovo valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3257" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuovo valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3258" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated">Combinazione bit per bit dei valori di <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3259" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Performs the work of setting the specified bounds of this control.</source>
          <target state="translated">Imposta i limiti specificati di questo controllo.</target>       </trans-unit>
        <trans-unit id="3260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Typically, the parameters that correspond to the bounds not included in the <ph id="ph1">`specified`</ph> parameter are passed in with their current values.</source>
          <target state="translated">In genere, i parametri che corrispondono ai limiti non inclusi nel <ph id="ph1">`specified`</ph> parametro vengono passati con i relativi valori correnti.</target>       </trans-unit>
        <trans-unit id="3261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>, or the <ph id="ph3">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property can be passed in with a reference to the current instance of the control.</source>
          <target state="translated">Ad esempio, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>, o <ph id="ph3">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> o <ph id="ph4">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> le proprietà del <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> proprietà può essere passata con un riferimento all'istanza corrente del controllo.</target>       </trans-unit>
        <trans-unit id="3262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>However all values passed in are honored and applied to the control.</source>
          <target state="translated">I valori passati sono tuttavia rispettati e applicati al controllo.</target>       </trans-unit>
        <trans-unit id="3263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The <ph id="ph1">`boundsSpecified`</ph> parameter represents the elements of the controls <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> changed by your application.</source>
          <target state="translated">Il <ph id="ph1">`boundsSpecified`</ph> parametro rappresenta gli elementi dei controlli <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> modificato dall'applicazione.</target>       </trans-unit>
        <trans-unit id="3264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For example, if you change the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control, the <ph id="ph2">`boundsSpecified`</ph> parameter value is the <ph id="ph3">`Size`</ph> value of <ph id="ph4">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</source>
          <target state="translated">Ad esempio, se si modifica il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> del controllo, il <ph id="ph2">`boundsSpecified`</ph> valore del parametro è il <ph id="ph3">`Size`</ph> valore <ph id="ph4">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> is adjusted in response to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property being set, the <ph id="ph3">`boundsSpecified`</ph> parameter value is the <ph id="ph4">`None`</ph> value of <ph id="ph5">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</source>
          <target state="translated">Tuttavia, se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> viene modificata in risposta al <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> proprietà viene impostata, il <ph id="ph3">`boundsSpecified`</ph> valore del parametro è il <ph id="ph4">`None`</ph> valore <ph id="ph5">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>On Windows Server 2003 systems, the size of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is restricted by the maximum pixel width and height of the monitor.</source>
          <target state="translated">Nei sistemi Windows Server 2003, le dimensioni di un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> è limitato per la larghezza massima in pixel e l'altezza del monitoraggio.</target>       </trans-unit>
        <trans-unit id="3267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> method to ensure that the control remains a fixed size.</source>
          <target state="translated">Nell'esempio di codice viene eseguito l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> metodo per assicurarsi che il controllo resta a dimensione fissa.</target>       </trans-unit>
        <trans-unit id="3268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>This example requires that you have a class that is either directly or indirectly derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe derivata direttamente o indirettamente dalla <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="3269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> method to force the bounds of the control to change.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> in una classe derivata, assicurarsi di chiamare la classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> metodo per imporre i limiti del controllo da modificare.</target>       </trans-unit>
        <trans-unit id="3270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Derived classes can add size restrictions to the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> method.</source>
          <target state="translated">Le classi derivate possono aggiungere limitazioni di dimensione per la <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="3271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>The client area width, in pixels.</source>
          <target state="translated">Larghezza dell'area client in pixel.</target>       </trans-unit>
        <trans-unit id="3272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>The client area height, in pixels.</source>
          <target state="translated">Altezza dell'area client in pixel.</target>       </trans-unit>
        <trans-unit id="3273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Sets the size of the client area of the control.</source>
          <target state="translated">Imposta le dimensioni dell'area client del controllo.</target>       </trans-unit>
        <trans-unit id="3274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>The client area starts at the (0, 0) location and extends to the (<ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>) location.</source>
          <target state="translated">L'area client inizia in corrispondenza di (0, 0) percorso ed estende di (<ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>) percorso.</target>       </trans-unit>
        <trans-unit id="3275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Typically, you should not set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> of the control.</source>
          <target state="translated">In genere, non è necessario impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> method to ensure that the control remains square.</source>
          <target state="translated">Nell'esempio di codice viene eseguito l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> metodo per assicurarsi che il controllo rimanga quadrato.</target>       </trans-unit>
        <trans-unit id="3277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>This example requires that you have a class that is either directly or indirectly derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">In questo esempio si suppone una classe derivata direttamente o indirettamente dalla <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="3278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /&gt;</ph> method so that the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ClientSize" /&gt;</ph> property is adjusted.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /&gt;</ph> in una classe derivata, assicurarsi di chiamare la classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /&gt;</ph> metodo in modo che il <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ClientSize" /&gt;</ph> proprietà viene regolata.</target>       </trans-unit>
        <trans-unit id="3279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>For more information about drawing on controls, see <bpt id="p1">[</bpt>Rendering a Windows Forms Control<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sul disegno nei controlli, vedere <bpt id="p1">[</bpt>il Rendering di un controllo Windows Form<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</target>       </trans-unit>
        <trans-unit id="3280" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> bit to set.</source>
          <target state="translated">Bit <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> da impostare.</target>       </trans-unit>
        <trans-unit id="3281" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to apply the specified style to the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per applicare lo stile specificato al controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>Sets a specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> flag to either <ph id="ph2">&lt;see langword="true" /&gt;</ph> or <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Imposta il flag specificato dell'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> o su <ph id="ph2">&lt;see langword="true" /&gt;</ph> o su <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>Control style bit flags are used to categorize supported behavior.</source>
          <target state="translated">Flag di bit di stile di controllo vengono utilizzati per classificare il comportamento supportato.</target>       </trans-unit>
        <trans-unit id="3284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>A control can enable a style by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit (or bits) and the Boolean value to set the bit(s) to.</source>
          <target state="translated">Un controllo è possibile attivare uno stile chiamando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> metodo e passando l'oggetto appropriato <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit (o bits) e il valore booleano per impostare i bit.</target>       </trans-unit>
        <trans-unit id="3285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>To determine the value assigned to a specified <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit, use the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> method and pass in the <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> member to evaluate.</source>
          <target state="translated">Per determinare il valore assegnato a un oggetto specificato <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit, utilizzare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> (metodo) e passare il <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> membro da valutare.</target>       </trans-unit>
        <trans-unit id="3286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>Setting the control style bits can substantially change the behavior of the control.</source>
          <target state="translated">Impostare il controllo dei bit di stile sostanzialmente cambiare il comportamento del controllo.</target>       </trans-unit>
        <trans-unit id="3287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>Review the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> enumeration documentation to understand the effects of changing the control style bits before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.</source>
          <target state="translated">Esaminare il <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> documentazione relativa all'enumerazione per comprendere gli effetti della modifica i bit di stile del controllo prima di chiamare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="3288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>The following code example enables double-buffering on a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and updates the styles to reflect the changes.</source>
          <target state="translated">Esempio di codice seguente consente il doppio buffer su un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> e aggiorna gli stili per riflettere le modifiche.</target>       </trans-unit>
        <trans-unit id="3289" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the control as the top-level control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per impostare il controllo come controllo di primo livello; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3290" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>Sets the control as the top-level control.</source>
          <target state="translated">Imposta il controllo come controllo di primo livello.</target>       </trans-unit>
        <trans-unit id="3291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> and pass in a value of <ph id="ph3">`false`</ph>, the form will not be visible until you call <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph> again, passing in a value of <ph id="ph5">`true`</ph>.</source>
          <target state="translated">Se si chiama il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph> metodo di un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> e passare un valore di <ph id="ph3">`false`</ph>, la forma non sarà visibile finché non si chiama <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph> nuovamente, passando un valore di <ph id="ph5">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="3292" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the control is an ActiveX control.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> è impostato su <ph id="ph2">&lt;see langword="true" /&gt;</ph> e il controllo è un controllo ActiveX.</target>       </trans-unit>
        <trans-unit id="3293" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetTopLevel" /&gt;</ph> return value is not equal to the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter and the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Parent" /&gt;</ph> property is not <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetTopLevel" /&gt;</ph> restituito non è uguale al parametro <ph id="ph2">&lt;paramref name="value" /&gt;</ph> e la proprietà <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Parent" /&gt;</ph> non è <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>to set the control as a top-level control if it is of any type other than <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</source>
          <target state="translated">Per impostare il controllo come controllo di primo livello, se è di tipo diverso da <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>This permission is only demanded if the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the control is not an ActiveX control.</source>
          <target state="translated">Questa autorizzazione è richiesta solo se il <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametro <ph id="ph2">&lt;see langword="true" /&gt;</ph> e il controllo non è un controllo ActiveX.</target>       </trans-unit>
        <trans-unit id="3296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valore <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3297" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the control visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rendere visibile il controllo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3298" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
          <source>Sets the control to the specified visible state.</source>
          <target state="translated">Imposta il controllo sullo stato di visibilità specificato.</target>       </trans-unit>
        <trans-unit id="3299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
          <source>You would typically override this method to change the visibility behavior of the control.</source>
          <target state="translated">Generalmente è sottoposto a override questo metodo per modificare il comportamento di visibilità del controllo.</target>       </trans-unit>
        <trans-unit id="3300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /&gt;</ph> method to force the visibility of the control to change.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /&gt;</ph> in una classe derivata, assicurarsi di chiamare la classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /&gt;</ph> metodo per forzare la visibilità del controllo da modificare.</target>       </trans-unit>
        <trans-unit id="3301" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Show">
          <source>Displays the control to the user.</source>
          <target state="translated">Rende visibile il controllo all'utente.</target>       </trans-unit>
        <trans-unit id="3302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Show">
          <source>Showing the control is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Visualizzare il controllo è equivalente all'impostazione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> proprietà <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="3303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Show">
          <source>After the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property returns a value of <ph id="ph3">`true`</ph> until the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method is called.</source>
          <target state="translated">Dopo il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> metodo viene chiamato, il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> proprietà restituisce un valore di <ph id="ph3">`true`</ph> fino a quando il <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="3304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Show">
          <source>The following code example displays an about dialog box and temporarily draws a blue square on its surface.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene visualizza un finestra di dialogo e disegna temporaneamente un quadrato di colore blu relativa area.</target>       </trans-unit>
        <trans-unit id="3305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Show">
          <source>This example requires that you have defined a class that derives from <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`AboutDialog`</ph>.</source>
          <target state="translated">In questo esempio richiede che è stata definita una classe che deriva da <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> denominato <ph id="ph2">`AboutDialog`</ph>.</target>       </trans-unit>
        <trans-unit id="3306" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source>Gets a value indicating whether the control should display focus rectangles.</source>
          <target state="translated">Ottiene un valore che indica se nel controllo devono essere visualizzati i rettangoli di attivazione.</target>       </trans-unit>
        <trans-unit id="3307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control should display focus rectangles; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se nel controllo devono essere visualizzati i rettangoli di attivazione; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source>For more information about this feature, see the<bpt id="p1">[</bpt>WM_CHANGEUISTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)</ept>,<bpt id="p2">[</bpt>WM_QUERYUISTATE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)</ept>, and the <bpt id="p3">[</bpt>WM_UPDATEUISTATE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)</ept>topics.</source>
          <target state="translated">Per ulteriori informazioni su questa funzionalità, vedere il<bpt id="p1">[</bpt>argomenti WM_CHANGEUISTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)</ept>,<bpt id="p2">[</bpt>WM_QUERYUISTATE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)</ept>e <bpt id="p3">[</bpt>WM_UPDATEUISTATE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)</ept>argomenti.</target>       </trans-unit>
        <trans-unit id="3309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ShowFocusCues" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ShowFocusCues" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ShowFocusCues" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ShowFocusCues" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="3310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="3311" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ShowKeyboardCues">
          <source>Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.</source>
          <target state="translated">Ottiene un valore che indica se lo stato dell'interfaccia utente consente di visualizzare o nascondere i tasti di scelta rapida.</target>       </trans-unit>
        <trans-unit id="3312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowKeyboardCues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the keyboard accelerators are visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se i tasti di scelta rapida sono visibili; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowKeyboardCues">
          <source>In controls created in the Windows Forms designer, keyboard accelerators are visible by default.</source>
          <target state="translated">Nei controlli creati in Progettazione Windows Form, i tasti di scelta rapida sono visibili per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="3314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowKeyboardCues">
          <source>For more information about this feature, see the<bpt id="p1">[</bpt>WM_CHANGEUISTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)</ept>,<bpt id="p2">[</bpt>WM_QUERYUISTATE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)</ept>, and the <bpt id="p3">[</bpt>WM_UPDATEUISTATE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)</ept>topics.</source>
          <target state="translated">Per ulteriori informazioni su questa funzionalità, vedere il<bpt id="p1">[</bpt>argomenti WM_CHANGEUISTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)</ept>,<bpt id="p2">[</bpt>WM_QUERYUISTATE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)</ept>e <bpt id="p3">[</bpt>WM_UPDATEUISTATE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)</ept>argomenti.</target>       </trans-unit>
        <trans-unit id="3315" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Site">
          <source>Gets or sets the site of the control.</source>
          <target state="translated">Ottiene o imposta il sito del controllo.</target>       </trans-unit>
        <trans-unit id="3316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Site">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>, if any.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>, se presente.</target>       </trans-unit>
        <trans-unit id="3317" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Size">
          <source>Gets or sets the height and width of the control.</source>
          <target state="translated">Ottiene o imposta l'altezza e la larghezza del controllo.</target>       </trans-unit>
        <trans-unit id="3318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the height and width of the control in pixels.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> che rappresenta l'altezza e la larghezza del controllo in pixel.</target>       </trans-unit>
        <trans-unit id="3319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> class is a value type (<ph id="ph2">`Structure`</ph> in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph4">`struct`</ph> in Visual C#), it is returned by value, meaning accessing the property returns a copy of the size of the control.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> classe è un tipo valore (<ph id="ph2">`Structure`</ph> in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph4">`struct`</ph> in Visual c#), viene restituito per valore, ovvero l'accesso alla proprietà restituisce una copia delle dimensioni del controllo.</target>       </trans-unit>
        <trans-unit id="3320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>So, adjusting the <ph id="ph1">&lt;xref:System.Drawing.Size.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Drawing.Size.Height%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Drawing.Size&gt;</ph> returned from this property will not affect the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> of the control.</source>
          <target state="translated">In tal caso, regolare il <ph id="ph1">&lt;xref:System.Drawing.Size.Width%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Drawing.Size.Height%2A&gt;</ph> le proprietà del <ph id="ph3">&lt;xref:System.Drawing.Size&gt;</ph> restituito da questa non avrà effetto sulle proprietà di <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>To adjust the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> of the control, you must set the control's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> property, or set the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property with a new <ph id="ph6">&lt;xref:System.Drawing.Size&gt;</ph>.</source>
          <target state="translated">Per regolare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> del controllo, è necessario impostare il controllo <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> , proprietà o un set di <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> proprietà con un nuovo <ph id="ph6">&lt;xref:System.Drawing.Size&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>To maintain better performance, do not set the <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> of a control in its constructor.</source>
          <target state="translated">Per ottenere prestazioni migliori, non impostare il <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> di un controllo nel relativo costruttore.</target>       </trans-unit>
        <trans-unit id="3323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">Il metodo preferito consiste nell'eseguire l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="3324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>On Windows Server 2003 systems, the size of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is restricted by the maximum pixel width and height of the monitor.</source>
          <target state="translated">Nei sistemi Windows Server 2003, le dimensioni di un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> è limitato per la larghezza massima in pixel e l'altezza del monitoraggio.</target>       </trans-unit>
        <trans-unit id="3325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">L'esempio di codice seguente aggiunge un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> a un form e vengono impostate alcune proprietà comuni.</target>       </trans-unit>
        <trans-unit id="3326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">L'esempio consente di limitare il pulsante nell'angolo in basso a destra del form in modo che mantiene la posizione relativa quando il form viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="3327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Viene quindi impostata la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> e viene ridimensionato il pulsante per la stessa dimensione di <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">Nell'esempio viene quindi impostato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> a <ph id="ph2">`true`</ph> e imposta il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="3329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">Infine, viene aggiunto un gestore eventi per gestire il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento del pulsante.</target>       </trans-unit>
        <trans-unit id="3330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> denominato <ph id="ph2">`imageList1`</ph>.</target>       </trans-unit>
        <trans-unit id="3331" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Size" /&gt;</ph> property value changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Size" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="3332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>It is preferable to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event to handle custom layouts.</source>
          <target state="translated">È preferibile usare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> evento da gestire layout personalizzati.</target>       </trans-unit>
        <trans-unit id="3333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised in response to <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> events, but also in other conditions when layout might need to be applied.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> evento viene generato in risposta a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> eventi, ma anche in altre condizioni quando potrebbe essere necessario layout da applicare.</target>       </trans-unit>
        <trans-unit id="3334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="3335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event.</source>
          <target state="translated">L'esempio di codice seguente illustra il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>An instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control has been provided that can be scaled both horizontally and vertically.</source>
          <target state="translated">Un'istanza di un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controllo è stata fornita che può essere scalato orizzontalmente e verticalmente.</target>       </trans-unit>
        <trans-unit id="3338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> instance provides the horizontal and vertical scale value.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> istanza fornisce il valore di scala orizzontale e verticale.</target>       </trans-unit>
        <trans-unit id="3339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> instance named <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> is used to set the scale values for the <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control instance.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> istanza denominata <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> utilizzato per impostare i valori di scala per il <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> istanza del controllo.</target>       </trans-unit>
        <trans-unit id="3340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>Whenever the size of the control changes, the event handler associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event of the control is called.</source>
          <target state="translated">Ogni volta che cambiano le dimensioni del controllo, il gestore dell'evento associato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> evento del controllo viene chiamato.</target>       </trans-unit>
        <trans-unit id="3341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>This event handler displays a message box indicating that the size of the control has changed.</source>
          <target state="translated">Questo gestore eventi viene visualizzato un messaggio indicante che le dimensioni del controllo sono stato modificato.</target>       </trans-unit>
        <trans-unit id="3342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> value representing the height and width of the control's client area.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> che rappresenta l'altezza e la larghezza dell'area client del controllo.</target>       </trans-unit>
        <trans-unit id="3343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)">
          <source>Determines the size of the entire control from the height and width of its client area.</source>
          <target state="translated">Determina le dimensioni dell'intero controllo a partire dall'altezza e dalla larghezza della relativa area client.</target>       </trans-unit>
        <trans-unit id="3344" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> value representing the height and width of the entire control.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> che rappresenta l'altezza e la larghezza dell'intero controllo.</target>       </trans-unit>
        <trans-unit id="3345" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>Occurs when the control style changes.</source>
          <target state="translated">Si verifica quando lo stile del controllo viene modificato.</target>       </trans-unit>
        <trans-unit id="3346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event occurs when <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> flags have been added or changed.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> evento si verifica quando <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> flag aggiunti o modificati.</target>       </trans-unit>
        <trans-unit id="3347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>This event is raised if the control style is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se lo stile del controllo viene modificato da una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="3348" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="3350" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3351" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="3352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3355" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>Temporarily suspends the layout logic for the control.</source>
          <target state="translated">Sospende temporaneamente la logica di layout per il controllo.</target>       </trans-unit>
        <trans-unit id="3356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>The layout logic of the control is suspended until the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method is called.</source>
          <target state="translated">La logica di layout del controllo viene sospesa fino a quando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="3357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods are used in tandem to suppress multiple <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events while you adjust multiple attributes of the control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> vengono utilizzati insieme per eliminare più <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> eventi durante la regolazione di più attributi del controllo.</target>       </trans-unit>
        <trans-unit id="3358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>For example, you would typically call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method, then set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties of the control, and then call the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method to enable the changes to take effect.</source>
          <target state="translated">Ad esempio, in genere chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> (metodo), quindi impostare il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> le proprietà del controllo e quindi chiamare il <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> metodo per consentire le modifiche abbiano effetto.</target>       </trans-unit>
        <trans-unit id="3359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>There must be no pending calls to <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> for <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> to be successfully called.</source>
          <target state="translated">Devono essere chiamate in sospeso per <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> per <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> sia chiamato correttamente.</target>       </trans-unit>
        <trans-unit id="3360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>When adding several controls to a parent control, it is recommended that you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method before initializing the controls to be added.</source>
          <target state="translated">Quando si aggiungono più controlli a un controllo padre, è consigliabile chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> metodo prima di inizializzare i controlli da aggiungere.</target>       </trans-unit>
        <trans-unit id="3361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>After adding the controls to the parent control, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method.</source>
          <target state="translated">Dopo l'aggiunta di controlli al controllo padre, chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="3362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>This will increase the performance of applications with many controls.</source>
          <target state="translated">Ciò aumenta le prestazioni delle applicazioni con molti controlli.</target>       </trans-unit>
        <trans-unit id="3363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>The following code example adds two buttons to a form.</source>
          <target state="translated">Esempio di codice seguente aggiunge due pulsanti a un form.</target>       </trans-unit>
        <trans-unit id="3364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>The example transactions the addition of the buttons by using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods.</source>
          <target state="translated">Nell'esempio viene eseguita l'aggiunta dei pulsanti utilizzando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="3365" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="3366" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3367" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="3368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="3370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragLeave" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragLeave" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="3372" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3373" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>Occurs when the system colors change.</source>
          <target state="translated">Si verifica quando i colori di sistema vengono modificati.</target>       </trans-unit>
        <trans-unit id="3374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Drawing.SystemColors&gt;</ph> is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se il <ph id="ph1">&lt;xref:System.Drawing.SystemColors&gt;</ph> viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="3375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="3377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SystemColorsChanged&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SystemColorsChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="3379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SystemColorsChanged&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SystemColorsChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3382" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>Gets or sets the tab order of the control within its container.</source>
          <target state="translated">Ottiene o imposta l'ordine di tabulazione del controllo all'interno del relativo contenitore.</target>       </trans-unit>
        <trans-unit id="3383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The index value of the control within the set of controls within its container.</source>
          <target state="translated">Valore dell'indice del controllo nel set di controlli all'interno del relativo contenitore.</target>       </trans-unit>
        <trans-unit id="3384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The controls in the container are included in the tab order.</source>
          <target state="translated">Il controlli del contenitore sono inclusi nell'ordine di tabulazione.</target>       </trans-unit>
        <trans-unit id="3385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order.</source>
          <target state="translated">Un indice di tabulazione può essere costituito da qualsiasi numero intero valido maggiore o uguale a zero, i numeri più bassi in precedenza in ordine di tabulazione.</target>       </trans-unit>
        <trans-unit id="3386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.</source>
          <target state="translated">Se l'indice della scheda stessa dispone di più di un controllo nello stesso controllo padre, l'ordine z dei controlli determina l'ordine per scorrere i controlli.</target>       </trans-unit>
        <trans-unit id="3387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>For a control to be included in the tab order, its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property must be set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Per un controllo da includere nell'ordine di tabulazione, il relativo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> proprietà deve essere impostata su <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="3388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">L'esempio di codice seguente aggiunge un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> a un form e vengono impostate alcune proprietà comuni.</target>       </trans-unit>
        <trans-unit id="3389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">L'esempio consente di limitare il pulsante nell'angolo in basso a destra del form in modo che mantiene la posizione relativa quando il form viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="3390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Viene quindi impostata la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> e viene ridimensionato il pulsante per la stessa dimensione di <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">Nell'esempio viene quindi impostato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> a <ph id="ph2">`true`</ph> e imposta il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="3392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">Infine, viene aggiunto un gestore eventi per gestire il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento del pulsante.</target>       </trans-unit>
        <trans-unit id="3393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> denominato <ph id="ph2">`imageList1`</ph>.</target>       </trans-unit>
        <trans-unit id="3394" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.TabIndex" /&gt;</ph> property value changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.TabIndex" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="3395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="3396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="3398" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndexChanged&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndexChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="3400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabIndexChanged&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabIndexChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3403" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.TabStop">
          <source>Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</source>
          <target state="translated">Ottiene o imposta un valore che indica se l'utente può assegnare lo stato attivo al controllo con TAB.</target>       </trans-unit>
        <trans-unit id="3404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can give the focus to the control using the TAB key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'utente può assegnare lo stato attivo al controllo con TAB; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>This property will always return <ph id="ph1">&lt;see langword="true" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> class.</source>
          <target state="translated">La proprietà restituirà sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph> per un'istanza della classe <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>When the user presses the TAB key, the input focus is set to the next control in the tab order.</source>
          <target state="translated">Quando l'utente preme il tasto TAB, viene impostato lo stato attivo al controllo successivo nell'ordine di tabulazione.</target>       </trans-unit>
        <trans-unit id="3408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>Controls with the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property value of <ph id="ph2">`false`</ph> are not included in the collection of controls in the tab order.</source>
          <target state="translated">Controlli con il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> valore della proprietà <ph id="ph2">`false`</ph> non sono inclusi nella raccolta di controlli nell'ordine di tabulazione.</target>       </trans-unit>
        <trans-unit id="3409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The tab order can be manipulated by setting the control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property value.</source>
          <target state="translated">Ordine di tabulazione può essere modificato impostando il controllo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> valore della proprietà.</target>       </trans-unit>
        <trans-unit id="3410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">L'esempio di codice seguente aggiunge un <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> a un form e vengono impostate alcune proprietà comuni.</target>       </trans-unit>
        <trans-unit id="3411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">L'esempio consente di limitare il pulsante nell'angolo in basso a destra del form in modo che mantiene la posizione relativa quando il form viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="3412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Viene quindi impostata la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> e viene ridimensionato il pulsante per la stessa dimensione di <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">Nell'esempio viene quindi impostato il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> a <ph id="ph2">`true`</ph> e imposta il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="3414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">Infine, viene aggiunto un gestore eventi per gestire il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento del pulsante.</target>       </trans-unit>
        <trans-unit id="3415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> denominato <ph id="ph2">`imageList1`</ph>.</target>       </trans-unit>
        <trans-unit id="3416" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.TabStop" /&gt;</ph> property value changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.TabStop" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="3417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="3418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</target>       </trans-unit>
        <trans-unit id="3420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStopChanged&gt;</ph> event.</source>
          <target state="translated">Nell'esempio, un gestore eventi genera report sull'occorrenza del <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStopChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</target>       </trans-unit>
        <trans-unit id="3422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> con <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> o aggiungere il messaggio a un controllo <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, ad esempio un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabStopChanged&gt;</ph> event.</source>
          <target state="translated">Quindi assegnare un nome di istanza <ph id="ph1">`Control1`</ph> e assicurarsi che il gestore dell'evento è associato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabStopChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3425" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Tag">
          <source>Gets or sets the object that contains data about the control.</source>
          <target state="translated">Ottiene o imposta l'oggetto che contiene i dati sul controllo.</target>       </trans-unit>
        <trans-unit id="3426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains data about the control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che contiene i dati sul controllo.</target>       </trans-unit>
        <trans-unit id="3427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>Any type derived from the <ph id="ph1">&lt;xref:System.Object&gt;</ph> class can be assigned to this property.</source>
          <target state="translated">Qualsiasi tipo derivato dalla <ph id="ph1">&lt;xref:System.Object&gt;</ph> classe può essere assegnata a questa proprietà.</target>       </trans-unit>
        <trans-unit id="3429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property is set through the Windows Forms designer, only text can be assigned.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> è impostata tramite la finestra di progettazione Windows Form, è possibile assegnare solo testo.</target>       </trans-unit>
        <trans-unit id="3430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>A common use for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property is to store data that is closely associated with the control.</source>
          <target state="translated">Un utilizzo comune per il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> proprietà consiste nell'archiviare i dati che sono strettamente associati al controllo.</target>       </trans-unit>
        <trans-unit id="3431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>For example, if you have a control that displays information about a customer, you might store a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that contains the customer's order history in that control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property so the data can be accessed quickly.</source>
          <target state="translated">Ad esempio, se si dispone di un controllo che visualizza le informazioni relative a un cliente, è possibile archiviare un <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> che contiene la cronologia degli ordini del cliente in tale controllo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> proprietà accedere rapidamente ai dati.</target>       </trans-unit>
        <trans-unit id="3432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>The following code example displays a form and stores a <ph id="ph1">`Customer`</ph> in its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property.</source>
          <target state="translated">L'esempio di codice seguente viene visualizzato un form e archivia un <ph id="ph1">`Customer`</ph> nel relativo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="3433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>This example requires that you have defined a class that derives from <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`CustomerForm`</ph> and that you have defined a <ph id="ph3">`Customer`</ph>.</source>
          <target state="translated">In questo esempio richiede che è stata definita una classe che deriva da <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> denominato <ph id="ph2">`CustomerForm`</ph> e che è stato definito un <ph id="ph3">`Customer`</ph>.</target>       </trans-unit>
        <trans-unit id="3434" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Text">
          <source>Gets or sets the text associated with this control.</source>
          <target state="translated">Ottiene o imposta il testo associato a questo controllo.</target>       </trans-unit>
        <trans-unit id="3435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>The text associated with this control.</source>
          <target state="translated">Testo associato a questo controllo.</target>       </trans-unit>
        <trans-unit id="3436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the control is used differently by each derived class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> proprietà del controllo viene utilizzata in modo diverso da ogni classe derivata.</target>       </trans-unit>
        <trans-unit id="3437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>For example the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name.</source>
          <target state="translated">Ad esempio il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> proprietà di un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> viene visualizzato nella barra del titolo nella parte superiore del form, è da un numero di caratteri limitato e in genere viene visualizzato il nome di applicazione o del documento.</target>       </trans-unit>
        <trans-unit id="3438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> can be large and can include numerous nonvisual characters used to format the text.</source>
          <target state="translated">Tuttavia, il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> proprietà di un <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> può essere elevato e può includere diversi caratteri non visivi utilizzate per formattare il testo.</target>       </trans-unit>
        <trans-unit id="3439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>For example, the text displayed in a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> can be formatted by adjusting the <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> properties, or by the addition of spaces or tab characters to align the text.</source>
          <target state="translated">Ad esempio, il testo visualizzato un <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> possono essere formattati regolando il <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> proprietà, o mediante l'aggiunta di spazi o caratteri di tabulazione per allineare il testo.</target>       </trans-unit>
        <trans-unit id="3440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">L'esempio di codice seguente crea un <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e vengono impostate alcune proprietà comuni.</target>       </trans-unit>
        <trans-unit id="3441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> within the group box.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e imposta il relativo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> all'interno della casella di gruppo.</target>       </trans-unit>
        <trans-unit id="3442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>Next, it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the group box, and docks the group box to the top of the form.</source>
          <target state="translated">Viene quindi impostata la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> proprietà della casella di gruppo e il controllo viene ancorato casella del gruppo nella parte superiore del form.</target>       </trans-unit>
        <trans-unit id="3443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>Lastly, it disables the group box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, which causes all controls contained within the group box to be disabled.</source>
          <target state="translated">Infine, viene disabilitata la casella di gruppo impostando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> proprietà <ph id="ph2">`false`</ph>, che fa sì che tutti i controlli contenuti all'interno della casella di gruppo deve essere disabilitata.</target>       </trans-unit>
        <trans-unit id="3444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> proprietà in una classe derivata, utilizzare la classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> proprietà per estendere l'implementazione di base.</target>       </trans-unit>
        <trans-unit id="3445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">In caso contrario, è necessario fornire tutti l'implementazione.</target>       </trans-unit>
        <trans-unit id="3446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Non è necessario eseguire l'override di entrambi i <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> funzioni di accesso il <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> proprietà; è possibile sostituire un solo se necessario.</target>       </trans-unit>
        <trans-unit id="3447" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property value changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="3448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="3449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">Nell'esempio di codice riportato di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> di un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> la visualizzazione dei dati di valuta.</target>       </trans-unit>
        <trans-unit id="3451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">Nell'esempio converte il testo in un numero decimale e modifiche di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se il numero è negativo e su <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se il numero è positivo.</target>       </trans-unit>
        <trans-unit id="3452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che contiene un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3453" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Top">
          <source>Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.</source>
          <target state="translated">Ottiene o imposta la distanza in pixel tra il bordo superiore del controllo e il bordo superiore dell'area client del contenitore.</target>       </trans-unit>
        <trans-unit id="3454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> che rappresenta la distanza in pixel tra il bordo inferiore del controllo e il bordo superiore dell'area client del contenitore.</target>       </trans-unit>
        <trans-unit id="3455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property value is equivalent to the <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property value of the control.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> è equivalente al valore della proprietà di <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType&gt;</ph> proprietà del <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> valore della proprietà del controllo.</target>       </trans-unit>
        <trans-unit id="3456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>Changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property values cause the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property value of the control to change.</source>
          <target state="translated">Le modifiche apportate al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> causa i valori delle proprietà di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> valore della proprietà del controllo da modificare.</target>       </trans-unit>
        <trans-unit id="3457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">Esempio di codice seguente crea tre <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> i controlli in un form e imposta le dimensioni e posizione utilizzando le varie dimensioni correlate e relative proprietà.</target>       </trans-unit>
        <trans-unit id="3458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che ha una larghezza e l'altezza di almeno 300 pixel.</target>       </trans-unit>
        <trans-unit id="3459" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>Gets the parent control that is not parented by another Windows Forms control.</source>
          <target state="translated">Ottiene il controllo padre non associato a un altro controllo Windows Form.</target>       </trans-unit>
        <trans-unit id="3460" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>Typically, this is the outermost <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that the control is contained in.</source>
          <target state="translated">In genere, si tratta del <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> più esterno in cui il controllo è contenuto.</target>       </trans-unit>
        <trans-unit id="3461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the top-level control that contains the current control.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> che rappresenta il controllo di primo livello che contiene il controllo corrente.</target>       </trans-unit>
        <trans-unit id="3462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>The top-level control is defined as the parent control that is not parented by another Windows Forms control.</source>
          <target state="translated">Controllo di primo livello è definito come il controllo padre non associato a un altro controllo Windows Form.</target>       </trans-unit>
        <trans-unit id="3463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>Typically, this is the outermost <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that the control is contained in.</source>
          <target state="translated">In genere, si tratta del <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> più esterno in cui il controllo è contenuto.</target>       </trans-unit>
        <trans-unit id="3464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>For example, if the control is contained on an MDI child <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, then the top-level control is the Multiple Document Interface (MDI) parent <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Ad esempio, se il controllo è contenuto in un figlio MDI <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, controllo di primo livello è l'elemento padre dell'interfaccia a documenti multipli (MDI) <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>If the control is not parented on a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, this property will return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Se non è associato il controllo su un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, questa proprietà restituirà <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="3466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>for all windows to get this property value.</source>
          <target state="translated">per tutte le finestre ottenere il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="3467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3468" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Update">
          <source>Causes the control to redraw the invalidated regions within its client area.</source>
          <target state="translated">Determina il nuovo disegno delle aree invalidate del controllo all'interno della relativa area client.</target>       </trans-unit>
        <trans-unit id="3469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>Executes any pending requests for painting.</source>
          <target state="translated">Esegue le richieste in sospeso per il disegno.</target>       </trans-unit>
        <trans-unit id="3470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>There are two ways to repaint a form and its contents:</source>
          <target state="translated">Esistono due modi per aggiornare la visualizzazione di un modulo e il relativo contenuto:</target>       </trans-unit>
        <trans-unit id="3471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>You can use one of the overloads of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method.</source>
          <target state="translated">È possibile utilizzare uno degli overload di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo con il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="3472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>You can call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph> method, which forces the control to redraw itself and all its children.</source>
          <target state="translated">È possibile chiamare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph> metodo, che impone il ridisegno se stesso e i relativi elementi figlio del controllo.</target>       </trans-unit>
        <trans-unit id="3473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>This is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method to <ph id="ph2">`true`</ph> and using it with <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>.</source>
          <target state="translated">Questo è equivalente all'impostazione di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo <ph id="ph2">`true`</ph> e l'uso con <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method governs what gets painted or repainted.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo determina le aree di disegno o ridisegnata.</target>       </trans-unit>
        <trans-unit id="3475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method governs when the painting or repainting occurs.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> metodo determina quando vengono eseguite queste operazioni.</target>       </trans-unit>
        <trans-unit id="3476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>If you use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> methods together rather than calling <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph>, what gets repainted depends on which overload of <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> you use.</source>
          <target state="translated">Se si utilizza il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> insieme anziché chiamare i metodi <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph>, cosa ridisegnare sul quale eseguire l'overload di <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> utilizzare.</target>       </trans-unit>
        <trans-unit id="3477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method just forces the control to be painted immediately, but the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method governs what gets painted when you call the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> metodo impone soltanto il controllo da disegnare immediatamente, ma la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> metodo determina cosa disegnare quando chiama il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="3478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>For more information, see the<bpt id="p1">[</bpt>WM_PAINT<ept id="p1">](http://msdn.microsoft.com/library/dd145213\(v=vs.85\).aspx)</ept>topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere il<bpt id="p1">[</bpt>WM_PAINT<ept id="p1">](http://msdn.microsoft.com/library/dd145213\(v=vs.85\).aspx)</ept>argomento.</target>       </trans-unit>
        <trans-unit id="3479" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Updates the bounds of the control.</source>
          <target state="translated">Aggiorna i limiti del controllo.</target>       </trans-unit>
        <trans-unit id="3480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds">
          <source>Updates the bounds of the control with the current size and location.</source>
          <target state="translated">Aggiorna i limiti del controllo in base alla posizione e alle dimensioni correnti.</target>       </trans-unit>
        <trans-unit id="3481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds">
          <source>If the new <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control is different from the previous <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event is raised.</source>
          <target state="translated">Se il nuovo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> del controllo è diverso dal precedente <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="3482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds">
          <source>Likewise, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control changes, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event is raised.</source>
          <target state="translated">Analogamente, se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> del controllo cambia, il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="3483" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> coordinate of the control.</source>
          <target state="translated">Coordinata <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3484" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> coordinate of the control.</source>
          <target state="translated">Coordinata <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3485" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> of the control.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3486" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> of the control.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3487" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Updates the bounds of the control with the specified size and location.</source>
          <target state="translated">Aggiorna i limiti del controllo in base alla posizione e alle dimensioni specificate.</target>       </trans-unit>
        <trans-unit id="3488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the new <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control if different from the previous <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event is raised.</source>
          <target state="translated">Se il nuovo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> di controllo è diverso dal precedente <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="3489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Likewise, is the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control changes, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event is raised.</source>
          <target state="translated">Analogamente, è il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> del controllo cambia, il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="3490" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> coordinate of the control.</source>
          <target state="translated">Coordinata <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3491" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> coordinate of the control.</source>
          <target state="translated">Coordinata <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3492" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> of the control.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3493" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> of the control.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="3494" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The client <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> of the control.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> client del controllo.</target>       </trans-unit>
        <trans-unit id="3495" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The client <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> of the control.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> client del controllo.</target>       </trans-unit>
        <trans-unit id="3496" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Updates the bounds of the control with the specified size, location, and client size.</source>
          <target state="translated">Aggiorna i limiti del controllo in base alle dimensioni, alla posizione e alle dimensioni client specificate.</target>       </trans-unit>
        <trans-unit id="3497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the new <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control is different from the previous <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event is raised.</source>
          <target state="translated">Se il nuovo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> del controllo è diverso dal precedente <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="3498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Likewise, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control changes, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event is raised.</source>
          <target state="translated">Analogamente, se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> del controllo cambia, il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> viene generato l'evento.</target>       </trans-unit>
        <trans-unit id="3499" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>Forces the assigned styles to be reapplied to the control.</source>
          <target state="translated">Determina la nuova applicazione degli stili assegnati al controllo.</target>       </trans-unit>
        <trans-unit id="3500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> method to get the styles to apply.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> metodo per ottenere lo stile da applicare.</target>       </trans-unit>
        <trans-unit id="3501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>The styles assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Style%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ExStyle%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> assigned to the control's <ph id="ph4">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> property are reapplied.</source>
          <target state="translated">Gli stili assegnati per il <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Style%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ExStyle%2A&gt;</ph> le proprietà del <ph id="ph3">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> assegnato al controllo <ph id="ph4">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> vengono riapplicate proprietà.</target>       </trans-unit>
        <trans-unit id="3502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>The control is repainted to reflect the style changes if necessary.</source>
          <target state="translated">Il controllo viene ridisegnato per riflettere le modifiche dello stile, se necessario.</target>       </trans-unit>
        <trans-unit id="3503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph> method has no effect if the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> property value is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph> metodo non ha alcun effetto se la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> valore della proprietà è <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="3504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>The following code example enables double-buffering on a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and updates the styles to reflect the changes.</source>
          <target state="translated">Esempio di codice seguente consente il doppio buffer su un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> e aggiorna gli stili per riflettere le modifiche.</target>       </trans-unit>
        <trans-unit id="3505" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateZOrder">
          <source>Updates the control in its parent's z-order.</source>
          <target state="translated">Aggiorna il controllo nell'ordine z del controllo padre.</target>       </trans-unit>
        <trans-unit id="3506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateZOrder">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.UpdateZOrder%2A&gt;</ph> method updates the position of the control in its parent control's z-order.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.UpdateZOrder%2A&gt;</ph> metodo aggiorna la posizione del controllo nell'ordine z del controllo padre.</target>       </trans-unit>
        <trans-unit id="3507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateZOrder">
          <source>For example, if this control is a newly created control that was added to a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>, the z-order is updated with the new control added to the back.</source>
          <target state="translated">Ad esempio, se questo controllo è un controllo appena creato che è stato aggiunto a un <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>, l'ordine z viene aggiornato con il nuovo controllo aggiunto alla fine.</target>       </trans-unit>
        <trans-unit id="3508" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source>Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.</source>
          <target state="translated">Ottiene o imposta un valore che indica se usare il cursore di attesa per il controllo corrente e per tutti i controlli figlio.</target>       </trans-unit>
        <trans-unit id="3509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use the wait cursor for the current control and all child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per usare il cursore di attesa per il controllo corrente e per tutti i controlli figlio; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source>Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.However, note that operations that block the UI thread will also block acursor change.Therefore, this property should only be used when performing time-consuming operations in another thread.</source>
          <target state="translated">Ogni volta che si esegue un'operazione che richiede una notevole quantità di tempo, utilizzare un cursore di attesa. Si noti tuttavia che le operazioni che bloccano il thread dell'interfaccia utente verranno bloccata anche acursor cambia. Questa proprietà, pertanto, deve essere utilizzata solo durante l'esecuzione di operazioni lunghe ed elaborate in un altro thread.</target>       </trans-unit>
        <trans-unit id="3512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source>To change the cursor globally and immediately, seethe <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property.</source>
          <target state="translated">Per modificare il cursore globale e immediatamente, vedere <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="3513" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Validated">
          <source>Occurs when the control is finished validating.</source>
          <target state="translated">Si verifica al termine della convalida del controllo.</target>       </trans-unit>
        <trans-unit id="3514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo dalla tastiera (TAB, MAIUSC + TAB e così via), chiamando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> , metodi o impostando la <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> proprietà sul form corrente, gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="3515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo usando il mouse o chiamando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> (metodo), gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="3516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> è impostata su <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> vengono soppressi.</target>       </trans-unit>
        <trans-unit id="3517" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> is set to <ph id="ph3">`true`</ph> in the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event delegate, all events that would usually occur after the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event are suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> proprietà del <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> è impostato su <ph id="ph3">`true`</ph> nel <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> delegato dell'evento, tutti gli eventi che in genere si verificano dopo il <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> evento verranno soppressi.</target>       </trans-unit>
        <trans-unit id="3518" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">Non tentare di impostare lo stato attivo dall'interno di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, o <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> gestori eventi.</target>       </trans-unit>
        <trans-unit id="3519" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">Questa operazione può causare l'applicazione o del sistema operativo di rispondere.</target>       </trans-unit>
        <trans-unit id="3520" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>For more information, see the<bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)</ept>topic, and the "Message Deadlocks" section of the <bpt id="p2">[</bpt>About Messages and Message Queues<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)</ept> topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere il<bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)</ept>argomento e la sezione "Messaggio deadlock" del <bpt id="p2">[</bpt>informazioni sui messaggi e le code di messaggi<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)</ept> argomento.</target>       </trans-unit>
        <trans-unit id="3521" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3522" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and validates an email address that the user enters.</source>
          <target state="translated">L'esempio di codice seguente viene utilizzata la classe derivata <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e convalida un indirizzo di posta elettronica immesso dall'utente.</target>       </trans-unit>
        <trans-unit id="3523" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>If the email address is not in the standard format (containing "<ph id="ph1">@" and "</ph>."), the validation fails, an <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> icon is displayed, and the event is canceled.</source>
          <target state="translated">Se l'indirizzo di posta elettronica non è nel formato standard (contenente "<ph id="ph1">@" and "</ph>."), la convalida non riesce, un <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> viene visualizzata l'icona e l'evento viene annullato.</target>       </trans-unit>
        <trans-unit id="3524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> control have been created on a form.</source>
          <target state="translated">Questo esempio si presuppone che un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> siano stati creati in un form.</target>       </trans-unit>
        <trans-unit id="3525" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Validating">
          <source>Occurs when the control is validating.</source>
          <target state="translated">Si verifica durante la convalida del controllo.</target>       </trans-unit>
        <trans-unit id="3526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo dalla tastiera (TAB, MAIUSC + TAB e così via), chiamando la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> , metodi o impostando la <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> proprietà sul form corrente, gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="3527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">Quando si modifica lo stato attivo usando il mouse o chiamando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> (metodo), gli eventi di stato attivo si verificano nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="3528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> è impostata su <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> vengono soppressi.</target>       </trans-unit>
        <trans-unit id="3529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> is set to <ph id="ph3">`true`</ph> in the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event delegate, all events that would usually occur after the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event are suppressed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> proprietà del <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> è impostato su <ph id="ph3">`true`</ph> nel <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> delegato dell'evento, tutti gli eventi che in genere si verificano dopo il <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> evento verranno soppressi.</target>       </trans-unit>
        <trans-unit id="3530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">Non tentare di impostare lo stato attivo dall'interno di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, o <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> gestori eventi.</target>       </trans-unit>
        <trans-unit id="3531" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">Questa operazione può causare l'applicazione o del sistema operativo di rispondere.</target>       </trans-unit>
        <trans-unit id="3532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>For more information, see the <ph id="ph1">`WM_KILLFOCUS`</ph> topic in the "Keyboard Input Reference" section, and the "Message Deadlocks" section of the "About Messages and Message Queues" topic in the MSDN library at <ph id="ph2">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">Per altre informazioni, vedere la <ph id="ph1">`WM_KILLFOCUS`</ph> argomento nella sezione "Riferimenti di Input da tastiera" e la sezione "Messaggio deadlock" dell'argomento "Sui messaggi e code di messaggi" in MSDN all'indirizzo <ph id="ph2">http://msdn.microsoft.com/library</ph>.</target>       </trans-unit>
        <trans-unit id="3533" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3534" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and validates an email address that the user enters.</source>
          <target state="translated">L'esempio di codice seguente viene utilizzata la classe derivata <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e convalida un indirizzo di posta elettronica immesso dall'utente.</target>       </trans-unit>
        <trans-unit id="3535" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>If the email address is not in the standard format (containing "<ph id="ph1">@" and "</ph>."), the validation fails, an <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> icon is displayed, and the event is canceled.</source>
          <target state="translated">Se l'indirizzo di posta elettronica non è nel formato standard (contenente "<ph id="ph1">@" and "</ph>."), la convalida non riesce, un <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> viene visualizzata l'icona e l'evento viene annullato.</target>       </trans-unit>
        <trans-unit id="3536" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> control have been created on a form.</source>
          <target state="translated">Questo esempio si presuppone che un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> siano stati creati in un form.</target>       </trans-unit>
        <trans-unit id="3537" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Visible">
          <source>Gets or sets a value indicating whether the control and all its child controls are displayed.</source>
          <target state="translated">Ottiene o imposta un valore che indica se vengono visualizzati il controllo e tutti i relativi controlli figlio.</target>       </trans-unit>
        <trans-unit id="3538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control and all its child controls are displayed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se vengono visualizzati il controllo e tutti i relativi controlli figlio; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>Note that even if <ph id="ph1">`Visible`</ph> is set to <ph id="ph2">`true`</ph>, the control might not be visible to the user if it is obscured behind other controls.</source>
          <target state="translated">Si noti che, anche se <ph id="ph1">`Visible`</ph> è impostato su <ph id="ph2">`true`</ph>, il controllo potrebbe non essere visibile all'utente se è nascosto dietro altri controlli.</target>       </trans-unit>
        <trans-unit id="3541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>The following code example uses the derived classes <ph id="ph1">&lt;xref:System.Windows.Forms.VScrollBar&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HScrollBar&gt;</ph> and sets their <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property values, based on the size of an <ph id="ph4">&lt;xref:System.Drawing.Image&gt;</ph> being displayed in a <ph id="ph5">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> control.</source>
          <target state="translated">Esempio di codice seguente usa le classi derivate <ph id="ph1">&lt;xref:System.Windows.Forms.VScrollBar&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.HScrollBar&gt;</ph> e imposta i <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> i valori delle proprietà in base alla dimensione di un <ph id="ph4">&lt;xref:System.Drawing.Image&gt;</ph> visualizzato in un <ph id="ph5">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> controllo.</target>       </trans-unit>
        <trans-unit id="3542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> has been created on a form and that <ph id="ph2">&lt;xref:System.Windows.Forms.HScrollBar&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.VScrollBar&gt;</ph> controls have been created on the <ph id="ph4">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph>.</source>
          <target state="translated">Questo esempio si presuppone che un <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> è stato creato in un form e che <ph id="ph2">&lt;xref:System.Windows.Forms.HScrollBar&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.VScrollBar&gt;</ph> controlli sono stati creati nel <ph id="ph4">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>This code should be called when the image is loaded into the picture box and by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event of the form.</source>
          <target state="translated">Questo codice deve essere chiamato quando l'immagine viene caricata nella casella di immagine e dal <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> eventi del modulo.</target>       </trans-unit>
        <trans-unit id="3544" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.VisibleChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> property value changes.</source>
          <target state="translated">Si verifica quando il valore della proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="3545" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.VisibleChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Questo evento viene generato se la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> proprietà viene modificata una modifica a livello di codice o l'interazione dell'utente.</target>       </trans-unit>
        <trans-unit id="3546" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.VisibleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3547" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.VisibleChanged">
          <source>The following code example raises the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.VisibleChanged&gt;</ph> event when the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property value of the <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> control has changed.</source>
          <target state="translated">Genera di esempio di codice seguente il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.VisibleChanged&gt;</ph> eventi quando il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> valore della proprietà di <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> controllo è stato modificato.</target>       </trans-unit>
        <trans-unit id="3548" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Width">
          <source>Gets or sets the width of the control.</source>
          <target state="translated">Ottiene o imposta la larghezza del controllo.</target>       </trans-unit>
        <trans-unit id="3549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Width">
          <source>The width of the control in pixels.</source>
          <target state="translated">Larghezza del controllo in pixel.</target>       </trans-unit>
        <trans-unit id="3550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Width">
          <source>Changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property values cause the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property value of the control to change.</source>
          <target state="translated">Le modifiche apportate al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> causa i valori delle proprietà di <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> valore della proprietà del controllo da modificare.</target>       </trans-unit>
        <trans-unit id="3551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Width">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">Esempio di codice seguente crea tre <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> i controlli in un form e imposta le dimensioni e posizione utilizzando le varie dimensioni correlate e relative proprietà.</target>       </trans-unit>
        <trans-unit id="3552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Width">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">In questo esempio si suppone una <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> che ha una larghezza e l'altezza di almeno 300 pixel.</target>       </trans-unit>
        <trans-unit id="3553" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.WindowTarget">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Questa proprietà non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="3554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.WindowTarget">
          <source>The NativeWindow contained within the control.</source>
          <target state="translated">NativeWindow contenuto nel controllo.</target>       </trans-unit>
        <trans-unit id="3555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.WindowTarget">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Questa proprietà non è pertinente per questa classe.</target>       </trans-unit>
        <trans-unit id="3556" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> di Windows da elaborare.</target>       </trans-unit>
        <trans-unit id="3557" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">Elabora i messaggi di Windows.</target>       </trans-unit>
        <trans-unit id="3558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>All messages are sent to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method after getting filtered through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> method.</source>
          <target state="translated">Tutti i messaggi vengono inviati i <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> metodo filtrati tramite il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="3559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method corresponds exactly to the Windows <ph id="ph2">`WindowProc`</ph> function.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> corrisponde esattamente alla funzione <ph id="ph2">`WindowProc`</ph> di Windows.</target>       </trans-unit>
        <trans-unit id="3560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>For more information about processing Windows messages, see the <bpt id="p1">[</bpt>WindowProc function<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sull'elaborazione dei messaggi di Windows, vedere il <bpt id="p1">[</bpt>funzione WindowProc<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>.</target>       </trans-unit>
        <trans-unit id="3561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>The following code example demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method to handle operating system messages identified in the <ph id="ph2">&lt;xref:System.Windows.Forms.Message&gt;</ph> structure.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> metodo per gestire i messaggi di sistema operativo identificati nella <ph id="ph2">&lt;xref:System.Windows.Forms.Message&gt;</ph> struttura.</target>       </trans-unit>
        <trans-unit id="3562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>The<bpt id="p1">[</bpt>WM_ACTIVATEAPP<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)</ept>operating system message is handled in this example to know when another application is becoming active.</source>
          <target state="translated">Il<bpt id="p1">[</bpt>WM_ACTIVATEAPP<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)</ept>messaggio del sistema operativo è gestito in questo esempio per sapere quando un'altra applicazione diventa attiva.</target>       </trans-unit>
        <trans-unit id="3563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>See the following topics to understand the available <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType&gt;</ph> values.</source>
          <target state="translated">Vedere gli argomenti seguenti per comprendere il disponibili <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType&gt;</ph> valori.</target>       </trans-unit>
        <trans-unit id="3564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>Actual constant values can be found in the Windows.h header file.</source>
          <target state="translated">I valori effettivi di costanti sono reperibile nel file di intestazione di Windows. h.</target>       </trans-unit>
        <trans-unit id="3565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">per il chiamante immediato chiamare codice non gestito.</target>       </trans-unit>
        <trans-unit id="3566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>Inheriting controls should call the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph> method to process any messages that they do not handle.</source>
          <target state="translated">I controlli ereditano deve chiamare la classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph> metodo per elaborare i messaggi che non gestiti.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>