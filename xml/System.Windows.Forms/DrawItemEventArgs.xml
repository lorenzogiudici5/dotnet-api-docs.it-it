<Type Name="DrawItemEventArgs" FullName="System.Windows.Forms.DrawItemEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7958d520c2f0d53aeadf9ca626af0a309925ef8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36522618" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce dati per l'evento <see langword="DrawItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `DrawItem` evento viene generato dai controlli owner draw, ad esempio il <xref:System.Windows.Forms.ListBox> e <xref:System.Windows.Forms.ComboBox> controlli. Contiene tutte le informazioni necessarie per l'utente disegnare l'elemento specificato, incluso l'indice dell'elemento, il <xref:System.Drawing.Rectangle>e il <xref:System.Drawing.Graphics> sul quale deve essere eseguito il disegno.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare proprietario <xref:System.Windows.Forms.ListBox> elementi. Il codice Usa il <xref:System.Windows.Forms.ListBox.DrawMode%2A> proprietà per specificare che gli elementi disegnati sono fisse dimensioni e la <xref:System.Windows.Forms.ListBox.DrawItem> evento per eseguire il disegno di ogni elemento nel <xref:System.Windows.Forms.ListBox>. Nell'esempio di codice Usa le proprietà e metodi del <xref:System.Windows.Forms.DrawItemEventArgs> classe passato come parametro al gestore dell'evento per tracciare gli elementi. Questo esempio si presuppone che un <xref:System.Windows.Forms.ListBox> controllo denominato `listBox1` è stato aggiunto a un form e che il <xref:System.Windows.Forms.ListBox.DrawItem> evento è gestito dal gestore dell'evento definito nell'esempio di codice. Nell'esempio si presuppone inoltre che siano stati aggiunti gli elementi per il <xref:System.Windows.Forms.ListBox> con il testo "Apple", "Arancione" e "Plum" in tale ordine.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DrawItemEventHandler" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.ListBox" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.TabControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.DrawItemEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
      </Parameters>
      <Docs>
        <param name="graphics">La superficie dell'oggetto <see cref="T:System.Drawing.Graphics" /> su cui disegnare.</param>
        <param name="font">L'oggetto <see cref="T:System.Drawing.Font" /> da utilizzare, di solito la proprietà <see cref="T:System.Drawing.Font" /> del controllo padre.</param>
        <param name="rect">I limiti dell'oggetto <see cref="T:System.Drawing.Rectangle" /> entro i quali disegnare.</param>
        <param name="index">Il valore di indice dell'oggetto <see cref="T:System.Windows.Forms.Control.ControlCollection" /> dell'elemento da disegnare.</param>
        <param name="state">Le informazioni <see cref="T:System.Windows.Forms.DrawItemState" /> del controllo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> per il controllo specificato con il tipo di carattere, lo stato, la superficie su cui disegnare e i limiti entro i quali disegnare specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState * System.Drawing.Color * System.Drawing.Color -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state, foreColor, backColor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">La superficie dell'oggetto <see cref="T:System.Drawing.Graphics" /> su cui disegnare.</param>
        <param name="font">L'oggetto <see cref="T:System.Drawing.Font" /> da utilizzare, di solito la proprietà <see cref="T:System.Drawing.Font" /> del controllo padre.</param>
        <param name="rect">I limiti dell'oggetto <see cref="T:System.Drawing.Rectangle" /> entro i quali disegnare.</param>
        <param name="index">Il valore di indice dell'oggetto <see cref="T:System.Windows.Forms.Control.ControlCollection" /> dell'elemento da disegnare.</param>
        <param name="state">Le informazioni <see cref="T:System.Windows.Forms.DrawItemState" /> del controllo.</param>
        <param name="foreColor">L'oggetto <see cref="T:System.Drawing.Color" /> di primo piano con cui disegnare il controllo.</param>
        <param name="backColor">L'oggetto <see cref="T:System.Drawing.Color" /> di sfondo con cui disegnare il controllo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> per il controllo specificato con il tipo di carattere, lo stato, il colore di primo piano, il colore di sfondo, la superficie su cui disegnare e i limiti entro i quali disegnare specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il colore di sfondo dell'elemento da disegnare.</summary>
        <value>L'oggetto <see cref="T:System.Drawing.Color" /> di sfondo dell'elemento da disegnare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se lo stato dell'elemento <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType>, il <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> è impostata su <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>. Se lo stato dell'elemento non è <xref:System.Windows.Forms.DrawItemState.Selected>, il <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> è impostata su <xref:System.Drawing.SystemColors.Window%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> evento. Questo rapporto consente di capire quando l'evento si verifica e può semplificare il debug.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di tipo <xref:System.Windows.Forms.ListBox> denominata `ListBox1`. Assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il rettangolo che rappresenta i limiti dell'elemento da disegnare.</summary>
        <value>L'oggetto <see cref="T:System.Drawing.Rectangle" /> che rappresenta i limiti dell'elemento da disegnare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come creare proprietario <xref:System.Windows.Forms.ListBox> elementi. Il codice Usa il <xref:System.Windows.Forms.ListBox.DrawMode%2A> proprietà per specificare che gli elementi disegnati sono fisse dimensioni e la <xref:System.Windows.Forms.ListBox.DrawItem> evento per eseguire il disegno di ogni elemento nel <xref:System.Windows.Forms.ListBox>. Nell'esempio di codice Usa le proprietà e metodi del <xref:System.Windows.Forms.DrawItemEventArgs> classe passato come parametro al gestore dell'evento per tracciare gli elementi. Questo esempio si presuppone che un <xref:System.Windows.Forms.ListBox> controllo denominato `listBox1` è stato aggiunto a un form e che il <xref:System.Windows.Forms.ListBox.DrawItem> evento è gestito dal gestore dell'evento definito nell'esempio di codice. Nell'esempio si presuppone inoltre che siano stati aggiunti gli elementi per il <xref:System.Windows.Forms.ListBox> con il testo "Apple", "Arancione" e "Plum" in tale ordine.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public virtual void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawBackground();" />
      <MemberSignature Language="F#" Value="abstract member DrawBackground : unit -&gt; unit&#xA;override this.DrawBackground : unit -&gt; unit" Usage="drawItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disegna lo sfondo all'interno dei limiti specificati nel costruttore del metodo <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" /> e con il colore appropriato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'elemento che viene disegnata è <xref:System.Windows.Forms.DrawItemState.Selected>, lo sfondo viene disegnato con il testo evidenziato.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare proprietario <xref:System.Windows.Forms.ListBox> elementi. Il codice Usa il <xref:System.Windows.Forms.ListBox.DrawMode%2A> proprietà per specificare che gli elementi disegnati presentano dimensioni fisse e la <xref:System.Windows.Forms.ListBox.DrawItem> evento per eseguire il disegno di ogni elemento nel <xref:System.Windows.Forms.ListBox>. Nell'esempio di codice Usa le proprietà e metodi del <xref:System.Windows.Forms.DrawItemEventArgs> classe passato come parametro al gestore dell'evento per tracciare gli elementi. Questo esempio si presuppone che un <xref:System.Windows.Forms.ListBox> controllo denominato `listBox1` è stato aggiunto a un form e che il <xref:System.Windows.Forms.ListBox.DrawItem> evento viene gestito dal gestore eventi che è definito nell'esempio di codice. Nell'esempio si presuppone inoltre che sono stati aggiunti elementi di <xref:System.Windows.Forms.ListBox> con il testo "Apple", "Arancione" e "Plum", nell'ordine specificato.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> in una classe derivata, assicurarsi di chiamare il <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> metodo della classe base.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public virtual void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawFocusRectangle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawFocusRectangle();" />
      <MemberSignature Language="F#" Value="abstract member DrawFocusRectangle : unit -&gt; unit&#xA;override this.DrawFocusRectangle : unit -&gt; unit" Usage="drawItemEventArgs.DrawFocusRectangle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disegna un rettangolo di attivazione all'interno dei limiti specificati nel costruttore <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'elemento che viene disegnata presenta <xref:System.Windows.Forms.DrawItemState.Focus>, viene disegnato il rettangolo di attivazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare proprietario <xref:System.Windows.Forms.ListBox> elementi. Il codice Usa il <xref:System.Windows.Forms.ListBox.DrawMode%2A> proprietà per specificare che gli elementi disegnati presentano dimensioni fisse e la <xref:System.Windows.Forms.ListBox.DrawItem> evento per eseguire il disegno di ogni elemento nel <xref:System.Windows.Forms.ListBox>. Nell'esempio di codice Usa le proprietà e metodi del <xref:System.Windows.Forms.DrawItemEventArgs> classe passato come parametro al gestore dell'evento per tracciare gli elementi. Questo esempio si presuppone che un <xref:System.Windows.Forms.ListBox> controllo denominato `listBox1` è stato aggiunto a un form e che il <xref:System.Windows.Forms.ListBox.DrawItem> evento viene gestito dal gestore eventi che è definito nell'esempio di codice. Nell'esempio si presuppone inoltre che sono stati aggiunti elementi di <xref:System.Windows.Forms.ListBox> con il testo "Apple", "Arancione" e "Plum", nell'ordine specificato.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> in una classe derivata, assicurarsi di chiamare il <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> metodo della classe base.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font" Usage="System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di carattere assegnato all'elemento da disegnare.</summary>
        <value>
          <see cref="T:System.Drawing.Font" /> assegnato all'elemento da disegnare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un oggetto suggerito <xref:System.Drawing.Font>, in genere il <xref:System.Windows.Forms.Control.Font%2A> proprietà del controllo padre.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare proprietario <xref:System.Windows.Forms.ListBox> elementi. Il codice Usa il <xref:System.Windows.Forms.ListBox.DrawMode%2A> proprietà per specificare che gli elementi disegnati presentano dimensioni fisse e la <xref:System.Windows.Forms.ListBox.DrawItem> evento per eseguire il disegno di ogni elemento nel <xref:System.Windows.Forms.ListBox>. Nell'esempio di codice Usa le proprietà e metodi del <xref:System.Windows.Forms.DrawItemEventArgs> classe passato come parametro al gestore dell'evento per tracciare gli elementi. Questo esempio si presuppone che un <xref:System.Windows.Forms.ListBox> controllo denominato `listBox1` è stato aggiunto a un form e che il <xref:System.Windows.Forms.ListBox.DrawItem> evento viene gestito dal gestore eventi che è definito nell'esempio di codice. Nell'esempio si presuppone inoltre che sono stati aggiunti elementi di <xref:System.Windows.Forms.ListBox> con il testo "Apple", "Arancione" e "Plum", nell'ordine specificato.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.Control.Font" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il colore di primo piano dell'elemento da disegnare.</summary>
        <value>L'oggetto <see cref="T:System.Drawing.Color" /> di primo piano dell'elemento da disegnare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se lo stato dell'elemento <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType>, il <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> è impostata su <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>. Se lo stato dell'elemento non è <xref:System.Windows.Forms.DrawItemState.Selected>, il <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> è impostata su <xref:System.Drawing.SystemColors.WindowText%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> evento. Questo rapporto consente di capire quando l'evento si verifica e può semplificare il debug.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di tipo <xref:System.Windows.Forms.ListBox> denominata `ListBox1`. Assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la superficie dell'immagine su cui disegnare l'elemento.</summary>
        <value>La superficie dell'oggetto <see cref="T:System.Drawing.Graphics" /> su cui disegnare l'elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come creare proprietario <xref:System.Windows.Forms.ListBox> elementi. Il codice Usa il <xref:System.Windows.Forms.ListBox.DrawMode%2A> proprietà per specificare che gli elementi disegnati presentano dimensioni fisse e la <xref:System.Windows.Forms.ListBox.DrawItem> evento per eseguire il disegno di ogni elemento nel <xref:System.Windows.Forms.ListBox>. Nell'esempio di codice Usa le proprietà e metodi del <xref:System.Windows.Forms.DrawItemEventArgs> classe passato come parametro al gestore dell'evento per tracciare gli elementi. Questo esempio si presuppone che un <xref:System.Windows.Forms.ListBox> controllo denominato `listBox1` è stato aggiunto a un form e che il <xref:System.Windows.Forms.ListBox.DrawItem> evento viene gestito dal gestore eventi che è definito nell'esempio di codice. Nell'esempio si presuppone inoltre che sono stati aggiunti elementi di <xref:System.Windows.Forms.ListBox> con il testo "Apple", "Arancione" e "Plum", nell'ordine specificato.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore di indice dell'elemento da disegnare.</summary>
        <value>Il valore numerico che rappresenta il valore <see cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" /> dell'elemento da disegnare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce il <xref:System.Windows.Forms.Control.ControlCollection.Item%2A> valore dell'elemento da disegnare <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>. Questa proprietà può restituire -1 se itemswere rimosso dall'elenco.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare proprietario <xref:System.Windows.Forms.ListBox> elementi. Il codice Usa il <xref:System.Windows.Forms.ListBox.DrawMode%2A> proprietà per specificare che gli elementi disegnati presentano dimensioni fisse e la <xref:System.Windows.Forms.ListBox.DrawItem> evento per eseguire il disegno di ogni elemento nel <xref:System.Windows.Forms.ListBox>. Nell'esempio di codice Usa le proprietà e metodi del <xref:System.Windows.Forms.DrawItemEventArgs> classe passato come parametro al gestore dell'evento per tracciare gli elementi. Questo esempio si presuppone che un <xref:System.Windows.Forms.ListBox> controllo denominato `listBox1` è stato aggiunto a un form e che il <xref:System.Windows.Forms.ListBox.DrawItem> evento viene gestito dal gestore eventi che è definito nell'esempio di codice. Nell'esempio si presuppone inoltre che sono stati aggiunti elementi di <xref:System.Windows.Forms.ListBox> con il testo "Apple", "Arancione" e "Plum", nell'ordine specificato.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DrawItemState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawItemState State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As DrawItemState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DrawItemState State { System::Windows::Forms::DrawItemState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.DrawItemState" Usage="System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stato dell'elemento da disegnare.</summary>
        <value>L'oggetto <see cref="T:System.Windows.Forms.DrawItemState" /> che rappresenta lo stato dell'elemento da disegnare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valore di questa proprietà può essere una combinazione del <xref:System.Windows.Forms.DrawItemState> membri dell'enumerazione. I membri possono essere combinati tramite operatori bit per bit.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> evento. Questo rapporto consente di capire quando l'evento si verifica e può semplificare il debug.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di tipo <xref:System.Windows.Forms.ListBox> denominata `ListBox1`. Assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
  </Members>
</Type>