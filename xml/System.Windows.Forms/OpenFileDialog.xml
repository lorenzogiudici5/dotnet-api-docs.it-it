<Type Name="OpenFileDialog" FullName="System.Windows.Forms.OpenFileDialog">
  <TypeSignature Language="C#" Value="public sealed class OpenFileDialog : System.Windows.Forms.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenFileDialog extends System.Windows.Forms.FileDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpenFileDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenFileDialog&#xA;Inherits FileDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialog sealed : System::Windows::Forms::FileDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ab5f5-101">Visualizza una finestra di dialogo che chiede all'utente di aprire un file.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-101">Displays a standard dialog box that prompts the user to open a file.</span></span> <span data-ttu-id="ab5f5-102">Questa classe non può essere ereditata.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5f5-103">Questa classe consente di verificare l'esistenza di un file e di aprirlo.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-103">This class allows you to check whether a file exists and to open it.</span></span> <span data-ttu-id="ab5f5-104">Il <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> proprietà determina se una casella di controllo di sola lettura viene visualizzata nella finestra di dialogo.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-104">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box.</span></span> <span data-ttu-id="ab5f5-105">Il <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> proprietà indica se è selezionata la casella di controllo di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-105">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.</span></span>  
  
 <span data-ttu-id="ab5f5-106">La maggior parte delle funzionalità di base per questa classe è stata trovata nella <xref:System.Windows.Forms.FileDialog> classe.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-106">Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.</span></span>  

<span data-ttu-id="ab5f5-107">In un sistema operativo da destra a sinistra, l'impostazione del modulo contenente <xref:System.Windows.Forms.Control.RightToLeft> proprietà <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localizza la finestra di dialogo **nome File**, **aprire**, e **Annulla** pulsanti.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-107">On a right-to-left operating system, setting the containing form's <xref:System.Windows.Forms.Control.RightToLeft> property to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localizes the dialog's **File Name**, **Open**, and **Cancel** buttons.</span></span> <span data-ttu-id="ab5f5-108">Se la proprietà non è impostata su <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, viene invece utilizzato il testo in lingua inglese.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-108">If the property is not set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, English text is used instead.</span></span>  

 <span data-ttu-id="ab5f5-109">Se si desidera assegnare all'utente la possibilità di selezionare una cartella anziché un file, utilizzare <xref:System.Windows.Forms.FolderBrowserDialog> invece.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-109">If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5f5-110">L'esempio di codice seguente crea un <xref:System.Windows.Forms.OpenFileDialog>, vengono impostate diverse proprietà per definire il comportamento del filtro e finestra di dialogo estensione file e consente di visualizzare la finestra di dialogo utilizzando il <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-110">The following code example creates an <xref:System.Windows.Forms.OpenFileDialog>, sets several properties to define the file extension filter and dialog behavior, and displays the dialog box using the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ab5f5-111">Nell'esempio si presuppone un form con un <xref:System.Windows.Forms.Button> di un riferimento al <xref:System.IO> aggiunto a tale spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-111">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and a reference to the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FileDialog" />
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab5f5-112">Inizializza un'istanza della classe <see cref="T:System.Windows.Forms.OpenFileDialog" />.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-112">Initializes an instance of the <see cref="T:System.Windows.Forms.OpenFileDialog" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5f5-113">Questo è il valore predefinito fornito dal compilatore costruttore per la <xref:System.Windows.Forms.OpenFileDialog> classe.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-113">This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public override bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab5f5-114">Ottiene o imposta un valore che indica se nella finestra di dialogo viene visualizzato un avviso quando l'utente specifica un nome di file inesistente.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-114">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</span></span></summary>
        <value>
          <span data-ttu-id="ab5f5-115"><see langword="true" /> se nella finestra di dialogo compare un avviso quando l'utente specifica un nome file inesistente; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-115"><see langword="true" /> if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ab5f5-116">Il valore predefinito è <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-116">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="Multiselect">
      <MemberSignature Language="C#" Value="public bool Multiselect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiselect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiselect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiselect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab5f5-117">Ottiene o imposta un valore che indica se la finestra di dialogo consente la selezione multipla di file.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-117">Gets or sets a value indicating whether the dialog box allows multiple files to be selected.</span></span></summary>
        <value>
          <span data-ttu-id="ab5f5-118"><see langword="true" /> se la finestra di dialogo consente di selezionare più file contemporaneamente o per gruppi; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-118"><see langword="true" /> if the dialog box allows multiple files to be selected together or concurrently; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ab5f5-119">Il valore predefinito è <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-119">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5f5-120">Utilizzare il <xref:System.Windows.Forms.FileDialog.FileNames%2A> proprietà per accedere all'elenco completo dei nomi file selezionati.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-120">Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5f5-121">Esempio di codice seguente consente all'utente di selezionare un numero di immagini e visualizzarle in <xref:System.Windows.Forms.PictureBox> controlli in un Form.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-121">The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form.</span></span> <span data-ttu-id="ab5f5-122">Viene illustrato come inizializzare un <xref:System.Windows.Forms.OpenFileDialog>, l'impostazione di <xref:System.Windows.Forms.FileDialog.Title%2A> e <xref:System.Windows.Forms.FileDialog.Filter%2A> proprietà e come consentire all'utente di selezionare più file impostando la <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> proprietà su true.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-122">It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true.</span></span> <span data-ttu-id="ab5f5-123">Questo esempio di codice si presuppone che il modulo esiste già un <xref:System.Windows.Forms.OpenFileDialog> controllo denominato `openFileDialog1`, <xref:System.Windows.Forms.Button> denominato `SelectFileButton`e un <xref:System.Windows.Forms.FlowLayoutPanel> denominato `flowLayoutPanel1`.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-123">This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileNames" />
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab5f5-124">Apre il file selezionato dall'utente, con autorizzazione di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-124">Opens the file selected by the user, with read-only permission.</span></span> <span data-ttu-id="ab5f5-125">Il file è specificato dalla proprietà <see cref="P:System.Windows.Forms.FileDialog.FileName" />.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-125">The file is specified by the <see cref="P:System.Windows.Forms.FileDialog.FileName" /> property.</span></span></summary>
        <returns><span data-ttu-id="ab5f5-126">Oggetto <see cref="T:System.IO.Stream" /> che specifica il file di sola lettura selezionato dall'utente.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-126">A <see cref="T:System.IO.Stream" /> that specifies the read-only file selected by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5f5-127">Il <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> metodo viene utilizzato per fornire una struttura per aprire rapidamente un file nella finestra di dialogo.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-127">The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box.</span></span> <span data-ttu-id="ab5f5-128">Il file viene aperto in modalità di sola lettura per motivi di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-128">The file is opened in read-only mode for security purposes.</span></span> <span data-ttu-id="ab5f5-129">Per aprire un file in modalità lettura/scrittura, è necessario utilizzare un altro metodo, ad esempio <xref:System.IO.FileStream>.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-129">To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5f5-130">Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-130">The following code example demonstrates how to use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab5f5-131">Il nome file è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-131">The file name is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileDialogPermission"><span data-ttu-id="ab5f5-132">Per aprire un file.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-132">to open a file.</span></span> <span data-ttu-id="ab5f5-133">Enumerazione associata: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-133">Associated enumeration: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />.</span></span></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChecked">
      <MemberSignature Language="C#" Value="public bool ReadOnlyChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyChecked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab5f5-134">Ottiene o imposta un valore che indica se è selezionata la casella di controllo di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-134">Gets or sets a value indicating whether the read-only check box is selected.</span></span></summary>
        <value>
          <span data-ttu-id="ab5f5-135"><see langword="true" /> se è selezionata la casella di controllo di sola lettura; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-135"><see langword="true" /> if the read-only check box is selected; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ab5f5-136">Il valore predefinito è <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-136">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5f5-137">Il <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> stato non influisce sulla modalità di lettura/scrittura che <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> viene utilizzato per aprire un file selezionato nella finestra di dialogo.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-137">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> uses to open a file selected in the dialog box.</span></span> <span data-ttu-id="ab5f5-138"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> il file verrà sempre aperta in modalità di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-138"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.</span></span>  
  
 <span data-ttu-id="ab5f5-139">Il <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> proprietà deve essere impostata prima in modo che la casella di controllo di sola lettura e verrà visualizzato nella finestra di dialogo.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-139">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5f5-140">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-140">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property.</span></span> <span data-ttu-id="ab5f5-141">Questo esempio viene visualizzato il <xref:System.Windows.Forms.OpenFileDialog> casella con il <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> proprietà impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-141">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="ab5f5-142">Se si sceglie l'opzione per aprire il file in modalità di sola lettura, la <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> restituisce proprietà `true`e <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> metodo viene utilizzato per aprire il file.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-142">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property evaluates to `true`, and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="ab5f5-143">In caso contrario, la <xref:System.IO.FileStream> classe viene utilizzata per aprire il file in modalità lettura/scrittura.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-143">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab5f5-144">Reimposta tutte le proprietà sui valori predefiniti.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-144">Resets all properties to their default values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileName">
      <MemberSignature Language="C#" Value="public string SafeFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SafeFileName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SafeFileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab5f5-145">Ottiene il nome e l'estensione del file selezionato nella finestra di dialogo.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-145">Gets the file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="ab5f5-146">Il nome file non include il percorso.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-146">The file name does not include the path.</span></span></summary>
        <value><span data-ttu-id="ab5f5-147">Nome ed estensione del file selezionato nella finestra di dialogo.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-147">The file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="ab5f5-148">Il nome file non include il percorso.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-148">The file name does not include the path.</span></span> <span data-ttu-id="ab5f5-149">Il valore predefinito è una stringa vuota.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-149">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5f5-150">Per migliorare la sicurezza per le applicazioni in quanto non espone informazioni sul percorso, è possibile utilizzare un nome file sicuro (solo il nome del file e l'estensione senza un percorso).</span><span class="sxs-lookup"><span data-stu-id="ab5f5-150">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="ab5f5-151">Questa proprietà deve essere accessibile al codice in esecuzione con attendibilità limitata.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-151">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileNames">
      <MemberSignature Language="C#" Value="public string[] SafeFileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SafeFileNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ SafeFileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab5f5-152">Ottiene una matrice di nomi e di estensioni per tutti i file selezionati nella finestra di dialogo.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-152">Gets an array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="ab5f5-153">I nomi dei file non includono il percorso.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-153">The file names do not include the path.</span></span></summary>
        <value><span data-ttu-id="ab5f5-154">Matrice di nomi e di estensioni per tutti i file selezionati nella finestra di dialogo.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-154">An array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="ab5f5-155">I nomi dei file non includono il percorso.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-155">The file names do not include the path.</span></span> <span data-ttu-id="ab5f5-156">Se non vengono selezionati file, viene restituita una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-156">If no files are selected, an empty array is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5f5-157">Per migliorare la sicurezza per le applicazioni in quanto non espone informazioni sul percorso, è possibile utilizzare un nome file sicuro (solo il nome del file e l'estensione senza un percorso).</span><span class="sxs-lookup"><span data-stu-id="ab5f5-157">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="ab5f5-158">Questa proprietà deve essere accessibile al codice in esecuzione con attendibilità limitata.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-158">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReadOnly">
      <MemberSignature Language="C#" Value="public bool ShowReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab5f5-159">Ottiene o imposta un valore che indica se la finestra di dialogo contiene una casella di controllo di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-159">Gets or sets a value indicating whether the dialog box contains a read-only check box.</span></span></summary>
        <value>
          <span data-ttu-id="ab5f5-160"><see langword="true" /> se la finestra di dialogo contiene una casella di controllo di sola lettura; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-160"><see langword="true" /> if the dialog box contains a read-only check box; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ab5f5-161">Il valore predefinito è <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-161">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab5f5-162">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-162">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property.</span></span> <span data-ttu-id="ab5f5-163">Questo esempio viene visualizzato il <xref:System.Windows.Forms.OpenFileDialog> casella con il <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> proprietà impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-163">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="ab5f5-164">Se si sceglie l'opzione per aprire il file in modalità di sola lettura, il <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> metodo viene utilizzato per aprire il file.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-164">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="ab5f5-165">In caso contrario, la <xref:System.IO.FileStream> classe viene utilizzata per aprire il file in modalità lettura/scrittura.</span><span class="sxs-lookup"><span data-stu-id="ab5f5-165">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
  </Members>
</Type>