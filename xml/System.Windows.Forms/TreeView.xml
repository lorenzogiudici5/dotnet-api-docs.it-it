<Type Name="TreeView" FullName="System.Windows.Forms.TreeView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0367625515be462bb1113f18a5a917eeaecb6881" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33660319" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeView : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Windows::Forms::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("AfterSelect")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Nodes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Visualizza un insieme gerarchico di elementi con etichetta, ciascuno dei quali rappresentato da un oggetto <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TreeView.Nodes%2A> insieme contiene tutti i <xref:System.Windows.Forms.TreeNode> oggetti che vengono assegnati al <xref:System.Windows.Forms.TreeView> controllo. I nodi dell'albero in questa raccolta sono detto ai nodi della struttura. Qualsiasi nodo dell'albero aggiunti successivamente a un nodo della struttura ad albero principale viene considerato un nodo figlio. Poiché ogni <xref:System.Windows.Forms.TreeNode> può contenere un insieme di altri <xref:System.Windows.Forms.TreeNode> oggetti, potrebbe essere difficile determinare la posizione della struttura ad albero quando si scorre la raccolta. È possibile analizzare il <xref:System.Windows.Forms.TreeNode.FullPath%2A?displayProperty=nameWithType> stringa usando il <xref:System.Windows.Forms.TreeView.PathSeparator%2A> stringa di valore per determinare dove un <xref:System.Windows.Forms.TreeNode> etichetta inizia e finisce.  
  
 È possibile visualizzare le immagini accanto ai nodi dell'albero tramite l'assegnazione di un <xref:System.Windows.Forms.ImageList> per il <xref:System.Windows.Forms.TreeView.ImageList%2A> proprietà e il valore di indice di riferimento a un <xref:System.Drawing.Image> nel <xref:System.Windows.Forms.ImageList> per assegnare tale <xref:System.Drawing.Image>. Per assegnare le immagini, utilizzare le proprietà seguenti:  
  
-   Impostare il <xref:System.Windows.Forms.TreeView.ImageIndex%2A> proprietà per il valore di indice di <xref:System.Drawing.Image> che si desidera visualizzare quando un nodo dell'albero non è selezionato.  
  
-   Impostare il <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> proprietà per il valore di indice di <xref:System.Drawing.Image> che si desidera visualizzare quando si seleziona un nodo dell'albero.  
  
 Le immagini a cui fa riferimento il <xref:System.Windows.Forms.TreeView.ImageIndex%2A> e <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> i valori delle proprietà sono le immagini predefinite visualizzate da tutti i nodi dell'albero assegnati al <xref:System.Windows.Forms.TreeView.Nodes%2A> insieme. Singoli nodi della struttura è possono sostituire le immagini predefinite impostando il <xref:System.Windows.Forms.TreeNode.ImageIndex%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A?displayProperty=nameWithType> proprietà.  
  
 Le immagini di state visualizzate di <xref:System.Windows.Forms.TreeView> sono 16 x 16 pixel per impostazione predefinita. L'impostazione di <xref:System.Windows.Forms.ImageList.ImageSize%2A> proprietà del <xref:System.Windows.Forms.TreeView.StateImageList%2A> non avrà alcun effetto sulla modalità di visualizzazione di immagini. Tuttavia, le immagini di stato vengono ridimensionate in base all'impostazione DPI di sistema quando il file app. config contiene la voce seguente:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 I nodi dell'albero possono essere espanso per visualizzare il livello successivo di nodi figlio dell'albero. L'utente è possibile espandere il <xref:System.Windows.Forms.TreeNode> facendo clic sul pulsante più (+), se viene visualizzato accanto a uno di <xref:System.Windows.Forms.TreeNode>, oppure è possibile espandere il <xref:System.Windows.Forms.TreeNode> chiamando il <xref:System.Windows.Forms.TreeNode.Expand%2A?displayProperty=nameWithType> (metodo). Per espandere tutti i livelli dei nodi figlio della struttura nel <xref:System.Windows.Forms.TreeNode.Nodes%2A> raccolta, chiamare il <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> metodo. È possibile comprimere l'elemento figlio <xref:System.Windows.Forms.TreeNode> livello chiamando il <xref:System.Windows.Forms.TreeNode.Collapse%2A?displayProperty=nameWithType> metodo o l'utente può premere il pulsante del segno di sottrazione (-), se viene visualizzato accanto a uno di <xref:System.Windows.Forms.TreeNode>. È inoltre possibile chiamare il <xref:System.Windows.Forms.TreeNode.Toggle%2A?displayProperty=nameWithType> metodo per alternare tra gli stati espansi e compressi.  
  
 I nodi dell'albero è possono visualizzare facoltativamente le caselle di controllo. Per visualizzare le caselle di controllo, impostare il <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> proprietà del <xref:System.Windows.Forms.TreeView> a `true`. Il <xref:System.Windows.Forms.TreeNode.Checked%2A> è impostata su `true` per i nodi dell'albero che sono in uno stato selezionato.  
  
> [!NOTE]
>  Impostazione di <xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=nameWithType> proprietà dall'interno di <xref:System.Windows.Forms.TreeView.BeforeCheck> o <xref:System.Windows.Forms.TreeView.AfterCheck> evento causa l'evento verrà generato più volte e può causare comportamenti imprevisti. Ad esempio, è possibile impostare il <xref:System.Windows.Forms.TreeNode.Checked%2A> proprietà nel gestore eventi quando si è in modo ricorsivo l'aggiornamento dei nodi figlio in modo che l'utente non debba espanderli e per ciascuno di essi. Per impedire che venga generato più volte l'evento, aggiungere logica al gestore eventi che il codice venga eseguita solo se il <xref:System.Windows.Forms.TreeViewEventArgs.Action%2A> proprietà del <xref:System.Windows.Forms.TreeViewEventArgs> non è impostata su <xref:System.Windows.Forms.TreeViewAction.Unknown?displayProperty=nameWithType>. Per un esempio di come eseguire questa operazione, vedere la sezione esempio del <xref:System.Windows.Forms.TreeView.AfterCheck> o <xref:System.Windows.Forms.TreeView.BeforeCheck> eventi.  
  
 È possibile modificare l'aspetto del <xref:System.Windows.Forms.TreeView> controllo impostando alcune proprietà di visualizzazione e di stile. Impostazione <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> a `true` viene visualizzato un pulsante segno più o meno (-) accanto a ogni <xref:System.Windows.Forms.TreeNode> che possono essere espansi o compressi, rispettivamente. L'impostazione di <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> proprietà `true` fa sì che il <xref:System.Windows.Forms.TreeView> per visualizzare linee per collegare tutti i nodi radice dell'albero. È possibile visualizzare linee che connettono i nodi figlio dell'albero ai rispettivi nodi radice impostando il <xref:System.Windows.Forms.TreeView.ShowLines%2A> proprietà `true`. L'impostazione di <xref:System.Windows.Forms.TreeView.HotTracking%2A> proprietà `true` cambia l'aspetto delle etichette del nodo dell'albero quando il puntatore del mouse su di essi. Quando intercettato, le etichette del nodo dell'albero assumono l'aspetto di un collegamento ipertestuale. È inoltre possibile personalizzare completamente l'aspetto del <xref:System.Windows.Forms.TreeView> controllo. A tale scopo, impostare il <xref:System.Windows.Forms.TreeView.DrawMode%2A> proprietà su un valore diverso da <xref:System.Windows.Forms.TreeViewDrawMode.Normal?displayProperty=nameWithType> e gestire il <xref:System.Windows.Forms.TreeView.DrawNode> evento.  
  
> [!NOTE]
>  Quando si imposta la <xref:System.Windows.Forms.TreeView.CheckBoxes%2A>, <xref:System.Windows.Forms.TreeView.Scrollable%2A>, <xref:System.Windows.Forms.TreeView.ImageIndex%2A>, e <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> proprietà in fase di esecuzione di <xref:System.Windows.Forms.TreeView> handle viene ricreato (vedere <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>) per aggiornare l'aspetto del controllo. In questo modo tutti i nodi dell'albero vengono compressi, ad eccezione di selezionato <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Windows.Forms.TreeView> controllo.  
  
 [!code-csharp[TreeViewMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewMisc/cs/form1.cs#10)]
 [!code-vb[TreeViewMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewMisc/vb/form1.vb#10)]  
  
 L'esempio di codice più complesso seguente consente di visualizzare informazioni sui clienti in un <xref:System.Windows.Forms.TreeView> controllo. I nomi dei clienti di visualizzare i nodi radice e i nodi figlio di visualizzare i numeri di ordine assegnati a ciascun cliente. In questo esempio, con 15 ordini vengono visualizzati 1.000 clienti. Per evitare di ridisegnare il <xref:System.Windows.Forms.TreeView> , utilizzare il <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> e <xref:System.Windows.Forms.TreeView.EndUpdate%2A> e in un periodo di attesa <xref:System.Windows.Forms.Cursor> viene visualizzato durante il <xref:System.Windows.Forms.TreeView> crea e disegna il <xref:System.Windows.Forms.TreeNode> oggetti. In questo esempio si suppone una `Customer` oggetto che può contenere una raccolta di `Order` oggetti. Inoltre, è necessario disporre di un file cursore denominato `MyWait.cur` nella directory dell'applicazione e che è stata creata un'istanza di un <xref:System.Windows.Forms.TreeView> control per un <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeNode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come modificare lo stato di compressione di un <xref:System.Windows.Forms.TreeView> in modo che tutti i nodi selezionati sono visibili. In primo luogo, tutti i nodi e vengono espansi, viene aggiunto un gestore per il <xref:System.Windows.Forms.TreeView.BeforeCollapse> evento. Quindi, tutti i nodi sono compressi. Il <xref:System.Windows.Forms.TreeView.BeforeCollapse> gestore eventi determina se un determinato nodo presenta nodi figlio che vengono controllati. Se un nodo presenta nodi figlio selezionati, viene annullata la compressione per tale nodo. Per consentire la compressione standard dei nodi quando si fa clic sul segno meno accanto a un nodo, il <xref:System.Windows.Forms.TreeView.BeforeCollapse> gestore eventi viene quindi rimosso.  
  
 Questo comportamento può anche essere implementato da Gestione il <xref:System.Windows.Forms.TreeView.BeforeExpand> evento, come illustrato nell'esempio relativo a tale argomento.  
  
 [!code-cpp[TreeViewShowCheckedNodes2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CPP/treeviewshowcheckednodes2.cpp#1)]
 [!code-csharp[TreeViewShowCheckedNodes2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CS/treeviewshowcheckednodes2.cs#1)]
 [!code-vb[TreeViewShowCheckedNodes2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/VB/treeviewshowcheckednodes2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="AfterCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterCheck As TreeViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewEventHandler ^ AfterCheck;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo aver selezionato la casella di controllo del nodo dell'albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione di <xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=nameWithType> proprietà dall'interno un <xref:System.Windows.Forms.TreeView.BeforeCheck> o <xref:System.Windows.Forms.TreeView.AfterCheck> gestore dell'evento, l'evento verrà generato più volte e può causare comportamenti imprevisti. Per impedire che venga generato più volte l'evento, aggiungere logica al gestore eventi che il codice venga eseguita solo se il <xref:System.Windows.Forms.TreeViewEventArgs.Action%2A> proprietà del <xref:System.Windows.Forms.TreeViewEventArgs> non è impostata su <xref:System.Windows.Forms.TreeViewAction.Unknown?displayProperty=nameWithType>.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Nell'esempio seguente aggiorna tutti i nodi dell'albero figlio di un <xref:System.Windows.Forms.TreeNode> quando l'utente modifica lo stato. Questo codice è necessario disporre una <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> con <xref:System.Windows.Forms.TreeNode> gli oggetti relativi <xref:System.Windows.Forms.TreeNodeCollection>. Il <xref:System.Windows.Forms.TreeNodeCollection> deve avere i nodi dell'albero con nodi figlio.  
  
 [!code-cpp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CPP/tn_checked.cpp#1)]
 [!code-csharp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CS/tn_checked.cs#1)]
 [!code-vb[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/VB/tn_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterCollapse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterCollapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterCollapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterCollapse As TreeViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewEventHandler ^ AfterCollapse;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo aver compresso il nodo dell'albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Nell'esempio seguente aggiorna tutti i nodi dell'albero figlio di un <xref:System.Windows.Forms.TreeNode> quando l'utente modifica lo stato. Questo codice è necessario disporre una <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> con <xref:System.Windows.Forms.TreeNode> gli oggetti relativi <xref:System.Windows.Forms.TreeNodeCollection>. Il <xref:System.Windows.Forms.TreeNodeCollection> deve avere i nodi dell'albero con nodi figlio.  
  
 [!code-cpp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CPP/tn_checked.cpp#1)]
 [!code-csharp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CS/tn_checked.cs#1)]
 [!code-vb[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/VB/tn_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterExpand">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterExpand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterExpand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterExpand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterExpand As TreeViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewEventHandler ^ AfterExpand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo aver espanso il nodo dell'albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.TreeView.AfterExpand> evento. Questo rapporto consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.TreeView> denominato `TreeView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.TreeView.AfterExpand> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#631](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#631)]
 [!code-vb[System.Windows.Forms.EventExamples#631](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#631)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.NodeLabelEditEventHandler AfterLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.NodeLabelEditEventHandler AfterLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterLabelEdit As NodeLabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::NodeLabelEditEventHandler ^ AfterLabelEdit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NodeLabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo aver modificato il testo dell'etichetta del nodo dell'albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente consente all'utente di modificare i nodi dell'albero non principali della utilizzando un <xref:System.Windows.Forms.ContextMenu>. Quando il clic destro mouse, la <xref:System.Windows.Forms.TreeNode> che viene individuato e archiviati in una variabile denominata `mySelectedNode`. Se è stato selezionato un nodo dell'albero non principali della viene inserito in uno stato modificabile, che consente all'utente di modificare l'etichetta del nodo. Quando l'utente smette di modificare l'etichetta del nodo dell'albero viene salvato il nuovo testo dell'etichetta. Per questo esempio, alcuni caratteri sono considerati non validi nel testo dell'etichetta. Se uno dei caratteri non validi nella stringa di etichetta, è la stringa è vuota, l'utente viene avvisato dell'errore e viene restituita l'etichetta per il testo precedente.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterSelect">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterSelect;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterSelect" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterSelect" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterSelect As TreeViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewEventHandler ^ AfterSelect;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo aver selezionato il nodo dell'albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento non si verifica quando il nodo è selezionato. Per rilevare se la selezione è stata cancellata, è possibile testare il <xref:System.Windows.Forms.TreeNode.IsSelected%2A?displayProperty=nameWithType> proprietà.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.TreeViewAction> enumerazione. Per eseguire questo esempio, incollare il codice seguente in un form contenente un <xref:System.Windows.Forms.TreeView> controllo denominato `TreeView1`. Questo esempio si presuppone che `TreeView1` viene popolato con gli elementi e <xref:System.Windows.Forms.TreeView.AfterSelect> evento sia connesso al gestore dell'evento definito nell'esempio.  
  
 [!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsSelected" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore di sfondo del controllo.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore di sfondo del controllo. Il valore predefinito corrisponde al valore della proprietà <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'immagine di sfondo del controllo <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Image" /> che rappresenta l'immagine di sfondo del controllo <see cref="T:System.Windows.Forms.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la proprietà <see cref="P:System.Windows.Forms.TreeView.BackgroundImage" /> cambia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il layout dell'immagine di sfondo del controllo <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.ImageLayout" />. Il valore predefinito è <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà, metodo/evento non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la proprietà <see cref="P:System.Windows.Forms.TreeView.BackgroundImageLayout" /> cambia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeCheck As TreeViewCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewCancelEventHandler ^ BeforeCheck;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima che venga selezionata la casella di controllo del nodo dell'albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Impostazione di <xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=nameWithType> proprietà dall'interno di <xref:System.Windows.Forms.TreeView.BeforeCheck> o <xref:System.Windows.Forms.TreeView.AfterCheck> evento causa l'evento verrà generato più volte e può causare comportamenti imprevisti. Ad esempio, è possibile impostare il <xref:System.Windows.Forms.TreeNode.Checked%2A> proprietà nel gestore eventi quando si è in modo ricorsivo l'aggiornamento dei nodi figlio, in modo che l'utente non debba espanderli e ognuno di essi per. Per impedire che venga generato più volte l'evento, aggiungere logica al gestore eventi che il codice venga eseguita solo se il <xref:System.Windows.Forms.TreeViewEventArgs.Action%2A> proprietà del <xref:System.Windows.Forms.TreeViewEventArgs> non è impostata su <xref:System.Windows.Forms.TreeViewAction.Unknown?displayProperty=nameWithType>.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Nell'esempio seguente aggiorna tutti i nodi dell'albero figlio di un <xref:System.Windows.Forms.TreeNode> quando l'utente modifica lo stato. Questo codice è necessario disporre una <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> con <xref:System.Windows.Forms.TreeNode> gli oggetti relativi <xref:System.Windows.Forms.TreeNodeCollection>. Il <xref:System.Windows.Forms.TreeNodeCollection> deve avere i nodi dell'albero con nodi figlio.  
  
 [!code-cpp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CPP/tn_checked.cpp#1)]
 [!code-csharp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CS/tn_checked.cs#1)]
 [!code-vb[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/VB/tn_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeCollapse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeCollapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeCollapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeCollapse As TreeViewCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewCancelEventHandler ^ BeforeCollapse;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima che venga compresso il nodo dell'albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come modificare lo stato di compressione di un <xref:System.Windows.Forms.TreeView> in modo che tutti i nodi selezionati sono visibili. In primo luogo, tutti i nodi e vengono espansi, viene aggiunto un gestore per il <xref:System.Windows.Forms.TreeView.BeforeCollapse> evento. Quindi, tutti i nodi sono compressi. Il <xref:System.Windows.Forms.TreeView.BeforeCollapse> gestore eventi determina se un determinato nodo presenta nodi figlio che vengono controllati. Se un nodo presenta nodi figlio selezionati, viene annullata la compressione per tale nodo. Per consentire la compressione standard dei nodi quando si fa clic sul segno meno accanto a un nodo, il <xref:System.Windows.Forms.TreeView.BeforeCollapse> gestore eventi viene quindi rimosso.  
  
 Questo comportamento può anche essere implementato da Gestione il <xref:System.Windows.Forms.TreeView.BeforeExpand> evento, come illustrato nell'esempio relativo a tale argomento.  
  
 Per un esempio completo, vedere il <xref:System.Windows.Forms.TreeView.%23ctor%2A> argomento relativo al costruttore.  
  
 [!code-cpp[TreeViewShowCheckedNodes2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CPP/treeviewshowcheckednodes2.cpp#2)]
 [!code-csharp[TreeViewShowCheckedNodes2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CS/treeviewshowcheckednodes2.cs#2)]
 [!code-vb[TreeViewShowCheckedNodes2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/VB/treeviewshowcheckednodes2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeExpand">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeExpand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeExpand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeExpand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeExpand As TreeViewCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewCancelEventHandler ^ BeforeExpand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima che venga espanso il nodo dell'albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come modificare lo stato di compressione di un <xref:System.Windows.Forms.TreeView> in modo che tutti i nodi selezionati sono visibili. In primo luogo, tutti i nodi vengono compressi e viene aggiunto un gestore per il <xref:System.Windows.Forms.TreeView.BeforeExpand> evento. Quindi, tutti i nodi vengono espanse. Il <xref:System.Windows.Forms.TreeView.BeforeExpand> gestore eventi determina se un determinato nodo presenta nodi figlio che vengono controllati. Se un nodo figlio selezionati, l'espansione di tale nodo viene annullata. Per consentire l'espansione standard dei nodi quando si fa clic sul segno più accanto a un nodo, il <xref:System.Windows.Forms.TreeView.BeforeExpand> gestore eventi viene quindi rimosso.  
  
 Questo comportamento può anche essere implementato da Gestione il <xref:System.Windows.Forms.TreeView.BeforeCollapse> evento, come illustrato nell'esempio relativo a tale argomento.  
  
 Per un esempio completo, vedere il <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> argomento di riferimento.  
  
 [!code-cpp[TreeViewShowCheckedNodes1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CPP/treeviewshowcheckednodes1.cpp#2)]
 [!code-csharp[TreeViewShowCheckedNodes1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CS/treeviewshowcheckednodes1.cs#2)]
 [!code-vb[TreeViewShowCheckedNodes1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/VB/treeviewshowcheckednodes1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.NodeLabelEditEventHandler BeforeLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.NodeLabelEditEventHandler BeforeLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeLabelEdit As NodeLabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::NodeLabelEditEventHandler ^ BeforeLabelEdit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NodeLabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima che venga modificato il testo dell'etichetta del nodo dell'albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> <xref:System.Windows.Forms.TreeView.AfterSelect> e <xref:System.Windows.Forms.TreeView.TopNode%2A> membri. Per eseguire questo esempio, incollare il codice seguente in un form contenente un `TreeView` controllo denominato `TreeView1`. Chiamare il `InitializeTreeView` metodo nel costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeSelect">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeSelect;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeSelect" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeSelect" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeSelect As TreeViewCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewCancelEventHandler ^ BeforeSelect;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima che venga selezionato il nodo dell'albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.TreeView.BeforeSelect> evento. Questo rapporto consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.TreeView> denominato `TreeView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.TreeView.BeforeSelect> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#635](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#635)]
 [!code-vb[System.Windows.Forms.EventExamples#635](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#635)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disabilita la ridefinizione della visualizzazione albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per gestire le prestazioni, mentre gli elementi vengono aggiunti uno alla volta per il <xref:System.Windows.Forms.TreeView>, chiamare il <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> metodo. Il <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> metodo impedisce il controllo fino a quando il <xref:System.Windows.Forms.TreeView.EndUpdate%2A> metodo viene chiamato.  
  
 Il modo migliore per aggiungere elementi a un controllo di visualizzazione albero consiste nell'utilizzare il <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> metodo per aggiungere una matrice di elementi di nodo dell'albero a una visualizzazione albero. Tuttavia, se si desidera aggiungere gli elementi uno alla volta, utilizzare il <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> per impedire il <xref:System.Windows.Forms.TreeView> controllo di disegno durante le operazioni di aggiunta. Per consentire il controllo riprendere il disegno, chiamare il <xref:System.Windows.Forms.TreeView.EndUpdate%2A> metodo quando tutti i nodi sono stati aggiunti alla visualizzazione albero.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare informazioni sui clienti in un <xref:System.Windows.Forms.TreeView> controllo. I nomi dei clienti di visualizzare i nodi radice e i nodi figlio di visualizzare i numeri di ordine assegnati a ciascun cliente. In questo esempio, con 15 ordini vengono visualizzati 1.000 clienti. Per evitare di ridisegnare il <xref:System.Windows.Forms.TreeView> , utilizzare il <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> e <xref:System.Windows.Forms.TreeView.EndUpdate%2A> e in un periodo di attesa <xref:System.Windows.Forms.Cursor> viene visualizzato durante il <xref:System.Windows.Forms.TreeView> crea e disegna il <xref:System.Windows.Forms.TreeNode> oggetti. In questo esempio si suppone una `Customer` oggetto che può contenere una raccolta di `Order` oggetti. Inoltre, è necessario disporre di un file cursore denominato `MyWait.cur` nella directory dell'applicazione e che è stata creata un'istanza di un <xref:System.Windows.Forms.TreeView> control per un <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.EndUpdate" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo stile del bordo del controllo di visualizzazione albero.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.BorderStyle" />. Il valore predefinito è <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Windows.Forms.TreeView.BorderStyle%2A> è impostata su <xref:System.Windows.Forms.BorderStyle.Fixed3D>, <xref:System.Windows.Forms.TreeView> ha un aspetto tridimensionale, incassato. Per visualizzare un bordo sottile e piatto intorno il <xref:System.Windows.Forms.TreeView> di controllo, impostare il <xref:System.Windows.Forms.BorderStyle> proprietà <xref:System.Windows.Forms.BorderStyle.FixedSingle>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.BorderStyle> enumerazione e <xref:System.Windows.Forms.TreeView.BorderStyle%2A>, <xref:System.Windows.Forms.TreeView.ShowLines%2A>, <xref:System.Windows.Forms.TreeView.Scrollable%2A>, <xref:System.Windows.Forms.TreeView.HideSelection%2A> e <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> proprietà. Per eseguire questo esempio, incollare il codice seguente in un form e chiamare il `InitializeTreeView` metodo nel costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore assegnato non è uno dei valori di <see cref="T:System.Windows.Forms.BorderStyle" />.</exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public bool CheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.CheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckBoxes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se le caselle di controllo vengono visualizzate accanto ai nodi dell'albero nel controllo di visualizzazione albero.</summary>
        <value>
          <see langword="true" /> se una casella di controllo viene visualizzata accanto a ciascun nodo della struttura ad albero nel controllo di visualizzazione ad albero; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene visualizzata una casella di controllo a sinistra dell'etichetta del nodo della struttura sia nodo dell'albero <xref:System.Drawing.Image>, se presente. Caselle di controllo Consenti all'utente di selezionare più di un nodo dell'albero alla volta.  
  
 Quando il <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> proprietà di un <xref:System.Windows.Forms.TreeView> è impostato su `true`e <xref:System.Windows.Forms.TreeView.StateImageList%2A> è impostata, ogni <xref:System.Windows.Forms.TreeNode> contenuta nel <xref:System.Windows.Forms.TreeView> consente di visualizzare le immagini prima e seconda dal <xref:System.Windows.Forms.TreeView.StateImageList%2A> per indicare un non è selezionata o controllato lo stato, rispettivamente. Tuttavia, le immagini visualizzate potrebbero essere diverse se si verifica la situazione seguente: se il <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> del nodo è impostata su un valore diverso da 0 o 1 e <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> proprietà dell'elemento padre <xref:System.Windows.Forms.TreeView> è impostato su `false`, il <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> non reimpostata automaticamente su -1 per indicare che non è impostata. In questo caso, viene visualizzata l'immagine di stato in corrispondenza della posizione di indice indicato. Se <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> è impostato su `true` nuovamente, le immagini del prima e seconda la <xref:System.Windows.Forms.TreeView.StateImageList%2A> vengono visualizzate per indicare uno stato selezionato o deselezionato, rispettivamente.  
  
> [!NOTE]
>  Quando si imposta la <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> proprietà in fase di esecuzione di <xref:System.Windows.Forms.TreeView> handle viene ricreato (vedere <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>) per aggiornare l'aspetto del controllo. In questo modo tutti i nodi dell'albero vengono compressi, fatta eccezione per selezionato <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come modificare lo stato di compressione di un <xref:System.Windows.Forms.TreeView> in modo che tutti i nodi selezionati sono visibili. In primo luogo, tutti i nodi vengono compressi e viene aggiunto un gestore per il <xref:System.Windows.Forms.TreeView.BeforeExpand> evento. Quindi, tutti i nodi vengono espanse. Il <xref:System.Windows.Forms.TreeView.BeforeExpand> gestore eventi determina se un determinato nodo presenta nodi figlio che vengono controllati. Se un nodo figlio selezionati, l'espansione di tale nodo viene annullata. Per consentire l'espansione standard dei nodi quando si fa clic sul segno più accanto a un nodo, il <xref:System.Windows.Forms.TreeView.BeforeExpand> gestore eventi viene quindi rimosso.  
  
 Questo comportamento può anche essere implementato da Gestione il <xref:System.Windows.Forms.TreeView.BeforeCollapse> evento, come illustrato nell'esempio relativo a tale argomento.  
  
 [!code-cpp[TreeViewShowCheckedNodes1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CPP/treeviewshowcheckednodes1.cpp#1)]
 [!code-csharp[TreeViewShowCheckedNodes1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CS/treeviewshowcheckednodes1.cs#1)]
 [!code-vb[TreeViewShowCheckedNodes1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/VB/treeviewshowcheckednodes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Checked" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Comprime tutti i nodi dell'albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TreeView.CollapseAll%2A> metodo comprime tutti i <xref:System.Windows.Forms.TreeNode> oggetti, che include tutti i nodi figlio dell'albero nel <xref:System.Windows.Forms.TreeView> controllo.  
  
> [!NOTE]
>  Lo stato di un <xref:System.Windows.Forms.TreeNode> persiste. Ad esempio, si supponga di chiamare il <xref:System.Windows.Forms.TreeNode.Expand%2A> metodo per un nodo dell'albero di radice. Se i nodi figlio non sono stati compressi in precedenza, verranno visualizzati nello stato espanso. La chiamata di <xref:System.Windows.Forms.TreeView.CollapseAll%2A> metodo assicura che tutti i nodi dell'albero vengono visualizzati in uno stato compresso.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come modificare lo stato di compressione di un <xref:System.Windows.Forms.TreeView> in modo che tutti i nodi selezionati sono visibili. In primo luogo, tutti i nodi vengono compressi e viene aggiunto un gestore per il <xref:System.Windows.Forms.TreeView.BeforeExpand> evento. Quindi, tutti i nodi vengono espanse. Il <xref:System.Windows.Forms.TreeView.BeforeExpand> gestore eventi determina se un determinato nodo presenta nodi figlio che vengono controllati. Se un nodo figlio selezionati, l'espansione di tale nodo viene annullata. Per consentire l'espansione standard dei nodi quando si fa clic sul segno più accanto a un nodo, il <xref:System.Windows.Forms.TreeView.BeforeExpand> gestore eventi viene quindi rimosso.  
  
 Questo comportamento può anche essere implementato da Gestione il <xref:System.Windows.Forms.TreeView.BeforeCollapse> evento, come illustrato nell'esempio relativo a tale argomento.  
  
 Per un esempio completo, vedere il <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> argomento di riferimento.  
  
 [!code-cpp[TreeViewShowCheckedNodes1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CPP/treeviewshowcheckednodes1.cpp#2)]
 [!code-csharp[TreeViewShowCheckedNodes1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CS/treeviewshowcheckednodes1.cs#2)]
 [!code-vb[TreeViewShowCheckedNodes1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/VB/treeviewshowcheckednodes1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un handle per il controllo.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i parametri necessari per la creazione quando viene creato l'handle del controllo.</summary>
        <value>Parametri di creazione.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">Per accedere al codice non gestito quando si recupera il valore della proprietà. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le dimensioni predefinite del controllo.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Size" /> predefinito del controllo.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
        <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Windows.Forms.TreeView" /> e, facoltativamente, le risorse gestite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal metodo pubblico `Dispose` (metodo) e <xref:System.Object.Finalize%2A> metodo. `Dispose` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.  
  
 Quando il `disposing` parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.Windows.Forms.TreeView> riferimenti. Il metodo richiama il metodo `Dispose` di ciascun oggetto cui viene fatto riferimento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            Il metodo <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. Quando si esegue l'override <see langword="Dispose(Boolean)" /> prestare attenzione a non fare riferimento a oggetti che sono stati eliminati in una precedente chiamata a <see langword="Dispose" />. Per ulteriori informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 Per ulteriori informazioni su <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [si esegue l'override del metodo Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la superficie del controllo deve essere ridisegnata usando un buffer secondario. La proprietà <see cref="P:System.Windows.Forms.TreeView.DoubleBuffered" /> non influisce sul controllo <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>
          <see langword="true" /> se il controllo utilizza un buffer secondario; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione di <xref:System.Windows.Forms.TreeView.DoubleBuffered%2A> non influisce sulla proprietà di <xref:System.Windows.Forms.TreeView> controllo. Se si desidera ridurre lo sfarfallio quando il <xref:System.Windows.Forms.TreeView> viene disegnato, utilizzare il <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> e <xref:System.Windows.Forms.TreeView.EndUpdate%2A> metodi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewDrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TreeViewDrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.DrawMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawMode As TreeViewDrawMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeViewDrawMode DrawMode { System::Windows::Forms::TreeViewDrawMode get(); void set(System::Windows::Forms::TreeViewDrawMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewDrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la modalità con cui deve essere disegnato il controllo.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.TreeViewDrawMode" />. Il valore predefinito è <see cref="F:System.Windows.Forms.TreeViewDrawMode.Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I nodi di un <xref:System.Windows.Forms.TreeView> in genere vengono disegnati dal sistema operativo. Il <xref:System.Windows.Forms.TreeView.DrawMode%2A> proprietà consente di personalizzare l'aspetto dei nodi. A tale scopo, impostare <xref:System.Windows.Forms.TreeView.DrawMode%2A> a <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType> o <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType> e fornire un gestore per il <xref:System.Windows.Forms.TreeView.DrawNode> evento. Si tratta del disegno personalizzato.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come personalizzare un <xref:System.Windows.Forms.TreeView> controllo mediante il disegno personalizzato. Il <xref:System.Windows.Forms.TreeView> controllo nell'esempio consente di visualizzare il tag di nodo facoltativo le etichette di nodo standard. Tag di nodo vengono specificati utilizzando il <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> proprietà. Il <xref:System.Windows.Forms.TreeView> controllo utilizza anche colori personalizzati, che includono un colore di evidenziazione.  
  
 È possibile personalizzare la maggior parte del <xref:System.Windows.Forms.TreeView> colori impostando le proprietà di colore, ma il colore di evidenziazione di selezione non è disponibile come proprietà. Inoltre, il rettangolo di evidenziazione di selezione predefinito si estende solo attorno un'etichetta del nodo. Il disegno personalizzato deve essere utilizzato per disegnare i tag di nodo e per disegnare un rettangolo di evidenziazione personalizzato sufficientemente grande da includere un tag di nodo.  
  
 Per un esempio completo, vedere il <xref:System.Windows.Forms.TreeView.DrawNode> argomento di riferimento.  
  
 [!code-cpp[TreeViewOwnerDraw#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#2)]
 [!code-csharp[TreeViewOwnerDraw#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#2)]
 [!code-vb[TreeViewOwnerDraw#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore della proprietà non è un valore valido dell'oggetto <see cref="T:System.Windows.Forms.TreeViewDrawMode" />.</exception>
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
        <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
      </Docs>
    </Member>
    <Member MemberName="DrawNode">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawTreeNodeEventHandler DrawNode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawTreeNodeEventHandler DrawNode" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.DrawNode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawNode As DrawTreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawTreeNodeEventHandler ^ DrawNode;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawTreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene disegnato un oggetto <see cref="T:System.Windows.Forms.TreeView" /> e la proprietà <see cref="P:System.Windows.Forms.TreeView.DrawMode" /> è impostata su un valore di <see cref="T:System.Windows.Forms.TreeViewDrawMode" /> diverso da <see cref="F:System.Windows.Forms.TreeViewDrawMode.Normal" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo evento per personalizzare l'aspetto dei nodi in un <xref:System.Windows.Forms.TreeView> controllo mediante il disegno personalizzato.  
  
 Questo evento viene generato solo quando il <xref:System.Windows.Forms.TreeView.DrawMode%2A> è impostata su <xref:System.Windows.Forms.TreeViewDrawMode> valori di <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll> o <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>. Nella tabella seguente indica come il <xref:System.Windows.Forms.TreeNode> può essere personalizzato quando il <xref:System.Windows.Forms.TreeView.DrawMode%2A> è impostata su questi valori.  
  
|Valore della proprietà DrawMode|Personalizzazione dell'oggetto TreeNode|  
|-----------------------------|----------------------------|  
|<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>|Il <xref:System.Windows.Forms.TreeNode> area etichetta può essere personalizzato. Tutti gli altri <xref:System.Windows.Forms.TreeNode> elementi vengono disegnati automaticamente.|  
|<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>|L'aspetto dell'intero <xref:System.Windows.Forms.TreeNode> può essere personalizzato. Le icone, caselle di controllo, segni più e meno e linee che connettono i nodi devono essere disegnate manualmente se si desidera visualizzarli.|  
  
 L'area che il <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=nameWithType> occupata se venisse creata utilizzando il tipo di carattere specificato dal valore di <xref:System.Windows.Forms.TreeView> del controllo <xref:System.Windows.Forms.Control.Font%2A> corrisponde all'area in cui un nodo può essere selezionato per selezionarlo. Si tratta di area di hit test. Se si disegna di fuori di quest'area, è necessario fornire codice che seleziona un nodo quando viene selezionato nell'area visibile.  
  
 Area di hit test corrisponde al <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A?displayProperty=nameWithType> proprietà quando si utilizza <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>. Quando si utilizza <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>, tuttavia, il <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A?displayProperty=nameWithType> proprietà include l'intera larghezza del <xref:System.Windows.Forms.TreeView>. In questo caso, è possibile accedere all'area di hit test ottenendo il <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A?displayProperty=nameWithType> valore e l'accesso ai relativi <xref:System.Windows.Forms.TreeNode.Bounds%2A?displayProperty=nameWithType> proprietà. È quindi possibile creare l'area di hit test di nodo all'interno di questi limiti, o è possibile fornire il proprio codice di hit test. Notare che l'impostazione di <xref:System.Windows.Forms.TreeNode.NodeFont%2A?displayProperty=nameWithType> proprietà non viene modificata la dimensione dell'area di hit test, viene calcolato usando il tipo di carattere specificato per l'intero <xref:System.Windows.Forms.TreeView>.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come personalizzare un <xref:System.Windows.Forms.TreeView> controllo mediante il disegno personalizzato. Il <xref:System.Windows.Forms.TreeView> controllo nell'esempio consente di visualizzare il tag di nodo facoltativo le etichette di nodo standard. Tag di nodo vengono specificati utilizzando il <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> proprietà. Il <xref:System.Windows.Forms.TreeView> controllo utilizza anche colori personalizzati, che includono un colore di evidenziazione.  
  
 È possibile personalizzare la maggior parte del <xref:System.Windows.Forms.TreeView> colori impostando le proprietà di colore, ma il colore di evidenziazione di selezione non è disponibile come proprietà. Inoltre, il rettangolo di evidenziazione di selezione predefinito si estende solo attorno un'etichetta del nodo. Il disegno personalizzato deve essere utilizzato per disegnare i tag di nodo e per disegnare un rettangolo di evidenziazione personalizzato sufficientemente grande da includere un tag di nodo.  
  
 Nell'esempio, un gestore per il <xref:System.Windows.Forms.TreeView.DrawNode> disegna evento tag di nodo e di selezione personalizzata evidenziare manualmente. I nodi non selezionati non richiedono la personalizzazione. Per questo motivo, il <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A?displayProperty=nameWithType> è impostata su `true` in modo che vengano creati automaticamente dal sistema operativo.  
  
 Inoltre, un gestore per il <xref:System.Windows.Forms.Control.MouseDown> evento fornisce l'hit test. Per impostazione predefinita, un nodo può essere selezionato solo facendo clic l'area attorno alla relativa etichetta. Il <xref:System.Windows.Forms.Control.MouseDown> gestore eventi consente di selezionare un nodo che si fa clic in un punto qualsiasi all'interno di quest'area o l'area attorno a un tag di nodo, se presente.  
  
 [!code-cpp[TreeViewOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#1)]
 [!code-csharp[TreeViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#1)]
 [!code-vb[TreeViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
        <altmember cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abilita ogni nuovo disegno della visualizzazione albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per gestire le prestazioni, mentre gli elementi vengono aggiunti uno alla volta per il <xref:System.Windows.Forms.TreeView>, chiamare il <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> metodo. Il <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> metodo impedisce il controllo fino a quando il <xref:System.Windows.Forms.TreeView.EndUpdate%2A> metodo viene chiamato.  
  
 Il modo migliore per aggiungere elementi a un controllo di visualizzazione albero consiste nell'utilizzare il <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> metodo per aggiungere una matrice di elementi di nodo dell'albero a una visualizzazione albero. Tuttavia, se si desidera aggiungere gli elementi uno alla volta, utilizzare il <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> per impedire il <xref:System.Windows.Forms.TreeView> controllo di disegno durante le operazioni di aggiunta. Per consentire il controllo di essere ridisegnato, chiamare il <xref:System.Windows.Forms.TreeView.EndUpdate%2A> metodo quando tutti i nodi sono stati aggiunti alla visualizzazione albero.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare informazioni sui clienti in un <xref:System.Windows.Forms.TreeView> controllo. I nomi dei clienti di visualizzare i nodi radice e i nodi figlio di visualizzare i numeri di ordine assegnati a ciascun cliente. In questo esempio, con 15 ordini vengono visualizzati 1.000 clienti. Per evitare di ridisegnare il <xref:System.Windows.Forms.TreeView> , utilizzare il <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> e <xref:System.Windows.Forms.TreeView.EndUpdate%2A> e in un periodo di attesa <xref:System.Windows.Forms.Cursor> viene visualizzato durante il <xref:System.Windows.Forms.TreeView> crea e disegna il <xref:System.Windows.Forms.TreeNode> oggetti. In questo esempio si suppone una `Customer` oggetto che può contenere una raccolta di `Order` oggetti. Inoltre, è necessario disporre di un file cursore denominato `MyWait.cur` nella directory dell'applicazione e che è stata creata un'istanza di un <xref:System.Windows.Forms.TreeView> control per un <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.BeginUpdate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Espande tutti i nodi dell'albero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TreeView.ExpandAll%2A> metodo espande tutti i <xref:System.Windows.Forms.TreeNode> oggetti, che include tutti i nodi figlio dell'albero nel <xref:System.Windows.Forms.TreeView> controllo.  
  
> [!NOTE]
>  Lo stato di un <xref:System.Windows.Forms.TreeNode> persiste. Ad esempio, si supponga di chiamare il <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> metodo e ai singoli nodi della struttura sono compresse. I nodi figlio non sono stati compressi e verranno visualizzato nel relativo stato espanso quando i nodi dell'albero radice vengono espanse nuovamente. La chiamata di <xref:System.Windows.Forms.TreeView.CollapseAll%2A> metodo assicura che tutti i nodi dell'albero vengono visualizzati in uno stato compresso.  
  
   
  
## Examples  
 Esempio di codice seguente si espande tutti i nodi in un <xref:System.Windows.Forms.TreeView> controllare quando un <xref:System.Windows.Forms.CheckBox> è selezionata e comprime il <xref:System.Windows.Forms.TreeNode.FirstNode%2A> quando il <xref:System.Windows.Forms.CheckBox> è deselezionata. In questo esempio si suppone una <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.CheckBox>e un <xref:System.Windows.Forms.TreeView> controllare con un <xref:System.Windows.Forms.TreeNodeCollection> che dispone di numerosi <xref:System.Windows.Forms.TreeNode> oggetti (preferibilmente con tre o più livelli).  
  
 [!code-cpp[TreeNode_ForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#1)]
 [!code-csharp[TreeNode_ForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#1)]
 [!code-vb[TreeNode_ForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore primo piano del controllo.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Color" /> di primo piano del controllo. Il valore predefinito corrisponde al valore della proprietà <see cref="P:System.Windows.Forms.Control.DefaultForeColor" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="FullRowSelect">
      <MemberSignature Language="C#" Value="public bool FullRowSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullRowSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.FullRowSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property FullRowSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullRowSelect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la selezione evidenziata copre la larghezza del controllo di visualizzazione albero.</summary>
        <value>
          <see langword="true" /> se la selezione evidenziata copre la larghezza del controllo di visualizzazione ad albero; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando <xref:System.Windows.Forms.TreeView.FullRowSelect%2A> è `true`, una selezione evidenziata copre l'intera larghezza della visualizzazione albero, anziché la larghezza della sola etichetta del nodo dell'albero. Il <xref:System.Windows.Forms.TreeView.FullRowSelect%2A> proprietà viene ignorata se <xref:System.Windows.Forms.TreeView.ShowLines%2A> è impostato su `true`.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato un oggetto personalizzato <xref:System.Windows.Forms.TreeView>. Tramite l'eredità di <xref:System.Windows.Forms.TreeView> (classe), questa versione personalizzata include tutte le funzionalità di una tipica <xref:System.Windows.Forms.TreeView>. La modifica di diversi valori di proprietà nel costruttore fornisce un aspetto univoco. Poiché il <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> è impostata su `false`, il controllo personalizzato esegue inoltre l'override di <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> metodo in modo nodi possono essere espanso e compresso quando vengono selezionati.  
  
 Un controllo personalizzato in questo modo può essere utilizzato in un'organizzazione, semplificando così forniscono un'interfaccia coerente senza richiedere le proprietà del controllo per specificare in ogni singolo progetto.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemRenderStyles">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.OwnerDrawPropertyBag GetItemRenderStyles (System.Windows.Forms.TreeNode node, int state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Forms.OwnerDrawPropertyBag GetItemRenderStyles(class System.Windows.Forms.TreeNode node, int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetItemRenderStyles(System.Windows.Forms.TreeNode,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetItemRenderStyles (node As TreeNode, state As Integer) As OwnerDrawPropertyBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::OwnerDrawPropertyBag ^ GetItemRenderStyles(System::Windows::Forms::TreeNode ^ node, int state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OwnerDrawPropertyBag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="node">Oggetto <see cref="T:System.Windows.Forms.TreeNode" /> per il quale si desidera restituire un oggetto <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" />.</param>
        <param name="state">Stato visibile dell'oggetto <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" /> per l'oggetto <see cref="T:System.Windows.Forms.TreeNode" /> specificato.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" /> per l'oggetto <see cref="T:System.Windows.Forms.TreeNode" /> specificato.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNodeAt">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera il nodo dell'albero che si trova nella posizione specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNodeAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode GetNodeAt (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeNode GetNodeAt(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetNodeAt(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeAt (pt As Point) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TreeNode ^ GetNodeAt(System::Drawing::Point pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Oggetto <see cref="T:System.Drawing.Point" /> da valutare e da cui recuperare il nodo.</param>
        <summary>Recupera il nodo dell'albero che si trova nel punto specificato.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Forms.TreeNode" /> nel punto specificato, in base alle coordinate (client) della visualizzazione struttura ad albero oppure <see langword="null" /> se non esiste alcun nodo in quella posizione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile passare il <xref:System.Windows.Forms.MouseEventArgs.X%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.MouseEventArgs.Y%2A?displayProperty=nameWithType> coordinate del <xref:System.Windows.Forms.Control.MouseDown> evento come il <xref:System.Drawing.Point.X%2A> e <xref:System.Drawing.Point.Y%2A> i valori di un nuovo <xref:System.Drawing.Point>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode GetNodeAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeNode GetNodeAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetNodeAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeAt (x As Integer, y As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TreeNode ^ GetNodeAt(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Posizione <see cref="P:System.Drawing.Point.X" /> da valutare e da cui recuperare il nodo.</param>
        <param name="y">Posizione <see cref="P:System.Drawing.Point.Y" /> da valutare e da cui recuperare il nodo.</param>
        <summary>Recupera il nodo dell'albero nel punto specificato dalle coordinate.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Forms.TreeNode" /> nella posizione specificata, in base alle coordinate (client) della visualizzazione struttura ad albero oppure <see langword="null" /> se non esiste alcun nodo in quella posizione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile passare il <xref:System.Windows.Forms.MouseEventArgs.X%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.MouseEventArgs.Y%2A?displayProperty=nameWithType> coordinate del <xref:System.Windows.Forms.Control.MouseDown> evento come il `x` e `y` parametri.  
  
   
  
## Examples  
 Esempio di codice seguente consente all'utente di modificare i nodi dell'albero non principali della utilizzando un <xref:System.Windows.Forms.ContextMenu>. Quando il clic destro mouse, la <xref:System.Windows.Forms.TreeNode> che viene individuato e archiviati in una variabile denominata `mySelectedNode`. Se è stato selezionato un nodo dell'albero non principali della viene inserito in uno stato modificabile, che consente all'utente di modificare l'etichetta del nodo. Quando l'utente smette di modificare l'etichetta del nodo dell'albero viene salvato il nuovo testo dell'etichetta. Per questo esempio, alcuni caratteri sono considerati non validi nel testo dell'etichetta. Se uno dei caratteri non validi nella stringa di etichetta, è la stringa è vuota, l'utente viene avvisato dell'errore e viene restituita l'etichetta per il testo precedente.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeCount">
      <MemberSignature Language="C#" Value="public int GetNodeCount (bool includeSubTrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNodeCount(bool includeSubTrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetNodeCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeCount (includeSubTrees As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNodeCount(bool includeSubTrees);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSubTrees" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSubTrees">
          <see langword="true" /> per includere nel conteggio gli elementi <see cref="T:System.Windows.Forms.TreeNode" /> contenuti nel sottoalbero; in caso contrario, <see langword="false" />.</param>
        <summary>Recupera il numero dei nodi dell'albero, includendo facoltativamente quelli presenti in tutti i sottoalberi, assegnato al controllo di visualizzazione albero.</summary>
        <returns>Numero dei nodi dell'albero, includendo facoltativamente quelli presenti in tutti i sottoalberi, assegnati al controllo di visualizzazione albero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `includeSubTrees` è `true`, il risultato è il numero di tutti i nodi dell'albero l'intera struttura ad albero.  
  
   
  
## Examples  
 Nell'esempio di codice viene impostata la <xref:System.Windows.Forms.TreeView.PathSeparator%2A> proprietà di un <xref:System.Windows.Forms.TreeView> e visualizza il numero di nodi figlio che sono contenuti nel <xref:System.Windows.Forms.TreeNodeCollection> del <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. Viene visualizzata anche la percentuale di nodo figlio della struttura di nodi dell'albero totale nel controllo di visualizzazione albero. In questo esempio si suppone una <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.Button>e un <xref:System.Windows.Forms.TreeView> controllare con un <xref:System.Windows.Forms.TreeNodeCollection> che dispone di numerosi <xref:System.Windows.Forms.TreeNode> oggetti (preferibilmente con tre o più livelli).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il nodo dell'albero selezionato resta evidenziato anche quando la visualizzazione albero non è più attiva.</summary>
        <value>
          <see langword="true" /> se il nodo della struttura ad albero selezionato resta evidenziato anche quando la visualizzazione struttura ad albero non è più attiva; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando questa proprietà è impostata su `false`, i nodi selezionati il <xref:System.Windows.Forms.TreeView> controllo rimarrà evidenziato in un colore diverso rispetto alla selezione corrente colore quando il <xref:System.Windows.Forms.TreeView> perde lo stato attivo. È possibile utilizzare questa proprietà per mantenere gli elementi selezionati dall'utente visibile quando l'utente fa clic su un altro controllo nel form o viene spostato su un'altra finestra.  
  
> [!NOTE]
>  Se si dell'accessibilità delle applicazioni, è consigliabile impostare il <xref:System.Windows.Forms.TreeView.HideSelection%2A> proprietà `false`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.TreeView.HideSelection%2A> proprietà. Per eseguire questo esempio, incollare il codice seguente in un form e chiamare il `InitializeSelectedTreeView` metodo nel costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TreeViewExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TreeViewExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dato un punto, fornisce informazioni sul nodo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewHitTestInfo HitTest (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeViewHitTestInfo HitTest(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (pt As Point) As TreeViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TreeViewHitTestInfo ^ HitTest(System::Drawing::Point pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Oggetto <see cref="T:System.Drawing.Point" /> in base al quale recuperare le informazioni sul nodo.</param>
        <summary>Dato un punto, fornisce informazioni sul nodo.</summary>
        <returns>Informazioni sul nodo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per determinare se un punto si trova un <xref:System.Windows.Forms.TreeNode> e all'interno del nodo il punto in cui si trova, ad esempio l'etichetta o immagine l'area.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewHitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeViewHitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As TreeViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TreeViewHitTestInfo ^ HitTest(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata x in base alla quale recuperare le informazioni sul nodo.</param>
        <param name="y">Coordinata y in base alla quale recuperare le informazioni sul nodo.</param>
        <summary>Fornisce informazioni sul nodo, date le coordinate x e y.</summary>
        <returns>Informazioni sul nodo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per determinare se un set di coordinate x e y si trova in un <xref:System.Windows.Forms.TreeNode> e all'interno del nodo il punto in cui si trova, ad esempio l'etichetta o immagine l'area.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il <xref:System.Windows.Forms.TreeNode.Level%2A>, <xref:System.Windows.Forms.TreeViewHitTestInfo.Node%2A>, e <xref:System.Windows.Forms.TreeView.HitTest%2A> membri. Per eseguire questo esempio, creare un Windows Form che contiene un <xref:System.Windows.Forms.TreeView> denominato `treeView1` e popolarlo con diversi livelli di nodi. Incollare il codice seguente nel form e associare il <xref:System.Windows.Forms.Control.MouseDown> evento di `treeView1` con il `treeView1_MouseDown` metodo in questo esempio.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public bool HotTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.HotTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property HotTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HotTracking { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se un'etichetta del nodo dell'albero assume l'aspetto di un collegamento ipertestuale al passaggio del mouse su di essa.</summary>
        <value>
          <see langword="true" /> se l'etichetta di un nodo della struttura ad albero assume l'aspetto di un collegamento ipertestuale al passaggio del mouse su di essa; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> è impostata su `true`, <xref:System.Windows.Forms.TreeView.HotTracking%2A> proprietà non ha alcun effetto.  
  
> [!NOTE]
>  Quando il <xref:System.Windows.Forms.TreeView.HotTracking%2A> è impostata su `true`, ogni struttura nodo etichetta ha l'aspetto di un collegamento ipertestuale quando il puntatore del mouse passa su di esso. Il <xref:System.Drawing.FontStyle.Underline> viene applicato lo stile del carattere per il <xref:System.Drawing.Font> e <xref:System.Windows.Forms.Control.ForeColor%2A> è impostato su blu affinché l'etichetta come collegamento. L'aspetto non è controllato dalle impostazioni di Internet del sistema operativo dell'utente.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato un oggetto personalizzato <xref:System.Windows.Forms.TreeView>. Tramite l'eredità di <xref:System.Windows.Forms.TreeView> (classe), questa versione personalizzata include tutte le funzionalità di una tipica <xref:System.Windows.Forms.TreeView>. La modifica di diversi valori di proprietà nel costruttore fornisce un aspetto univoco. Perché il <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> è impostata su `false`, il controllo personalizzato esegue inoltre l'override di <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> metodo in modo che i nodi possono essere espanso e compresso quando vengono selezionati.  
  
 Un controllo personalizzato in questo modo può essere utilizzato in un'organizzazione, semplificando così forniscono un'interfaccia coerente senza richiedere le proprietà del controllo per specificare in ogni singolo progetto.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore di indice dell'elenco immagini dell'immagine predefinita visualizzata accanto ai nodi dell'albero.</summary>
        <value>Indice in base zero che rappresenta la posizione di <see cref="T:System.Drawing.Image" /> in un oggetto <see cref="T:System.Windows.Forms.ImageList" />. Il valore predefinito è zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TreeView.ImageIndex%2A> valore è l'indice di un <xref:System.Drawing.Image> archiviati nel <xref:System.Windows.Forms.ImageList> assegnato al <xref:System.Windows.Forms.TreeView.ImageList%2A> proprietà.  
  
 Il <xref:System.Windows.Forms.TreeView.ImageKey%2A> e <xref:System.Windows.Forms.TreeView.ImageIndex%2A> si escludono a vicenda; se impostata, l'altra viene ignorata. Se si imposta <xref:System.Windows.Forms.TreeView.ImageKey%2A>, <xref:System.Windows.Forms.TreeView.ImageIndex%2A> viene impostato automaticamente su -1. In alternativa, se si imposta <xref:System.Windows.Forms.TreeView.ImageIndex%2A>, <xref:System.Windows.Forms.TreeView.ImageKey%2A> viene impostata automaticamente su una stringa vuota ("").  
  
> [!NOTE]
>  Quando si imposta la <xref:System.Windows.Forms.TreeView.ImageIndex%2A> proprietà in fase di esecuzione di <xref:System.Windows.Forms.TreeView> handle viene ricreato (vedere <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>) per aggiornare l'aspetto del controllo. In questo modo tutti i nodi dell'albero vengono compressi, fatta eccezione per selezionato <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 Esempio di codice seguente crea e assegna un <xref:System.Windows.Forms.ImageList> per un <xref:System.Windows.Forms.TreeView> controllo e compila il <xref:System.Windows.Forms.TreeView> controllare con <xref:System.Windows.Forms.TreeNode> oggetti. I nodi dell'albero assegnati immagini dal <xref:System.Windows.Forms.ImageList> che vengono visualizzati in uno stato selezionato o. In questo esempio si suppone una <xref:System.Windows.Forms.Form> che contiene un <xref:System.Windows.Forms.TreeView>e un <xref:System.Collections.ArrayList> contenente `Customer` oggetti contenenti ciascuna `Order` oggetti. Si presuppone inoltre che il `Customer` e `Order` sono definiti oggetti.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice specificato è minore di 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la chiave dell'immagine predefinita associata a ciascun nodo del controllo <see cref="T:System.Windows.Forms.TreeView" /> quando il nodo non è selezionato.</summary>
        <value>Chiave dell'immagine predefinita visualizzata per ciascun nodo del controllo <see cref="T:System.Windows.Forms.TreeView" /> quando il nodo non è selezionato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TreeView.ImageKey%2A> proprietà è tra maiuscole e minuscole.  
  
 Se un <xref:System.Windows.Forms.TreeNode> non dispone di un'immagine impostato, l'immagine specificata per il <xref:System.Windows.Forms.TreeView.ImageKey%2A> proprietà verrà visualizzata quando il nodo non è selezionato. Quando si seleziona il nodo, il primo elemento di <xref:System.Windows.Forms.ImageList> verrà visualizzato.  
  
 Il <xref:System.Windows.Forms.TreeView.ImageKey%2A> e <xref:System.Windows.Forms.TreeView.ImageIndex%2A> proprietà si escludono a vicenda. Se si imposta la <xref:System.Windows.Forms.TreeView.ImageKey%2A> proprietà, il <xref:System.Windows.Forms.TreeView.ImageIndex%2A> proprietà viene impostata automaticamente su -1. In alternativa, se si imposta la <xref:System.Windows.Forms.TreeView.ImageIndex%2A> proprietà, il <xref:System.Windows.Forms.TreeView.ImageKey%2A> viene impostata automaticamente su una stringa vuota ("").  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList ImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList ImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ ImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Forms.ImageList" /> che contiene gli oggetti <see cref="T:System.Drawing.Image" /> che sono utilizzati dai nodi della struttura ad albero.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ImageList" /> che contiene gli oggetti <see cref="T:System.Drawing.Image" /> che sono utilizzati dai nodi della struttura ad albero. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Forms.ImageList> valore della proprietà è diverso da `null`, prima di visualizzare tutti i nodi dell'albero <xref:System.Drawing.Image> archiviati nel <xref:System.Windows.Forms.ImageList>. È possibile specificare quali immagini nell'elenco vengono visualizzate per i nodi selezionati e impostando il <xref:System.Windows.Forms.TreeView.ImageIndex%2A> e <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> proprietà. Singoli <xref:System.Windows.Forms.TreeNode> oggetti è possono specificare quale immagine viene visualizzata impostando i relativi <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> e <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> proprietà. Queste impostazioni singoli sostituiranno le impostazioni corrispondenti <xref:System.Windows.Forms.TreeView> proprietà.  
  
> [!NOTE]
>  In .NET Framework versione 1.1, si verifica un problema che impedisce le immagini nei <xref:System.Windows.Forms.TreeView> nodi quando l'applicazione chiama <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>. Per risolvere questo problema, chiamare <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> nel `Main` immediatamente dopo la chiamata di metodo <xref:System.Windows.Forms.Application.EnableVisualStyles%2A>. Questo problema viene risolto il [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].  
  
   
  
## Examples  
 Esempio di codice seguente crea e assegna un <xref:System.Windows.Forms.ImageList> per un <xref:System.Windows.Forms.TreeView> controllo e compila il <xref:System.Windows.Forms.TreeView> controllare con <xref:System.Windows.Forms.TreeNode> oggetti. I nodi dell'albero assegnati immagini dal <xref:System.Windows.Forms.ImageList> che vengono visualizzati in uno stato selezionato o. In questo esempio si suppone una <xref:System.Windows.Forms.Form> che contiene un <xref:System.Windows.Forms.TreeView>e un <xref:System.Collections.ArrayList> contenente `Customer` oggetti contenenti ciascuna `Order` oggetti.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la distanza alla quale viene definito il rientro di ciascun livello di nodi figlio dell'albero.</summary>
        <value>Distanza, in pixel, alla quale viene definito il rientro di ciascun livello di nodi figlio dell'albero. Il valore predefinito è 19.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostazione di questa proprietà su un valore di -1 genera un'eccezione se il valore non è ancora stato modificato rispetto all'impostazione predefinita. Questo avviene perché il controllo utilizza il valore-1 come valore predefinito interno prima di aver creato l'handle del controllo. Il valore predefinito interno, il controllo stato eseguito il wrapping restituire un valore predefinito di 19.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato un oggetto personalizzato <xref:System.Windows.Forms.TreeView>. Tramite l'eredità di <xref:System.Windows.Forms.TreeView> (classe), questa versione personalizzata include tutte le funzionalità di una tipica <xref:System.Windows.Forms.TreeView>. La modifica di diversi valori di proprietà nel costruttore fornisce un aspetto univoco. Poiché il <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> è impostata su false, il controllo personalizzato esegue inoltre l'override di <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> metodo in modo che i nodi possono essere espanso e compresso quando vengono selezionati.  
  
 Un controllo personalizzato in questo modo può essere utilizzato in un'organizzazione, semplificando così forniscono un'interfaccia coerente senza richiedere le proprietà del controllo per specificare in ogni singolo progetto.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore assegnato è minore di 0.  
  
 oppure  
  
 Il valore assegnato è maggiore di 32.000.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Uno dei valori dei tasti.</param>
        <summary>Determina se il tasto specificato è un normale tasto di input o un tasto speciale che richiede una pre-elaborazione.</summary>
        <returns>
          <see langword="true" /> se il tasto specificato è un normale tasto di input; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'utente sta modificando un nodo dell'albero, le <xref:System.Windows.Forms.TreeView> controllo considera i tasti, ad esempio l'invio, ESC, HOME e fine come tasti di input.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemDragEventHandler ItemDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemDragEventHandler ItemDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.ItemDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDrag As ItemDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemDragEventHandler ^ ItemDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente inizia a trascinare un nodo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come abilitare le operazioni di trascinamento e rilascio all'interno di un <xref:System.Windows.Forms.TreeView> controllo. In questo esempio, è possibile trascinare qualsiasi nodo a un altro nodo che non è un discendente del nodo trascinato. Il nodo trascinato, che include tutti i relativi nodi discendenti, diventa un elemento figlio del nodo di destinazione. Quando viene utilizzato il pulsante sinistro del mouse, il nodo trascinato viene spostato al nodo di destinazione. Quando viene utilizzato il pulsante destro del mouse, il nodo trascinato viene copiato nel nodo di destinazione.  
  
 [!code-cpp[TreeViewDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewDragDrop/CPP/treeviewdragdrop.cpp#1)]
 [!code-csharp[TreeViewDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewDragDrop/CS/treeviewdragdrop.cs#1)]
 [!code-vb[TreeViewDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewDragDrop/VB/treeviewdragdrop.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'altezza di ciascun nodo dell'albero nel controllo di visualizzazione albero.</summary>
        <value>Altezza, in pixel, di ciascun nodo dell'albero nella visualizzazione albero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'altezza dell'elemento è impostata su un valore maggiore rispetto all'altezza del controllo di visualizzazione albero, la chiamata di <xref:System.Windows.Forms.TreeNode.EnsureVisible%2A?displayProperty=nameWithType> metodo avrà risultati imprevisti.  
  
   
  
## Examples  
 Esempio di codice seguente modifica la dimensione <xref:System.Windows.Forms.TreeNode.NodeFont%2A> alle dimensioni specificate e consente di regolare il <xref:System.Windows.Forms.TreeView.ItemHeight%2A> dell'elemento padre del nodo della struttura <xref:System.Windows.Forms.TreeView> controllo. In questo esempio si suppone una <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> controllo con una raccolta di <xref:System.Windows.Forms.TreeNode> oggetti e un <xref:System.Windows.Forms.ComboBox> che contiene le dimensioni dei caratteri.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore assegnato è minore di 1.  
  
 oppure  
  
 Il valore assegnato è maggiore del valore <see cref="F:System.Int16.MaxValue" />.</exception>
        <altmember cref="F:System.Int16.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="LabelEdit">
      <MemberSignature Language="C#" Value="public bool LabelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.LabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelEdit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il testo dell'etichetta dei nodi dell'albero può essere modificato.</summary>
        <value>
          <see langword="true" /> se il testo dell'etichetta dei nodi della struttura ad albero può essere modificato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TreeNode.BeginEdit%2A> metodo funziona solo se il <xref:System.Windows.Forms.TreeView.LabelEdit%2A> proprietà `true`. Se <xref:System.Windows.Forms.TreeView.LabelEdit%2A> è `false` quando si tenta di modificare l'etichetta, verrà generata un'eccezione e il nodo dell'albero sarà non essere in uno stato modificabile.  
  
   
  
## Examples  
 Esempio di codice seguente consente all'utente di modificare i nodi dell'albero non principali della utilizzando un <xref:System.Windows.Forms.ContextMenu>. Quando il clic destro mouse, la <xref:System.Windows.Forms.TreeNode> che viene individuato e archiviati in una variabile denominata `mySelectedNode`. Se è stato selezionato un nodo dell'albero non principali della viene inserito in uno stato modificabile, che consente all'utente di modificare l'etichetta del nodo. Quando l'utente smette di modificare l'etichetta del nodo dell'albero viene salvato il nuovo testo dell'etichetta. Per questo esempio, alcuni caratteri sono considerati non validi nel testo dell'etichetta. Se uno dei caratteri non validi nella stringa di etichetta, è la stringa è vuota, l'utente viene avvisato dell'errore e viene restituita l'etichetta per il testo precedente.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore delle linee di connessione dei nodi del controllo <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Color" /> delle linee che connettono i nodi della struttura ad albero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente viene illustrato come impostare il <xref:System.Windows.Forms.TreeNode> colore linea. Per eseguire questo esempio, incollare il codice in un Windows Form. Chiamare `InitializeLineTreeView` dal costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.NodeMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeMouseClick As TreeNodeMouseClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeNodeMouseClickEventHandler ^ NodeMouseClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeMouseClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente fa clic su un oggetto <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento si verifica quando l'utente fa clic su qualsiasi parte di un nodo dell'albero con il mouse, inclusi i segni (**+**) o segno meno (**-**) che indica se il nodo è compresso o espanso.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come gestire il <xref:System.Windows.Forms.TreeView.NodeMouseClick> evento.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeMouseDoubleClick As TreeNodeMouseClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeNodeMouseClickEventHandler ^ NodeMouseDoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeMouseClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente fa doppio clic su un oggetto <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento si verifica quando l'utente fa doppio clic su qualsiasi parte di un nodo della struttura ad albero, inclusi il segno più (+) o segno meno (-) che indica se il nodo è compresso o espanso.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come gestire il <xref:System.Windows.Forms.TreeView.NodeMouseDoubleClick> evento e come utilizzare il <xref:System.Windows.Forms.TreeNodeMouseClickEventArgs>. Per eseguire questo esempio, incollare il codice in un Windows Form che contiene un <xref:System.Windows.Forms.TreeView> denominato `treeView1`. Popolare `treeView1` con i nomi dei file presenti nella `c:\` directory di sistema in cui è eseguito l'esempio, quindi associare la <xref:System.Windows.Forms.TreeView.NodeMouseDoubleClick> evento di `treeView1` con il `treeView1_NodeMouseDoubleClick` metodo in questo esempio.  In questo esempio richiede che l'utente disponga dei privilegi di amministratore nel computer che esegue l'esempio.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeMouseHover">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeNodeMouseHoverEventHandler NodeMouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeNodeMouseHoverEventHandler NodeMouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.NodeMouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeMouseHover As TreeNodeMouseHoverEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeNodeMouseHoverEventHandler ^ NodeMouseHover;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeMouseHoverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il mouse viene posizionato su un oggetto <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il mouse è posizionato su un <xref:System.Windows.Forms.TreeNode>, <xref:System.Windows.Forms.TreeView.NodeMouseHover> evento verificherà prima di <xref:System.Windows.Forms.Control.MouseHover> evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.TreeView.NodeMouseHover> evento. Questo rapporto consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.TreeView> denominato `TreeView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.TreeView.NodeMouseHover> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#634](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#634)]
 [!code-vb[System.Windows.Forms.EventExamples#634](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#634)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeCollection ^ Nodes { System::Windows::Forms::TreeNodeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la raccolta dei nodi dell'albero assegnati al controllo di visualizzazione albero.</summary>
        <value>Insieme <see cref="T:System.Windows.Forms.TreeNodeCollection" /> che rappresenta i nodi della struttura ad albero assegnati al controllo di visualizzazione ad albero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TreeView.Nodes%2A> proprietà contiene una raccolta di <xref:System.Windows.Forms.TreeNode> oggetti, ognuno dei quali ha un <xref:System.Windows.Forms.TreeNode.Nodes%2A> proprietà che può contenere il proprio <xref:System.Windows.Forms.TreeNodeCollection>. La nidificazione dei nodi dell'albero può rendere difficile passare una struttura ad albero, ma la <xref:System.Windows.Forms.TreeNode.FullPath%2A> proprietà rende più semplice determinare la posizione all'interno della struttura ad albero.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare informazioni sui clienti in un <xref:System.Windows.Forms.TreeView> controllo. I nomi dei clienti di visualizzare i nodi radice e i nodi figlio di visualizzare i numeri di ordine assegnati a ciascun cliente. In questo esempio, con 15 ordini vengono visualizzati 1.000 clienti. Per evitare di ridisegnare il <xref:System.Windows.Forms.TreeView> , utilizzare il <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> e <xref:System.Windows.Forms.TreeView.EndUpdate%2A> e in un periodo di attesa <xref:System.Windows.Forms.Cursor> viene visualizzato durante il <xref:System.Windows.Forms.TreeView> crea e disegna il <xref:System.Windows.Forms.TreeNode> oggetti. In questo esempio si suppone una `Customer` oggetto che può contenere una raccolta di `Order` oggetti. Inoltre, è necessario avere creato un'istanza di un <xref:System.Windows.Forms.TreeView> control per un <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
        <altmember cref="P:System.Windows.Forms.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterCheck (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterCheck(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterCheck (e As TreeViewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterCheck(System::Windows::Forms::TreeViewEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.AfterCheck" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnAfterCheck%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCheck" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterCollapse">
      <MemberSignature Language="C#" Value="protected internal virtual void OnAfterCollapse (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnAfterCollapse(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnAfterCollapse (e As TreeViewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnAfterCollapse(System::Windows::Forms::TreeViewEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.AfterCollapse" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnAfterCollapse%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterExpand">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterExpand (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterExpand(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterExpand (e As TreeViewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterExpand(System::Windows::Forms::TreeViewEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.AfterExpand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnAfterExpand%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterExpand" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterLabelEdit (System.Windows.Forms.NodeLabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterLabelEdit(class System.Windows.Forms.NodeLabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterLabelEdit (e As NodeLabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterLabelEdit(System::Windows::Forms::NodeLabelEditEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.NodeLabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnAfterLabelEdit%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterSelect (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterSelect(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterSelect (e As TreeViewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterSelect(System::Windows::Forms::TreeViewEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.AfterSelect" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterSelect" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeCheck (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeCheck(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeCheck (e As TreeViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeCheck(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.BeforeCheck" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnBeforeCheck%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeCollapse">
      <MemberSignature Language="C#" Value="protected internal virtual void OnBeforeCollapse (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnBeforeCollapse(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnBeforeCollapse (e As TreeViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnBeforeCollapse(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnBeforeCollapse%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeExpand">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeExpand (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeExpand(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeExpand (e As TreeViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeExpand(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.BeforeExpand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnBeforeExpand%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeLabelEdit (System.Windows.Forms.NodeLabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeLabelEdit(class System.Windows.Forms.NodeLabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeLabelEdit (e As NodeLabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeLabelEdit(System::Windows::Forms::NodeLabelEditEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.NodeLabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnBeforeLabelEdit%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeSelect (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeSelect(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeSelect (e As TreeViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeSelect(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.BeforeSelect" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnBeforeSelect%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawNode">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawNode (System.Windows.Forms.DrawTreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawNode(class System.Windows.Forms.DrawTreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawNode (e As DrawTreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawNode(System::Windows::Forms::DrawTreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawTreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.DrawNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnDrawNode%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
        <altmember cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Esegue l'override di <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnHandleCreated%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Esegue l'override di <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnHandleDestroyed%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDrag(class System.Windows.Forms.ItemDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDrag (e As ItemDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDrag(System::Windows::Forms::ItemDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.ItemDragEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.ItemDrag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnItemDrag%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.ItemDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.KeyEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.KeyDown" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> è impostata su `true` e <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> è impostata su `false`, <xref:System.Windows.Forms.TreeView.OnKeyDown%2A> metodo Alterna selezionando o deselezionando la casella di controllo quando l'utente preme la barra spaziatrice.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnKeyDown%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.KeyPress" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> è impostata su `false`, <xref:System.Windows.Forms.TreeView> controllo selezionerà il primo elemento che inizia con il valore del <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> proprietà di `e`.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnKeyPress%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.KeyEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Esegue l'override di <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnKeyUp%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.MouseHover" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TreeView.OnMouseHover%2A> metodo esegue un hit test per verificare se il mouse è posizionato su un <xref:System.Windows.Forms.TreeNode>e questo caso, genera il <xref:System.Windows.Forms.TreeView.NodeMouseHover> evento.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnMouseHover%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.MouseLeave" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnMouseLeave%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnNodeMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnNodeMouseClick (System.Windows.Forms.TreeNodeMouseClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNodeMouseClick(class System.Windows.Forms.TreeNodeMouseClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNodeMouseClick (e As TreeNodeMouseClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNodeMouseClick(System::Windows::Forms::TreeNodeMouseClickEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeNodeMouseClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.NodeMouseClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnNodeMouseClick%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnNodeMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnNodeMouseDoubleClick (System.Windows.Forms.TreeNodeMouseClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNodeMouseDoubleClick(class System.Windows.Forms.TreeNodeMouseClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNodeMouseDoubleClick (e As TreeNodeMouseClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNodeMouseDoubleClick(System::Windows::Forms::TreeNodeMouseClickEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeNodeMouseClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnNodeMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnNodeMouseHover (System.Windows.Forms.TreeNodeMouseHoverEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNodeMouseHover(class System.Windows.Forms.TreeNodeMouseHoverEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNodeMouseHover (e As TreeNodeMouseHoverEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNodeMouseHover(System::Windows::Forms::TreeNodeMouseHoverEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeNodeMouseHoverEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.TreeNodeMouseHoverEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.NodeMouseHover" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnNodeMouseHover%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.TreeView.RightToLeftLayoutChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la spaziatura tra il contenuto e i bordi del controllo <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.Padding" /> che indica lo spazio tra i bordi e il contenuto del controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.TreeView.Padding" /> cambia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene disegnato il controllo <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("\")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa di delimitazione usata dal percorso del nodo dell'albero.</summary>
        <value>Stringa di delimitazione utilizzata dalla proprietà <see cref="P:System.Windows.Forms.TreeNode.FullPath" /> del nodo della struttura ad albero. Il valore predefinito è il carattere barra rovesciata (\\).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il percorso del nodo dell'albero è costituito da un set di etichette del nodo dell'albero separate con il <xref:System.Windows.Forms.TreeView.PathSeparator%2A> stringhe del delimitatore. L'intervallo etichette del nodo radice per il nodo dell'albero che si desidera.  
  
   
  
## Examples  
 Nell'esempio di codice viene impostata la <xref:System.Windows.Forms.TreeView.PathSeparator%2A> proprietà di un <xref:System.Windows.Forms.TreeView> e visualizza il numero di nodi figlio che è contenuto nel <xref:System.Windows.Forms.TreeNodeCollection> del <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. Viene visualizzata anche la percentuale di nodo figlio della struttura di nodi dell'albero totale nel controllo di visualizzazione albero. In questo esempio si suppone una <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.Button>e un <xref:System.Windows.Forms.TreeView> controllare con un <xref:System.Windows.Forms.TreeNodeCollection> che dispone di numerosi <xref:System.Windows.Forms.TreeNode> oggetti (preferibilmente con tre o più livelli).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.FullPath" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'oggetto <see cref="T:System.Windows.Forms.TreeView" /> deve essere disposto da destra a sinistra.</summary>
        <value>
          <see langword="true" /> se il controllo deve essere disposto da destra a sinistra; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TreeView.RightToLeftLayout%2A> è di proprietà per l'uso con applicazioni internazionali in cui la lingua viene letto da destra a sinistra. Se si imposta <xref:System.Windows.Forms.TreeView.RightToLeftLayout%2A> e <xref:System.Windows.Forms.Control.RightToLeft%2A> a `true` testo e il contenuto del controllo verranno disposti da destra a sinistra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.TreeView.RightToLeftLayout" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.TreeView.RightToLeftLayoutChanged> evento. Questo rapporto consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.TreeView> denominato `TreeView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.TreeView.RightToLeftLayoutChanged> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#639](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#639)]
 [!code-vb[System.Windows.Forms.EventExamples#639](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#639)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scrollable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Scrollable" />
      <MemberSignature Language="VB.NET" Value="Public Property Scrollable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scrollable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se nel controllo di visualizzazione albero vengono visualizzate barre di scorrimento quando necessario.</summary>
        <value>
          <see langword="true" /> se nel controllo di visualizzazione ad albero vengono visualizzate le barre di scorrimento quando necessario; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questa proprietà è impostata su `true`, vengono visualizzate barre di scorrimento sul <xref:System.Windows.Forms.TreeView> qualsiasi <xref:System.Windows.Forms.TreeNode> si trova di fuori dell'area del controllo client.  
  
> [!NOTE]
>  Quando si imposta la <xref:System.Windows.Forms.TreeView.Scrollable%2A> proprietà in fase di esecuzione di <xref:System.Windows.Forms.TreeView> handle viene ricreato (vedere <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>) per aggiornare l'aspetto del controllo. In questo modo tutti i nodi dell'albero vengono compressi, fatta eccezione per selezionato <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.BorderStyle> enumerazione e <xref:System.Windows.Forms.TreeView.BorderStyle%2A>, <xref:System.Windows.Forms.TreeView.ShowLines%2A>, <xref:System.Windows.Forms.TreeView.Scrollable%2A>, <xref:System.Windows.Forms.TreeView.HideSelection%2A> e <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> proprietà. Per eseguire questo esempio, incollare il codice seguente in un form e chiamare il `InitializeTreeView` metodo nel costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedImageIndex">
      <MemberSignature Language="C#" Value="public int SelectedImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.SelectedImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedImageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore di indice dell'elenco immagini dell'immagine visualizzata quando è selezionato un nodo dell'albero.</summary>
        <value>Valore di indice in base zero che rappresenta la posizione di un oggetto <see cref="T:System.Drawing.Image" /> in un controllo <see cref="T:System.Windows.Forms.ImageList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> valore è l'indice di un <xref:System.Drawing.Image> archiviati nel <xref:System.Windows.Forms.ImageList> assegnato al <xref:System.Windows.Forms.TreeView.ImageList%2A> proprietà.  
  
> [!NOTE]
>  Quando si imposta la <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> proprietà in fase di esecuzione di <xref:System.Windows.Forms.TreeView> handle viene ricreato (vedere <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>) per aggiornare l'aspetto del controllo. In questo modo tutti i nodi dell'albero vengono compressi, ad eccezione di selezionato <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 Esempio di codice seguente crea e assegna un <xref:System.Windows.Forms.ImageList> per un <xref:System.Windows.Forms.TreeView> controllo e compila il <xref:System.Windows.Forms.TreeView> controllare con <xref:System.Windows.Forms.TreeNode> oggetti. I nodi dell'albero assegnati immagini dal <xref:System.Windows.Forms.ImageList> che vengono visualizzati in uno stato selezionato o. In questo esempio si suppone una <xref:System.Windows.Forms.Form> che contiene un <xref:System.Windows.Forms.TreeView>e un <xref:System.Collections.ArrayList> contenente `Customer` oggetti contenenti ciascuna `Order` oggetti. Si presuppone inoltre che il `Customer` e `Order` sono definiti oggetti.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore di indice assegnato è minore di zero.</exception>
        <altmember cref="P:System.Windows.Forms.TreeView.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeView.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageKey">
      <MemberSignature Language="C#" Value="public string SelectedImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.SelectedImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la chiave dell'immagine predefinita visualizzata quando un oggetto <see cref="T:System.Windows.Forms.TreeNode" /> è selezionato.</summary>
        <value>Chiave dell'immagine predefinita visualizzata quando un oggetto <see cref="T:System.Windows.Forms.TreeNode" /> è selezionato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un <xref:System.Windows.Forms.TreeNode> non dispone di un'immagine selezionata impostata, l'immagine specificata per il <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> proprietà verrà visualizzata quando il nodo non è selezionato.  
  
 Il <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> e <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> si escludono a vicenda; se impostata, l'altra viene ignorata. Se si imposta la <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> proprietà, il <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> proprietà viene impostata automaticamente su -1. In alternativa, se si imposta la <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> proprietà, il <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> viene impostata automaticamente su una stringa vuota ("").  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode SelectedNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ SelectedNode { System::Windows::Forms::TreeNode ^ get(); void set(System::Windows::Forms::TreeNode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nodo dell'albero attualmente selezionato nel controllo di visualizzazione albero.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.TreeNode" /> correntemente selezionato nel controllo di visualizzazione ad albero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non <xref:System.Windows.Forms.TreeNode> è selezionata, il <xref:System.Windows.Forms.TreeView.SelectedNode%2A> proprietà `null`.  
  
 Quando si imposta questa proprietà, il nodo specificato è lo scorrimento nella visualizzazione e di eventuali nodi padre vengono espansi in modo che il nodo specificato è visibile.  
  
 Quando il nodo padre o qualsiasi nodo predecessore del nodo selezionato viene compresso a livello di codice o tramite un'azione utente, il nodo compresso diventerà il nodo selezionato.  
  
   
  
## Examples  
 Nell'esempio di codice viene impostata la <xref:System.Windows.Forms.TreeView.PathSeparator%2A> proprietà di un <xref:System.Windows.Forms.TreeView> e visualizza il numero di nodi figlio che è contenuto nel <xref:System.Windows.Forms.TreeNodeCollection> del <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. Viene visualizzata anche la percentuale di nodo figlio della struttura di nodi dell'albero totale nel controllo di visualizzazione albero. In questo esempio si suppone una <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.Button>e un <xref:System.Windows.Forms.TreeView> controllare con un <xref:System.Windows.Forms.TreeNodeCollection> che dispone di numerosi <xref:System.Windows.Forms.TreeNode> oggetti (preferibilmente con tre o più livelli).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se vengono visualizzate linee tra i nodi dell'albero nel controllo di visualizzazione albero.</summary>
        <value>
          <see langword="true" /> se vengono visualizzate linee tra i nodi della struttura ad albero nel controllo di visualizzazione ad albero; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.Windows.Forms.TreeView.ShowLines%2A> è impostato su `true`, <xref:System.Windows.Forms.TreeView.FullRowSelect%2A> proprietà viene ignorata.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato un oggetto personalizzato <xref:System.Windows.Forms.TreeView>. Tramite l'eredità di <xref:System.Windows.Forms.TreeView> (classe), questa versione personalizzata include tutte le funzionalità di una tipica <xref:System.Windows.Forms.TreeView>. La modifica di diversi valori di proprietà nel costruttore fornisce un aspetto univoco. Poiché il <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> è impostata su false, il controllo personalizzato esegue inoltre l'override di <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> metodo in modo che i nodi possono essere espanso e compresso quando vengono selezionati.  
  
 Un controllo personalizzato in questo modo può essere utilizzato in un'organizzazione, semplificando così forniscono un'interfaccia coerente senza richiedere le proprietà del controllo per specificare in ogni singolo progetto.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowNodeToolTips">
      <MemberSignature Language="C#" Value="public bool ShowNodeToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowNodeToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowNodeToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowNodeToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowNodeToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se le descrizioni comandi devono essere visualizzate quando il puntatore del mouse viene posizionato su un oggetto <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <value>
          <see langword="true" /> se le descrizioni comandi devono essere visualizzate quando il puntatore del mouse viene posizionato su un oggetto <see cref="T:System.Windows.Forms.TreeNode" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Affinché le descrizioni comandi essere visibile, è necessario impostare il <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> per un <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> e <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> proprietà. Per eseguire questo esempio, incollare il codice seguente in un Windows Form e chiamare `InitializeTreeViewWithToolTips` dal costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ToolTipText" />
      </Docs>
    </Member>
    <Member MemberName="ShowPlusMinus">
      <MemberSignature Language="C#" Value="public bool ShowPlusMinus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPlusMinus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowPlusMinus" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPlusMinus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPlusMinus { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se i pulsanti più (+) e meno (-) vengono visualizzati accanto ai nodi dell'albero che contengono i nodi figlio dell'albero.</summary>
        <value>
          <see langword="true" /> se i pulsanti più (+) e meno (-) vengono visualizzati accanto ai nodi della struttura ad albero contenenti nodi figlio; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I pulsanti segno più e meno visualizzati accanto al solo se i nodi dell'albero radice di <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> valore della proprietà è `true`. Se non vengono visualizzati i pulsanti sul segno più e meno (), è presente alcun segnale visivo per indicare che il nodo dell'albero contiene nodi figlio e se è espandibile. L'utente deve fare doppio clic un nodo dell'albero per determinare se contiene nodi figlio, espanderlo o comprimerlo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato un oggetto personalizzato <xref:System.Windows.Forms.TreeView>. Tramite l'eredità di <xref:System.Windows.Forms.TreeView> (classe), questa versione personalizzata include tutte le funzionalità di una tipica <xref:System.Windows.Forms.TreeView>. La modifica di diversi valori di proprietà nel costruttore fornisce un aspetto univoco. Poiché il <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> è impostata su false, il controllo personalizzato esegue inoltre l'override di <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> metodo in modo che i nodi possono essere espanso e compresso quando vengono selezionati.  
  
 Un controllo personalizzato in questo modo può essere utilizzato in un'organizzazione, semplificando così forniscono un'interfaccia coerente senza richiedere le proprietà del controllo per specificare in ogni singolo progetto.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.ShowRootLines" />
      </Docs>
    </Member>
    <Member MemberName="ShowRootLines">
      <MemberSignature Language="C#" Value="public bool ShowRootLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRootLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowRootLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRootLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRootLines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se vengono visualizzate linee tra i nodi dell'albero che rappresentano la radice della visualizzazione albero.</summary>
        <value>
          <see langword="true" /> se vengono visualizzate linee tra i nodi della struttura ad albero che rappresentano la radice della visualizzazione struttura ad albero; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> proprietà `false`, i pulsanti segno più e meno (-) non verranno visualizzati accanto ai nodi della struttura e <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> proprietà avrà alcun effetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.BorderStyle> enumerazione e <xref:System.Windows.Forms.TreeView.BorderStyle%2A>, <xref:System.Windows.Forms.TreeView.ShowLines%2A>, <xref:System.Windows.Forms.TreeView.Scrollable%2A>, <xref:System.Windows.Forms.TreeView.HideSelection%2A> e <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> proprietà. Per eseguire questo esempio, incollare il codice seguente in un form e chiamare il `InitializeTreeView` metodo nel costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.ShowPlusMinus" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ordina gli elementi nel controllo <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di riapplicare l'ordinamento predefinito, ovvero ordine alfabetico in base al testo del nodo, o un ordinamento personalizzato specificato per il <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> proprietà. È possibile utilizzare questo metodo viene modificato il testo dei nodi esistenti o i nodi vengono spostati dall'utente, se si desidera ordinare nuovamente gli elementi.  
  
> [!NOTE]
>  Il criterio di ordinamento predefinito viene utilizzato il <xref:System.Globalization.CompareInfo.Compare%2A> metodo dipende il <xref:System.Windows.Forms.Application.CurrentCulture%2A> specificato dall'applicazione. Ciò significa che <xref:System.Windows.Forms.TreeNode> gli oggetti con valore uguale vengono mantenuti nell'ordine in cui sono stati aggiunti per il <xref:System.Windows.Forms.TreeView> controllo. Questo comportamento potrebbe essere diverso se viene applicato un ordinamento personalizzato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Sorted { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se i nodi dell'albero nella visualizzazione albero sono ordinati.</summary>
        <value>
          <see langword="true" /> se i nodi della struttura ad albero nella visualizzazione struttura ad albero sono ordinati; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando <xref:System.Windows.Forms.TreeView.Sorted%2A> è impostato su `true`, <xref:System.Windows.Forms.TreeNode> gli oggetti vengono ordinati in ordine alfabetico in loro <xref:System.Windows.Forms.TreeNode.Text%2A> i valori delle proprietà. È consigliabile utilizzare sempre <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> e <xref:System.Windows.Forms.TreeView.EndUpdate%2A> per gestire le prestazioni quando si aggiunge una notevole quantità di elementi a un controllo ordinato <xref:System.Windows.Forms.TreeView>. Quando viene modificato il testo di un nodo esistente, è necessario chiamare <xref:System.Windows.Forms.TreeView.Sort%2A> per riordinare gli elementi.  
  
> [!NOTE]
>  Il criterio di ordinamento predefinito viene utilizzato il <xref:System.Globalization.CompareInfo.Compare%2A> metodo dipende il <xref:System.Windows.Forms.Application.CurrentCulture%2A> specificato dall'applicazione. Ciò significa che <xref:System.Windows.Forms.TreeNode> gli oggetti con valore uguale vengono mantenuti nell'ordine in cui sono stati aggiunti per il <xref:System.Windows.Forms.TreeView> controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList StateImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList StateImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.StateImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ StateImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'elenco delle immagini utilizzato per indicare lo stato di <see cref="T:System.Windows.Forms.TreeView" /> e dei relativi nodi.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ImageList" /> utilizzato per indicare lo stato di <see cref="T:System.Windows.Forms.TreeView" /> e dei relativi nodi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per indicare lo stato di un <xref:System.Windows.Forms.TreeNode>, impostare il <xref:System.Windows.Forms.TreeView.StateImageList%2A> proprietà e impostare il <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> o <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> proprietà per ogni <xref:System.Windows.Forms.TreeNode>.  
  
 Le immagini di state visualizzate di <xref:System.Windows.Forms.TreeView> sono 16 x 16 pixel per impostazione predefinita. L'impostazione di <xref:System.Windows.Forms.ImageList.ImageSize%2A> proprietà del <xref:System.Windows.Forms.TreeView.StateImageList%2A> non avrà alcun effetto sulla modalità di visualizzazione di immagini. Tuttavia, le immagini di stato vengono ridimensionate in base all'impostazione DPI di sistema quando il file app. config contiene la voce seguente:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 Quando il <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> proprietà di un <xref:System.Windows.Forms.TreeView> è impostato su `true` e <xref:System.Windows.Forms.TreeView.StateImageList%2A> è impostata, ogni <xref:System.Windows.Forms.TreeNode> contenuta nel <xref:System.Windows.Forms.TreeView> consente di visualizzare le immagini prima e seconda dal <xref:System.Windows.Forms.TreeView.StateImageList%2A> per indicare un non è selezionata o controllato lo stato, rispettivamente. È necessario impostare il <xref:System.Windows.Forms.TreeView.StateImageList%2A> proprietà prima di aggiungere nodi di <xref:System.Windows.Forms.TreeView> per impedire la visualizzazione in fase di progettazione per i nodi che non dispongono di un'immagine di stato delle immagini di stato impostato.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra il <xref:System.Windows.Forms.TreeView.StateImageList%2A> proprietà. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `InitializeCheckTreeView` dal costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo di <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>
          <see langword="Null" /> in tutti i casi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la proprietà <see cref="P:System.Windows.Forms.TreeView.Text" /> cambia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode TopNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode TopNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.TopNode" />
      <MemberSignature Language="VB.NET" Value="Public Property TopNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ TopNode { System::Windows::Forms::TreeNode ^ get(); void set(System::Windows::Forms::TreeNode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il primo nodo dell'albero completamente visibile nel controllo di visualizzazione albero.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.TreeNode" /> che rappresenta il primo nodo della struttura ad albero completamente visibile nel controllo di visualizzazione ad albero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inizialmente, il <xref:System.Windows.Forms.TreeView.TopNode%2A> restituisce il primo nodo dell'albero principale, si trova in cima il <xref:System.Windows.Forms.TreeView>. Tuttavia, se l'utente è stata fatta scorrere il contenuto, potrebbe essere un altro nodo dell'albero nella parte superiore.  
  
> [!NOTE]
>  Impostazione di questa proprietà non ha alcun effetto quando il <xref:System.Windows.Forms.TreeView.Scrollable%2A> valore della proprietà è `false`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> <xref:System.Windows.Forms.TreeView.AfterSelect> e <xref:System.Windows.Forms.TreeView.TopNode%2A> membri. Per eseguire questo esempio, incollare il codice seguente in un form contenente un `TreeView` controllo denominato `TreeView1`. Chiamare il `InitializeTreeView` metodo nel costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.String" /> che contiene il nome dell'eventuale oggetto <see cref="T:System.ComponentModel.Component" />. Questo metodo non deve essere sottoposto a override.</summary>
        <returns>Oggetto <see cref="T:System.String" /> contenente il nome del <see cref="T:System.ComponentModel.Component" />, se presente, o <see langword="null" /> se il <see cref="T:System.ComponentModel.Component" /> è senza nome.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Component.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TreeViewNodeSorter">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer TreeViewNodeSorter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer TreeViewNodeSorter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.TreeViewNodeSorter" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeViewNodeSorter As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ TreeViewNodeSorter { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'implementazione di <see cref="T:System.Collections.IComparer" /> per eseguire un ordinamento personalizzato dei nodi di <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>Oggetto <see cref="T:System.Collections.IComparer" /> da utilizzare per eseguire l'ordinamento personalizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'ordinamento personalizzato viene applicato quando il <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> è impostata.  
  
 Se un <xref:System.Windows.Forms.TreeNode> etichetta viene modificata, è possibile chiamare il <xref:System.Windows.Forms.TreeView.Sort%2A> metodo per ordinare nuovamente gli elementi con l'ordinamento personalizzato specificato per il <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> proprietà.  
  
> [!NOTE]
>  Il criterio di ordinamento predefinito viene utilizzato il <xref:System.Globalization.CompareInfo.Compare%2A> metodo dipende il <xref:System.Windows.Forms.Application.CurrentCulture%2A> specificato dall'applicazione. Ciò significa che <xref:System.Windows.Forms.TreeNode> gli oggetti con valore uguale vengono mantenuti nell'ordine in cui sono stati aggiunti per il <xref:System.Windows.Forms.TreeView> controllo. Questo comportamento potrebbe essere diverso se viene applicato un ordinamento personalizzato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> proprietà per ordinare i nodi dal più piccolo al più grande. Per eseguire questo esempio, incollare il codice seguente in un Windows Form e chiamare `InitializeTreeView1` dal costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="VisibleCount">
      <MemberSignature Language="C#" Value="public int VisibleCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.VisibleCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VisibleCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero dei nodi dell'albero completamente visibili nel controllo di visualizzazione albero.</summary>
        <value>Numero degli elementi <see cref="T:System.Windows.Forms.TreeNode" /> completamente visibili nel controllo <see cref="T:System.Windows.Forms.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TreeView.VisibleCount%2A> valore può essere maggiore del numero di nodi dell'albero nella visualizzazione albero. Il valore viene calcolato dividendo l'altezza della finestra del client per l'altezza di un elemento del nodo dell'albero. Il risultato è il numero totale di <xref:System.Windows.Forms.TreeNode> gli oggetti di <xref:System.Windows.Forms.TreeView> possono visualizzare le dimensioni correnti.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Oggetto <see cref="T:System.Windows.Forms.Message" /> di Windows da elaborare.</param>
        <summary>Esegue l'override di <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">Per accedere al codice non gestito quando si recupera il valore della proprietà. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>