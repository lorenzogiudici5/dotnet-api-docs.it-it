<Type Name="ListViewItem+ListViewSubItemCollection" FullName="System.Windows.Forms.ListViewItem+ListViewSubItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2fa7d644d2a267ea7db4bd8aa7c2c1b2e58f0296" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51318139" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewItem.ListViewSubItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListViewItem/ListViewSubItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewItem.ListViewSubItemCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListViewItem::ListViewSubItemCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListViewItem.ListViewSubItemCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rappresenta una raccolta di oggetti <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> archiviati in un <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> memorizza <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> gli oggetti che rappresentano gli elementi secondari di un elemento padre <xref:System.Windows.Forms.ListViewItem> nel <xref:System.Windows.Forms.ListView> controllo. Gli elementi secondari vengono visualizzati solo in un <xref:System.Windows.Forms.ListView> controllare quando le colonne vengono specificate nel <xref:System.Windows.Forms.ListView.Columns%2A> proprietà del <xref:System.Windows.Forms.ListView> controllo e quando il <xref:System.Windows.Forms.ListView.View%2A> proprietà del <xref:System.Windows.Forms.ListView> NFS è impostata su <xref:System.Windows.Forms.View.Details>. L'ordine degli elementi secondari nel <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> determina le colonne vengono visualizzati gli elementi secondari nel <xref:System.Windows.Forms.ListView> controllo.  
  
 Esistono diversi modi per aggiungere gli elementi secondari all'insieme. Il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metodo aggiunge un singolo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> alla raccolta. Per aggiungere un numero di elementi secondari nella raccolta, si crea una matrice di <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> degli oggetti e passarlo al <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> (metodo). Se si desidera inserire un elemento secondario in una posizione specifica nella raccolta, è possibile usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> (metodo). Per rimuovere gli elementi secondari, è possibile usare la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> metodo o il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A> metodo se si sa dove si trova l'elemento secondario presente nella raccolta. Il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear%2A> metodo consente di rimuovere tutti gli elementi secondari dalla raccolta invece di usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> metodo per rimuovere un elemento secondario in un momento.  
  
 Oltre ai metodi e proprietà per l'aggiunta e rimozione di elementi secondari, il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> fornisce inoltre metodi per trovare gli elementi secondari nell'insieme. Il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A> metodo consente di determinare se un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> è un membro della raccolta. Una volta stabilito che l'elemento secondario si trova nella raccolta, è possibile usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> metodo per determinare dove si trova l'elemento secondario presente nella raccolta.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
    <altmember cref="T:System.Windows.Forms.ListView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewSubItemCollection (System.Windows.Forms.ListViewItem owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.#ctor(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListViewItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewSubItemCollection(System::Windows::Forms::ListViewItem ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListViewItem.ListViewSubItemCollection : System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem.ListViewSubItemCollection" Usage="new System.Windows.Forms.ListViewItem.ListViewSubItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="owner">Il controllo <see cref="T:System.Windows.Forms.ListViewItem" /> che possiede questo insieme.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare un'istanza di questa classe senza associandolo a un <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge un elemento secondario all'insieme.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (text As String) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="listViewSubItemCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo associato all'elemento secondario.</param>
        <summary>Aggiunge un elemento secondario all'insieme con il testo specificato.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> aggiunto all'insieme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metodo consente di aggiungere un elemento secondario alla raccolta specificando il testo dell'elemento secondario. Quando viene chiamato questo metodo, un nuovo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> viene creato con il testo specificato. È quindi possibile usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> restituito da questo metodo per impostare le proprietà e chiamare i metodi per modificare l'elemento secondario. Se si dispone già di un oggetto esistente <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> che si desidera aggiungere alla raccolta, è possibile usare la versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metodo che accetta un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> come parametro o utilizzare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> metodo se si desidera aggiungere l'elemento secondario in uno specifico posizione all'interno della raccolta.  
  
   
  
## Examples  
 L'esempio di codice seguente crea una <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> gli oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per le <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Questo esempio richiede che il codice a è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio di costruttore o un altro metodo nel modulo. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As ListViewItem.ListViewSubItem) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="listViewSubItemCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="item">Oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> da aggiungere alla raccolta.</param>
        <summary>Aggiunge un oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> esistente all'insieme.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> aggiunto all'insieme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questa versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metodo per aggiungere un oggetto esistente <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> alla raccolta. Questo metodo viene in genere consente di riutilizzare elementi secondari esistenti dagli altri <xref:System.Windows.Forms.ListViewItem> oggetti. Alla fine dell'elenco vengono inseriti gli elementi che vengono aggiunti alla raccolta. Per inserire un elemento nella raccolta in una posizione specifica, usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> (metodo). Se si desidera aggiungere una matrice esistente <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti, è possibile utilizzare la versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodo che accetta una matrice di <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti come parametro.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (string text, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(string text, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::String ^ text, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Drawing.Color * System.Drawing.Color * System.Drawing.Font -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="listViewSubItemCollection.Add (text, foreColor, backColor, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">Testo associato all'elemento secondario.</param>
        <param name="foreColor">Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore di primo piano dell'elemento secondario.</param>
        <param name="backColor">Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore di sfondo dell'elemento secondario.</param>
        <param name="font">Oggetto <see cref="T:System.Drawing.Font" /> che rappresenta il carattere da utilizzare per la visualizzazione del testo dell'elemento secondario.</param>
        <summary>Aggiunge all'insieme un elemento secondario con il testo specificato, in base alle impostazioni del carattere e dei colori di sfondo e di primo piano.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> aggiunto all'insieme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metodo consente di aggiungere un elemento secondario alla raccolta specificando il testo dell'elemento secondario. Inoltre, questa versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metodo consente di specificare il colore di primo piano iniziale, colore di sfondo e tipo di carattere del testo dell'elemento secondario. Quando viene chiamato questo metodo, un nuovo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> viene creato con il testo specificato. È quindi possibile usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> restituito da questo metodo per impostare le proprietà e chiamare i metodi per modificare l'elemento secondario. Se si dispone già di un oggetto esistente <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> che si desidera aggiungere alla raccolta, è possibile usare la versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metodo che accetta un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> come parametro o utilizzare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> metodo se si desidera aggiungere l'elemento secondario in uno specifico posizione nella raccolta.  
  
> [!NOTE]
>  Per impostazione predefinita, gli elementi secondari usano il colore di primo piano, il colore di sfondo e tipo di carattere specificato per l'elemento padre. Impostare il <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A?displayProperty=nameWithType> proprietà `false` per impedire che gli stili di elemento padre viene sottoposto a override stili dell'elemento secondario.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge una matrice di elementi secondari all'insieme.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string[] -&gt; unit" Usage="listViewSubItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="items">Matrice di stringhe che rappresenta il testo di ciascun elemento secondario da aggiungere all'insieme.</param>
        <summary>Crea nuovi elementi secondari in base a una matrice e li aggiunge all'insieme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questa versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodo per aggiungere una matrice di stringhe alla raccolta, in cui ogni stringa nella raccolta rappresenta il testo di un nuovo elemento secondario. È possibile usare l'altra versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodo che accetta una matrice di stringhe come un parametro per specificare il colore di primo piano, il colore di sfondo e tipo di carattere per ogni elemento aggiunto. Se si desidera riutilizzare esistenti <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> gli oggetti e aggiungerli alla raccolta, è possibile usare la versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodo che accetta una matrice di <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti come parametro.  
  
 Se si desidera aggiungere un unico <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>, usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> (metodo). È anche possibile usare la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> metodo se si desidera aggiungere un singolo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> in una posizione specifica nella raccolta.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem.ListViewSubItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem/ListViewSubItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListViewItem.ListViewSubItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewItem.ListViewSubItem[] -&gt; unit" Usage="listViewSubItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
      </Parameters>
      <Docs>
        <param name="items">Matrice di oggetti <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> da aggiungere alla raccolta.</param>
        <summary>Aggiunge una matrice di oggetti <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> all'insieme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questo metodo per riutilizzare gli elementi secondari memorizzati in un diverso <xref:System.Windows.Forms.ListViewItem>. Se si desidera aggiungere un unico <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> dell'oggetto, usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> (metodo). È anche possibile usare la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> metodo se si desidera aggiungere un singolo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> in una posizione specifica nella raccolta.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] items, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] items, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.String[],System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ items, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string[] * System.Drawing.Color * System.Drawing.Color * System.Drawing.Font -&gt; unit" Usage="listViewSubItemCollection.AddRange (items, foreColor, backColor, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="items">Matrice di stringhe che rappresenta il testo di ciascun elemento secondario da aggiungere all'insieme.</param>
        <param name="foreColor">Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore di primo piano dell'elemento secondario.</param>
        <param name="backColor">Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore di sfondo dell'elemento secondario.</param>
        <param name="font">Oggetto <see cref="T:System.Drawing.Font" /> che rappresenta il carattere da utilizzare per la visualizzazione del testo dell'elemento secondario.</param>
        <summary>Crea nuovi elementi secondari in base a una matrice e li aggiunge all'insieme con il carattere e i colori di primo piano e di sfondo specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questa versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodo per aggiungere una matrice di stringhe alla raccolta, in cui ogni stringa nella raccolta rappresenta il testo di un nuovo elemento secondario. Inoltre, questa versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodo consente di specificare il colore di primo piano, il colore di sfondo e tipo di carattere per ogni elemento secondario. È possibile usare l'altra versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodo che accetta una matrice di stringhe come un parametro, se non vuoi specificare il colore di primo piano, il colore di sfondo e le impostazioni del tipo di carattere per ogni elemento secondario. Se si desidera riutilizzare esistenti <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> gli oggetti e aggiungerli alla raccolta, è possibile usare la versione del <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodo che accetta una matrice di <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti come parametro.  
  
 Se si desidera aggiungere un unico <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>, usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> (metodo). È anche possibile usare la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> metodo se si desidera aggiungere un singolo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> in una posizione specifica nella raccolta.  
  
> [!NOTE]
>  Per impostazione predefinita, gli elementi secondari usano il colore di primo piano, il colore di sfondo e tipo di carattere specificato per l'elemento padre. Impostare il <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A?displayProperty=nameWithType> proprietà `false` per impedire che gli stili di elemento padre viene sottoposto a override stili dell'elemento secondario.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewSubItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove tutti gli elementi secondari e la classe padre <see cref="T:System.Windows.Forms.ListViewItem" /> dall'insieme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si rimuove gli elementi secondari dalla raccolta, tutte le informazioni sull'eliminazione degli elementi secondari sono perse. Per rimuovere un elemento secondario dall'insieme, utilizzare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> o <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewItem.ListViewSubItem subItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewItem/ListViewSubItem subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (subItem As ListViewItem.ListViewSubItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewItem::ListViewSubItem ^ subItem);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; bool" Usage="listViewSubItemCollection.Contains subItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="subItem">Oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> che rappresenta l'elemento secondario da individuare nell'insieme.</param>
        <summary>Determina se l'elemento secondario specificato si trova nell'insieme.</summary>
        <returns>
          <see langword="true" /> se l'elemento secondario si trova nell'insieme; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A> metodo consente di determinare se un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> è un membro della raccolta. Una volta stabilito che l'elemento secondario si trova nella raccolta, è possibile usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> metodo per determinare la posizione dell'elemento secondario nella raccolta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="listViewSubItemCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nome dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> da cercare.</param>
        <summary>Determina se l'insieme contiene un elemento con la chiave specificata.</summary>
        <returns>
          <see langword="true" /> per indicare che l'insieme contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> proprietà corrisponde alla chiave per un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> nel <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 Il confronto delle chiavi non distinzione maiuscole/minuscole. Se il `key` parametro è `null` o una stringa vuota, <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.ContainsKey%2A> restituisce `false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di elementi secondari nell'insieme.</summary>
        <value>Numero di elementi secondari nell'insieme.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di determinare il numero di elementi secondari che vengono definiti per un <xref:System.Windows.Forms.ListViewItem>. È quindi possibile usare questo valore quando si scorrono i valori della raccolta ed è necessario specificare un numero di iterazioni da eseguire il ciclo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewSubItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un enumeratore utilizzato per scorrere l'insieme degli elementi secondari.</summary>
        <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che rappresenta l'insieme degli elementi secondari.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewItem.ListViewSubItem subItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewItem/ListViewSubItem subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (subItem As ListViewItem.ListViewSubItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewItem::ListViewSubItem ^ subItem);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; int" Usage="listViewSubItemCollection.IndexOf subItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="subItem">Oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> che rappresenta l'elemento secondario da individuare nell'insieme.</param>
        <summary>Restituisce l'indice all'interno dell'insieme dell'elemento secondario specificato.</summary>
        <returns>Indice in base zero corrispondente alla posizione dell'elemento secondario all'interno dell'insieme. Se l'elemento secondario non si trova nell'insieme, viene restituito il valore uno negativo (-1).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> metodo consente di determinare la posizione di un elemento secondario nella raccolta. Per determinare se un elemento secondario è contenuto nella raccolta prima di chiamare questo metodo, usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="listViewSubItemCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nome dell'elemento per il quale recuperare l'indice.</param>
        <summary>Restituisce l'indice della prima occorrenza di un elemento con la chiave specificata nell'insieme.</summary>
        <returns>Indice in base zero della prima occorrenza di un elemento con la chiave specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey%2A> viene chiamato successivamente, l'ultimo restituito indice verrà innanzitutto verificato la corrispondenza delle chiavi e se non viene trovata alcuna corrispondenza, la ricerca inizia all'inizio della raccolta.  
  
 Il <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> proprietà corrisponde alla chiave per un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> nel <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 Il confronto delle chiavi non distinzione maiuscole/minuscole. Se il `key` parametro è `null` o una stringa vuota, <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey%2A> restituisce -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; unit" Usage="listViewSubItemCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="index">Posizione dell'indice in base zero in corrispondenza della quale viene inserito l'elemento.</param>
        <param name="item">Oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> che rappresenta l'elemento secondario da inserire nell'insieme.</param>
        <summary>Inserisce nell'insieme un elemento secondario in corrispondenza dell'indice specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente all'utente di inserire un elemento secondario in una posizione specifica nel <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>. Per aggiungere un elemento secondario senza specificare una posizione specifica, usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> (metodo). Se si desidera aggiungere una matrice di elementi secondari nella raccolta, usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> (metodo). È possibile usare questo metodo se si desidera inserire un nuovo elemento secondario in una raccolta esistente di elementi secondari.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore di zero o maggiore del valore della proprietà <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> del <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
        <value>
          <see langword="true" /> se la raccolta è di sola lettura; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è sempre `false` per questa raccolta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene un elemento dall'insieme.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem::ListViewSubItem ^ default[int] { System::Windows::Forms::ListViewItem::ListViewSubItem ^ get(int index); void set(int index, System::Windows::Forms::ListViewItem::ListViewSubItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewItem.ListViewSubItem with get, set" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice dell'elemento nella raccolta da recuperare.</param>
        <summary>Ottiene o imposta l'elemento secondario presente in corrispondenza dell'indice specificato all'interno dell'insieme.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> che rappresenta l'elemento secondario in corrispondenza dell'indice specificato all'interno dell'insieme.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questo metodo per ottenere il <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> archiviati in una posizione specifica nella raccolta. Per determinare l'indice di un elemento specifico nella raccolta, usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore di zero oppure maggiore o uguale al valore della proprietà <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> della classe <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem.ListViewSubItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem::ListViewSubItem ^ default[System::String ^] { System::Windows::Forms::ListViewItem::ListViewSubItem ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nome dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> da recuperare.</param>
        <summary>Ottiene un elemento con la chiave specificata dalla raccolta.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> con la chiave specificata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> proprietà corrisponde alla chiave per un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> nel <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 Il confronto delle chiavi non distinzione maiuscole/minuscole. Se il `key` parametro è `null` o una stringa vuota, <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item%2A> restituisce `null.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; unit" Usage="listViewSubItemCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="item">Elemento da rimuovere dall'insieme.</param>
        <summary>Rimuove un elemento specificato dalla raccolta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si desidera rimuovere un elemento in corrispondenza dell'indice specificato o con una chiave specificata, usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A> metodo o il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveByKey%2A> metodo, rispettivamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewSubItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice in base zero dell'elemento secondario da rimuovere.</param>
        <summary>Rimuove dall'insieme l'elemento secondario presente in corrispondenza dell'indice specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si rimuove un elemento secondario dalla raccolta, gli indici cambiano per i successivi elementi secondari nell'insieme. Tutte le informazioni relative all'elemento secondario rimosso viene eliminate. È possibile utilizzare questo metodo per rimuovere un elemento secondario specifico dalla raccolta, specificando l'indice dell'elemento secondario da rimuovere dalla raccolta. Per specificare l'elemento secondario da rimuovere anziché l'indice dell'elemento secondario, usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> (metodo). Per rimuovere tutti gli elementi secondari dalla raccolta, usare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore di zero oppure maggiore o uguale al valore della proprietà <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> della classe <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="listViewSubItemCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nome dell'elemento da rimuovere dall'insieme.</param>
        <summary>Rimuove dall'insieme un elemento con la chiave specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> proprietà corrisponde alla chiave per un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> nel <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 Il confronto delle chiavi non distinzione maiuscole/minuscole.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Matrice di istanze della classe <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</param>
        <param name="index">Indice in base zero nella matrice in corrispondenza del quale ha inizio la copia.</param>
        <summary>Copia gli elementi e gli insiemi di elementi secondari in una matrice.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArrayTypeMismatchException">Il tipo di matrice non è compatibile con l'oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</summary>
        <value>
          <see langword="true" /> in tutti i casi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
        <value>Oggetto utilizzato per sincronizzare l'insieme.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> da aggiungere alla raccolta.</param>
        <summary>Aggiunge un oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> esistente all'insieme.</summary>
        <returns>Indice in base zero che indica la posizione dell'oggetto aggiunto all'insieme.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="item" /> non è un oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object subItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (subItem As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ subItem) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="subItem">Oggetto che rappresenta l'elemento secondario da individuare nell'insieme.</param>
        <summary>Determina se l'elemento secondario specificato si trova nell'insieme.</summary>
        <returns>
          <see langword="true" /> se l'elemento secondario si trova nell'insieme; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object subItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (subItem As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ subItem) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="subItem">Oggetto che rappresenta l'elemento secondario da individuare nell'insieme.</param>
        <summary>Restituisce l'indice all'interno dell'insieme dell'elemento secondario specificato.</summary>
        <returns>Indice in base zero dell'elemento secondario, se presente nell'insieme; in caso contrario, -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Posizione dell'indice in base zero in corrispondenza della quale viene inserito l'elemento.</param>
        <param name="item">Oggetto che rappresenta l'elemento secondario da inserire nell'insieme.</param>
        <summary>Inserisce nell'insieme un elemento secondario in corrispondenza dell'indice specificato.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="item" /> non è un oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il parametro di indice è minore di 0 oppure maggiore o uguale al valore della proprietà Count dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la dimensione della raccolta è fissa.</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice in base zero dell'elemento da ottenere o impostare.</param>
        <summary>Ottiene o imposta il gruppo <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> in corrispondenza dell'indice specificato all'interno dell'insieme.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> che rappresenta l'elemento che si trova in corrispondenza dell'indice specificato all'interno della raccolta.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il parametro di indice è minore di 0 oppure maggiore o uguale al valore della proprietà Count dell'oggetto <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
        <exception cref="T:System.ArgumentException">L'oggetto non è <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Elemento da rimuovere dall'insieme.</param>
        <summary>Rimuove un elemento specificato dalla raccolta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> a un'interfaccia <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>