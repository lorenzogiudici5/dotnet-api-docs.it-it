<Type Name="ListBox+ObjectCollection" FullName="System.Windows.Forms.ListBox+ObjectCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a0311e2f8af66a4fbe04bd6fc80bc9d64cc522e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30649975" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListBox.ObjectCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/ObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.ObjectCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::ObjectCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta la raccolta di elementi in <see cref="T:System.Windows.Forms.ListBox" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListBox.ObjectCollection> classe archivia gli elementi visualizzati nel <xref:System.Windows.Forms.ListBox>. Esistono altri due insiemi definiti all'interno di <xref:System.Windows.Forms.ListBox> classe che consentono di determinare gli elementi selezionati all'interno di questa raccolta. Il <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> classe fornisce proprietà e metodi per determinare gli elementi selezionati all'interno di <xref:System.Windows.Forms.ListBox.ObjectCollection>, mentre il <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> classe consente di determinare gli indici nel <xref:System.Windows.Forms.ListBox.ObjectCollection> vengono selezionati.  
  
 Esistono diversi modi per aggiungere elementi alla raccolta. Il <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> metodo offre la possibilità di aggiungere un singolo oggetto alla raccolta. Per aggiungere un numero di oggetti alla raccolta, creare una matrice di elementi e assegnarla al <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> metodo. Se si desidera inserire un oggetto in una posizione specifica all'interno della raccolta, è possibile utilizzare il <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> metodo. Per rimuovere gli elementi, è possibile utilizzare il <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> metodo o <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> metodo se si conosce l'elemento in cui si trova all'interno della raccolta. Il <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> metodo consente di rimuovere tutti gli elementi dalla raccolta invece di usare il <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> metodo per rimuovere un singolo elemento alla volta.  
  
 È inoltre possibile modificare gli elementi di un <xref:System.Windows.Forms.ListBox> utilizzando il <xref:System.Windows.Forms.ListControl.DataSource%2A> proprietà. Se si utilizza il <xref:System.Windows.Forms.ListControl.DataSource%2A> proprietà per aggiungere elementi a un <xref:System.Windows.Forms.ListBox>, è possibile visualizzare gli elementi il <xref:System.Windows.Forms.ListBox> utilizzando il <xref:System.Windows.Forms.ListBox.Items%2A> proprietà ma non è possibile aggiungere o rimuovere elementi dall'elenco usando i metodi del <xref:System.Windows.Forms.ListBox.ObjectCollection>.  
  
 Oltre ai metodi e proprietà per l'aggiunta e rimozione di elementi, il <xref:System.Windows.Forms.ListBox.ObjectCollection> fornisce inoltre metodi per trovare gli elementi all'interno della raccolta. Il <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> metodo consente di determinare se un oggetto è un membro della raccolta. Una volta stabilito che l'elemento si trova all'interno della raccolta, è possibile utilizzare il <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> metodo per determinare l'elemento in cui si trova all'interno della raccolta.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un proprietario <xref:System.Windows.Forms.ListBox> impostando il <xref:System.Windows.Forms.ListBox.DrawMode%2A> proprietà per il `OwnerDrawVariable` valore e la gestione di <xref:System.Windows.Forms.ListBox.DrawItem> e <xref:System.Windows.Forms.ListBox.MeasureItem> eventi. Viene inoltre illustrato come impostare il <xref:System.Windows.Forms.ListBox.BorderStyle%2A> e <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> le proprietà e usando il <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> metodo.  
  
 Per eseguire questo esempio, incollarlo in un form vuoto che importa il <xref:System.Drawing> dello spazio dei nomi e <xref:System.Windows.Forms> dello spazio dei nomi. Chiamare `InitializeOwnerDrawnListBox` dal costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListBox.SelectedObjectCollection" />
    <altmember cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner">Il controllo <see cref="T:System.Windows.Forms.ListBox" /> che possiede questo insieme.</param>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare un'istanza di questa classe senza associarla a un <xref:System.Windows.Forms.ListBox> controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner, object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner, object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox, value As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner, cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="value" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="owner">Il controllo <see cref="T:System.Windows.Forms.ListBox" /> che possiede questo insieme.</param>
        <param name="value">Matrice di oggetti da aggiungere all'insieme.</param>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> contenente una matrice di oggetti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare un'istanza di questa classe senza associarla a un <xref:System.Windows.Forms.ListBox> controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner, System.Windows.Forms.ListBox.ObjectCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner, class System.Windows.Forms.ListBox/ObjectCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox,System.Windows.Forms.ListBox.ObjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox, value As ListBox.ObjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner, System::Windows::Forms::ListBox::ObjectCollection ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+ObjectCollection" />
      </Parameters>
      <Docs>
        <param name="owner">Il controllo <see cref="T:System.Windows.Forms.ListBox" /> che possiede questo insieme.</param>
        <param name="value">Insieme <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> il cui contenuto viene copiato in questo insieme.</param>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> sulla base di un altro oggetto <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare un'istanza di questa classe senza associarla a un <xref:System.Windows.Forms.ListBox> controllo. Questa versione del costruttore consente di utilizzare gli elementi specificati in un'istanza esistente del <xref:System.Windows.Forms.ListBox.ObjectCollection> classe per aggiungere elementi alla raccolta quando viene creato. È possibile utilizzare questo costruttore per utilizzare gli elementi specificati in un altro <xref:System.Windows.Forms.ListBox> controllo con questa raccolta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Oggetto che rappresenta l'elemento da aggiungere all'insieme.</param>
        <summary>Aggiunge un elemento all'elenco di elementi per un controllo <see cref="T:System.Windows.Forms.ListBox" />.</summary>
        <returns>Indice in base zero dell'elemento nell'insieme o -1 se è stato chiamato il metodo <see cref="M:System.Windows.Forms.ListBox.BeginUpdate" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Forms.ListBox.Sorted%2A> proprietà del <xref:System.Windows.Forms.ListBox> è impostato su `true`, l'elemento viene inserito nell'elenco in ordine alfabetico. In caso contrario, l'elemento viene inserito alla fine dell'elenco. Per inserire un elemento nella casella di riepilogo in una posizione specifica, utilizzare il <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> metodo. Per aggiungere un set di elementi alla casella di riepilogo in una singola operazione, utilizzare il <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> metodo. Se si desidera utilizzare il <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> metodo per aggiungere un numero elevato di elementi all'elenco, utilizzare il <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> e <xref:System.Windows.Forms.ListBox.EndUpdate%2A> metodi per evitare il <xref:System.Windows.Forms.ListBox> ridisegni ogni volta che un elemento viene aggiunto all'elenco finché tutti gli elementi vengono aggiunti all'elenco. Quando si aggiungono elementi a un <xref:System.Windows.Forms.ListBox>, risulta più efficiente per ordinare gli elementi prima e quindi aggiungere nuovi elementi.  
  
 Quando un oggetto viene aggiunto alla raccolta, il <xref:System.Windows.Forms.ListBox> prima controlla se il <xref:System.Windows.Forms.ListControl.DisplayMember%2A> proprietà del <xref:System.Windows.Forms.ListControl> classe ha il nome di un membro dall'oggetto specificato come riferimento durante il recupero di testo dell'elemento. Se il <xref:System.Windows.Forms.ListControl.DisplayMember%2A> proprietà non dispone di un membro specificato, il <xref:System.Windows.Forms.ListBox> chiama quindi il <xref:System.Object.ToString%2A> metodo dell'oggetto per ottenere il testo da visualizzare nell'elenco.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come creare un <xref:System.Windows.Forms.ListBox> controllo che visualizza più elementi nelle colonne e può avere più di un elemento selezionato nell'elenco del controllo. Il codice per l'esempio aggiunge 50 elementi al <xref:System.Windows.Forms.ListBox> utilizzando il <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> metodo il <xref:System.Windows.Forms.ListBox.ObjectCollection> classe e quindi seleziona tre elementi dall'elenco utilizzando il <xref:System.Windows.Forms.ListBox.SetSelected%2A> (metodo). Il codice visualizza quindi i valori di <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> raccolta (tramite il <xref:System.Windows.Forms.ListBox.SelectedItems%2A> proprietà) e il <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (tramite il <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> proprietà). Questo esempio si presuppone che il codice si trova e chiamato da un <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">Lo spazio disponibile non è sufficiente per l'aggiunta di un nuovo elemento all'elenco.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="item" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge un gruppo di elementi all'elenco di elementi per un oggetto <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (object[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(object[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.AddRange(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Object ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="items">Matrice di oggetti da aggiungere all'elenco.</param>
        <summary>Aggiunge una matrice di elementi all'elenco di elementi per un oggetto <see cref="T:System.Windows.Forms.ListBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Forms.ListBox.Sorted%2A> proprietà del <xref:System.Windows.Forms.ListBox> è impostato su `true`, gli elementi vengono inseriti nell'elenco in ordine alfabetico. In caso contrario, gli elementi vengono inseriti nell'ordine in cui sono presenti all'interno della matrice. Questo metodo viene in genere passata una matrice di <xref:System.String> gli oggetti, ma una matrice di qualsiasi tipo di oggetto può essere passato a questo metodo. Quando un oggetto viene aggiunto alla raccolta, il <xref:System.Windows.Forms.ListBox> prima controlla se il <xref:System.Windows.Forms.ListControl.DisplayMember%2A> proprietà del <xref:System.Windows.Forms.ListControl> classe ha il nome di un membro dall'oggetto specificato come riferimento durante il recupero di testo dell'elemento. Se il <xref:System.Windows.Forms.ListControl.DisplayMember%2A> proprietà non dispone di un membro specificato, il <xref:System.Windows.Forms.ListBox> chiama quindi il <xref:System.Object.ToString%2A> metodo dell'oggetto per ottenere il testo da visualizzare nell'elenco. Quando si utilizza questo metodo per aggiungere elementi al <xref:System.Windows.Forms.ListBox>, non è necessario chiamare il <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> e <xref:System.Windows.Forms.ListBox.EndUpdate%2A> metodi per ottimizzare le prestazioni. Quando si aggiungono elementi a un <xref:System.Windows.Forms.ListBox>, risulta più efficiente per ordinare gli elementi prima e quindi aggiungere nuovi elementi. È possibile utilizzare questo metodo per aggiungere un gruppo di elementi all'elenco o per riutilizzare gli elementi archiviati in un altro <xref:System.Windows.Forms.ListBox>.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un proprietario <xref:System.Windows.Forms.ListBox> impostando il <xref:System.Windows.Forms.ListBox.DrawMode%2A> proprietà per il `OwnerDrawVariable` valore e la gestione di <xref:System.Windows.Forms.ListBox.DrawItem> e <xref:System.Windows.Forms.ListBox.MeasureItem> eventi. Viene inoltre illustrato come impostare il <xref:System.Windows.Forms.ListBox.BorderStyle%2A> e <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> le proprietà e usando il <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> metodo.  
  
 Per eseguire questo esempio, incollarlo in un form vuoto che importa il <xref:System.Drawing> dello spazio dei nomi e <xref:System.Windows.Forms> dello spazio dei nomi. Chiamare `InitializeOwnerDrawnListBox` dal costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.ObjectCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/ObjectCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.AddRange(System.Windows.Forms.ListBox.ObjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.ObjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::ObjectCollection ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+ObjectCollection" />
      </Parameters>
      <Docs>
        <param name="value">Insieme <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> da caricare in questo insieme.</param>
        <summary>Aggiunge gli elementi di un insieme <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> esistente all'elenco di elementi di un controllo <see cref="T:System.Windows.Forms.ListBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Forms.ListBox.Sorted%2A> proprietà del <xref:System.Windows.Forms.ListBox> è impostato su `true`, gli elementi vengono inseriti nell'elenco in ordine alfabetico. In caso contrario, gli elementi vengono inseriti nell'ordine in cui sono presenti all'interno della matrice. Questo metodo viene in genere passata una matrice di <xref:System.String> gli oggetti, ma una matrice di qualsiasi tipo di oggetto può essere passato a questo metodo. Quando un oggetto viene aggiunto alla raccolta, il <xref:System.Windows.Forms.ListBox> prima controlla se il <xref:System.Windows.Forms.ListControl.DisplayMember%2A> proprietà del <xref:System.Windows.Forms.ListControl> classe ha il nome di un membro dall'oggetto specificato come riferimento durante il recupero di testo dell'elemento. Se il <xref:System.Windows.Forms.ListControl.DisplayMember%2A> proprietà non dispone di un membro specificato, il <xref:System.Windows.Forms.ListBox> chiama quindi il <xref:System.Object.ToString%2A> metodo dell'oggetto per ottenere il testo da visualizzare nell'elenco.  
  
 Quando si utilizza questo metodo per aggiungere elementi al <xref:System.Windows.Forms.ListBox>, non è necessario chiamare il <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> e <xref:System.Windows.Forms.ListBox.EndUpdate%2A> metodi per ottimizzare le prestazioni. Quando si aggiungono elementi a un <xref:System.Windows.Forms.ListBox>, risulta più efficiente per ordinare gli elementi prima e quindi aggiungere nuovi elementi. È possibile utilizzare questo metodo per riutilizzare gli elementi archiviati in un altro <xref:System.Windows.Forms.ListBox>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove tutti gli elementi dalla raccolta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si rimuovono elementi dall'elenco, vengono perse tutte le informazioni sugli elementi eliminati Per un singolo elemento da rimuovere il <xref:System.Windows.Forms.ListBox>, utilizzare il <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> o <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto che rappresenta l'elemento da individuare nell'insieme.</param>
        <summary>Determina se l'elemento specificato è contenuto nell'insieme.</summary>
        <returns>
          <see langword="true" /> se l'elemento si trova all'interno dell'insieme; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> metodo consente di determinare se un oggetto è un membro della raccolta. Una volta stabilito che l'elemento si trova all'interno della raccolta, è possibile utilizzare il <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> metodo per determinare l'elemento in cui si trova all'interno della raccolta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.ListBox.FindString(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.FindStringExact(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (object[] destination, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] destination, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Object(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ destination, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Object[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">Matrice dell'oggetto nella quale vengono copiati gli elementi dell'insieme.</param>
        <param name="arrayIndex">Posizione all'interno della matrice di destinazione in corrispondenza della quale copiare gli elementi dell'insieme.</param>
        <summary>Copia l'intero insieme in una matrice di oggetti esistente in corrispondenza della posizione specificata all'interno della matrice.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questo metodo per combinare gli elementi da più raccolte in una matrice. È quindi possibile utilizzare questa matrice per compilare il contenuto di un altro <xref:System.Windows.Forms.ListBox> controllare mediante il <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> metodo la <xref:System.Windows.Forms.ListBox.ObjectCollection> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di elementi nella raccolta.</summary>
        <value>Numero di elementi contenuti nella raccolta</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di determinare il numero di elementi di <xref:System.Windows.Forms.ListBox>. È quindi possibile utilizzare questo valore quando si scorrono i valori della raccolta ed è necessario fornire un numero di iterazioni per eseguire il ciclo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un enumeratore da utilizzare per scorrere l'insieme degli elementi.</summary>
        <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che rappresenta l'insieme degli elementi.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto che rappresenta l'elemento da individuare nell'insieme.</param>
        <summary>Restituisce l'indice all'interno dell'insieme dell'elemento specificato.</summary>
        <returns>Indice in base zero in cui si trova l'elemento contenuto nell'insieme; in caso contrario, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> metodo consente di determinare in cui un elemento si trova all'interno della raccolta. Per determinare se un elemento si trova all'interno della raccolta prima di chiamare questo metodo, utilizzare il <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="value" /> è null.</exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Posizione dell'indice in base zero in corrispondenza della quale viene inserito l'elemento.</param>
        <param name="item">Oggetto che rappresenta l'elemento da inserire.</param>
        <summary>Inserisce un elemento nell'elenco a discesa in corrispondenza dell'indice specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di inserire un elemento in una posizione specifica all'interno di <xref:System.Windows.Forms.ListBox>. Se il <xref:System.Windows.Forms.ListBox.Sorted%2A> proprietà del <xref:System.Windows.Forms.ListBox> è impostata su true, l'elemento viene aggiunto nella posizione corretta all'interno dell'elenco ordinato indipendentemente dai valori specificati nel `index` parametro. Quando un oggetto viene aggiunto alla raccolta, il <xref:System.Windows.Forms.ListBox> prima controlla se il <xref:System.Windows.Forms.ListControl.DisplayMember%2A> proprietà del <xref:System.Windows.Forms.ListControl> classe ha il nome di un membro dall'oggetto specificato come riferimento durante il recupero di testo dell'elemento. Se il <xref:System.Windows.Forms.ListControl.DisplayMember%2A> proprietà non dispone di un membro specificato, il <xref:System.Windows.Forms.ListBox> chiama quindi il <xref:System.Object.ToString%2A> metodo dell'oggetto per ottenere il testo da visualizzare nell'elenco.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore di zero o maggiore del valore della proprietà <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> della classe <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="item" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
        <value>
          <see langword="true" /> se questo insieme è di sola lettura; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è sempre `false` per questa raccolta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice dell'elemento nell'insieme da ottenere o impostare.</param>
        <summary>Ottiene o imposta l'elemento presente in corrispondenza dell'indice specificato all'interno dell'insieme.</summary>
        <value>Oggetto che rappresenta l'elemento in corrispondenza dell'indice specificato all'interno dell'insieme.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questo metodo per ottenere il <xref:System.Windows.Forms.ListBox> elemento archiviato in una posizione specifica all'interno della raccolta. Per determinare l'indice di un elemento specifico all'interno della raccolta, utilizzare il <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore di zero oppure maggiore di o uguale al valore della proprietà <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> della classe <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto che rappresenta l'elemento da rimuovere dall'insieme.</param>
        <summary>Rimuove l'oggetto specificato dalla raccolta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si rimuove un elemento dall'elenco, vengono modificati gli indici per gli elementi successivi nell'elenco. Tutte le informazioni relative all'elemento rimosso vengono eliminate. È possibile utilizzare questo metodo per rimuovere un elemento specifico nell'elenco specificando l'elemento da rimuovere dall'elenco. Per specificare l'indice dell'elemento da rimuovere anziché l'elemento stesso, usare il <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> metodo. Per rimuovere tutti gli elementi dall'elenco, utilizzare il <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
        <summary>Rimuove dall'insieme l'elemento presente in corrispondenza dell'indice specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si rimuove un elemento dall'elenco, vengono modificati gli indici per gli elementi successivi nell'elenco. Tutte le informazioni relative all'elemento rimosso vengono eliminate. È possibile utilizzare questo metodo per rimuovere un elemento specifico nell'elenco specificando l'indice dell'elemento da rimuovere dall'elenco. Per specificare l'elemento da rimuovere anziché l'indice dell'elemento, usare il <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> metodo. Per rimuovere tutti gli elementi dall'elenco, utilizzare il <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> proprietà con il <xref:System.Windows.Forms.ListBox.TopIndex%2A> spostare l'elemento attualmente selezionato nella parte superiore dell'elenco di elementi nell'area di visualizzazione di proprietà di <xref:System.Windows.Forms.ListBox>. Ulteriormente l'esempio di seguito viene illustrato come rimuovere gli elementi tramite il <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> metodo il <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> classe e come annullare la selezione degli elementi mediante il <xref:System.Windows.Forms.ListBox.ClearSelected%2A> metodo. Il codice sposta innanzitutto l'elemento attualmente selezionato nella <xref:System.Windows.Forms.ListBox> nella parte superiore dell'elenco. Il codice, quindi rimuove tutti gli elementi prima dell'elemento attualmente selezionato e Cancella tutti gli elementi selezionati nel <xref:System.Windows.Forms.ListBox>. Questo esempio si presuppone che un <xref:System.Windows.Forms.ListBox> contenente gli elementi viene aggiunto a un form e che un elemento è attualmente selezionato nel <xref:System.Windows.Forms.ListBox>.  
  
 [!code-cpp[ListBox.SelectedIndex#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndex/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndex/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndex/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore di zero oppure maggiore di o uguale al valore della proprietà <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> della classe <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (destination As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ destination, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">Matrice unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. La matrice deve avere un'indicizzazione in base zero.</param>
        <param name="index">Indice in base zero nella matrice in corrispondenza del quale ha inizio la copia.</param>
        <summary>Copia gli elementi della raccolta in una matrice, a partire da un indice della matrice specifico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.ObjectCollection> a un'interfaccia <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArrayTypeMismatchException">Il tipo di matrice non è compatibile con gli elementi dell'oggetto <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.ObjectCollection> a un'interfaccia <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
        <value>Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.ObjectCollection> a un'interfaccia <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Oggetto da aggiungere all'oggetto <see cref="T:System.Windows.Forms.ListBox" />.</param>
        <summary>Aggiunge un oggetto alla classe <see cref="T:System.Windows.Forms.ListBox" />.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.ObjectCollection> a un'interfaccia <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="item" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Windows.Forms.ListBox" /> corrente dispone di un'origine dati.</exception>
        <exception cref="T:System.SystemException">Lo spazio è insufficiente per memorizzare il nuovo elemento.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value>
          <see langword="true" /> in tutti i casi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.ObjectCollection> a un'interfaccia <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>