<Type Name="Binding" FullName="System.Windows.Forms.Binding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f93f5d96a660e5696acd22ec23d0aa5d85f3fe04" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39769769" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Binding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding" />
  <TypeSignature Language="F#" Value="type Binding = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ListBindingConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta l'associazione semplice tra il valore della proprietà di un oggetto e il valore della proprietà di un controllo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Windows.Forms.Binding> classe per creare e gestire un'associazione semplice tra la proprietà di un controllo e la proprietà di un oggetto o la proprietà dell'oggetto corrente in un elenco di oggetti.  
  
 Ad esempio del primo caso, è possibile associare il <xref:System.Windows.Forms.Control.Text%2A> proprietà di un <xref:System.Windows.Forms.TextBox> il controllo al `FirstName` proprietà di un `Customer` oggetto. Ad esempio del secondo caso, è possibile associare il <xref:System.Windows.Forms.Control.Text%2A> proprietà di un <xref:System.Windows.Forms.TextBox> il controllo al `FirstName` proprietà di un <xref:System.Data.DataTable> contenente i clienti.  
  
 Il <xref:System.Windows.Forms.Binding> classe consente inoltre di formattare i valori per la visualizzazione tramite i <xref:System.Windows.Forms.Binding.Format> evento e recuperare valori formattati tramite la <xref:System.Windows.Forms.Binding.Parse> evento.  
  
 Quando si crea una <xref:System.Windows.Forms.Binding> dell'istanza con <xref:System.Windows.Forms.Binding.%23ctor%2A> costruttore, è necessario specificare tre elementi:  
  
-   Il nome della proprietà del controllo da associare.  
  
-   Origine dati.  
  
-   Il percorso di navigazione che viene risolta in un elenco o una proprietà nell'origine dati. Il percorso di navigazione viene inoltre utilizzato per creare l'oggetto <xref:System.Windows.Forms.Binding.BindingMemberInfo%2A> proprietà.  
  
 In primo luogo, è necessario specificare il nome della proprietà del controllo a cui che si desidera associare i dati. Ad esempio, per visualizzare i dati in un <xref:System.Windows.Forms.TextBox> controllare, specificare il <xref:System.Windows.Forms.TextBoxBase.Text%2A> proprietà.  
  
 In secondo luogo, è possibile specificare un'istanza di una delle classi nella tabella seguente come origine dati.  
  
|Descrizione|Esempio in C#|  
|-----------------|-----------------|  
|Qualsiasi classe che implementa <xref:System.ComponentModel.IBindingList> o <xref:System.ComponentModel.ITypedList>. Sono incluse le seguenti: <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, <xref:System.Data.DataView>, o <xref:System.Data.DataViewManager>.|`DataSet ds = new DataSet("myDataSet");`|  
|Qualsiasi classe che implementa <xref:System.Collections.IList> per creare una raccolta indicizzata di oggetti. La raccolta deve essere creata e compilata prima di creare il <xref:System.Windows.Forms.Binding>. Gli oggetti nell'elenco devono essere tutti dello stesso tipo; in caso contrario, verrà generata un'eccezione.|`ArrayList ar1 = new ArrayList;  Customer1 cust1 = new Customer("Louis");  ar1.Add(cust1);`|  
|Una classe fortemente tipizzata <xref:System.Collections.IList> di oggetti fortemente tipizzati|`Customer [] custList = new Customer[3];`|  
  
 In terzo luogo, è necessario specificare il percorso di navigazione, che può essere una stringa vuota (""), nome di una singola proprietà o una gerarchia di nomi separati da punti. Se si imposta il percorso di navigazione a una stringa vuota, il <xref:System.Object.ToString%2A> metodo verrà chiamato sull'oggetto origine dati sottostante.  
  
 Se l'origine dati è un <xref:System.Data.DataTable>, che può contenere più <xref:System.Data.DataColumn> oggetti, il percorso di navigazione deve essere utilizzato per risolvere in una colonna specifica.  
  
> [!NOTE]
>  Quando l'origine dati è un <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>, o <xref:System.Data.DataTable>, si esegue l'associazione a un <xref:System.Data.DataView>. Di conseguenza, le righe associate siano effettivamente <xref:System.Data.DataRowView> oggetti.  
  
 Quando l'origine dati è impostata su un oggetto che contiene più, è necessario un percorso di navigazione delimitata <xref:System.Data.DataTable> oggetti (ad esempio un <xref:System.Data.DataSet> o <xref:System.Data.DataViewManager>). È anche possibile usare un percorso di navigazione delimitati dal punto quando si associa a un oggetto le cui proprietà restituiscono riferimenti ad altri oggetti (ad esempio, una classe con le proprietà che restituiscono altri oggetti di classe). Ad esempio, tutti i percorsi di navigazione seguenti descrivono i campi di dati validi:  
  
-   "Size". Height  
  
-   "Suppliers.CompanyName"  
  
-   "Regions.regionsToCustomers.CustomerFirstName"  
  
-   "Regions.regionsToCustomers.customersToOrders.ordersToDetails.Quantity"  
  
 Ogni membro del percorso può restituire una proprietà che viene risolta in un singolo valore (ad esempio, un numero intero) oppure un elenco di valori (ad esempio, una matrice di stringhe). Anche se ogni membro nel percorso può essere un elenco o una proprietà, il membro finale deve essere risolto a una proprietà. Ogni membro si basa sul membro precedente: "Size. Height" risolve per il <xref:System.Drawing.Size.Height%2A> proprietà del contesto corrente <xref:System.Drawing.Size>; "Regions.regionsToCustomers.CustomerFirstName" viene risolto il nome per il cliente corrente, in cui il cliente è uno dei clienti per l'area corrente.  
  
 Oggetto <xref:System.Data.DataRelation> restituisce un elenco di valori mediante il collegamento a uno <xref:System.Data.DataTable> a un secondo <xref:System.Data.DataTable> in un <xref:System.Data.DataSet>. Se il <xref:System.Data.DataSet> contiene <xref:System.Data.DataRelation> oggetti, è possibile specificare il membro dei dati come una <xref:System.Data.DataTable.TableName%2A> seguita da una <xref:System.Data.DataRelation.RelationName%2A>e quindi un <xref:System.Data.DataColumn.ColumnName%2A>. Ad esempio, se il <xref:System.Data.DataTable> denominato "Fornitori" contiene un <xref:System.Data.DataRelation> denominata "suppliers2products", il membro dati potrebbe essere "Suppliers2products".  
  
 L'origine dati può essere costituito da un set di classi correlate. Si supponga, ad esempio, un set di classi che catalogano solare sistemi. La classe denominata `System` contiene una proprietà denominata `Stars` che restituisce una raccolta di `Star` oggetti. Ogni `Star` oggetto presenta `Name` e `Mass` delle proprietà, nonché una `Planets` proprietà che restituisce una raccolta di `Planet` oggetti. In questo sistema, ha anche ogni pianeta `Mass` e `Name` proprietà. Ciascun `Planet` ulteriormente l'oggetto dispone di un `Moons` proprietà che restituisce una raccolta di `Moon` oggetti, ognuno dei quali ha anche `Name` e `Mass` proprietà. Se si specifica un `System` dell'oggetto come origine dati, è possibile specificare le seguenti operazioni come il membro dei dati:  
  
-   "Stars.Name"  
  
-   "Stars.Mass"  
  
-   "Stars.Planets.Name"  
  
-   "Stars.Planets.Mass"  
  
-   "Stars.Planets.Moons.Name"  
  
-   "Stars.Planets.Moons.Mass"  
  
 Nei controlli che possono essere con associazione semplice è una raccolta di <xref:System.Windows.Forms.Binding> oggetti un <xref:System.Windows.Forms.ControlBindingsCollection>, che è possibile accedere tramite il controllo <xref:System.Windows.Forms.Control.DataBindings%2A> proprietà. Si aggiunge un <xref:System.Windows.Forms.Binding> alla raccolta, chiamare il <xref:System.Windows.Forms.ControlBindingsCollection.Add%2A> metodo, quindi associando una proprietà del controllo a una proprietà di un oggetto (o a una proprietà dell'oggetto corrente in un elenco).  
  
 È possibile eseguire un'associazione semplice a qualsiasi oggetto che deriva dal <xref:System.Windows.Forms.Control?displayProperty=nameWithType> classe, ad esempio, i controlli di Windows seguenti:  
  
-   <xref:System.Windows.Forms.Button>  
  
-   <xref:System.Windows.Forms.CheckBox>  
  
-   <xref:System.Windows.Forms.CheckedListBox>  
  
-   <xref:System.Windows.Forms.ComboBox>  
  
-   <xref:System.Windows.Forms.DateTimePicker>  
  
-   <xref:System.Windows.Forms.DomainUpDown>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.HScrollBar>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.LinkLabel>  
  
-   <xref:System.Windows.Forms.ListBox>  
  
-   <xref:System.Windows.Forms.ListView>  
  
-   <xref:System.Windows.Forms.MonthCalendar>  
  
-   <xref:System.Windows.Forms.NumericUpDown>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.RadioButton>  
  
-   <xref:System.Windows.Forms.RichTextBox>  
  
-   <xref:System.Windows.Forms.ScrollBar>  
  
-   <xref:System.Windows.Forms.StatusBar>  
  
-   <xref:System.Windows.Forms.TextBox>  
  
-   <xref:System.Windows.Forms.TreeView>  
  
-   <xref:System.Windows.Forms.VScrollBar>  
  
> [!NOTE]
>  Solo le <xref:System.Windows.Forms.ListControl.SelectedValue%2A> proprietà del <xref:System.Windows.Forms.ComboBox>, <xref:System.Windows.Forms.CheckedListBox>, e <xref:System.Windows.Forms.ListBox> controllo è associato a semplice.  
  
 Il <xref:System.Windows.Forms.BindingManagerBase> classe è una classe astratta che gestisce tutto il <xref:System.Windows.Forms.Binding> gli oggetti per una determinata origine dati e il membro dati. Le classi che derivano da <xref:System.Windows.Forms.BindingManagerBase> sono le <xref:System.Windows.Forms.CurrencyManager> e il <xref:System.Windows.Forms.PropertyManager> classi. Come un <xref:System.Windows.Forms.Binding> gestito dipende dal fatto che il <xref:System.Windows.Forms.Binding> è un'associazione di elenco o un'associazione di proprietà. Ad esempio, se si tratta di un'associazione di elenco, è possibile usare il <xref:System.Windows.Forms.BindingManagerBase> per specificare un <xref:System.Windows.Forms.BindingManagerBase.Position%2A> nell'elenco; il <xref:System.Windows.Forms.BindingManagerBase.Position%2A>, di conseguenza, determina quale elemento (non tutti gli elementi nell'elenco) è effettivamente associato a un controllo. Per restituire l'appropriato <xref:System.Windows.Forms.BindingManagerBase>, usare il <xref:System.Windows.Forms.BindingContext>.  
  
 Per aggiungere una nuova riga a un set di controlli associati alla stessa <xref:System.Windows.Forms.Binding.DataSource%2A>, usare il <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> metodo il <xref:System.Windows.Forms.BindingManagerBase> classe. Usare la <xref:System.Windows.Forms.BindingContext.Item%2A> proprietà del <xref:System.Windows.Forms.BindingContext> classe per restituire l'oggetto appropriato <xref:System.Windows.Forms.CurrencyManager>. Per annullare l'aggiunta della nuova riga, utilizzare il <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> (metodo).  
  
   
  
## Examples  
 Esempio di codice seguente crea un modulo di Windows con diversi controlli che illustrano il data binding semplice. Nell'esempio viene creata una <xref:System.Data.DataSet> con due tabelle denominate `Customers` e `Orders`e un <xref:System.Data.DataRelation> denominato `custToOrders`. Quattro controlli (un <xref:System.Windows.Forms.DateTimePicker> e tre <xref:System.Windows.Forms.TextBox> controlli) i dati associati a colonne nelle tabelle. Per ogni controllo, l'esempio crea e aggiunge un <xref:System.Windows.Forms.Binding> al controllo tramite il <xref:System.Windows.Forms.Control.DataBindings%2A> proprietà. Nell'esempio viene restituito un <xref:System.Windows.Forms.BindingManagerBase> per ogni tabella attraverso il form <xref:System.Windows.Forms.BindingContext>. Quattro <xref:System.Windows.Forms.Button> controlla l'incremento o decremento il <xref:System.Windows.Forms.BindingManagerBase.Position%2A> proprietà di <xref:System.Windows.Forms.BindingManagerBase> oggetti.  
  
 [!code-cpp[Classic Binding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding Example/VB/source.vb#1)]  
 
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Binding" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nome della proprietà del controllo da associare.</param>
        <param name="dataSource">Oggetto <see cref="T:System.Object" /> che rappresenta l'origine dati.</param>
        <param name="dataMember">Proprietà o elenco a cui eseguire l'associazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Binding" /> che stabilisce un'associazione semplice tra la proprietà del controllo indicata e il membro dati specificato dell'origine dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare un'istanza di una delle seguenti classi per l'origine dati:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Qualsiasi classe che implementa il <xref:System.Collections.IList> interfaccia  
  
-   Qualsiasi classe  
  
 Vedere le <xref:System.Windows.Forms.Binding> classe per altre informazioni sulla creazione di `dataMember` stringa.  
  
 Quando si crea un'associazione a proprietà di un controllo, il nuovo <xref:System.Windows.Forms.Binding> esamina gli eventi esposti dal controllo associato e la collega due particolari eventi:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Un evento denominato *PropertyName* `Changed` (ad esempio, <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>)  
  
 Se si prova a eseguire l'associazione a una proprietà che non esiste, un' <xref:System.ArgumentException> viene generata quando il <xref:System.Windows.Forms.Binding> viene aggiunto al controllo <xref:System.Windows.Forms.Control.DataBindings%2A?displayProperty=nameWithType> raccolta.  
  
   
  
## Examples  
 Nell'esempio di codice esempio associa un <xref:System.Windows.Forms.TextBox> controllo a una colonna di tabella in un <xref:System.Data.DataSet> denominata `myDataSet`. Nell'esempio si presuppone che sono state dichiarate `myDataSet` nella sezione delle dichiarazioni di modulo.  
  
 [!code-cpp[Classic Binding.Binding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Binding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Binding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Binding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Binding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Binding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <paramref name="propertyName" /> non corrisponde a una proprietà valida di un controllo né a una stringa vuota ("").</exception>
        <exception cref="T:System.ArgumentException">La proprietà specificata da <paramref name="propertyName" /> non esiste nel controllo.</exception>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nome della proprietà del controllo da associare.</param>
        <param name="dataSource">Oggetto <see cref="T:System.Object" /> che rappresenta l'origine dati.</param>
        <param name="dataMember">Proprietà o elenco a cui eseguire l'associazione.</param>
        <param name="formattingEnabled">
          <see langword="true" /> per formattare i dati visualizzati; in caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Binding" /> che stabilisce un'associazione tra la proprietà del controllo indicata e il membro dati specificato dell'origine dati, consentendo inoltre l'applicazione della formattazione, se richiesta.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">La proprietà specificata da <paramref name="propertyName" /> non esiste nel controllo.  
  
oppure 
La proprietà specificata è di sola lettura.</exception>
        <exception cref="T:System.Exception">La formattazione è disabilitata e <paramref name="propertyName" /> non corrisponde a una proprietà valida di un controllo né a una stringa vuota ("").</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nome della proprietà del controllo da associare.</param>
        <param name="dataSource">Oggetto <see cref="T:System.Object" /> che rappresenta l'origine dati.</param>
        <param name="dataMember">Proprietà o elenco a cui eseguire l'associazione.</param>
        <param name="formattingEnabled">
          <see langword="true" /> per formattare i dati visualizzati; in caso contrario, <see langword="false" />.</param>
        <param name="dataSourceUpdateMode">Uno dei valori di <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Binding" /> che stabilisce un'associazione semplice tra la proprietà del controllo specificato e il membro dati specificato dell'origine dati specificata. Se richiesto, consente la formattazione e la propagazione dei valori nell'origine dati in base all'impostazione di aggiornamento specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare un'istanza di una delle seguenti classi per l'origine dati:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Qualsiasi classe che implementa il <xref:System.Collections.IList> interfaccia  
  
-   Qualsiasi classe  
  
 Vedere le <xref:System.Windows.Forms.Binding> classe per altre informazioni sulla creazione di `dataMember` stringa.  
  
 Quando si crea un'associazione a proprietà di un controllo, il nuovo <xref:System.Windows.Forms.Binding> esamina gli eventi esposti dal controllo associato e la collega due particolari eventi:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>.  
  
-   Un evento denominato *PropertyName* `Changed` (ad esempio, <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La proprietà specificata da <paramref name="propertyName" /> non esiste nel controllo.  
  
oppure 
La coppia origine dati o membro dati o la proprietà del controllo specificata è associata a un'altra associazione nell'insieme.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" />
        <Parameter Name="nullValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nome della proprietà del controllo da associare.</param>
        <param name="dataSource">Oggetto <see cref="T:System.Object" /> che rappresenta l'origine dati.</param>
        <param name="dataMember">Proprietà o elenco a cui eseguire l'associazione.</param>
        <param name="formattingEnabled">
          <see langword="true" /> per formattare i dati visualizzati; in caso contrario, <see langword="false" />.</param>
        <param name="dataSourceUpdateMode">Uno dei valori di <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</param>
        <param name="nullValue">Oggetto <see cref="T:System.Object" /> da applicare alla proprietà del controllo associato se il valore dell'origine dati è <see cref="T:System.DBNull" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Binding" /> che stabilisce un'associazione tra la proprietà del controllo e il membro dati specificati dell'origine dati indicata. Se richiesto, abilita la formattazione, propaga i valori nell'origine dati in base all'impostazione di aggiornamento specificata e imposta la proprietà sul valore specificato quando l'origine dati restituisce <see cref="T:System.DBNull" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare un'istanza di una delle seguenti classi per l'origine dati:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Qualsiasi classe che implementa il <xref:System.Collections.IList> interfaccia  
  
-   Qualsiasi classe  
  
 Vedere le <xref:System.Windows.Forms.Binding> classe per altre informazioni sulla creazione di `dataMember` stringa.  
  
 Quando si crea un'associazione a proprietà di un controllo, il nuovo <xref:System.Windows.Forms.Binding> esamina gli eventi esposti dal controllo associato e la collega due particolari eventi:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Un evento denominato *PropertyName* `Changed` (ad esempio, <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La proprietà specificata da <paramref name="propertyName" /> non esiste nel controllo.  
  
oppure 
La coppia origine dati o membro dati o la proprietà del controllo specificata è associata a un'altra associazione nell'insieme.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue, System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj * string -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue, formatString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" />
        <Parameter Name="nullValue" Type="System.Object" />
        <Parameter Name="formatString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nome della proprietà del controllo da associare.</param>
        <param name="dataSource">Oggetto <see cref="T:System.Object" /> che rappresenta l'origine dati.</param>
        <param name="dataMember">Proprietà o elenco a cui eseguire l'associazione.</param>
        <param name="formattingEnabled">
          <see langword="true" /> per formattare i dati visualizzati; in caso contrario, <see langword="false" />.</param>
        <param name="dataSourceUpdateMode">Uno dei valori di <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</param>
        <param name="nullValue">Oggetto <see cref="T:System.Object" /> da applicare alla proprietà del controllo associato se il valore dell'origine dati è <see cref="T:System.DBNull" />.</param>
        <param name="formatString">Uno o più caratteri identificatori di formato che indicano il modo in cui deve essere visualizzato un valore.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Binding" /> che stabilisce un'associazione semplice tra la proprietà del controllo specificato e il membro dati specificato dell'origine dati specificata. Se richiesto, abilita la formattazione con la stringa di formato specificata, propaga i valori nell'origine dati in base all'impostazione di aggiornamento specificata e imposta la proprietà sul valore specificato quando l'origine dati restituisce un valore <see cref="T:System.DBNull" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare un'istanza di una delle seguenti classi per l'origine dati:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Qualsiasi classe che implementa il <xref:System.Collections.IList> interfaccia  
  
-   Qualsiasi classe  
  
 Vedere le <xref:System.Windows.Forms.Binding> classe per altre informazioni sulla creazione di `dataMember` stringa.  
  
 Quando si crea un'associazione a proprietà di un controllo, il nuovo <xref:System.Windows.Forms.Binding> esamina gli eventi esposti dal controllo associato e la collega due particolari eventi:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Un evento denominato *PropertyName* `Changed` (ad esempio, <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La proprietà specificata da <paramref name="propertyName" /> non esiste nel controllo.  
  
oppure 
La coppia origine dati o membro dati o la proprietà del controllo specificata è associata a un'altra associazione nell'insieme.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString, IFormatProvider formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString, class System.IFormatProvider formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue, System::String ^ formatString, IFormatProvider ^ formatInfo);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj * string * IFormatProvider -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue, formatString, formatInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" />
        <Parameter Name="nullValue" Type="System.Object" />
        <Parameter Name="formatString" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nome della proprietà del controllo da associare.</param>
        <param name="dataSource">Oggetto <see cref="T:System.Object" /> che rappresenta l'origine dati.</param>
        <param name="dataMember">Proprietà o elenco a cui eseguire l'associazione.</param>
        <param name="formattingEnabled">
          <see langword="true" /> per formattare i dati visualizzati; in caso contrario, <see langword="false" />.</param>
        <param name="dataSourceUpdateMode">Uno dei valori di <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</param>
        <param name="nullValue">Oggetto <see cref="T:System.Object" /> da applicare alla proprietà del controllo associato se il valore dell'origine dati è <see cref="T:System.DBNull" />.</param>
        <param name="formatString">Uno o più caratteri identificatori di formato che indicano il modo in cui deve essere visualizzato un valore.</param>
        <param name="formatInfo">Implementazione di <see cref="T:System.IFormatProvider" /> per eseguire l'override del comportamento predefinito della formattazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Binding" /> con proprietà del controllo specificato sul membro dati specificato dell'origine dati specificata. Se richiesto, abilita la formattazione con la stringa di formato specificata; propaga i valori nell'origine dati in base all'impostazione di aggiornamento specificata; abilita la formattazione con la stringa di formato specificata e imposta la proprietà sul valore specificato quando l'origine dati restituisce <see cref="T:System.DBNull" /> nonché imposta il provider del formato specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare un'istanza di una delle seguenti classi per l'origine dati:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Qualsiasi classe che implementa il <xref:System.Collections.IList> interfaccia  
  
-   Qualsiasi classe  
  
 Vedere le <xref:System.Windows.Forms.Binding> classe per altre informazioni sulla creazione di `dataMember` stringa.  
  
 Quando si crea un'associazione a proprietà di un controllo, il nuovo <xref:System.Windows.Forms.Binding> esamina gli eventi esposti dal controllo associato e la collega due particolari eventi:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Un evento denominato *PropertyName* `Changed` (ad esempio, <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La proprietà specificata da <paramref name="propertyName" /> non esiste nel controllo.  
  
oppure 
La coppia origine dati o membro dati o la proprietà del controllo specificata è associata a un'altra associazione nell'insieme.</exception>
      </Docs>
    </Member>
    <Member MemberName="BindableComponent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IBindableComponent BindableComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IBindableComponent BindableComponent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindableComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindableComponent As IBindableComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IBindableComponent ^ BindableComponent { System::Windows::Forms::IBindableComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindableComponent : System.Windows.Forms.IBindableComponent" Usage="System.Windows.Forms.Binding.BindableComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IBindableComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il controllo cui è associato l'oggetto <see cref="T:System.Windows.Forms.Binding" />.</summary>
        <value>Controllo <see cref="T:System.Windows.Forms.IBindableComponent" /> cui è associato l'oggetto <see cref="T:System.Windows.Forms.Binding" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la proprietà <see cref="P:System.Windows.Forms.Binding.FormattingEnabled" /> viene impostata su <see langword="true" /> e un'operazione di associazione viene completata, ad esempio quando i dati vengono spostati dal controllo all'origine dati o viceversa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato in presenza delle seguenti condizioni quando <xref:System.Windows.Forms.Binding.FormattingEnabled%2A> è `true`:  
  
-   I dati dall'origine dati vengano inseriti nella proprietà del controllo.  
  
-   I dati dalla proprietà del controllo viene inseriti l'origine dati.  
  
 Questo evento viene generato al completamento di queste operazioni, indipendente dallo stato di completamento. Ad esempio, se un'operazione di associazione associa un valore null a un <xref:System.Windows.Forms.DateTimePicker.Value%2A> proprietà, viene generata un'eccezione, ma il <xref:System.Windows.Forms.Binding.BindingComplete> evento si verifica ancora. Il gestore dell'evento può intraprendere l'azione appropriata, in base l'esito positivo, errore o eccezioni nel processo di associazione, esaminando la <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> proprietà del <xref:System.Windows.Forms.BindingCompleteEventArgs> parametro.  
  
 Per ulteriori informazioni sulla gestione degli eventi, consultare [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come gestire il <xref:System.Windows.Forms.Binding.BindingComplete> evento.  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Binding.FormattingEnabled" />
        <altmember cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BindingManagerBase">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingManagerBase BindingManagerBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingManagerBase BindingManagerBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindingManagerBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingManagerBase As BindingManagerBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingManagerBase ^ BindingManagerBase { System::Windows::Forms::BindingManagerBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingManagerBase : System.Windows.Forms.BindingManagerBase" Usage="System.Windows.Forms.Binding.BindingManagerBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Windows.Forms.BindingManagerBase" /> per l'oggetto <see cref="T:System.Windows.Forms.Binding" />.</summary>
        <value>Classe <see cref="T:System.Windows.Forms.BindingManagerBase" /> che gestisce questa classe <see cref="T:System.Windows.Forms.Binding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Windows.Forms.BindingManagerBase> per scorrere un elenco associato a dati aumentando o diminuendo il <xref:System.Windows.Forms.BindingManagerBase.Position%2A> proprietà. Il <xref:System.Windows.Forms.BindingManagerBase> classe è astratta. Il <xref:System.Windows.Forms.CurrencyManager> (classe), che gestisce gli elenchi associati a dati, eredita il <xref:System.Windows.Forms.BindingManagerBase> classe.  
  
   
  
## Examples  
 Il codice seguente esempio Ottiene il <xref:System.Windows.Forms.BindingManagerBase> di ogni <xref:System.Windows.Forms.Binding> sul form, quindi stampa il <xref:System.Windows.Forms.BindingManagerBase.Position%2A> proprietà per ogni <xref:System.Windows.Forms.BindingManagerBase>.  
  
 [!code-cpp[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingMemberInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingMemberInfo BindingMemberInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BindingMemberInfo BindingMemberInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindingMemberInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingMemberInfo As BindingMemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingMemberInfo BindingMemberInfo { System::Windows::Forms::BindingMemberInfo get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingMemberInfo : System.Windows.Forms.BindingMemberInfo" Usage="System.Windows.Forms.Binding.BindingMemberInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingMemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto che contiene informazioni su questa associazione in base al parametro <paramref name="dataMember" /> nel costruttore <see cref="Overload:System.Windows.Forms.Binding.#ctor" />.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.BindingMemberInfo" /> che contiene informazioni su questa classe <see cref="T:System.Windows.Forms.Binding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.BindingMemberInfo> creata dal `dataMember` stringa passata al <xref:System.Windows.Forms.Binding.%23ctor%2A> costruttore.  
  
   
  
## Examples  
 Il codice seguente esempio ottiene le <xref:System.Windows.Forms.BindingMemberInfo> della ognuno <xref:System.Windows.Forms.Binding> in un form e vengono visualizzati i <xref:System.Windows.Forms.BindingMemberInfo.BindingPath%2A>, <xref:System.Windows.Forms.BindingMemberInfo.BindingField%2A>, e <xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A> valori delle proprietà per cui <xref:System.Windows.Forms.Binding>.  
  
 [!code-cpp[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Windows.Forms.Control" Usage="System.Windows.Forms.Binding.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il controllo a cui appartiene l'associazione.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.Control" /> a cui appartiene l'associazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Il codice seguente esempio ottiene le <xref:System.Windows.Forms.BindingManagerBase> per un'origine dati specifica e Visualizza informazioni su ogni <xref:System.Windows.Forms.Binding.Control%2A> proprietà a cui è associato all'origine dati. L'esempio Usa la <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> proprietà del <xref:System.Windows.Forms.BindingManagerBase> per ottenere tutti i controlli.  
  
 [!code-cpp[Classic Binding.Control Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Control Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Control Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Control Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Control Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Control Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ControlUpdateMode ControlUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ControlUpdateMode ControlUpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.ControlUpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlUpdateMode As ControlUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ControlUpdateMode ControlUpdateMode { System::Windows::Forms::ControlUpdateMode get(); void set(System::Windows::Forms::ControlUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.ControlUpdateMode : System.Windows.Forms.ControlUpdateMode with get, set" Usage="System.Windows.Forms.Binding.ControlUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica quando le modifiche apportate all'origine dati verranno propagate nella proprietà del controllo associata.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.ControlUpdateMode" />. Il valore predefinito è <see cref="F:System.Windows.Forms.ControlUpdateMode.OnPropertyChanged" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj" Usage="System.Windows.Forms.Binding.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'origine dati per questa associazione.</summary>
        <value>Oggetto <see cref="T:System.Object" /> che rappresenta l'origine dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Origini dati possibili includono:  
  
-   Elemento <xref:System.Data.DataSet>  
  
-   Elemento <xref:System.Data.DataTable>  
  
-   Elemento <xref:System.Data.DataView>  
  
-   Elemento <xref:System.Data.DataViewManager>  
  
-   Qualsiasi oggetto che implementa il <xref:System.Collections.IList> interfaccia  
  
-   Qualsiasi oggetto  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.Binding.DataSource%2A> proprietà per restituire un <xref:System.Data.DataSet>.  
  
 [!code-cpp[Classic Binding.DataSource Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.DataSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceNullValue">
      <MemberSignature Language="C#" Value="public object DataSourceNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSourceNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSourceNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSourceNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceNullValue : obj with get, set" Usage="System.Windows.Forms.Binding.DataSourceNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore da memorizzare nell'origine dati se il valore del controllo e <see langword="null" /> oppure vuoto.</summary>
        <value>Oggetto <see cref="T:System.Object" /> da memorizzare nell'origine dati se la proprietà del controllo è vuota oppure <see langword="null" />. Il valore predefinito è <see cref="T:System.DBNull" /> per i tipi valore e <see langword="null" /> per i tipi diversi dai valori.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare la <xref:System.Windows.Forms.Binding.NullValue%2A> proprietà per specificare il valore visualizzato in un controllo associato all'origine dati contiene <xref:System.DBNull>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Binding.NullValue" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataSourceUpdateMode DataSourceUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataSourceUpdateMode DataSourceUpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSourceUpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceUpdateMode As DataSourceUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataSourceUpdateMode DataSourceUpdateMode { System::Windows::Forms::DataSourceUpdateMode get(); void set(System::Windows::Forms::DataSourceUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceUpdateMode : System.Windows.Forms.DataSourceUpdateMode with get, set" Usage="System.Windows.Forms.Binding.DataSourceUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataSourceUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica quando le modifiche apportate alla proprietà del controllo associata verranno propagate nell'origine dati.</summary>
        <value>Valore che indica quando vengono propagate le modifiche. Il valore predefinito è <see cref="F:System.Windows.Forms.DataSourceUpdateMode.OnValidation" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si noti che anche se questa proprietà è impostata su <xref:System.Windows.Forms.DataSourceUpdateMode.Never>, l'associazione verrà aggiornata ad almeno una volta, quando viene innanzitutto stabilito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ConvertEventHandler Format;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ConvertEventHandler Format" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.Format" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Format As ConvertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ConvertEventHandler ^ Format;" />
      <MemberSignature Language="F#" Value="member this.Format : System.Windows.Forms.ConvertEventHandler " Usage="member this.Format : System.Windows.Forms.ConvertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la proprietà di un controllo viene associata a un valore di dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.Binding.Format> evento viene generato quando vengano eseguito il push di dati dall'origine dati nel controllo. È possibile gestire il <xref:System.Windows.Forms.Binding.Format> eventi per convertire i dati non formattati dell'origine dati in formato dati per la visualizzazione. Quando i dati vengono spostati dal controllo nell'origine dati, il <xref:System.Windows.Forms.Binding.Parse> evento viene generato per annullare la formattazione del valore visualizzato, quindi il <xref:System.Windows.Forms.Binding.Format> evento si verifica questa opzione per riformattare i dati da visualizzare. Ciò garantisce che il controllo associato consente di visualizzare dati formattati correttamente indipendentemente dal fatto che l'utente immette formattati o i dati nel controllo.  
  
 Il <xref:System.Windows.Forms.Binding.Format> e <xref:System.Windows.Forms.Binding.Parse> eventi consentono di creare formati personalizzati per la visualizzazione dei dati. Ad esempio, se i dati in una tabella sono di tipo <xref:System.Decimal>, è possibile visualizzare i dati nel formato della valuta locale impostando il <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> proprietà delle <xref:System.Windows.Forms.ConvertEventArgs> al valore formattato nel <xref:System.Windows.Forms.Binding.Format> evento. È quindi necessario annullare la formattazione del valore visualizzato nel <xref:System.Windows.Forms.Binding.Parse> evento.  
  
 Il <xref:System.Windows.Forms.Binding.Format> evento si verifica ogni volta che il <xref:System.Windows.Forms.BindingManagerBase.Current%2A> pari al <xref:System.Windows.Forms.BindingManagerBase> modifiche, che include:  
  
-   La prima volta che la proprietà è associata.  
  
-   Ogni volta che il <xref:System.Windows.Forms.BindingManagerBase.Position%2A> le modifiche.  
  
-   Ogni volta che l'elenco associato a dati è ordinato o vengono filtrato, che viene eseguita quando un <xref:System.Data.DataView> fornisce l'elenco.  
  
 Il <xref:System.Windows.Forms.Binding.Format> evento si verifica anche dopo il <xref:System.Windows.Forms.Binding.Parse> evento. Ad esempio, quando un controllo perde lo stato attivo, il relativo contenuto viene analizzato. Immediatamente dopo, quando viene eseguito il push di nuovi dati nel controllo, il <xref:System.Windows.Forms.Binding.Format> evento viene generato, consentendo il nuovo contenuto da formattare.  
  
 Per ulteriori informazioni sulla gestione degli eventi, consultare [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.Binding>, aggiunge un <xref:System.Windows.Forms.ConvertEventHandler> delegato a entrambe le <xref:System.Windows.Forms.Binding.Parse> e <xref:System.Windows.Forms.Binding.Format> eventi e aggiunge il <xref:System.Windows.Forms.Binding> per il <xref:System.Windows.Forms.BindingsCollection> di un <xref:System.Windows.Forms.TextBox> controllare tramite il <xref:System.Windows.Forms.Control.DataBindings%2A> proprietà. Il `DecimalToCurrencyString` delegato dell'evento, aggiunto al <xref:System.Windows.Forms.Binding.Format> evento, formatta il valore associato (una <xref:System.Decimal> tipo) come valuta utilizzando la <xref:System.Decimal.ToString%2A> (metodo). Il `CurrencyStringToDecimal` delegato dell'evento, aggiungere il <xref:System.Windows.Forms.Binding.Parse> evento, converte il valore visualizzato dal controllo al <xref:System.Decimal> tipo.  
  
 Questo esempio si presuppone la presenza di un <xref:System.Data.DataSet> denominato `ds`.  
  
 [!code-cpp[Classic Binding.Format Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Format Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Format Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Format Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Format Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Format Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
        <altmember cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="FormatInfo">
      <MemberSignature Language="C#" Value="public IFormatProvider FormatInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormatInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatInfo As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IFormatProvider ^ FormatInfo { IFormatProvider ^ get(); void set(IFormatProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatInfo : IFormatProvider with get, set" Usage="System.Windows.Forms.Binding.FormatInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.IFormatProvider" /> che fornisce il comportamento personalizzato della formattazione.</summary>
        <value>Implementazione di <see cref="T:System.IFormatProvider" /> che fornisce il comportamento personalizzato della formattazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostazione della proprietà sostituirà il comportamento predefinito della formattazione, che usa il <xref:System.Windows.Forms.Application.CurrentCulture%2A?displayProperty=nameWithType> l'impostazione della proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatString">
      <MemberSignature Language="C#" Value="public string FormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatString : string with get, set" Usage="System.Windows.Forms.Binding.FormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i caratteri identificatori di formato che indicano il modo in cui deve essere visualizzato un valore.</summary>
        <value>Stringa di caratteri identificatori di formato che indicano il modo in cui deve essere visualizzato un valore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La stringa di formato utilizzata deve seguire le specifiche di formato standard di .NET Framework. Per altre informazioni, vedere [formattazione di tipi in .NET Framework](~/docs/standard/base-types/formatting-types.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattingEnabled">
      <MemberSignature Language="C#" Value="public bool FormattingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormattingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormattingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormattingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FormattingEnabled : bool with get, set" Usage="System.Windows.Forms.Binding.FormattingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la conversione del tipo e la formattazione vengono applicate ai dati della proprietà del controllo.</summary>
        <value>
          <see langword="true" /> se la conversione del tipo e la formattazione dei dati della proprietà del controllo sono abilitate; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostando questa proprietà su `true` Abilita il comportamento di gestione degli errori e fa in modo che anche il <xref:System.Windows.Forms.Binding.BindingComplete> generazione dell'evento. Il gestore dell'evento può intraprendere l'azione appropriata, in base l'esito positivo, errore o eccezioni nel processo di associazione, esaminando la <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> proprietà del <xref:System.Windows.Forms.BindingCompleteEventArgs> parametro.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.BindingComplete" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsBinding">
      <MemberSignature Language="C#" Value="public bool IsBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.IsBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBinding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBinding : bool" Usage="System.Windows.Forms.Binding.IsBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'associazione è attiva.</summary>
        <value>
          <see langword="true" /> se l'associazione è attiva; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'associazione è attiva quando verificano queste condizioni:  
  
-   Tutte le relative proprietà vengono impostate.  
  
-   L'utente non ha chiamato <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> o <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> nel <xref:System.Windows.Forms.BindingManagerBase> che la <xref:System.Windows.Forms.Binding> a cui appartiene.  
  
-   Il controllo a cui il <xref:System.Windows.Forms.Binding> appartiene è stato creato.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene stampato il <xref:System.Windows.Forms.Binding.PropertyName%2A> e <xref:System.Windows.Forms.Binding.IsBinding%2A> per ogni valore <xref:System.Windows.Forms.Binding> in un form.  
  
 [!code-cpp[Classic Binding.IsBinding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.IsBinding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.IsBinding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.IsBinding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.IsBinding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.IsBinding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NullValue">
      <MemberSignature Language="C#" Value="public object NullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.NullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullValue : obj with get, set" Usage="System.Windows.Forms.Binding.NullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Object" /> da impostare come proprietà del controllo quando l'origine dati contiene un valore <see cref="T:System.DBNull" />.</summary>
        <value>Oggetto <see cref="T:System.Object" /> da impostare come proprietà del controllo quando l'origine dati contiene un valore <see cref="T:System.DBNull" />. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'origine dati deve contenere <xref:System.DBNull> per il <xref:System.Windows.Forms.Binding.NullValue%2A> proprietà da applicare in modo corretto. Se i dati di tipo di origine è un tipo, ad esempio un numero intero o stringa il valore della <xref:System.Windows.Forms.Binding.NullValue%2A> proprietà verrà ignorata. Inoltre, il <xref:System.Windows.Forms.Binding.NullValue%2A> proprietà viene ignorata se è impostato su `null`.  
  
 Un valore null verrà aggiunto all'origine dati quando è impostata la proprietà del controllo all'oggetto di <xref:System.Windows.Forms.Binding.NullValue%2A>. Se <xref:System.Windows.Forms.Binding.NullValue%2A> è impostata su un valore di stringa, i confronti devono maiuscole e minuscole.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingComplete (e As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit&#xA;override this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="binding.OnBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Binding.BindingComplete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.Binding.OnBindingComplete%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFormat">
      <MemberSignature Language="C#" Value="protected virtual void OnFormat (System.Windows.Forms.ConvertEventArgs cevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormat(class System.Windows.Forms.ConvertEventArgs cevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormat (cevent As ConvertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormat(System::Windows::Forms::ConvertEventArgs ^ cevent);" />
      <MemberSignature Language="F#" Value="abstract member OnFormat : System.Windows.Forms.ConvertEventArgs -&gt; unit&#xA;override this.OnFormat : System.Windows.Forms.ConvertEventArgs -&gt; unit" Usage="binding.OnFormat cevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cevent" Type="System.Windows.Forms.ConvertEventArgs" />
      </Parameters>
      <Docs>
        <param name="cevent">Oggetto <see cref="T:System.Windows.Forms.ConvertEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Binding.Format" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.Binding.OnFormat%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
      </Docs>
    </Member>
    <Member MemberName="OnParse">
      <MemberSignature Language="C#" Value="protected virtual void OnParse (System.Windows.Forms.ConvertEventArgs cevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParse(class System.Windows.Forms.ConvertEventArgs cevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParse (cevent As ConvertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParse(System::Windows::Forms::ConvertEventArgs ^ cevent);" />
      <MemberSignature Language="F#" Value="abstract member OnParse : System.Windows.Forms.ConvertEventArgs -&gt; unit&#xA;override this.OnParse : System.Windows.Forms.ConvertEventArgs -&gt; unit" Usage="binding.OnParse cevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cevent" Type="System.Windows.Forms.ConvertEventArgs" />
      </Parameters>
      <Docs>
        <param name="cevent">Oggetto <see cref="T:System.Windows.Forms.ConvertEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Binding.Parse" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.Binding.OnParse%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ConvertEventHandler Parse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ConvertEventHandler Parse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.Parse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Parse As ConvertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ConvertEventHandler ^ Parse;" />
      <MemberSignature Language="F#" Value="member this.Parse : System.Windows.Forms.ConvertEventHandler " Usage="member this.Parse : System.Windows.Forms.ConvertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene modificato il valore di un controllo associato a dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.Binding.Format> e <xref:System.Windows.Forms.Binding.Parse> eventi consentono di creare formati personalizzati per la visualizzazione dei dati. Ad esempio, se i dati in una tabella sono di tipo <xref:System.Decimal>, è possibile visualizzare i dati nel formato della valuta locale impostando il <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> proprietà delle <xref:System.Windows.Forms.ConvertEventArgs> al valore formattato nel <xref:System.Windows.Forms.Binding.Format> evento. È quindi necessario annullare la formattazione del valore visualizzato nel <xref:System.Windows.Forms.Binding.Parse> evento.  
  
 Il <xref:System.Windows.Forms.Binding.Parse> evento si verifica nelle condizioni seguenti:  
  
-   Dopo il <xref:System.Windows.Forms.Control.Validated> eventi del <xref:System.Windows.Forms.Control> si verifica.  
  
-   Quando la <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> metodo di <xref:System.Windows.Forms.BindingManagerBase> viene chiamato.  
  
-   Quando la <xref:System.Windows.Forms.BindingManagerBase.Current%2A> del <xref:System.Windows.Forms.BindingManagerBase> modifiche (in altre parole, quando il <xref:System.Windows.Forms.BindingManagerBase.Position%2A> modifiche).  
  
 Per ulteriori informazioni sulla gestione degli eventi, consultare [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.Binding>, aggiunge un <xref:System.Windows.Forms.ConvertEventHandler> delegato a entrambe le <xref:System.Windows.Forms.Binding.Parse> e <xref:System.Windows.Forms.Binding.Format> eventi e aggiunge il <xref:System.Windows.Forms.Binding> per il <xref:System.Windows.Forms.BindingsCollection> di un <xref:System.Windows.Forms.TextBox> controllare tramite il <xref:System.Windows.Forms.Control.DataBindings%2A> proprietà. Il `DecimalToCurrencyString` delegato dell'evento, aggiunto al <xref:System.Windows.Forms.Binding.Format> evento, formatta il valore associato (una <xref:System.Decimal> tipo) come valuta utilizzando la <xref:System.Decimal.ToString%2A> (metodo). Il `CurrencyStringToDecimal` delegato dell'evento, aggiungere il <xref:System.Windows.Forms.Binding.Parse> evento, converte il valore visualizzato dal controllo al <xref:System.Decimal> tipo.  
  
 [!code-cpp[Classic Binding.Parse Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Parse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Parse Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Parse Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Parse Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Parse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string" Usage="System.Windows.Forms.Binding.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome della proprietà con associazione a dati del controllo.</summary>
        <value>Nome di una proprietà del controllo a cui stabilire l'associazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Windows.Forms.Binding.PropertyName%2A> per specificare la proprietà del controllo che si desidera associare a un elenco in un'origine dati. In genere, è associata una proprietà di visualizzazione, ad esempio la <xref:System.Windows.Forms.Control.Text%2A> proprietà di un <xref:System.Windows.Forms.TextBox> controllo. Tuttavia, poiché è possibile associare qualsiasi proprietà di un controllo, è possibile creare a livello di codice i controlli in fase di esecuzione usando i dati da un database.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene stampato il <xref:System.Windows.Forms.Binding.PropertyName%2A> valore di ogni <xref:System.Windows.Forms.Binding> per ogni controllo in un form.  
  
 [!code-cpp[Classic Binding.PropertyName Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.PropertyName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.PropertyName Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.PropertyName Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.PropertyName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.PropertyName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadValue">
      <MemberSignature Language="C#" Value="public void ReadValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.ReadValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadValue();" />
      <MemberSignature Language="F#" Value="member this.ReadValue : unit -&gt; unit" Usage="binding.ReadValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta la proprietà del controllo sul valore letto dall'origine dati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public void WriteValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.WriteValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteValue();" />
      <MemberSignature Language="F#" Value="member this.WriteValue : unit -&gt; unit" Usage="binding.WriteValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legge il valore corrente dalla proprietà del controllo e lo scrive nell'origine dati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>