<Type Name="TextBoxBase" FullName="System.Windows.Forms.TextBoxBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6002af143f80f4fe4f8ba0d9d9a16115c4a0f305" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30651045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextBoxBase extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Forms::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("TextChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e3275-101">Implementa le funzionalità di base richieste dai controlli di testo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e3275-101">Implements the basic functionality required by text controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-102">Questa classe implementa le funzionalità principali dei controlli di modifica testo, ad esempio <xref:System.Windows.Forms.TextBox> e <xref:System.Windows.Forms.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="e3275-102">This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="e3275-103">Queste includono la selezione di testo, **Appunti** molti eventi di funzionalità e supporto per il controllo di testo su più righe.</span><span class="sxs-lookup"><span data-stu-id="e3275-103">These include text selection, **Clipboard** functionality, multiline text control support, and many events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-104">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe, per creare un controllo derivato <xref:System.Windows.Forms.TextBox> controllo con barre di scorrimento verticale.</span><span class="sxs-lookup"><span data-stu-id="e3275-104">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="e3275-105">Questo esempio Usa anche il <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, e <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> proprietà per adattare il controllo casella di testo su più righe per la creazione di documenti di testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-105">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="e3275-106">Non è in genere ereditare da <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e3275-106">You do not typically inherit from <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
        </span>
        <span data-ttu-id="e3275-107">Per creare la propria classe di controllo di testo, ereditare da <see cref="T:System.Windows.Forms.TextBox" /> o <see cref="T:System.Windows.Forms.RichTextBox" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e3275-107">To create your own text control class, inherit from <see cref="T:System.Windows.Forms.TextBox" /> or <see cref="T:System.Windows.Forms.RichTextBox" />.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Windows.Forms.TextBox" />
    <altmember cref="T:System.Windows.Forms.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-108">Ottiene o imposta un valore che indica se, premendo il tasto TAB, viene digitato un carattere di tabulazione in un controllo della casella di testo a più righe oppure viene spostato lo stato attivo al controllo successivo nell'ordine di tabulazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-108">Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-109">
            <see langword="true" /> se gli utenti possono immettere tabulazioni in una casella di testo a più righe con il tasto TAB; <see langword="false" /> se premendo il tasto TAB viene modificato lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-109">
              <see langword="true" /> if users can enter tabs in a multiline text box using the TAB key; <see langword="false" /> if pressing the TAB key moves the focus.</span>
          </span>
          <span data-ttu-id="e3275-110">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-110">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-111">Il <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> proprietà deve essere anche `true` per ottenere un carattere di tabulazione del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-111">The <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property must also be `true` to get a TAB character in the control.</span></span>  
  
 <span data-ttu-id="e3275-112">Se il <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> è impostata su `true`, l'utente deve premere CTRL + TAB per spostare lo stato attivo al controllo successivo nell'ordine di tabulazione.</span><span class="sxs-lookup"><span data-stu-id="e3275-112">If the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-113">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe, per creare un controllo derivato <xref:System.Windows.Forms.TextBox> controllo con barre di scorrimento verticale.</span><span class="sxs-lookup"><span data-stu-id="e3275-113">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="e3275-114">Questo esempio Usa anche il <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, e <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> proprietà per adattare il controllo casella di testo su più righe per la creazione di documenti di testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-114">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcceptsTabChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcceptsTabChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-115">Si verifica quando cambia il valore della proprietà <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-115">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-116">Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="e3275-116">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-117">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</span><span class="sxs-lookup"><span data-stu-id="e3275-117">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e3275-118">Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-118">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span> <span data-ttu-id="e3275-119">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</span><span class="sxs-lookup"><span data-stu-id="e3275-119">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e3275-120">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e3275-120">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e3275-121">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.TextBoxBase>, ad esempio un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="e3275-121">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="e3275-122">Quindi assegnare un nome di istanza `TextBoxBase1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-122">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#241](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#241)]
 [!code-vb[System.Windows.Forms.EventExamples#241](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="e3275-123">Il testo da aggiungere al contenuto corrente della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-123">The text to append to the current contents of the text box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-124">Accoda testo a quello corrente di una casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-124">Appends text to the current text of a text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-125">È possibile utilizzare questo metodo per aggiungere testo al testo esistente nel controllo anziché utilizzare l'operatore di concatenazione (+) per concatenare testo per il <xref:System.Windows.Forms.TextBoxBase.Text%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-125">You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-126">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> (metodo) e <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> proprietà per copiare testo da uno <xref:System.Windows.Forms.TextBox> a un altro.</span><span class="sxs-lookup"><span data-stu-id="e3275-126">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="e3275-127">In questo esempio presuppone che due <xref:System.Windows.Forms.TextBox> controlli denominati, `textBox1` e `textBox2`, sono stati aggiunti a un form e che `textBox1` assegnato per il testo relativo <xref:System.Windows.Forms.Control.Text%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-127">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-128">Ottiene o imposta un valore che indica se la dimensione del controllo viene modificata automaticamente al variare del tipo di carattere assegnato al controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-128">Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-129">
            <see langword="true" /> se l'altezza del controllo cambia automaticamente al variare del tipo di carattere; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-129">
              <see langword="true" /> if the height of the control automatically adjusts when the font is changed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e3275-130">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-130">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-131">Quando si imposta la <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> proprietà `true` per un <xref:System.Windows.Forms.TextBox>, quando il <xref:System.Windows.Forms.Control.Font%2A> modifiche, il <xref:System.Windows.Forms.TextBox> venga espansa o compressa di <xref:System.Windows.Forms.Control.Height%2A> per adattare il testo di dimensioni maggiore o minore.</span><span class="sxs-lookup"><span data-stu-id="e3275-131">When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text.</span></span> <span data-ttu-id="e3275-132">Il <xref:System.Windows.Forms.Control.Width%2A> del <xref:System.Windows.Forms.TextBox> non cambia.</span><span class="sxs-lookup"><span data-stu-id="e3275-132">The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change.</span></span>  
  
 <span data-ttu-id="e3275-133">Se si desidera modificare le dimensioni del controllo quando l'utente immette testo, è possibile utilizzare un <xref:System.Windows.Forms.RichTextBox> controllo e utilizzare il relativo <xref:System.Windows.Forms.RichTextBox.ContentsResized> evento di modifica delle dimensioni.</span><span class="sxs-lookup"><span data-stu-id="e3275-133">If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-134">Questo esempio si presuppone di disporre di un form con due caselle di testo, due pulsanti e gli eventi click per ognuno dei pulsanti.</span><span class="sxs-lookup"><span data-stu-id="e3275-134">This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons.</span></span> <span data-ttu-id="e3275-135">Nell'esempio viene illustrato il <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> proprietà impostandola su `true` per una casella di testo e `false` per gli altri.</span><span class="sxs-lookup"><span data-stu-id="e3275-135">The example demonstrates the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property by setting it to `true` for one text box and `false` for the other.</span></span> <span data-ttu-id="e3275-136">Quando si fa clic su un pulsante di caselle di testo vengono riempite con un testo più piccolo e quando si fa clic sul pulsante altre caselle di testo vengono riempite con testo di dimensioni maggiori.</span><span class="sxs-lookup"><span data-stu-id="e3275-136">When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text.</span></span> <span data-ttu-id="e3275-137">Casella di testo con <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> impostato su `true` si espande in altezza per adattare il testo di dimensioni maggiore.</span><span class="sxs-lookup"><span data-stu-id="e3275-137">The text box that has <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> set to `true` expands in height to accommodate the larger text.</span></span> <span data-ttu-id="e3275-138">Non modifica la larghezza.</span><span class="sxs-lookup"><span data-stu-id="e3275-138">The width does not change.</span></span>  
  
 [!code-csharp[SystemWindowsFormsAutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsAutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-139">Questo evento non è pertinente per questa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-139">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-140">Questo evento non è pertinente per questa classe.</span><span class="sxs-lookup"><span data-stu-id="e3275-140">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-141">Ottiene o imposta il colore di sfondo del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-141">Gets or sets the background color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-142">Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta lo sfondo del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-142">A <see cref="T:System.Drawing.Color" /> that represents the background of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-143">È possibile utilizzare il <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> proprietà per modificare il colore di sfondo del testo del controllo di blend nello schema di colore dei form.</span><span class="sxs-lookup"><span data-stu-id="e3275-143">You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms.</span></span>  
  
 <span data-ttu-id="e3275-144">Per modificare il colore del testo all'interno del controllo, utilizzare il <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-144">To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property.</span></span> <span data-ttu-id="e3275-145">Quando si imposta la <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> proprietà del controllo, assicurarsi che il colore scelto non causa il testo del controllo venga rimosso.</span><span class="sxs-lookup"><span data-stu-id="e3275-145">When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="e3275-146">Ad esempio, se il <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> e <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> sono entrambe impostate su `Color.Black`, il testo all'interno della casella di testo non saranno visibile.</span><span class="sxs-lookup"><span data-stu-id="e3275-146">For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="e3275-147">Questa proprietà può essere sottoposta a override se la <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> proprietà del <xref:System.Windows.Forms.TextBoxBase> è impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="e3275-147">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-148">Questa proprietà non è pertinente per questa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-148">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-149">Immagine di sfondo per l'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-149">The background image for the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-150">Questa proprietà non è pertinente per questa classe.</span><span class="sxs-lookup"><span data-stu-id="e3275-150">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-151">Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> cambia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-151">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> property changes.</span>
          </span>
          <span data-ttu-id="e3275-152">Questo evento non è pertinente per questa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-152">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-153">Questo evento non è pertinente per questa classe.</span><span class="sxs-lookup"><span data-stu-id="e3275-153">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-154">Questa proprietà non è pertinente per questa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-154">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-155">Uno dei valori di <see cref="T:System.Windows.Forms.ImageLayout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-155">One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-156">Questa proprietà non è pertinente per questa classe.</span><span class="sxs-lookup"><span data-stu-id="e3275-156">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-157">Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> cambia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-157">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> property changes.</span>
          </span>
          <span data-ttu-id="e3275-158">Questo evento non è pertinente per questa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-158">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-159">Questo evento non è pertinente per questa classe.</span><span class="sxs-lookup"><span data-stu-id="e3275-159">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-160">Ottiene o imposta il tipo di bordo del controllo casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-160">Gets or sets the border type of the text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-161">Oggetto <see cref="T:System.Windows.Forms.BorderStyle" /> che rappresenta il tipo di bordo del controllo casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-161">A <see cref="T:System.Windows.Forms.BorderStyle" /> that represents the border type of the text box control.</span>
          </span>
          <span data-ttu-id="e3275-162">Il valore predefinito è <see langword="Fixed3D" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-162">The default is <see langword="Fixed3D" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-163">È possibile utilizzare il <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> proprietà per creare controlli bidimensionali, oltre al controllo tridimensionale predefinito.</span><span class="sxs-lookup"><span data-stu-id="e3275-163">You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-164">La classe derivata, <xref:System.Windows.Forms.RichTextBox>, non supporta il `BorderStyle.FixedSingle` stile.</span><span class="sxs-lookup"><span data-stu-id="e3275-164">The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style.</span></span> <span data-ttu-id="e3275-165">Questo stile causerà la <xref:System.Windows.Forms.BorderStyle> da utilizzare il `BorderStyle.Fixed3D` dello stile.</span><span class="sxs-lookup"><span data-stu-id="e3275-165">This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-166">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe derivata, da creare una casella di testo che è possibile visualizzare correttamente il testo utilizzando Arial 20 punti con un solo bordo.</span><span class="sxs-lookup"><span data-stu-id="e3275-166">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border.</span></span> <span data-ttu-id="e3275-167">Questo esempio viene utilizzato il <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> proprietà per determinare l'altezza del controllo appropriata dopo il tipo di carattere e <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> assegnati al controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-167">This example uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to determine the appropriate height of the control after the font and <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> have been assigned to the control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="e3275-168">Alla proprietà è stato assegnato un valore non compreso nell'intervallo dei valori validi per l'enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-168">A value that is not within the range of valid values for the enumeration was assigned to the property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-169">Si verifica quando cambia il valore della proprietà <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-169">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-170">Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="e3275-170">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-171">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</span><span class="sxs-lookup"><span data-stu-id="e3275-171">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e3275-172">Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-172">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span> <span data-ttu-id="e3275-173">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</span><span class="sxs-lookup"><span data-stu-id="e3275-173">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e3275-174">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e3275-174">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e3275-175">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.TextBoxBase>, ad esempio un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="e3275-175">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="e3275-176">Quindi assegnare un nome di istanza `TextBoxBase1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-176">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#242](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#242)]
 [!code-vb[System.Windows.Forms.EventExamples#242](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#242)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-177">Ottiene un valore che indica se la proprietà <see cref="P:System.Windows.Forms.Control.ImeMode" /> può essere impostata su un valore attivo, per abilitare il supporto IME.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-177">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-178">
            <see langword="false" /> se la proprietà <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> è <see langword="true" /> o se questa classe <see cref="T:System.Windows.Forms.TextBoxBase" /> è impostata per utilizzare un carattere della password nascosto, in caso contrario <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-178">
              <see langword="false" /> if the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property is <see langword="true" /> or if this <see cref="T:System.Windows.Forms.TextBoxBase" /> class is set to use a password mask character; otherwise, <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-179">Ottiene un valore che indica se l'utente può annullare l'operazione precedente eseguita in un controllo casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-179">Gets a value indicating whether the user can undo the previous operation in a text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-180">
            <see langword="true" /> se l'utente può annullare l'operazione precedente eseguita in un controllo casella di controllo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-180">
              <see langword="true" /> if the user can undo the previous operation performed in a text box control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-181">Se questo metodo restituisce `true`, è possibile chiamare il <xref:System.Windows.Forms.TextBoxBase.Undo%2A> metodo per annullare l'ultima operazione in una casella di testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-181">If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box.</span></span> <span data-ttu-id="e3275-182">È possibile utilizzare questo metodo nel <xref:System.Windows.Forms.MenuItem.Popup> evento di un <xref:System.Windows.Forms.MenuItem>, o nel codice che gestisce lo stato dei pulsanti di una <xref:System.Windows.Forms.ToolBar> per abilitare o disabilitare la possibilità di annullare l'operazione precedente in un controllo casella di testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-182">You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-183">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-183">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="e3275-184">Fornisce <xref:System.Windows.Forms.MenuItem.Click> gestori eventi per <xref:System.Windows.Forms.MenuItem> gli oggetti che eseguono le operazioni Taglia, copia, Incolla e operazioni di annullamento.</span><span class="sxs-lookup"><span data-stu-id="e3275-184">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="e3275-185">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> controllo denominato `textBox1` è stato creato.</span><span class="sxs-lookup"><span data-stu-id="e3275-185">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3275-186">Cancella tutto il testo dal controllo casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-186">Clears all text from the text box control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-187">È possibile utilizzare questo metodo per cancellare il contenuto del controllo invece di assegnare il <xref:System.Windows.Forms.TextBoxBase.Text%2A> proprietà una stringa vuota.</span><span class="sxs-lookup"><span data-stu-id="e3275-187">You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-188">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, derivata per creare un gestore eventi per il <xref:System.Windows.Forms.Control.TextChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-188">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create an event handler for the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span> <span data-ttu-id="e3275-189">Il codice nel gestore eventi limita i dati in numeri.</span><span class="sxs-lookup"><span data-stu-id="e3275-189">The code within the event handler restricts data to numbers.</span></span> <span data-ttu-id="e3275-190">Dopo aver immesso il testo nel controllo, il codice che determina se il testo immesso è un numero.</span><span class="sxs-lookup"><span data-stu-id="e3275-190">After text has been entered in the control, the code determines if the text entered is a number.</span></span> <span data-ttu-id="e3275-191">Se il testo non è un numero, il codice cancella il testo dal controllo e un <xref:System.Windows.Forms.MessageBox> viene visualizzata per avvisare l'utente che sono accettati solo numeri.</span><span class="sxs-lookup"><span data-stu-id="e3275-191">If the text is not a number, the code clears the text from the control and a <xref:System.Windows.Forms.MessageBox> is displayed to alert the user that only numbers are accepted.</span></span> <span data-ttu-id="e3275-192">Nell'esempio si presuppone che un `Boolean` variabile denominata `flag` e <xref:System.Windows.Forms.TextBox> controllo denominato `textBox1` definiti all'esterno di questo metodo.</span><span class="sxs-lookup"><span data-stu-id="e3275-192">The example requires that a `Boolean` variable named `flag` and a <xref:System.Windows.Forms.TextBox> control called `textBox1` are defined outside of this method.</span></span> <span data-ttu-id="e3275-193">In questo esempio viene illustrato come utilizzare una variabile di flag per evitare un evento a catena nel <xref:System.Windows.Forms.Control.TextChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-193">This example demonstrates how to use a flag variable to avoid a cascading event in the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearUndo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearUndo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3275-194">Cancella le informazioni relative all'operazione più recente dal buffer di annullamento della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-194">Clears information about the most recent operation from the undo buffer of the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-195">È possibile utilizzare questo metodo per evitare che un'operazione di annullamento dal ripetersi, in base allo stato dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="e3275-195">You can use this method to prevent an undo operation from repeating, based on the state of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-196">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-196">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="e3275-197">Fornisce <xref:System.Windows.Forms.MenuItem.Click> gestori eventi per <xref:System.Windows.Forms.MenuItem> gli oggetti che eseguono le operazioni Taglia, copia, Incolla e operazioni di annullamento.</span><span class="sxs-lookup"><span data-stu-id="e3275-197">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="e3275-198">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> controllo denominato `textBox1` è stato creato.</span><span class="sxs-lookup"><span data-stu-id="e3275-198">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-199">Si verifica quando la casella di testo viene selezionata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-199">Occurs when the text box is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-200">Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="e3275-200">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-201">Esempio di codice seguente viene illustrato come gestire il <xref:System.Windows.Forms.TextBoxBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-201">The following code example demonstrates how to handle the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span> <span data-ttu-id="e3275-202">Per eseguire l'esempio, incollare il codice seguente in un form contenente un <xref:System.Windows.Forms.TextBox> controllo denominato TextBox1.</span><span class="sxs-lookup"><span data-stu-id="e3275-202">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called TextBox1.</span></span> <span data-ttu-id="e3275-203">In questo esempio richiede che il metodo di gestione degli eventi è stato associato il <xref:System.Windows.Forms.TextBoxBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-203">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3275-204">Copia negli **Appunti** la selezione corrente nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-204">Copies the current selection in the text box to the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-205">È possibile utilizzare questo metodo, anziché utilizzare il <xref:System.Windows.Forms.Clipboard> (classe), per copiare il testo nella casella di testo e posizionarlo nel **Appunti**.</span><span class="sxs-lookup"><span data-stu-id="e3275-205">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and place it in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-206">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-206">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="e3275-207">Fornisce <xref:System.Windows.Forms.MenuItem.Click> gestori eventi per <xref:System.Windows.Forms.MenuItem> gli oggetti che eseguono le operazioni Taglia, copia, Incolla e operazioni di annullamento.</span><span class="sxs-lookup"><span data-stu-id="e3275-207">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="e3275-208">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> controllo denominato `textBox1` è stato creato.</span><span class="sxs-lookup"><span data-stu-id="e3275-208">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3275-209">Crea un handle per il controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-209">Creates a handle for the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e3275-210">per operare con codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-210">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="e3275-211">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-211">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-212">Ottiene i parametri necessari per la creazione quando viene creato l'handle del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-212">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-213">Oggetto <see cref="T:System.Windows.Forms.CreateParams" /> contenente i parametri di creazione necessari quando viene creato l'handle del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-213">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3275-214">Sposta negli **Appunti** la selezione corrente nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-214">Moves the current selection in the text box to the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-215">Questo metodo verrà tagliare testo dalla casella di testo solo se viene selezionato testo nel controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-215">This method will only cut text from the text box if text is selected in the control.</span></span> <span data-ttu-id="e3275-216">È possibile utilizzare questo metodo, anziché utilizzare il <xref:System.Windows.Forms.Clipboard> (classe), per copiare il testo nella casella di testo e spostare il **Appunti**.</span><span class="sxs-lookup"><span data-stu-id="e3275-216">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-217">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-217">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="e3275-218">Fornisce <xref:System.Windows.Forms.MenuItem.Click> gestori eventi per <xref:System.Windows.Forms.MenuItem> gli oggetti che eseguono le operazioni Taglia, copia, Incolla e operazioni di annullamento.</span><span class="sxs-lookup"><span data-stu-id="e3275-218">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="e3275-219">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> controllo denominato `textBox1` è stato creato.</span><span class="sxs-lookup"><span data-stu-id="e3275-219">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-220">Ottiene o imposta il cursore predefinito per il controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-220">Gets or sets the default cursor for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-221">Oggetto di tipo <see cref="T:System.Windows.Forms.Cursor" /> che rappresenta il cursore predefinito corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-221">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-222">Eseguire l'override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> per configurare un cursore predefinito per il controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-222">Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="e3275-223">Questo è più efficiente rispetto all'impostazione del cursore nel costruttore del controllo e fornisce il supporto automatico per determinate funzioni della finestra di progettazione relative al cursore.</span><span class="sxs-lookup"><span data-stu-id="e3275-223">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-224">Ottiene le dimensioni predefinite del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-224">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-225">Oggetto <see cref="T:System.Drawing.Size" /> predefinito del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-225">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DeselectAll">
      <MemberSignature Language="C#" Value="public void DeselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.DeselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeselectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3275-226">Specifica che il valore della proprietà <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> è zero, quindi non viene selezionato alcun carattere nel controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-226">Specifies that the value of the <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> property is zero so that no characters are selected in the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-227">Ottiene o imposta un valore che indica se il controllo, prima di essere visualizzato, deve essere disegnato in un buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-227">Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</span>
          </span>
          <span data-ttu-id="e3275-228">Questa proprietà non è pertinente per questa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-228">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-229">
            <see langword="true" /> per implementare il doppio buffer sul controllo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-229">
              <see langword="true" /> to implement double buffering on the control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-230">Questa proprietà non è pertinente per questa classe.</span><span class="sxs-lookup"><span data-stu-id="e3275-230">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-231">Ottiene o imposta il colore primo piano del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-231">Gets or sets the foreground color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-232">Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore di primo piano del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-232">A <see cref="T:System.Drawing.Color" /> that represents the control's foreground color.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-233">È possibile utilizzare il <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> proprietà per modificare il colore del testo all'interno del controllo in modo che corrisponda il testo di altri controlli nel form.</span><span class="sxs-lookup"><span data-stu-id="e3275-233">You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form.</span></span> <span data-ttu-id="e3275-234">È inoltre possibile utilizzare questa proprietà per evidenziare una casella di testo specifico che contiene un valore non valido.</span><span class="sxs-lookup"><span data-stu-id="e3275-234">You can also use this property to highlight a specific text box that contains an invalid value.</span></span>  
  
 <span data-ttu-id="e3275-235">Per modificare il colore di sfondo del controllo, utilizzare il <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-235">To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property.</span></span> <span data-ttu-id="e3275-236">Quando si imposta la <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> proprietà del controllo, assicurarsi che il colore scelto non causa il testo del controllo venga rimosso.</span><span class="sxs-lookup"><span data-stu-id="e3275-236">When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="e3275-237">Ad esempio, se il <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> e <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> sono entrambe impostate su `Color.Black`, il testo all'interno della casella di testo non saranno visibile.</span><span class="sxs-lookup"><span data-stu-id="e3275-237">For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="e3275-238">Questa proprietà può essere sottoposta a override se la <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> proprietà del <xref:System.Windows.Forms.TextBoxBase> è impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="e3275-238">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public virtual char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="e3275-239">Posizione dalla quale cercare il carattere più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-239">The location from which to seek the nearest character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-240">Recupera il carattere più vicino alla posizione specificata all'interno del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-240">Retrieves the character that is closest to the specified location within the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3275-241">Carattere nella posizione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-241">The character at the specified location.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-242">Se il percorso specificato nel `pt` parametro è all'esterno dell'area client del controllo, il primo carattere della stringa più vicino al punto specificato `pt` viene restituito.</span><span class="sxs-lookup"><span data-stu-id="e3275-242">If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned.</span></span> <span data-ttu-id="e3275-243">È possibile utilizzare questo metodo per determinare i caratteri che si trovano in prossimità di un punto specifico all'interno del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-243">You can use this method to determine which characters are located near a specific point within the control.</span></span> <span data-ttu-id="e3275-244">È quindi possibile utilizzare questo valore per eseguire operazioni sul testo in tale posizione.</span><span class="sxs-lookup"><span data-stu-id="e3275-244">You can then use this value to perform operations on the text at that location.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-245">Se il percorso specificato nella `pt` parametro si trova sul lato destro dell'area client del controllo, l'ultimo carattere della stringa più vicino al punto specificato `pt` viene restituito.</span><span class="sxs-lookup"><span data-stu-id="e3275-245">If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="e3275-246">Posizione da ricercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-246">The location to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-247">Recupera l'indice del carattere più vicino alla posizione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-247">Retrieves the index of the character nearest to the specified location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3275-248">Indice del carattere in base zero nella posizione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-248">The zero-based character index at the specified location.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-249">Questo metodo restituisce l'indice del carattere più vicino alla posizione specificata nel `pt` parametro.</span><span class="sxs-lookup"><span data-stu-id="e3275-249">This method returns the character index that is closest to the position specified in the `pt` parameter.</span></span> <span data-ttu-id="e3275-250">L'indice del carattere è un indice in base zero del testo nel controllo, inclusi gli spazi.</span><span class="sxs-lookup"><span data-stu-id="e3275-250">The character index is a zero-based index of text in the control, including spaces.</span></span> <span data-ttu-id="e3275-251">È possibile utilizzare questo metodo per determinare il testo in cui l'utente dispone il mouse passando il mouse coordinate a questo metodo.</span><span class="sxs-lookup"><span data-stu-id="e3275-251">You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</span></span> <span data-ttu-id="e3275-252">Questo può essere utile se si desidera eseguire l'attività quando l'utente posiziona il puntatore del mouse su una parola nel testo del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-252">This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e3275-253">Se il percorso specificato non è presente all'interno del rettangolo client del controllo, o oltre l'ultimo carattere nel controllo, il valore restituito è l'indice dell'ultimo carattere.</span><span class="sxs-lookup"><span data-stu-id="e3275-253">If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexFromLine (lineNumber As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexFromLine(int lineNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">
          <span data-ttu-id="e3275-254">Riga per la quale è necessario ottenere l'indice del primo carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-254">The line for which to get the index of its first character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-255">Recupera il valore di indice del primo carattere di una determinata riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-255">Retrieves the index of the first character of a given line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3275-256">Indice in base zero del primo carattere nella riga specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-256">The zero-based index of the first character in the specified line.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-257">Numerazione delle righe nella casella di testo inizia in corrispondenza di zero.</span><span class="sxs-lookup"><span data-stu-id="e3275-257">Line numbering in the text box starts at zero.</span></span> <span data-ttu-id="e3275-258">Se il `lineNumber` parametro è maggiore dell'ultima riga nella casella di testo, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> restituisce -1.</span><span class="sxs-lookup"><span data-stu-id="e3275-258">If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1.</span></span>  
  
 <span data-ttu-id="e3275-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> Restituisce l'indice del primo carattere di una riga fisica.</span><span class="sxs-lookup"><span data-stu-id="e3275-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line.</span></span> <span data-ttu-id="e3275-260">La riga fisica è la riga visualizzata, non a quella assegnata.</span><span class="sxs-lookup"><span data-stu-id="e3275-260">The physical line is the displayed line, not the assigned line.</span></span> <span data-ttu-id="e3275-261">Il numero di righe visualizzate può essere maggiore del numero di righe assegnate a causa di ritorno a capo automatico.</span><span class="sxs-lookup"><span data-stu-id="e3275-261">The number of displayed lines can be greater than the number of assigned lines due to word wrap.</span></span> <span data-ttu-id="e3275-262">Ad esempio, se si assegnano due righe lunghe a una <xref:System.Windows.Forms.RichTextBox> controllo e impostare <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> e <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> a `true`, le due righe assegnate comportare quattro fisica (o righe visualizzate).</span><span class="sxs-lookup"><span data-stu-id="e3275-262">For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e3275-263">Il valore del parametro <paramref name="lineNumber" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-263">The value of the <paramref name="lineNumber" /> parameter is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexOfCurrentLine () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexOfCurrentLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3275-264">Recupera l'indice del primo carattere della riga corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-264">Retrieves the index of the first character of the current line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3275-265">Indice del carattere in base zero nella riga corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-265">The zero-based character index in the current line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineFromCharIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e3275-266">Posizione dell'indice del carattere da ricercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-266">The character index position to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-267">Recupera il numero di riga dalla posizione specificata del carattere all'interno del testo del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-267">Retrieves the line number from the specified character position within the text of the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3275-268">Numero di riga in base zero in cui si trova l'indice del carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-268">The zero-based line number in which the character index is located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-269">Questo metodo consente di determinare il numero di riga in base all'indice del carattere specificato nella `index` parametro del metodo.</span><span class="sxs-lookup"><span data-stu-id="e3275-269">This method enables you to determine the line number based on the character index specified in the `index` parameter of the method.</span></span> <span data-ttu-id="e3275-270">La prima riga del testo nel controllo restituisce il valore zero.</span><span class="sxs-lookup"><span data-stu-id="e3275-270">The first line of text in the control returns the value zero.</span></span> <span data-ttu-id="e3275-271">Il <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> metodo restituisce il numero di riga fisica in cui il carattere indicizzato si trova all'interno del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-271">The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control.</span></span> <span data-ttu-id="e3275-272">Ad esempio, se una parte del testo nella prima riga logica il controllo esegue il wrapping alla riga successiva, il <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> metodo restituisce 1 se il carattere in corrispondenza dell'indice del carattere specificato è eseguito il wrapping per la seconda riga fisica.</span><span class="sxs-lookup"><span data-stu-id="e3275-272">For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line.</span></span> <span data-ttu-id="e3275-273">Se <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> è impostato su `false`, esegue il wrapping senza la parte della riga a quella successiva e il metodo restituisce 0 per l'indice del carattere specificato.</span><span class="sxs-lookup"><span data-stu-id="e3275-273">If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</span></span> <span data-ttu-id="e3275-274">È possibile utilizzare questo metodo per determinare quale riga di un indice del carattere specifico all'interno.</span><span class="sxs-lookup"><span data-stu-id="e3275-274">You can use this method to determine which line a specific character index is located within.</span></span> <span data-ttu-id="e3275-275">Ad esempio, dopo la chiamata di <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo per la ricerca di testo, è possibile ottenere l'indice del carattere per cui sono stati trovati i risultati della ricerca.</span><span class="sxs-lookup"><span data-stu-id="e3275-275">For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found.</span></span> <span data-ttu-id="e3275-276">È possibile chiamare questo metodo con l'indice del carattere restituito dal <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo per determinare quale riga di word è stato trovato.</span><span class="sxs-lookup"><span data-stu-id="e3275-276">You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-277">Se l'indice del carattere specificato nel `index` parametro è oltre il numero di righe contenute all'interno del controllo disponibile, viene restituito l'ultimo numero di riga.</span><span class="sxs-lookup"><span data-stu-id="e3275-277">If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e3275-278">Indice del carattere del quale recuperare la posizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-278">The index of the character for which to retrieve the location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-279">Recupera la posizione all'interno del controllo in corrispondenza dell'indice del carattere specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-279">Retrieves the location within the control at the specified character index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3275-280">Posizione del carattere specificato all'interno del rettangolo client del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-280">The location of the specified character within the client rectangle of the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-281">Questo metodo consente di determinare la posizione nel controllo di un indice dei caratteri specifici.</span><span class="sxs-lookup"><span data-stu-id="e3275-281">This method enables you to determine where in the control a specific character index is located.</span></span> <span data-ttu-id="e3275-282">È possibile utilizzare questo metodo per attività quali visualizzazione menu elementi o la Guida informazioni di scelta rapida per una parola nel controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-282">You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</span></span> <span data-ttu-id="e3275-283">Ad esempio, se si desidera visualizzare un menu di opzioni per l'utente quando l'utente destro fa clic su una parola nel controllo, è possibile utilizzare questo metodo per determinare la posizione della parola per visualizzare correttamente una <xref:System.Windows.Forms.ContextMenu> controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-283">For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-284">Ottiene o imposta un valore che indica se il testo selezionato nella casella di testo appare evidenziato anche quando il controllo non è più attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-284">Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-285">
            <see langword="true" /> se il testo selezionato non appare evidenziato quando il controllo casella di testo perde lo stato attivo; <see langword="false" />, se il testo selezionato appare evidenziato anche quando la casella di testo perde lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-285">
              <see langword="true" /> if the selected text does not appear highlighted when the text box control loses focus; <see langword="false" />, if the selected text remains highlighted when the text box control loses focus.</span>
          </span>
          <span data-ttu-id="e3275-286">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-286">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-287">Per mantenere il testo evidenziato in un controllo casella di testo, mentre un altro formato o una finestra di dialogo ha lo stato attivo, ad esempio una finestra di dialogo correttore ortografico, è possibile utilizzare questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-287">You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-288">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-288">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> property.</span></span> <span data-ttu-id="e3275-289">Per eseguire l'esempio, incollare il codice seguente in un form.</span><span class="sxs-lookup"><span data-stu-id="e3275-289">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="e3275-290">Chiamare il `InitializeTextBox` metodo nel costruttore del form o `Load` metodo.</span><span class="sxs-lookup"><span data-stu-id="e3275-290">Call the `InitializeTextBox` method in the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HideSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HideSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HideSelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HideSelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-291">Si verifica quando cambia il valore della proprietà <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-291">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-292">Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="e3275-292">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-293">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</span><span class="sxs-lookup"><span data-stu-id="e3275-293">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e3275-294">Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-294">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span> <span data-ttu-id="e3275-295">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</span><span class="sxs-lookup"><span data-stu-id="e3275-295">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e3275-296">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e3275-296">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e3275-297">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.TextBoxBase>, ad esempio un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="e3275-297">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="e3275-298">Quindi assegnare un nome di istanza `TextBoxBase1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-298">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#245](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#245)]
 [!code-vb[System.Windows.Forms.EventExamples#245](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#245)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-299">Ottiene o imposta la modalità IME (Input Method Editor, editor del metodo di input) di un controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-299">Gets or sets the Input Method Editor (IME) mode of a control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-300">Modalità IME del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-300">The IME mode of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="e3275-301">Uno dei valori dei tasti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-301">One of the Keys value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-302">Determina se il tasto specificato è un normale tasto di input o un tasto speciale che richiede una pre-elaborazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-302">Determines whether the specified key is an input key or a special key that requires preprocessing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3275-303">
            <see langword="true" /> se il tasto specificato è un tasto di input; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-303">
              <see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-304">Il <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> restituisce `true` quando il `keyData` parametro include il <xref:System.Windows.Forms.Keys.Tab> valore e il <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="e3275-304">The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`.</span></span> <span data-ttu-id="e3275-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> Restituisce `false` se `keyData` contiene sia <xref:System.Windows.Forms.Keys.Tab> e <xref:System.Windows.Forms.Keys.Control>.</span><span class="sxs-lookup"><span data-stu-id="e3275-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Lines" />
      <MemberSignature Language="VB.NET" Value="Public Property Lines As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Lines { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-306">Ottiene o imposta le righe di testo in un controllo casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-306">Gets or sets the lines of text in a text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-307">Matrice di stringhe che contiene il testo in un controllo casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-307">An array of strings that contains the text in a text box control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-308">Ogni elemento nella matrice diventa una riga di testo nel controllo casella di testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-308">Each element in the array becomes a line of text in the text box control.</span></span> <span data-ttu-id="e3275-309">Se il <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> del controllo casella di testo è impostata su `true` e nel testo è presente un carattere di nuova riga, il testo che segue il carattere di nuova riga viene aggiunto un nuovo elemento nella matrice e visualizzato in una riga separata.</span><span class="sxs-lookup"><span data-stu-id="e3275-309">If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-310">Per impostazione predefinita, la raccolta di righe è una copia di sola lettura delle righe di <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e3275-310">By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="e3275-311">Per ottenere un insieme di righe modificabile, usare codice simile al seguente: `textBox1.Lines = new string[] { "abcd" };`</span><span class="sxs-lookup"><span data-stu-id="e3275-311">To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { "abcd" };`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-312">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, derivata per estrarre tutte le stringhe di testo da un controllo casella di testo su più righe e li visualizza utilizzando il <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="e3275-312">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e3275-313">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> controllo è stato creato, denominato `textBox1`, e che viene riempito con righe di testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-313">This example requires that a <xref:System.Windows.Forms.TextBox> control has been created, named `textBox1`, and that it has been filled with lines of text.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Lines Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public virtual int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-314">Ottiene o imposta il numero massimo di caratteri che l’utente può digitare nel controllo casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-314">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-315">Numero di caratteri che può essere immesso nel controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-315">The number of characters that can be entered into the control.</span>
          </span>
          <span data-ttu-id="e3275-316">Il valore predefinito è 32767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-316">The default is 32767.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-317">È possibile utilizzare questa proprietà per limitare la lunghezza del testo immesso nel controllo per i valori, ad esempio i codici postali e numeri di telefono o per limitare la lunghezza del testo immesso quando i dati da immettere in un database.</span><span class="sxs-lookup"><span data-stu-id="e3275-317">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</span></span> <span data-ttu-id="e3275-318">È possibile limitare il testo immesso nel controllo per la lunghezza massima del campo corrispondente nel database.</span><span class="sxs-lookup"><span data-stu-id="e3275-318">You can limit the text entered into the control to the maximum length of the corresponding field in the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-319">Nel codice, è possibile impostare il valore della <xref:System.Windows.Forms.TextBoxBase.Text%2A> su un valore che ha una lunghezza maggiore rispetto al valore specificato per il <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-319">In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property.</span></span> <span data-ttu-id="e3275-320">Questa proprietà influisce solo sul testo immesso nel controllo in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="e3275-320">This property only affects text entered into the control at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-321">L'esempio di codice seguente viene utilizzata la classe derivata, <xref:System.Windows.Forms.TextBox>, per creare una casella di testo che viene utilizzata per l'accettazione di una password.</span><span class="sxs-lookup"><span data-stu-id="e3275-321">The following code example uses the derived class, <xref:System.Windows.Forms.TextBox>, to create a text box that is used to accept a password.</span></span> <span data-ttu-id="e3275-322">Questo esempio viene utilizzato il <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> tipizzato di proprietà da modificare tutti i caratteri in maiuscolo e <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> proprietà per limitare la lunghezza della password a otto caratteri.</span><span class="sxs-lookup"><span data-stu-id="e3275-322">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to uppercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="e3275-323">Questo esempio Usa anche il <xref:System.Windows.Forms.TextBox.TextAlign%2A> proprietà al centro e la password nel <xref:System.Windows.Forms.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-323">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e3275-324">Il valore assegnato alla proprietà è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-324">The value assigned to the property is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="public bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Modified" />
      <MemberSignature Language="VB.NET" Value="Public Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-325">Ottiene o imposta un valore indicante che il controllo casella di testo è stato modificato dall'ultima volta che il controllo è stato creato o è stato impostato il relativo contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-325">Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-326">
            <see langword="true" /> se il contenuto del controllo è stato modificato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-326">
              <see langword="true" /> if the control's contents have been modified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e3275-327">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-327">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-328">È possibile utilizzare questa proprietà per determinare se l'utente ha modificato il contenuto del controllo casella di testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-328">You can use this property to determine if the user has modified the contents of the text box control.</span></span> <span data-ttu-id="e3275-329">È inoltre possibile impostare questa proprietà nel codice per indicare che sono state apportate modifiche per il controllo casella di testo dall'applicazione.</span><span class="sxs-lookup"><span data-stu-id="e3275-329">You can also set this property in code to indicate that changes were made to the text box control by the application.</span></span> <span data-ttu-id="e3275-330">Questa proprietà può essere utilizzata dai metodi di salvataggio di dati e di convalida per determinare se sono state apportate modifiche in un controllo casella di testo in modo da poter convalidare o salvare il contenuto modificato.</span><span class="sxs-lookup"><span data-stu-id="e3275-330">This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.</span></span>  
  
 <span data-ttu-id="e3275-331">Se si modifica il <xref:System.Windows.Forms.TextBoxBase.Text%2A> proprietà a livello di codice il <xref:System.Windows.Forms.TextBoxBase.Modified%2A> viene ripristinato il proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="e3275-331">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="e3275-332">Non genera il <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-332">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-333">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Windows.Forms.Control.TextChanged> evento per un <xref:System.Windows.Forms.TextBox>, derivata per determinare se il contenuto del <xref:System.Windows.Forms.TextBox> controllo è stato modificato dopo il controllo è stato compilato con i dati.</span><span class="sxs-lookup"><span data-stu-id="e3275-333">The following code example uses the <xref:System.Windows.Forms.Control.TextChanged> event for a <xref:System.Windows.Forms.TextBox>, a derived class, to determine if the contents of the <xref:System.Windows.Forms.TextBox> control have changed since the control was filled with data.</span></span> <span data-ttu-id="e3275-334">L'esempio Usa una stringa per archiviare il contenuto originale del controllo e viene confrontato con il contenuto del <xref:System.Windows.Forms.TextBox> per determinare se il contenuto è stato modificato.</span><span class="sxs-lookup"><span data-stu-id="e3275-334">The example uses a string to store the original contents of the control and compares it against the contents of the <xref:System.Windows.Forms.TextBox> to determine if the contents have changed.</span></span> <span data-ttu-id="e3275-335">Se il contenuto viene modificato, il <xref:System.Windows.Forms.TextBoxBase.Modified%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="e3275-335">If the contents have changed, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property is set to `true`.</span></span> <span data-ttu-id="e3275-336">In caso contrario, viene reimpostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="e3275-336">Otherwise, it is reset to `false`.</span></span> <span data-ttu-id="e3275-337">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> controllo denominato `textBox1` è stato creato e che un `String` variabile denominata `originalText` è stata creata per archiviare il testo originale per il <xref:System.Windows.Forms.TextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-337">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created and that a `String` variable named `originalText` has been created to store the original text for the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Modified Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModifiedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModifiedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModifiedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModifiedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-338">Si verifica quando cambia il valore della proprietà <see cref="P:System.Windows.Forms.TextBoxBase.Modified" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-338">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-339">Se si modifica il <xref:System.Windows.Forms.TextBoxBase.Text%2A> proprietà a livello di codice il <xref:System.Windows.Forms.TextBoxBase.Modified%2A> viene ripristinato il proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="e3275-339">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="e3275-340">Non genera il <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-340">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 <span data-ttu-id="e3275-341">Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="e3275-341">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-342">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</span><span class="sxs-lookup"><span data-stu-id="e3275-342">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e3275-343">Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-343">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span> <span data-ttu-id="e3275-344">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</span><span class="sxs-lookup"><span data-stu-id="e3275-344">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e3275-345">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e3275-345">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e3275-346">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.TextBoxBase>, ad esempio un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="e3275-346">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="e3275-347">Quindi assegnare un nome di istanza `TextBoxBase1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-347">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#246](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#246)]
 [!code-vb[System.Windows.Forms.EventExamples#246](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#246)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-348">Si verifica quando si fa clic con il mouse sul controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-348">Occurs when the control is clicked by the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-349">Il <xref:System.Windows.Forms.RichTextBox> controllo non genera un <xref:System.Windows.Forms.TextBoxBase.Click> destro del mouse sul relativo.</span><span class="sxs-lookup"><span data-stu-id="e3275-349">The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks.</span></span> <span data-ttu-id="e3275-350">Il <xref:System.Windows.Forms.TextBoxBase.MouseClick> evento fornisce la stessa funzionalità.</span><span class="sxs-lookup"><span data-stu-id="e3275-350">The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.</span></span>  
  
 <span data-ttu-id="e3275-351">Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="e3275-351">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-352">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</span><span class="sxs-lookup"><span data-stu-id="e3275-352">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e3275-353">Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.TextBoxBase.MouseClick> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-353">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span> <span data-ttu-id="e3275-354">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</span><span class="sxs-lookup"><span data-stu-id="e3275-354">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e3275-355">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e3275-355">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e3275-356">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.TextBoxBase>, ad esempio un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="e3275-356">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="e3275-357">Quindi assegnare un nome di istanza `TextBoxBase1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.TextBoxBase.MouseClick> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-357">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#244](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#244)]
 [!code-vb[System.Windows.Forms.EventExamples#244](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#244)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public virtual bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-358">Ottiene o imposta un valore che indica se il controllo in uso è un controllo casella di testo su più righe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-358">Gets or sets a value indicating whether this is a multiline text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-359">
            <see langword="true" /> se il controllo è un controllo casella di testo su più righe; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-359">
              <see langword="true" /> if the control is a multiline text box control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e3275-360">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-360">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-361">Una casella di testo consente di visualizzare più di una riga di testo nel controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-361">A multiline text box allows you to display more than one line of text in the control.</span></span> <span data-ttu-id="e3275-362">Se il <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> è impostata su `true`, il testo immesso nella casella di testo su più righe viene eseguito il wrapping alla riga successiva nel controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-362">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control.</span></span> <span data-ttu-id="e3275-363">Se il <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> è impostata su `false`, immesso nel controllo casella di testo su più righe di testo verrà visualizzato sulla stessa riga fino a quando non viene immesso un carattere di nuova riga.</span><span class="sxs-lookup"><span data-stu-id="e3275-363">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.</span></span>  
  
 <span data-ttu-id="e3275-364">Può essere utilizzato come caratteri di nuova riga:</span><span class="sxs-lookup"><span data-stu-id="e3275-364">The following can be used as newline characters:</span></span>  
  
-   <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>  
  
-   <span data-ttu-id="e3275-365">ControlChars.CrLf</span><span class="sxs-lookup"><span data-stu-id="e3275-365">ControlChars.CrLf</span></span>  
  
-   <span data-ttu-id="e3275-366">vbCrLf (solo Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e3275-366">vbCrLf (Visual Basic only)</span></span>  
  
 <span data-ttu-id="e3275-367">È possibile aggiungere barre di scorrimento a una casella di testo mediante il <xref:System.Windows.Forms.TextBox.ScrollBars%2A> proprietà per visualizzare le barre di scorrimento orizzontale e/o verticale.</span><span class="sxs-lookup"><span data-stu-id="e3275-367">You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars.</span></span> <span data-ttu-id="e3275-368">Ciò consente all'utente di scorrere il testo che si estende oltre le dimensioni del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-368">This allows the user to scroll through the text that extends beyond the dimensions of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-369">Poiché il valore predefinito del <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> proprietà `false`, le dimensioni predefinite di un <xref:System.Windows.Forms.TextBox> sarà in base alle dimensioni del carattere, anche se si ridimensiona il <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e3275-369">Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="e3275-370">Per ottenere una dimensione coerenza per la <xref:System.Windows.Forms.TextBox>, impostare il relativo <xref:System.Windows.Forms.TextBox.Multiline%2A> proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="e3275-370">To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-371">Sui sistemi operativi giapponesi, se il <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> è impostata su `true`, impostando il <xref:System.Windows.Forms.TextBox.PasswordChar%2A> proprietà verrà visualizzato il testo della password, pertanto compromettere la sicurezza del sistema.</span><span class="sxs-lookup"><span data-stu-id="e3275-371">On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security.</span></span> <span data-ttu-id="e3275-372">Di conseguenza, nei sistemi operativi in lingua giapponese, impostare il <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> proprietà `false` se si imposta la <xref:System.Windows.Forms.TextBox.PasswordChar%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-372">Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-373">Questa proprietà è impostata su `false` per impostazione predefinita per tutti classi derivate, ad eccezione del <xref:System.Windows.Forms.RichTextBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-373">This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 <span data-ttu-id="e3275-374">Per un <xref:System.Windows.Forms.RichTextBox> (controllo), il <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> proprietà determina se è o meno il controllo viene ridimensionato automaticamente, come indicato di seguito:</span><span class="sxs-lookup"><span data-stu-id="e3275-374">For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> property affects whether or not the control will automatically resize, as follows:</span></span>  
  
-   <span data-ttu-id="e3275-375">Se <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> è impostato su `true` e <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> è impostato su `true`, <xref:System.Windows.Forms.RichTextBox> non verrà ridimensionato automaticamente.</span><span class="sxs-lookup"><span data-stu-id="e3275-375">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `true`, <xref:System.Windows.Forms.RichTextBox> will not automatically resize.</span></span>  
  
-   <span data-ttu-id="e3275-376">Se <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> è impostato su `true` e <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> è impostato su `false`, <xref:System.Windows.Forms.RichTextBox> verrà ridimensionato automaticamente.</span><span class="sxs-lookup"><span data-stu-id="e3275-376">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `false`, <xref:System.Windows.Forms.RichTextBox> will automatically resize.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-377">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe, per creare un controllo derivato <xref:System.Windows.Forms.TextBox> controllo con barre di scorrimento verticale.</span><span class="sxs-lookup"><span data-stu-id="e3275-377">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="e3275-378">Questo esempio Usa anche il <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, e <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> proprietà per adattare il controllo casella di testo su più righe per la creazione di documenti di testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-378">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.WordWrap" />
        <altmember cref="P:System.Windows.Forms.TextBox.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultilineChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultilineChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-379">Si verifica quando cambia il valore della proprietà <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-379">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-380">Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="e3275-380">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-381">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</span><span class="sxs-lookup"><span data-stu-id="e3275-381">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e3275-382">Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-382">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span> <span data-ttu-id="e3275-383">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</span><span class="sxs-lookup"><span data-stu-id="e3275-383">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e3275-384">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e3275-384">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e3275-385">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.TextBoxBase>, ad esempio un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="e3275-385">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="e3275-386">Quindi assegnare un nome di istanza `TextBoxBase1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-386">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#247](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#247)]
 [!code-vb[System.Windows.Forms.EventExamples#247](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#247)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="OnAcceptsTabChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAcceptsTabChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAcceptsTabChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAcceptsTabChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAcceptsTabChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e3275-387">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-387">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-388">Genera l'evento <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-388">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-389">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="e3275-389">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e3275-390">Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e3275-390">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e3275-391">Il metodo <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="e3275-391">The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e3275-392">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-392">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e3275-393">Quando si esegue l'override di <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e3275-393">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e3275-394">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-394">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-395">Genera l'evento <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-395">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-396">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="e3275-396">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e3275-397">Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e3275-397">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e3275-398">Il metodo <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="e3275-398">The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e3275-399">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-399">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e3275-400">Quando si esegue l'override di <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e3275-400">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e3275-401">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-401">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-402">Genera l'evento <see cref="E:System.Windows.Forms.Control.FontChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-402">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e3275-403">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-403">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-404">Genera l'evento <see cref="E:System.Windows.Forms.Control.HandleCreated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-404">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e3275-405">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-405">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-406">Genera l'evento <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-406">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHideSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHideSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHideSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHideSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHideSelectionChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e3275-407">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-407">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-408">Generare l'evento <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-408">Raise the <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-409">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="e3275-409">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e3275-410">Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e3275-410">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e3275-411">Il metodo <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="e3275-411">The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e3275-412">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-412">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e3275-413">Quando si esegue l'override di <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e3275-413">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnModifiedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModifiedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifiedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifiedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifiedChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e3275-414">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-414">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-415">Genera l'evento <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-415">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-416">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="e3275-416">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e3275-417">Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e3275-417">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e3275-418">Il metodo <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="e3275-418">The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e3275-419">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-419">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e3275-420">Quando si esegue l'override di <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e3275-420">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="e3275-421">Dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-421">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-422">Genera l'evento <see cref="E:System.Windows.Forms.Control.MouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-422">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultilineChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultilineChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e3275-423">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-423">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-424">Genera l'evento <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-424">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-425">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="e3275-425">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e3275-426">Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e3275-426">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e3275-427">Il metodo <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="e3275-427">The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e3275-428">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-428">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e3275-429">Quando si esegue l'override di <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e3275-429">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected override void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaddingChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e3275-430">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-430">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-431">Questo metodo non è pertinente per questa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-431">This method is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-432">Questo metodo non è pertinente per questa classe.</span><span class="sxs-lookup"><span data-stu-id="e3275-432">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e3275-433">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-433">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-434">Genera l'evento <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-434">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-435">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="e3275-435">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e3275-436">Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e3275-436">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e3275-437">Il metodo <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="e3275-437">The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e3275-438">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-438">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e3275-439">Quando si esegue l'override di <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e3275-439">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e3275-440">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-440">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-441">Genera l'evento <see cref="E:System.Windows.Forms.Control.TextChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-441">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-442">Questa proprietà non è pertinente per questa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-442">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-443">Valore <see cref="T:System.Windows.Forms.Padding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-443">A <see cref="T:System.Windows.Forms.Padding" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-444">Questa proprietà non è pertinente per questa classe.</span><span class="sxs-lookup"><span data-stu-id="e3275-444">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-445">Questo evento non è pertinente per questa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-445">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-446">Questo evento non è pertinente per questa classe.</span><span class="sxs-lookup"><span data-stu-id="e3275-446">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-447">Si verifica quando il controllo viene ridisegnato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-447">Occurs when the control is redrawn.</span>
          </span>
          <span data-ttu-id="e3275-448">Questo evento non è pertinente per questa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-448">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-449">Questo evento non è pertinente per questa classe.</span><span class="sxs-lookup"><span data-stu-id="e3275-449">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3275-450">Sostituisce la selezione corrente nella casella di testo con il contenuto degli **Appunti**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-450">Replaces the current selection in the text box with the contents of the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-451">Il <xref:System.Windows.Forms.TextBoxBase.Paste%2A> metodo solo incollare testo nel controllo se il testo è attualmente memorizzato nel **Appunti**.</span><span class="sxs-lookup"><span data-stu-id="e3275-451">The <xref:System.Windows.Forms.TextBoxBase.Paste%2A> method will only paste text into the control if text is currently stored in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-452">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-452">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="e3275-453">Fornisce <xref:System.Windows.Forms.MenuItem.Click> gestori eventi per <xref:System.Windows.Forms.MenuItem> gli oggetti che eseguono le operazioni Taglia, copia, Incolla e operazioni di annullamento.</span><span class="sxs-lookup"><span data-stu-id="e3275-453">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="e3275-454">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> controllo denominato `textBox1` è stato creato.</span><span class="sxs-lookup"><span data-stu-id="e3275-454">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e3275-455">per leggere il **Appunti**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-455">for reading from the **Clipboard**.</span>
          </span>
          <span data-ttu-id="e3275-456">Enumerazione associata: il <see langword="AllClipboard" /> valore <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-456">Associated enumeration: the <see langword="AllClipboard" /> value of <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-457">Ottiene l'altezza preferita di una casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-457">Gets the preferred height for a text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-458">Altezza preferita di una casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-458">The preferred height of a text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-459">Le dimensioni restituite da questa proprietà dipende lo stile del carattere di altezza e il bordo della casella di testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-459">The size returned by this property is based on the font height and border style of the text box.</span></span> <span data-ttu-id="e3275-460">È possibile utilizzare questa proprietà per determinare le dimensioni appropriate della casella di testo per assicurarsi che sia correttamente visualizzato nel controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-460">You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control.</span></span> <span data-ttu-id="e3275-461">Il valore restituito da questa proprietà è espressa in pixel.</span><span class="sxs-lookup"><span data-stu-id="e3275-461">The value returned by this property is in pixels.</span></span>  
  
 <span data-ttu-id="e3275-462">Il valore di <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> rappresenta l'altezza minima deve avere la casella di testo per visualizzare una singola riga di testo senza ritaglio il testo nella parte superiore o inferiore.</span><span class="sxs-lookup"><span data-stu-id="e3275-462">The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom.</span></span> <span data-ttu-id="e3275-463">Questo valore è lo stesso se il <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> è impostata su `true` o `false`.</span><span class="sxs-lookup"><span data-stu-id="e3275-463">This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="e3275-464">Oggetto <see cref="T:System.Windows.Forms.Message" />, passato per riferimento, che rappresenta il messaggio per finestra da elaborare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-464">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="e3275-465">Uno dei valori di <see cref="T:System.Windows.Forms.Keys" /> che rappresenta il tasto di scelta rapida da elaborare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-465">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-466">Elabora un tasto di comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-466">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3275-467">
            <see langword="true" /> se il tasto di comando è stato elaborato dal controllo. In caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-467">
              <see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e3275-468">per operare con codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-468">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="e3275-469">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-469">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="e3275-470">Uno dei valori di <see cref="T:System.Windows.Forms.Keys" /> che rappresenta il tasto da elaborare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-470">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-471">Elabora un tasto della finestra di dialogo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-471">Processes a dialog key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3275-472">
            <see langword="true" /> se il tasto è stato elaborato dal controllo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-472">
              <see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-473">Ottiene o imposta un valore che indica se il testo in una casella di testo è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-473">Gets or sets a value indicating whether text in the text box is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-474">
            <see langword="true" /> se la casella di testo è in sola lettura. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-474">
              <see langword="true" /> if the text box is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e3275-475">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-475">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-476">Quando questa proprietà è impostata su `true`, il contenuto del controllo non può essere modificato dall'utente in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="e3275-476">When this property is set to `true`, the contents of the control cannot be changed by the user at runtime.</span></span> <span data-ttu-id="e3275-477">Con questa proprietà è impostata su `true`, è comunque possibile impostare il valore di <xref:System.Windows.Forms.TextBoxBase.Text%2A> proprietà nel codice.</span><span class="sxs-lookup"><span data-stu-id="e3275-477">With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code.</span></span> <span data-ttu-id="e3275-478">È possibile utilizzare questa funzionalità anziché disabilitare il controllo con il <xref:System.Windows.Forms.Control.Enabled%2A> proprietà per consentire la copia il contenuto e le descrizioni comandi da visualizzare.</span><span class="sxs-lookup"><span data-stu-id="e3275-478">You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-479">Si verifica quando cambia il valore della proprietà <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-479">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-480">Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="e3275-480">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-481">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</span><span class="sxs-lookup"><span data-stu-id="e3275-481">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e3275-482">Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-482">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span> <span data-ttu-id="e3275-483">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</span><span class="sxs-lookup"><span data-stu-id="e3275-483">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e3275-484">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e3275-484">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e3275-485">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.TextBoxBase>, ad esempio un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="e3275-485">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="e3275-486">Quindi assegnare un nome di istanza `TextBoxBase1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-486">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#248](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#248)]
 [!code-vb[System.Windows.Forms.EventExamples#248](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#248)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ScrollToCaret" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToCaret ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToCaret();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3275-487">Scorre il contenuto del controllo fino alla posizione corrente del punto di inserimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-487">Scrolls the contents of the control to the current caret position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-488">Questo metodo consente di scorrere il contenuto del controllo fino a quando il cursore si trova all'interno dell'area visibile del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-488">This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</span></span> <span data-ttu-id="e3275-489">Se il cursore è posizionato sotto l'area visibile del controllo, il <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> metodo scorre il contenuto del controllo fino a quando il cursore è visibile nella parte inferiore del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-489">If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control.</span></span> <span data-ttu-id="e3275-490">Se il punto di inserimento viene posizionato sopra l'area visibile del controllo, questo metodo scorre il contenuto del controllo fino a quando il cursore è visibile nella parte superiore del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-490">If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</span></span> <span data-ttu-id="e3275-491">È possibile utilizzare questo metodo in una casella di testo su più righe per garantire che il punto di ingresso di testo corrente all'interno dell'area visibile del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-491">You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-492">Questo metodo non ha alcun effetto se il controllo non è attivo o se il punto di inserimento è già posizionato nell'area visibile del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-492">This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-493">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.Keys> enumerazione e <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> metodo per assicurarsi che il punto di inserimento, rappresentato dal cursore, è sempre visibile sullo schermo dopo che è stato premuto il tasto INVIO.</span><span class="sxs-lookup"><span data-stu-id="e3275-493">The following code example demonstrates how to use the <xref:System.Windows.Forms.Keys> enumeration and the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed.</span></span> <span data-ttu-id="e3275-494">Per eseguire l'esempio, incollare il codice seguente in un form contenente un <xref:System.Windows.Forms.TextBox> controllo denominato `TextBox1` e <xref:System.Windows.Forms.RichTextBox> controllo denominato `RichTextBox1`.</span><span class="sxs-lookup"><span data-stu-id="e3275-494">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called `TextBox1` and a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.</span></span> <span data-ttu-id="e3275-495">In questo esempio richiede che il metodo di gestione degli eventi è stato associato il <xref:System.Windows.Forms.Control.KeyDown> evento.</span><span class="sxs-lookup"><span data-stu-id="e3275-495">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.Control.KeyDown> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="e3275-496">Posizione del primo carattere nella selezione di testo corrente all'interno della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-496">The position of the first character in the current text selection within the text box.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="e3275-497">Numero di caratteri da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-497">The number of characters to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-498">Seleziona un intervallo di testo nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-498">Selects a range of text in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-499">Se si desidera impostare la posizione iniziale per il primo carattere del testo del controllo, impostare il `start` parametro su 0.</span><span class="sxs-lookup"><span data-stu-id="e3275-499">If you want to set the start position to the first character in the control's text, set the `start` parameter to 0.</span></span> <span data-ttu-id="e3275-500">È possibile utilizzare questo metodo per selezionare una sottostringa di testo, ad esempio, quando ricerca attraverso il testo del controllo e informazioni di sostituzione.</span><span class="sxs-lookup"><span data-stu-id="e3275-500">You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-501">È possibile spostare il punto di inserimento all'interno della casella di testo impostando il `start` parametro alla posizione all'interno della casella di testo in cui si desidera spostare e impostare il punto di inserimento di `length` parametro con un valore pari a zero (0).</span><span class="sxs-lookup"><span data-stu-id="e3275-501">You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0).</span></span> <span data-ttu-id="e3275-502">La casella di testo deve essere attiva affinché il punto di inserimento da spostare.</span><span class="sxs-lookup"><span data-stu-id="e3275-502">The text box must have focus in order for the caret to be moved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-503">Se questo metodo viene chiamato senza parametri, viene utilizzato un metodo alternativo.</span><span class="sxs-lookup"><span data-stu-id="e3275-503">If this method is called without any parameters, an alternative method is used.</span></span> <span data-ttu-id="e3275-504">Questo metodo alternativo eredita la <xref:System.Windows.Forms.Control> classe.</span><span class="sxs-lookup"><span data-stu-id="e3275-504">This alternative method inherits from the <xref:System.Windows.Forms.Control> class.</span></span> <span data-ttu-id="e3275-505">Quando viene chiamato, imposta lo stato attivo al controllo e seleziona il contenuto del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-505">When called, it sets the input focus to the control and selects the contents of the control.</span></span> <span data-ttu-id="e3275-506">Per altre informazioni, vedere il metodo <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e3275-506">For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-507">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe derivata, da cercare il contenuto del controllo per l'istanza della parola "volpe".</span><span class="sxs-lookup"><span data-stu-id="e3275-507">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to search the contents of the control for the instance of the word "fox".</span></span> <span data-ttu-id="e3275-508">Se viene trovato, il codice parola selezionata nel controllo usando il <xref:System.Windows.Forms.TextBoxBase.Select%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="e3275-508">If found, the code selects the word in the control using the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span> <span data-ttu-id="e3275-509">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> denominato `textBox1` è stato creato e il relativo <xref:System.Windows.Forms.TextBoxBase.Text%2A> proprietà contiene la frase "la volpe rapida passa over the lazy dog".</span><span class="sxs-lookup"><span data-stu-id="e3275-509">This example requires that a <xref:System.Windows.Forms.TextBox> named `textBox1` has been created and its <xref:System.Windows.Forms.TextBoxBase.Text%2A> property contains the sentence "The quick brown fox jumps over the lazy dog."</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Select Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Select Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e3275-510">Il valore del parametro <paramref name="start" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-510">The value of the <paramref name="start" /> parameter is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.SelectAll" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3275-511">Seleziona tutto il testo della casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-511">Selects all text in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-512">Questo metodo consente di selezionare tutto il testo all'interno del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-512">This method enables you to select all text within the control.</span></span> <span data-ttu-id="e3275-513">È possibile utilizzare questo metodo in combinazione con il <xref:System.Windows.Forms.TextBoxBase.Cut%2A> metodo, che richiede il testo sia selezionato nel controllo, l'intero contenuto del controllo di tagliare e incollare nel **Appunti**.</span><span class="sxs-lookup"><span data-stu-id="e3275-513">You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-514">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe, per determinare se è stato selezionato testo nel controllo derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-514">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to determine if any text is selected in the control.</span></span> <span data-ttu-id="e3275-515">Se non viene selezionato testo, viene eseguita una chiamata per il <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> metodo prima di copiare il contenuto del controllo per il **Appunti**.</span><span class="sxs-lookup"><span data-stu-id="e3275-515">If no text is selected, a call is made to the <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> method before copying the contents of the control to the **Clipboard**.</span></span> <span data-ttu-id="e3275-516">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> è stato creato denominato `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="e3275-516">This example requires that a <xref:System.Windows.Forms.TextBox> has been created named `textBox1`.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public virtual string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-517">Ottiene o imposta un valore che indica il testo attualmente selezionato nel controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-517">Gets or sets a value indicating the currently selected text in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-518">Stringa che rappresenta il testo attualmente selezionato nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-518">A string that represents the currently selected text in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-519">È possibile assegnare il testo a questa proprietà per modificare il testo attualmente selezionato nella casella di testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-519">You can assign text to this property to change the text currently selected in the text box.</span></span> <span data-ttu-id="e3275-520">Se è selezionato alcun testo nella casella di testo, questa proprietà restituisce una stringa di lunghezza zero.</span><span class="sxs-lookup"><span data-stu-id="e3275-520">If no text is currently selected in the text box, this property returns a zero-length string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-521">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-521">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="e3275-522">Fornisce <xref:System.Windows.Forms.MenuItem.Click> gestori eventi per <xref:System.Windows.Forms.MenuItem> gli oggetti che eseguono le operazioni Taglia, copia, Incolla e operazioni di annullamento.</span><span class="sxs-lookup"><span data-stu-id="e3275-522">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="e3275-523">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> controllo denominato `textBox1` è stato creato.</span><span class="sxs-lookup"><span data-stu-id="e3275-523">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public virtual int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-524">Ottiene o imposta il numero di caratteri selezionati nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-524">Gets or sets the number of characters selected in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-525">Numero di caratteri selezionati nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-525">The number of characters selected in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-526">È possibile utilizzare questa proprietà per determinare se tutti i caratteri attualmente selezionati nel controllo casella di testo prima di eseguire operazioni sul testo selezionato.</span><span class="sxs-lookup"><span data-stu-id="e3275-526">You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</span></span> <span data-ttu-id="e3275-527">Quando il valore della <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> è impostata su un valore che è maggiore del numero di caratteri all'interno del testo del controllo, il valore della <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> proprietà è impostata per l'intera lunghezza del testo nel controllo meno il valore di <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>proprietà (se viene specificato un valore per il <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> proprietà).</span><span class="sxs-lookup"><span data-stu-id="e3275-527">When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-528">È possibile spostare il punto di inserimento all'interno della casella di testo impostando il <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> alla posizione all'interno della casella di testo in cui si desidera spostare e impostare il punto di inserimento di <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> su un valore pari a zero (0).</span><span class="sxs-lookup"><span data-stu-id="e3275-528">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span> <span data-ttu-id="e3275-529">La casella di testo deve essere attiva affinché il punto di inserimento da spostare.</span><span class="sxs-lookup"><span data-stu-id="e3275-529">The text box must have focus in order for the caret to be moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-530">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-530">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="e3275-531">Fornisce <xref:System.Windows.Forms.MenuItem.Click> gestori eventi per <xref:System.Windows.Forms.MenuItem> gli oggetti che eseguono le operazioni Taglia, copia, Incolla e operazioni di annullamento.</span><span class="sxs-lookup"><span data-stu-id="e3275-531">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="e3275-532">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> controllo denominato `textBox1` è stato creato.</span><span class="sxs-lookup"><span data-stu-id="e3275-532">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e3275-533">Il valore assegnato è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-533">The assigned value is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-534">Ottiene o imposta il punto di inizio del testo selezionato nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-534">Gets or sets the starting point of text selected in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-535">La posizione iniziale del testo selezionato nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-535">The starting position of text selected in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-536">Se è selezionato alcun testo nel controllo, questa proprietà indica il punto di inserimento o un punto di inserimento, per il nuovo testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-536">If no text is selected in the control, this property indicates the insertion point, or caret, for new text.</span></span> <span data-ttu-id="e3275-537">Se si imposta questa proprietà in una posizione oltre la lunghezza del testo nel controllo, la posizione iniziale selezione verrà inserita dopo l'ultimo carattere.</span><span class="sxs-lookup"><span data-stu-id="e3275-537">If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</span></span> <span data-ttu-id="e3275-538">Quando viene selezionato testo nel controllo casella di testo, la modifica di questa proprietà potrebbe ridurre il valore del <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-538">When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span> <span data-ttu-id="e3275-539">Se il testo rimanente nel controllo dopo la posizione indicata dal <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> proprietà è minore del valore del <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> proprietà, il valore della <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> della proprietà viene automaticamente ridotto.</span><span class="sxs-lookup"><span data-stu-id="e3275-539">If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased.</span></span> <span data-ttu-id="e3275-540">Il valore della <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> proprietà mai causa un aumento di <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-540">The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span>  
  
 <span data-ttu-id="e3275-541">È possibile spostare la selezione all'interno della casella di testo impostando il <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> e <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-541">You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties.</span></span>  
  
 <span data-ttu-id="e3275-542">È possibile spostare il punto di inserimento all'interno della casella di testo impostando il <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> alla posizione all'interno della casella di testo in cui si desidera spostare e impostare il punto di inserimento di <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> su un valore pari a zero (0).</span><span class="sxs-lookup"><span data-stu-id="e3275-542">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span>  
  
 <span data-ttu-id="e3275-543">Il <xref:System.Windows.Forms.TextBox> deve avere lo stato attivo per la selezione o il punto di inserimento da spostare.</span><span class="sxs-lookup"><span data-stu-id="e3275-543">The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved.</span></span> <span data-ttu-id="e3275-544">È possibile impostare il <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> proprietà di un <xref:System.Windows.Forms.TextBox> ovvero <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> , assegnargli il <xref:System.Windows.Forms.Control.Focus%2A> prima.</span><span class="sxs-lookup"><span data-stu-id="e3275-544">You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-545">**Esempio 1**</span><span class="sxs-lookup"><span data-stu-id="e3275-545">**Example 1**</span></span>  
  
 <span data-ttu-id="e3275-546">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-546">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="e3275-547">Fornisce <xref:System.Windows.Forms.MenuItem.Click> gestori eventi per <xref:System.Windows.Forms.MenuItem> gli oggetti che eseguono le operazioni Taglia, copia, Incolla e operazioni di annullamento.</span><span class="sxs-lookup"><span data-stu-id="e3275-547">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="e3275-548">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> controllo denominato `textBox1` è stato creato.</span><span class="sxs-lookup"><span data-stu-id="e3275-548">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e3275-549">**Esempio 2**</span><span class="sxs-lookup"><span data-stu-id="e3275-549">**Example 2**</span></span>  
  
 <span data-ttu-id="e3275-550">L'esempio seguente imposta il <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> proprietà di un <xref:System.Windows.Forms.TextBox> ovvero <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> , assegnargli il <xref:System.Windows.Forms.Control.Focus%2A> prima.</span><span class="sxs-lookup"><span data-stu-id="e3275-550">The following example sets the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
 [!code-csharp[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e3275-551">Il valore assegnato è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-551">The assigned value is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3275-552">Nuovo valore della proprietà <see cref="P:System.Windows.Forms.Control.Left" /> del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-552">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3275-553">Nuovo valore della proprietà <see cref="P:System.Windows.Forms.Control.Top" /> del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-553">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="e3275-554">Nuovo valore della proprietà <see cref="P:System.Windows.Forms.Control.Width" /> del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-554">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="e3275-555">Non usato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-555">Not used.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="e3275-556">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.BoundsSpecified" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-556">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-557">Imposta i limiti specificati del controllo <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-557">Sets the specified bounds of the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-558">Il <xref:System.Windows.Forms.TextBoxBase> controlli utilizza il <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> proprietà per impostare i limiti se il <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> proprietà `true` e <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> proprietà è `false`.</span><span class="sxs-lookup"><span data-stu-id="e3275-558">The <xref:System.Windows.Forms.TextBoxBase> control uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to set the bounds if the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property is `true` and the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="e3275-559">In genere, i parametri che corrispondono ai limiti non inclusi nel `specified` parametro vengono passati con i relativi valori correnti.</span><span class="sxs-lookup"><span data-stu-id="e3275-559">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="e3275-560">Ad esempio, il <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, o <xref:System.Drawing.Point.X%2A> o <xref:System.Drawing.Point.Y%2A> le proprietà del <xref:System.Windows.Forms.Control.Location%2A> proprietà può essere passata con un riferimento all'istanza corrente del controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-560">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="e3275-561">I valori passati sono tuttavia rispettati e applicati al controllo.</span><span class="sxs-lookup"><span data-stu-id="e3275-561">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="e3275-562">Il `specified` parametro rappresenta gli elementi dei controlli <xref:System.Windows.Forms.Control.Bounds%2A> modificato dall'applicazione.</span><span class="sxs-lookup"><span data-stu-id="e3275-562">The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="e3275-563">Ad esempio, se si modifica il <xref:System.Windows.Forms.Control.Size%2A> del controllo, il `specified` valore del parametro è il `Size` valore <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="e3275-563">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="e3275-564">Tuttavia, se il <xref:System.Windows.Forms.Control.Size%2A> viene modificata in risposta al <xref:System.Windows.Forms.Control.Dock%2A> proprietà viene impostata, il `specified` valore del parametro è il `None` valore <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="e3275-564">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e3275-565">Quando si esegue l'override <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> metodo per imporre i limiti del controllo da modificare.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e3275-565">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change.</span>
            </span>
            <span data-ttu-id="e3275-566">Le classi derivate possono aggiungere limitazioni di dimensione per la <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e3275-566">Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShortcutsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-567">Ottiene o imposta un valore che indica se i tasti di scelta rapida definiti sono abilitati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-567">Gets or sets a value indicating whether the defined shortcuts are enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-568">
            <see langword="true" /> per abilitare i tasti di scelta rapida; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-568">
              <see langword="true" /> to enable the shortcuts; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-569">Utilizzare il <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> proprietà per abilitare o disabilitare le seguenti combinazioni di tasti di scelta rapida e menu di scelta rapida del controllo:</span><span class="sxs-lookup"><span data-stu-id="e3275-569">Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control’s shortcut menu:</span></span>  
  
-   <span data-ttu-id="e3275-570">CTRL+Z</span><span class="sxs-lookup"><span data-stu-id="e3275-570">CTRL+Z</span></span>  
  
-   <span data-ttu-id="e3275-571">CTRL+E</span><span class="sxs-lookup"><span data-stu-id="e3275-571">CTRL+E</span></span>  
  
-   <span data-ttu-id="e3275-572">CTRL+C</span><span class="sxs-lookup"><span data-stu-id="e3275-572">CTRL+C</span></span>  
  
-   <span data-ttu-id="e3275-573">CTRL+Y</span><span class="sxs-lookup"><span data-stu-id="e3275-573">CTRL+Y</span></span>  
  
-   <span data-ttu-id="e3275-574">CTRL+X</span><span class="sxs-lookup"><span data-stu-id="e3275-574">CTRL+X</span></span>  
  
-   <span data-ttu-id="e3275-575">CTRL+BACKSPACE</span><span class="sxs-lookup"><span data-stu-id="e3275-575">CTRL+BACKSPACE</span></span>  
  
-   <span data-ttu-id="e3275-576">CTRL+V</span><span class="sxs-lookup"><span data-stu-id="e3275-576">CTRL+V</span></span>  
  
-   <span data-ttu-id="e3275-577">CTRL+CANC</span><span class="sxs-lookup"><span data-stu-id="e3275-577">CTRL+DELETE</span></span>  
  
-   <span data-ttu-id="e3275-578">CTRL+A</span><span class="sxs-lookup"><span data-stu-id="e3275-578">CTRL+A</span></span>  
  
-   <span data-ttu-id="e3275-579">MAIUSC + CANC</span><span class="sxs-lookup"><span data-stu-id="e3275-579">SHIFT+DELETE</span></span>  
  
-   <span data-ttu-id="e3275-580">CTRL+L</span><span class="sxs-lookup"><span data-stu-id="e3275-580">CTRL+L</span></span>  
  
-   <span data-ttu-id="e3275-581">MAIUSC + INS</span><span class="sxs-lookup"><span data-stu-id="e3275-581">SHIFT+INSERT</span></span>  
  
-   <span data-ttu-id="e3275-582">CTRL+R</span><span class="sxs-lookup"><span data-stu-id="e3275-582">CTRL+R</span></span>  
  
 <span data-ttu-id="e3275-583">È possibile eseguire l'override di questa proprietà per specificare altri tasti di scelta rapida.</span><span class="sxs-lookup"><span data-stu-id="e3275-583">You can override this property to specify other shortcut keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-584">Ottiene o imposta il testo corrente nella casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-584">Gets or sets the current text in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-585">Testo visualizzato nel controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-585">The text displayed in the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-586">Per visualizzare più righe di testo in una casella di testo, impostare il <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="e3275-586">To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`.</span></span> <span data-ttu-id="e3275-587">Per visualizzare o impostare il testo di una casella di testo su più righe, utilizzare il <xref:System.Windows.Forms.TextBoxBase.Lines%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-587">To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property.</span></span> <span data-ttu-id="e3275-588">La quantità di testo che può essere immesse nel <xref:System.Windows.Forms.RichTextBox> di controllo è limitata solo dalla memoria di sistema disponibili.</span><span class="sxs-lookup"><span data-stu-id="e3275-588">The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-589">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe, per creare un controllo derivato <xref:System.Windows.Forms.TextBox> controllo con barre di scorrimento verticale.</span><span class="sxs-lookup"><span data-stu-id="e3275-589">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="e3275-590">Questo esempio Usa anche il <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, e <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> proprietà per adattare il controllo casella di testo su più righe per la creazione di documenti di testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-590">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public virtual int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-591">Ottiene la lunghezza del testo nel controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-591">Gets the length of text in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-592">Numero di caratteri contenuti nel testo del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-592">The number of characters contained in the text of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-593">È possibile utilizzare questa proprietà per determinare il numero di caratteri in una stringa per attività quali la ricerca di stringhe di testo all'interno del testo del controllo, in cui è necessario conoscere il numero totale di caratteri.</span><span class="sxs-lookup"><span data-stu-id="e3275-593">You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-594">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> (metodo) e <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> proprietà per copiare testo da uno <xref:System.Windows.Forms.TextBox> a un altro.</span><span class="sxs-lookup"><span data-stu-id="e3275-594">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="e3275-595">In questo esempio presuppone che due <xref:System.Windows.Forms.TextBox> controlli denominati, `textBox1` e `textBox2`, sono stati aggiunti a un form e che `textBox1` assegnato per il testo relativo <xref:System.Windows.Forms.Control.Text%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-595">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3275-596">Restituisce una stringa che rappresenta il controllo <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-596">Returns a string that represents the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3275-597">Stringa che rappresenta l'oggetto <see cref="T:System.Windows.Forms.TextBoxBase" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-597">A string that represents the current <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
          </span>
          <span data-ttu-id="e3275-598">La stringa comprende il tipo e la proprietà <see cref="T:System.Windows.Forms.TextBoxBase" /> del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-598">The string includes the type and the <see cref="T:System.Windows.Forms.TextBoxBase" /> property of the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3275-599">Annulla l'ultima operazione di modifica apportata alla casella di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-599">Undoes the last edit operation in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-600">Questo metodo consentirà di annullare l'ultima **Appunti** o di modifica testo operazione eseguita nel controllo casella di testo se il <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> restituisce proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="e3275-600">This method will undo the last **Clipboard** or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-601">Il <xref:System.Windows.Forms.TextBoxBase.Undo%2A> metodo non funziona con il <xref:System.Windows.Forms.Control.KeyPress> o <xref:System.Windows.Forms.Control.TextChanged> eventi.</span><span class="sxs-lookup"><span data-stu-id="e3275-601">The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-602">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e3275-602">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="e3275-603">Fornisce <xref:System.Windows.Forms.MenuItem.Click> gestori eventi per <xref:System.Windows.Forms.MenuItem> gli oggetti che eseguono le operazioni Taglia, copia, Incolla e operazioni di annullamento.</span><span class="sxs-lookup"><span data-stu-id="e3275-603">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="e3275-604">Questo esempio si presuppone che un <xref:System.Windows.Forms.TextBox> controllo denominato `textBox1` è stato creato.</span><span class="sxs-lookup"><span data-stu-id="e3275-604">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="e3275-605">Oggetto <see cref="T:System.Windows.Forms.Message" /> di Windows da elaborare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-605">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3275-606">Elabora i messaggi di Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-606">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3275-607">Indica se un controllo casella di testo su più righe manda automaticamente a capo le parole all'inizio della riga successiva quando è necessario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-607">Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3275-608">
            <see langword="true" /> se il controllo casella di testo su più righe manda a capo le parole; <see langword="false" /> se il controllo casella di testo procede automaticamente in orizzontale quando l'utente digita oltre il margine destro del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-608">
              <see langword="true" /> if the multiline text box control wraps words; <see langword="false" /> if the text box control automatically scrolls horizontally when the user types past the right edge of the control.</span>
          </span>
          <span data-ttu-id="e3275-609">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3275-609">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3275-610">Se questa proprietà è impostata su `true`, le barre di scorrimento orizzontale non vengono visualizzate indipendentemente dal valore di <xref:System.Windows.Forms.TextBox.ScrollBars%2A> l'impostazione della proprietà.</span><span class="sxs-lookup"><span data-stu-id="e3275-610">If this property is set to `true`, horizontal scroll bars are not displayed regardless of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3275-611">Nella classe derivata, <xref:System.Windows.Forms.TextBox>, testo all'interno del controllo verrà sempre andare a capo indipendentemente dall'impostazione della proprietà di questa proprietà, a meno che il <xref:System.Windows.Forms.TextBox.TextAlign%2A> è impostata su `HorizontalAlignment.Left`.</span><span class="sxs-lookup"><span data-stu-id="e3275-611">In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3275-612">Nell'esempio di codice viene illustrato come utilizzare <xref:System.Windows.Forms.TextBox>, una classe, per creare un controllo derivato <xref:System.Windows.Forms.TextBox> controllo con barre di scorrimento verticale.</span><span class="sxs-lookup"><span data-stu-id="e3275-612">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="e3275-613">Questo esempio Usa anche il <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, e <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> proprietà per adattare il controllo casella di testo su più righe per la creazione di documenti di testo.</span><span class="sxs-lookup"><span data-stu-id="e3275-613">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>