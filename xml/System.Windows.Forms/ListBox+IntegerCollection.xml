<Type Name="ListBox+IntegerCollection" FullName="System.Windows.Forms.ListBox+IntegerCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c79f6f3cb19d9859691bdad1d7296a7d4ab93024" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30649575" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListBox.IntegerCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/IntegerCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.IntegerCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.IntegerCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::IntegerCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="530c3-101">Rappresenta un insieme di integer in un oggetto <see cref="T:System.Windows.Forms.ListBox" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="530c3-101">Represents a collection of integers in a <see cref="T:System.Windows.Forms.ListBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> è una raccolta ordinata in cui vengono aggiunti elementi mediante il <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> e <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="530c3-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> is a sorted collection to which items are appended by using the <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> and <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> methods.</span></span> <span data-ttu-id="530c3-103">Valori duplicati vengono rimossi.</span><span class="sxs-lookup"><span data-stu-id="530c3-103">Duplicate values are removed.</span></span>  
  
 <span data-ttu-id="530c3-104">Il <xref:System.Windows.Forms.ListBox.IntegerCollection> viene utilizzato principalmente per la <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="530c3-104">The <xref:System.Windows.Forms.ListBox.IntegerCollection> is used mainly by the <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="530c3-105">Il controllo <see cref="T:System.Windows.Forms.ListBox" /> che possiede questo insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-105">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-106">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-107">Non è possibile creare un'istanza di <xref:System.Windows.Forms.ListBox.IntegerCollection> classe senza associarla a un <xref:System.Windows.Forms.ListBox> controllo.</span><span class="sxs-lookup"><span data-stu-id="530c3-107">You cannot create an instance of the <xref:System.Windows.Forms.ListBox.IntegerCollection> class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="530c3-108">Integer da aggiungere all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-108">The integer to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-109">Aggiunge un Integer univoco all'insieme mantenendo l'ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-109">Adds a unique integer to the collection in sorted order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="530c3-110">L'indice dell'elemento aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-110">The index of the added item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="530c3-111">Lo spazio è insufficiente per memorizzare il nuovo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-111">There is insufficient space available to store the new item.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="530c3-112">Aggiunge un gruppo di integer all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-112">Adds a group of integers to the collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;int&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="530c3-113">Matrice di integer da aggiungere all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-113">The array of integers to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-114">Aggiunge una matrice di integer all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-114">Adds an array of integers to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-115">La matrice di integer viene aggiunto alla raccolta e i duplicati vengono rimossi dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="530c3-115">The array of integers is appended to the collection, and duplicates are removed from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.IntegerCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/IntegerCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Windows.Forms.ListBox.IntegerCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.IntegerCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::IntegerCollection ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+IntegerCollection" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="530c3-116">Oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> da aggiungere a un altro insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-116">The <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to add to another collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-117">Aggiunge il contenuto di un oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> esistente a un altro insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-117">Adds the contents of an existing <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to another collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-118">Il contenuto dell'oggetto esistente <xref:System.Windows.Forms.ListBox.IntegerCollection> vengono aggiunti alla raccolta corrente, e i duplicati vengono rimossi dall'insieme.</span><span class="sxs-lookup"><span data-stu-id="530c3-118">The contents of the existing <xref:System.Windows.Forms.ListBox.IntegerCollection> are appended to the current collection, and duplicates are removed from the combined collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="530c3-119">Rimuove tutti gli integer dall'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-119">Removes all integers from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Contains(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="530c3-120">Integer da cercare nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-120">The integer to search for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-121">Determina se l'Integer specificato è incluso nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-121">Determines whether the specified integer is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="530c3-122">
            <see langword="true" /> se Integer specificato è contenuto nell'insieme; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-122">
              <see langword="true" /> if the specified integer is in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-123">Utilizzare il <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> metodo per determinare se un membro di un numero intero di <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span><span class="sxs-lookup"><span data-stu-id="530c3-123">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method to determine whether an integer is a member of the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="530c3-124">Una volta stabilito che l'elemento si trova all'interno della raccolta, è possibile utilizzare il <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> metodo per determinare l'elemento in cui si trova all'interno della raccolta.</span><span class="sxs-lookup"><span data-stu-id="530c3-124">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ destination, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="530c3-125">Matrice in cui viene copiato l'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-125">The array into which the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> is copied.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="530c3-126">Posizione nella matrice di destinazione in cui copiare l'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-126">The location within the destination array to which to copy the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-127">Copia l'intero oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> in una matrice di integer in corrispondenza della posizione specificata all'interno della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-127">Copies the entire <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> into an existing array of integers at a specified location within the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-128">Utilizzare il <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> metodo per combinare i numeri interi da più raccolte in una matrice.</span><span class="sxs-lookup"><span data-stu-id="530c3-128">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> method to combine the integers from multiple collections into a single array.</span></span> <span data-ttu-id="530c3-129">È quindi possibile utilizzare questa matrice per compilare il contenuto di un altro <xref:System.Windows.Forms.ListBox> controllare mediante il <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="530c3-129">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ListBox> control using the <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="530c3-130">Ottiene il numero di elementi selezionati contenuti in <see cref="T:System.Windows.Forms.ListBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-130">Gets the number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="530c3-131">Numero di elementi selezionati contenuti in <see cref="T:System.Windows.Forms.ListBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-131">The number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-132">Utilizzare il <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> proprietà per determinare il numero di elementi selezionati nel <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span><span class="sxs-lookup"><span data-stu-id="530c3-132">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> property to determine the number of selected items in the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="530c3-133">È quindi possibile utilizzare questo valore quando si scorrono gli elementi ed è necessario fornire un numero di iterazioni per eseguire il ciclo.</span><span class="sxs-lookup"><span data-stu-id="530c3-133">You can then use this value when you are looping through the items and you need to provide a number of iterations to perform the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.IndexOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="530c3-134">Integer per il quale recuperare l'indice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-134">The integer for which to retrieve the index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-135">Recupera l'indice all'interno dell'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> dell'Integer specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-135">Retrieves the index within the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> of the specified integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="530c3-136">Indice in base zero dell'intero in <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-136">The zero-based index of the integer in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, negative one (-1).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-137">Utilizzare il <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> metodo per determinare un elemento in cui si trova all'interno della raccolta.</span><span class="sxs-lookup"><span data-stu-id="530c3-137">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where an item is located within the collection.</span></span> <span data-ttu-id="530c3-138">Per determinare se un elemento si trova all'interno della raccolta prima di chiamare questo metodo, utilizzare il <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="530c3-138">To determine whether an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[int] { int get(int index); void set(int index, int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="530c3-139">Posizione della proprietà <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> all'interno dell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-139">The position of the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-140">Ottiene o imposta l'oggetto <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> con l'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-140">Gets or sets the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> having the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="530c3-141">Proprietà <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> selezionata in corrispondenza della posizione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-141">The selected <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> at the specified position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="530c3-142">Integer da rimuovere dall'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-142">The integer to remove from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-143">Rimuove l'Integer specificato da <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-143">Removes the specified integer from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-144">Quando si rimuove un numero intero compreso tra il <xref:System.Windows.Forms.ListBox.IntegerCollection>, modificano gli indici dei successivi integer nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="530c3-144">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="530c3-145">Tutte le informazioni relative al valore integer rimosso viene eliminate.</span><span class="sxs-lookup"><span data-stu-id="530c3-145">All information about the removed integer is deleted.</span></span> <span data-ttu-id="530c3-146">È possibile utilizzare il <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> metodo per rimuovere un elemento specifico nell'elenco specificando l'elemento da rimuovere dall'elenco.</span><span class="sxs-lookup"><span data-stu-id="530c3-146">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method to remove a specific item from the list by specifying the actual item to remove from the list.</span></span> <span data-ttu-id="530c3-147">Per specificare l'indice dell'integer da rimuovere anziché l'integer stesso, usare il <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="530c3-147">To specify the index of the integer to remove instead of the integer itself, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method.</span></span>  
  
 <span data-ttu-id="530c3-148">Se il numero intero non è nel <xref:System.Windows.Forms.ListBox.IntegerCollection>, questo metodo non esegue alcuna operazione.</span><span class="sxs-lookup"><span data-stu-id="530c3-148">If the integer is not in the <xref:System.Windows.Forms.ListBox.IntegerCollection>, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="530c3-149">Indice in base zero dell'Integer da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-149">The zero-based index of the integer to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-150">Rimuove l'Integer dall'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-150">Removes the integer at the specified index from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-151">Quando si rimuove un numero intero compreso tra il <xref:System.Windows.Forms.ListBox.IntegerCollection>, modificano gli indici dei successivi integer nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="530c3-151">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="530c3-152">Tutte le informazioni relative al valore integer rimosso viene eliminate.</span><span class="sxs-lookup"><span data-stu-id="530c3-152">All information about the removed integer is deleted.</span></span> <span data-ttu-id="530c3-153">È possibile utilizzare il <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> metodo per rimuovere un numero intero specifico dall'elenco specificando l'indice dell'integer da rimuovere dall'elenco.</span><span class="sxs-lookup"><span data-stu-id="530c3-153">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method to remove a specific integer from the list by specifying the index of the integer to remove from the list.</span></span> <span data-ttu-id="530c3-154">Per specificare l'elemento da rimuovere anziché l'indice dell'elemento, usare il <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="530c3-154">To specify the item to remove instead of the index to the item, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="530c3-155">Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-155">Gets a value indicating whether access to the collection is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="530c3-156">
            <see langword="true" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-156">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-157">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="530c3-157">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="530c3-158">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.IntegerCollection> a un'interfaccia <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="530c3-158">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="530c3-159">Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso all'insieme dei controlli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-159">Gets an object that can be used to synchronize access to the collection of controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="530c3-160">Oggetto utilizzato per sincronizzare l'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-160">The object used to synchronize to the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-161">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="530c3-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="530c3-162">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.IntegerCollection> a un'interfaccia <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="530c3-162">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="530c3-163">Recupera un'enumerazione di tutti gli integer nell'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-163">Retrieves an enumeration of all the integers in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="530c3-164">
            <see cref="T:System.Collections.IEnumerator" /> per l'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-164">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-165">Questo metodo crea un enumeratore che contiene uno snapshot della raccolta.</span><span class="sxs-lookup"><span data-stu-id="530c3-165">This method creates an enumerator that contains a snapshot of the collection.</span></span> <span data-ttu-id="530c3-166">È possibile modificare la raccolta modificando l'enumeratore; Tuttavia, più enumeratori possono accedere contemporaneamente la stessa raccolta.</span><span class="sxs-lookup"><span data-stu-id="530c3-166">You can change the collection by changing the enumerator; however, multiple enumerators can simultaneously access the same collection.</span></span> <span data-ttu-id="530c3-167">Modifica raccolta (direttamente o tramite un enumeratore) può pertanto causare <xref:System.Collections.IEnumerator.Current%2A> o <xref:System.Collections.IEnumerator.MoveNext%2A> per generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="530c3-167">Changing the collection (either directly or through another enumerator) can thus cause <xref:System.Collections.IEnumerator.Current%2A> or <xref:System.Collections.IEnumerator.MoveNext%2A> to throw an exception.</span></span>  
  
 <span data-ttu-id="530c3-168">Due enumeratori creati dallo stesso insieme nello stesso momento possono contenere snapshot diversi.</span><span class="sxs-lookup"><span data-stu-id="530c3-168">Two enumerators created from the same collection at the same time can contain different snapshots.</span></span>  
  
 <span data-ttu-id="530c3-169">Rimozione di oggetti dall'enumeratore anche li rimuove dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="530c3-169">Removing objects from the enumerator also removes them from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="530c3-170">Tabulazione da aggiungere all'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-170">The tab stop to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-171">Aggiunge una tabulazione all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-171">Adds a tab stop to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="530c3-172">Indice in corrispondenza del quale l'Integer è stato aggiunto all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-172">The index at which the integer was added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-173">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="530c3-173">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="530c3-174">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.IntegerCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="530c3-174">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="530c3-175">
            <paramref name="item" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-175">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="530c3-176">
            <paramref name="item" /> non è un Integer con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-176">
              <paramref name="item" /> is not an 32-bit signed integer.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="530c3-177">Lo spazio è insufficiente per memorizzare il nuovo elemento nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-177">There is insufficient space to store the new item in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="530c3-178">Cancella tutte le tabulazioni dall'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-178">Clears all the tab stops from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-179">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="530c3-179">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="530c3-180">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.IntegerCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="530c3-180">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="530c3-181">Tabulazione da individuare nell'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-181">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-182">Determina se la tabulazione specificata è inclusa nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-182">Determines whether the specified tab stop is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="530c3-183">
            <see langword="true" /> se l'elemento è un Integer contenuto in IntegerCollection; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-183">
              <see langword="true" /> if item is an integer located in the IntegerCollection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-184">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="530c3-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="530c3-185">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.IntegerCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="530c3-185">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="530c3-186">Tabulazione da individuare nell'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-186">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-187">Restituisce l'indice della tabulazione specificata nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-187">Returns the index of the specified tab stop in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="530c3-188">Indice in base zero dell'elemento se è stato trovato nell'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-188">The zero-based index of item if it was found in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-189">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="530c3-189">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="530c3-190">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.IntegerCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="530c3-190">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="530c3-191">Indice in base zero in corrispondenza del quale deve essere inserito value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-191">The zero-based index at which value should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="530c3-192">Oggetto da inserire in <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-192">The object to insert into the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-193">Inserisce un elemento nella raccolta in corrispondenza di un indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-193">Inserts an item into the collection at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-194">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="530c3-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="530c3-195">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.IntegerCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="530c3-195">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="530c3-196">Sempre generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-196">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="530c3-197">Ottiene un valore che indica se la dimensione della raccolta è fissa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-197">Gets a value indicating whether the collection has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="530c3-198">
            <see langword="true" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-198">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-199">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="530c3-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="530c3-200">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.IntegerCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="530c3-200">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="530c3-201">Ottiene un valore che indica se la raccolta è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-201">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="530c3-202">
            <see langword="false" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-202">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-203">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="530c3-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="530c3-204">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.IntegerCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="530c3-204">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="530c3-205">Indice in base zero che specifica quale tabulazione ottenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-205">The zero-based index that specifies which tab stop to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-206">Ottiene o imposta la tabulazione in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-206">Gets or sets the tab stop at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="530c3-207">Tabulazione memorizzata in corrispondenza della posizione specificata nell'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-207">The tab stop that is stored at the specified location in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-208">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="530c3-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="530c3-209">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.IntegerCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="530c3-209">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="530c3-210">L'oggetto non è un integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-210">The object is not an integer.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="530c3-211">Oggetto da aggiungere all'oggetto <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-211">The object to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-212">Consente di rimuovere la prima occorrenza di un elemento dall'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-212">Removes the first occurrence of an item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-213">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="530c3-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="530c3-214">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.IntegerCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="530c3-214">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="530c3-215">Sempre generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-215">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="530c3-216">Indice dell'elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-216">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="530c3-217">Rimuove l'elemento in corrispondenza di un indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-217">Removes the item at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="530c3-218">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="530c3-218">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="530c3-219">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Forms.ListBox.IntegerCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="530c3-219">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="530c3-220">Sempre generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="530c3-220">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>