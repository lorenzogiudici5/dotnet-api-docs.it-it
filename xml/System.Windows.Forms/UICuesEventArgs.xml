<Type Name="UICuesEventArgs" FullName="System.Windows.Forms.UICuesEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a523c1e36e8f227e83948233e68dca350fbb5fa2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36510307" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UICuesEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UICuesEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.UICuesEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class UICuesEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class UICuesEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type UICuesEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce dati per l'evento <see cref="E:System.Windows.Forms.Control.ChangeUICues" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Forms.UICuesEventArgs> specifica quali funzionalità interfaccia utente viene modificata e il nuovo valore.  
  
 Il <xref:System.Windows.Forms.Control.ChangeUICues> evento viene generato quando l'interfaccia utente visualizzando o nascondendo gli indicatori di stato attivo o suggerimenti da tastiera. Si tratta in genere quando l'utente preme i tasti TAB, ALT o F10.  
  
 Per informazioni sul modello di eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo tipo. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.Control.ChangeUICues> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.Control>, ad esempio un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>. Quindi assegnare un nome dell'istanza `Control1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.Control.ChangeUICues> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#67)]
 [!code-vb[System.Windows.Forms.EventExamples#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#67)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UICuesEventArgs (System.Windows.Forms.UICues uicues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.UICues uicues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.UICuesEventArgs.#ctor(System.Windows.Forms.UICues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UICuesEventArgs(System::Windows::Forms::UICues uicues);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.UICuesEventArgs : System.Windows.Forms.UICues -&gt; System.Windows.Forms.UICuesEventArgs" Usage="new System.Windows.Forms.UICuesEventArgs uicues" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uicues" Type="System.Windows.Forms.UICues" />
      </Parameters>
      <Docs>
        <param name="uicues">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.UICues" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.UICuesEventArgs" /> con l'oggetto <see cref="T:System.Windows.Forms.UICues" /> specificato.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="T:System.Windows.Forms.Control" />
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.UICues Changed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.UICues Changed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.UICuesEventArgs.Changed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Changed As UICues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::UICues Changed { System::Windows::Forms::UICues get(); };" />
      <MemberSignature Language="F#" Value="member this.Changed : System.Windows.Forms.UICues" Usage="System.Windows.Forms.UICuesEventArgs.Changed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UICues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.UICues" />.</summary>
        <value>Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.UICues" />. Il valore predefinito è <see cref="F:System.Windows.Forms.UICues.Changed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.Control.ChangeUICues?displayProperty=nameWithType> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.Control>, ad esempio un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>. Quindi assegnare un nome dell'istanza `Control1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.Control.ChangeUICues?displayProperty=nameWithType> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#67)]
 [!code-vb[System.Windows.Forms.EventExamples#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#67)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UICues" />
      </Docs>
    </Member>
    <Member MemberName="ChangeFocus">
      <MemberSignature Language="C#" Value="public bool ChangeFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChangeFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.UICuesEventArgs.ChangeFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChangeFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangeFocus : bool" Usage="System.Windows.Forms.UICuesEventArgs.ChangeFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se lo stato dei suggerimenti di attivazione è cambiato.</summary>
        <value>
          <see langword="true" /> se lo stato dei suggerimenti di attivazione è cambiato; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.Control.ChangeUICues?displayProperty=nameWithType> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.Control>, ad esempio un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>. Quindi assegnare un nome dell'istanza `Control1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.Control.ChangeUICues?displayProperty=nameWithType> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#67)]
 [!code-vb[System.Windows.Forms.EventExamples#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#67)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.UICuesEventArgs.ShowFocus" />
        <altmember cref="P:System.Windows.Forms.UICuesEventArgs.ChangeKeyboard" />
      </Docs>
    </Member>
    <Member MemberName="ChangeKeyboard">
      <MemberSignature Language="C#" Value="public bool ChangeKeyboard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChangeKeyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.UICuesEventArgs.ChangeKeyboard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeKeyboard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChangeKeyboard { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangeKeyboard : bool" Usage="System.Windows.Forms.UICuesEventArgs.ChangeKeyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se lo stato dei suggerimenti da tastiera è cambiato.</summary>
        <value>
          <see langword="true" /> se lo stato dei suggerimenti da tastiera è cambiato; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.Control.ChangeUICues?displayProperty=nameWithType> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.Control>, ad esempio un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>. Quindi assegnare un nome dell'istanza `Control1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.Control.ChangeUICues?displayProperty=nameWithType> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#67)]
 [!code-vb[System.Windows.Forms.EventExamples#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#67)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.UICuesEventArgs.ShowKeyboard" />
        <altmember cref="P:System.Windows.Forms.UICuesEventArgs.ChangeFocus" />
      </Docs>
    </Member>
    <Member MemberName="ShowFocus">
      <MemberSignature Language="C#" Value="public bool ShowFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.UICuesEventArgs.ShowFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShowFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowFocus : bool" Usage="System.Windows.Forms.UICuesEventArgs.ShowFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se i rettangoli di attivazione vengono visualizzati dopo la modifica.</summary>
        <value>
          <see langword="true" /> se i rettangoli di attivazione vengono visualizzati dopo la modifica; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.Control.ChangeUICues?displayProperty=nameWithType> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.Control>, ad esempio un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>. Quindi assegnare un nome dell'istanza `Control1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.Control.ChangeUICues?displayProperty=nameWithType> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#67)]
 [!code-vb[System.Windows.Forms.EventExamples#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#67)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.UICuesEventArgs.ChangeFocus" />
        <altmember cref="P:System.Windows.Forms.UICuesEventArgs.ShowKeyboard" />
      </Docs>
    </Member>
    <Member MemberName="ShowKeyboard">
      <MemberSignature Language="C#" Value="public bool ShowKeyboard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowKeyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.UICuesEventArgs.ShowKeyboard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShowKeyboard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowKeyboard { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowKeyboard : bool" Usage="System.Windows.Forms.UICuesEventArgs.ShowKeyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se i suggerimenti da tastiera vengono sottolineati dopo la modifica.</summary>
        <value>
          <see langword="true" /> se i suggerimenti da tastiera vengono sottolineati dopo la modifica; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.Control.ChangeUICues?displayProperty=nameWithType> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.Control>, ad esempio un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>. Quindi assegnare un nome dell'istanza `Control1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.Control.ChangeUICues?displayProperty=nameWithType> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#67)]
 [!code-vb[System.Windows.Forms.EventExamples#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#67)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.UICuesEventArgs.ChangeKeyboard" />
        <altmember cref="P:System.Windows.Forms.UICuesEventArgs.ShowFocus" />
      </Docs>
    </Member>
  </Members>
</Type>