<Type Name="DataGridColumnStyle" FullName="System.Windows.Forms.DataGridColumnStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="badc63cf3e66ceec9ba9035c9b6138bcc2f2e0a2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640685" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataGridColumnStyle : System.ComponentModel.Component, System.Windows.Forms.IDataGridColumnStyleEditingNotificationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataGridColumnStyle extends System.ComponentModel.Component implements class System.Windows.Forms.IDataGridColumnStyleEditingNotificationService" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridColumnStyle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataGridColumnStyle&#xA;Inherits Component&#xA;Implements IDataGridColumnStyleEditingNotificationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridColumnStyle abstract : System::ComponentModel::Component, System::Windows::Forms::IDataGridColumnStyleEditingNotificationService" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataGridColumnStyleEditingNotificationService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Header")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica l'aspetto, la formattazione del testo e il comportamento di una colonna del controllo <see cref="T:System.Windows.Forms.DataGrid" />. Questa classe è astratta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La raccolta di <xref:System.Windows.Forms.DataGridColumnStyle> oggetti (il <xref:System.Windows.Forms.GridColumnStylesCollection>) è possibile accedere mediante il <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> del controllo <xref:System.Windows.Forms.DataGrid.TableStyles%2A> proprietà.  
  
 Il <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> controllo crea automaticamente una raccolta di <xref:System.Windows.Forms.DataGridColumnStyle> oggetti automaticamente quando si imposta la <xref:System.Windows.Forms.DataGrid.DataSource%2A> proprietà da un'origine dati appropriata. Gli oggetti creati sono effettivamente istanze di una delle seguenti classi che ereditano da <xref:System.Windows.Forms.DataGridColumnStyle>: <xref:System.Windows.Forms.DataGridBoolColumn> o <xref:System.Windows.Forms.DataGridTextBoxColumn> classe.  
  
 Per formattare la visualizzazione dei dati, impostare il <xref:System.Windows.Forms.DataGridTextBoxColumn.Format%2A> proprietà la <xref:System.Windows.Forms.DataGridTextBoxColumn> classe a uno dei valori di formattazione. Per ulteriori informazioni sui valori di formattazione validi, vedere [formattazione dei tipi di](~/docs/standard/base-types/formatting-types.md) e [stringhe di formato di ora e Data personalizzata](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
 È inoltre possibile creare il proprio set di <xref:System.Windows.Forms.DataGridColumnStyle> degli oggetti e aggiungerli al <xref:System.Windows.Forms.GridColumnStylesCollection>. Quando si esegue questa operazione, è necessario impostare il <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> ogni stile di colonna per il <xref:System.Data.DataColumn.ColumnName%2A> di un <xref:System.Data.DataColumn> per sincronizzare la visualizzazione delle colonne con i dati effettivi.  
  
> [!CAUTION]
>  Creare sempre <xref:System.Windows.Forms.DataGridColumnStyle> degli oggetti e aggiungerli al <xref:System.Windows.Forms.GridColumnStylesCollection> prima di aggiungere <xref:System.Windows.Forms.DataGridTableStyle> oggetti per il <xref:System.Windows.Forms.GridTableStylesCollection>. Quando si aggiunge un oggetto vuoto <xref:System.Windows.Forms.DataGridTableStyle> con un valore valido <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> valore alla raccolta, <xref:System.Windows.Forms.DataGridColumnStyle> gli oggetti vengono generati automaticamente. Di conseguenza, verrà generata un'eccezione se si tenta di aggiungere nuovi <xref:System.Windows.Forms.DataGridColumnStyle> oggetti con duplicato <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> i valori per il <xref:System.Windows.Forms.GridColumnStylesCollection>.  
  
 Quando una delle classi derivate viene creata un'istanza da un <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> controllo, la classe creata dipende il <xref:System.Data.DataColumn.DataType%2A> del <xref:System.Data.DataColumn> associato il <xref:System.Windows.Forms.DataGridColumnStyle> oggetto. Ad esempio, un <xref:System.Data.DataColumn> con il relativo <xref:System.Data.DataColumn.DataType%2A> impostato su `System.Boolean` sarà associato un <xref:System.Windows.Forms.DataGridBoolColumn>. Per determinare il tipo di qualsiasi <xref:System.Windows.Forms.DataGridColumnStyle>, utilizzare il <xref:System.Object.GetType%2A> metodo.  
  
 Per creare le proprie classi di colonna, è possibile ereditare da <xref:System.Windows.Forms.DataGridColumnStyle>. È consigliabile eseguire questa operazione per creare le colonne speciali che i controlli host, come esemplificato dal <xref:System.Windows.Forms.DataGridTextBox> classe, che ospita il <xref:System.Windows.Forms.TextBox> controllo. Ad esempio, è possibile ospitare un <xref:System.Drawing.Image> di controllo per visualizzare le immagini nelle colonne oppure è possibile creare un controllo utente personalizzato in host nella colonna.  
  
 La funzionalità del <xref:System.Windows.Forms.DataGridColumnStyle> non deve essere confuso con quello del <xref:System.Data.DataColumn>. Mentre il <xref:System.Data.DataColumn> contiene le proprietà e metodi appropriati per la creazione dello schema di una tabella di dati, il <xref:System.Windows.Forms.DataGridColumnStyle> contiene le proprietà e metodi correlati all'aspetto di una singola colonna sullo schermo.  
  
 Se una riga contiene un <xref:System.DBNull.Value?displayProperty=nameWithType>, il testo visualizzato nella colonna può essere impostato con la <xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A> proprietà.  
  
 La <xref:System.Windows.Forms.DataGridColumnStyle> classe consente inoltre di specificare il comportamento di una colonna, mentre i dati vengono modificati. Il <xref:System.Windows.Forms.DataGridColumnStyle.BeginUpdate%2A> e <xref:System.Windows.Forms.DataGridColumnStyle.EndUpdate%2A> metodi sospendono temporaneamente il disegno della colonna mentre vengono effettuati aggiornamenti di grandi dimensioni per i dati della colonna. Senza questa funzionalità, ogni modifica apportata in ogni cella della griglia verrebbe disegnata immediatamente; Questo potrebbe essere fuorviante per l'utente e un responsabile delle prestazioni.  
  
 Diversi metodi che consentono di controllare la colonna quando viene modificato dall'utente, inclusi il <xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A> e <xref:System.Windows.Forms.DataGridColumnStyle.Commit%2A> eventi.  
  
 La maggior parte delle proprietà e metodi della classe personalizzati per controllare l'aspetto di una colonna. Tuttavia alcuni, ad esempio il <xref:System.Windows.Forms.DataGridColumnStyle.GetColumnValueAtRow%2A> e <xref:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow%2A> consentono di esaminare e modificare il valore in una cella specificata.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.DataGridColumnStyle> che ospita un <xref:System.Windows.Forms.DateTimePicker> controllo.  
  
 [!code-cpp[DataGridColumnStyle Overview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle Overview/CPP/timecolumn.cpp#1)]
 [!code-csharp[DataGridColumnStyle Overview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle Overview/CS/timecolumn.cs#1)]
 [!code-vb[DataGridColumnStyle Overview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle Overview/VB/timecolumn.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Quando si eredita da <see cref="T:System.Windows.Forms.DataGridColumnStyle" />, è necessario eseguire l'override dei seguenti membri: <see cref="M:System.Windows.Forms.DataGridColumnStyle.Abort(System.Int32)" />, <see cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" />, <see cref="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean)" />, e <see cref="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32)" /> (due volte).</para>
    </block>
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Windows.Forms.DataGridBoolColumn" />
    <altmember cref="T:System.Windows.Forms.DataGridTextBox" />
    <altmember cref="P:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle" />
    <altmember cref="T:System.Data.DataView" />
    <altmember cref="T:System.Windows.Forms.GridColumnStylesCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridColumnStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridColumnStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>In una classe derivata, inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si crea un'istanza di un <xref:System.Windows.Forms.DataGridColumnStyle>, vengono inizializzate le proprietà seguenti.  
  
|Proprietà|Valore predefinito|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.DataGridColumnStyle.Alignment%2A>|`HorizontalAlignment.Left`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle%2A>|`null`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.FontHeight%2A>|-1|  
|<xref:System.Windows.Forms.DataGridColumnStyle.Invalidate%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A>|La stringa "(null)"|  
|<xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A>|`false`|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="T:System.Windows.Forms.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridColumnStyle (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.#ctor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (prop As PropertyDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridColumnStyle(System::ComponentModel::PropertyDescriptor ^ prop);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che fornisce gli attributi per la colonna.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> con l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per creare un nuovo <xref:System.Windows.Forms.DataGridColumnStyle>, è innanzitutto necessario ottenere il <xref:System.Windows.Forms.CurrencyManager> per l'origine dati della tabella a cui verrà aggiunta la colonna. Vedere il `CurrencyManager` e `BindingManager` per informazioni dettagliate su come ottenere specifico `CurrencyManager` oggetti per un form.  
  
 Dal <xref:System.Windows.Forms.CurrencyManager>, è possibile ottenere il <xref:System.ComponentModel.PropertyDescriptor> per il <xref:System.Data.DataColumn> che fornirà i dati per la colonna.  
  
 Quando si crea un'istanza di un <xref:System.Windows.Forms.DataGridColumnStyle>, vengono inizializzate le seguenti proprietà di lettura/scrittura.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.DataGridColumnStyle.Alignment%2A>|`HorizontalAlignment.Left`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle%2A>|`null`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.FontHeight%2A>|-1|  
|<xref:System.Windows.Forms.DataGridColumnStyle.Invalidate%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A>|"(null)"|  
|<xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A>|`false`|  
  
   
  
## Examples  
 Esempio di codice seguente crea un nuovo <xref:System.Windows.Forms.DataGridTextBoxColumn> (derivato da <xref:System.Windows.Forms.DataGridColumnStyle>) e lo aggiunge al <xref:System.Windows.Forms.GridColumnStylesCollection> di un <xref:System.Windows.Forms.DataGridTableStyle>.  
  
 [!code-cpp[Classic DataGridColumnStyle.DataGridColumnStyle1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.DataGridColumnStyle1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.DataGridColumnStyle1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.DataGridColumnStyle1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.DataGridColumnStyle1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.DataGridColumnStyle1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected internal abstract void Abort (int rowNum);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Abort(int32 rowNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Abort(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Abort (rowNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Abort(int rowNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowNum">Numero di riga in corrispondenza del quale un'operazione viene interrotta.</param>
        <summary>Quando ne viene eseguito l'override in una classe derivata, inizia una richiesta di interruzione di una routine di modifica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.DataGridColumnStyle.Abort%2A> metodo viene utilizzato il <xref:System.Windows.Forms.DataGrid> quando il <xref:System.Windows.Forms.DataGridColumnStyle.Commit%2A> metodo il <xref:System.Windows.Forms.DataGridColumnStyle> metodo restituisce `false`. In tal caso, il valore della colonna viene eseguito il rollback al valore precedente.  
  
 Il <xref:System.Windows.Forms.DataGridColumnStyle> deve terminare tutte le operazioni di modifica prima della restituzione. Utilizzare il <xref:System.Windows.Forms.DataGridColumnStyle.Abort%2A> metodo per eseguire questa operazione.  
  
 Il <xref:System.Windows.Forms.DataGrid.EndEdit%2A> metodo il <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> controllo richiama indirettamente <xref:System.Windows.Forms.DataGridColumnStyle.Abort%2A> se relativo `ShouldAbort` parametro è impostato su `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.Invalidate" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.HorizontalAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Alignment As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::HorizontalAlignment Alignment { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'allineamento del testo in una colonna.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.HorizontalAlignment" />. Il valore predefinito è <see langword="Left" />. Le opzioni valide comprendono <see langword="Left" />, <see langword="Center" /> e <see langword="Right" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice viene impostata la <xref:System.Windows.Forms.DataGridColumnStyle.Alignment%2A> proprietà per ogni colonna in un <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> per `HorizontalAlignment.Center` se i dati non sono una stringa.  
  
 [!code-vb[Classic DataGridColumnStyle.Alignment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.Alignment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignmentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AlignmentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AlignmentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.AlignmentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AlignmentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AlignmentChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.DataGridColumnStyle.Alignment" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro.  
  
 [!code-cpp[DataGridColumnStyle_AlignmentChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_AlignmentChanged/CPP/datagridcolumnstyle_alignmentchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_AlignmentChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_AlignmentChanged/CS/datagridcolumnstyle_alignmentchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_AlignmentChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_AlignmentChanged/VB/datagridcolumnstyle_alignmentchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="protected void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BeginUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sospende il disegno della colonna fino alla chiamata del metodo <see cref="M:System.Windows.Forms.DataGridColumnStyle.EndUpdate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando vengono apportate numerose modifiche all'aspetto di un <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> controllo (se le modifiche sono negli attributi della colonna o i dati visualizzati dal controllo), è necessario richiamare il <xref:System.Windows.Forms.DataGridColumnStyle.BeginUpdate%2A> metodo per bloccare temporaneamente il disegno del controllo. Di conseguenza distrazioni all'utente e un miglioramento delle prestazioni. Dopo avere apportati tutti gli aggiornamenti, richiamare il <xref:System.Windows.Forms.DataGridColumnStyle.EndUpdate%2A> metodo per riprendere il disegno del controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.EndUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckValidDataSource">
      <MemberSignature Language="C#" Value="protected void CheckValidDataSource (System.Windows.Forms.CurrencyManager value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckValidDataSource(class System.Windows.Forms.CurrencyManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.CheckValidDataSource(System.Windows.Forms.CurrencyManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckValidDataSource (value As CurrencyManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckValidDataSource(System::Windows::Forms::CurrencyManager ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.CurrencyManager" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto <see cref="T:System.Windows.Forms.CurrencyManager" /> da controllare.</param>
        <summary>Genera un'eccezione se il controllo <see cref="T:System.Windows.Forms.DataGrid" /> non dispone di un'origine dati valida o se su questa colonna non è stato effettuato il mapping a una proprietà valida nell'origine dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Il codice seguente vengono ottenuti un <xref:System.Windows.Forms.CurrencyManager> per un'origine dati e viene utilizzato il <xref:System.Windows.Forms.DataGridColumnStyle.CheckValidDataSource%2A> per determinare se il <xref:System.Windows.Forms.CurrencyManager> è valido.  
  
 [!code-cpp[Classic DataGridColumnStyle.CheckValidDataSource Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.CheckValidDataSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.CheckValidDataSource Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.CheckValidDataSource Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.CheckValidDataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.CheckValidDataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ApplicationException">L'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> per questa colonna è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ColumnStartedEditing">
      <MemberSignature Language="C#" Value="protected internal virtual void ColumnStartedEditing (System.Windows.Forms.Control editingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ColumnStartedEditing(class System.Windows.Forms.Control editingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.ColumnStartedEditing(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ColumnStartedEditing (editingControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ColumnStartedEditing(System::Windows::Forms::Control ^ editingControl);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing(System.Windows.Forms.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="editingControl">Oggetto <see cref="T:System.Windows.Forms.Control" /> ospitato nella colonna.</param>
        <summary>Informa l'oggetto <see cref="T:System.Windows.Forms.DataGrid" /> che l'utente ha iniziato a modificare la colonna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene chiamato, il <xref:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing%2A> metodo consente di <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> controllo per visualizzare una matita nell'intestazione di riga che indica la riga viene modificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="protected internal abstract bool Commit (System.Windows.Forms.CurrencyManager dataSource, int rowNum);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool Commit(class System.Windows.Forms.CurrencyManager dataSource, int32 rowNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function Commit (dataSource As CurrencyManager, rowNum As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool Commit(System::Windows::Forms::CurrencyManager ^ dataSource, int rowNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataSource">Oggetto <see cref="T:System.Windows.Forms.CurrencyManager" /> per l'oggetto <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</param>
        <param name="rowNum">Numero della riga su cui sono in corso delle modifiche.</param>
        <summary>Quando ne viene eseguito l'override in una classe derivata, inizia una richiesta di completamento di una routine di modifica.</summary>
        <returns>
          <see langword="true" /> se la routine di modifica è stato completata con esito positivo; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato un possibile sottoporre a override di <xref:System.Windows.Forms.DataGridColumnStyle.Commit%2A> metodo. Il codice richiama il <xref:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow%2A> (metodo), quindi imposta una variabile che consente ad altre funzioni determinare se la colonna è ancora in modalità di modifica. Il codice chiama quindi il <xref:System.Windows.Forms.DataGridColumnStyle.Invalidate%2A> metodo per ridisegnare il controllo. Infine, la funzione restituisce `true` per indicare la modifica è stato eseguito il commit.  
  
 [!code-vb[Classic DataGridColumnStyle.Commit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.Commit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Il <see cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" /> metodo deve essere utilizzato dalle classi derivate dal <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> classe per ripristinarne lo stato di modificando, ad esempio, per concedere l'attivazione se il <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> ospita un controllo di modifica. Vedere il <see cref="M:System.Windows.Forms.DataGridColumnStyle.ConcedeFocus" /> metodo.  
  
 Chiamare il <see cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" /> metodo quando il <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> riceve una richiesta di completamento delle modifiche. Se non è possibile senza errori, restituire <see langword="false" />.  
  
 Il <see cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" /> metodo viene chiamato dal metodo pubblico <see cref="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> del <see cref="T:System.Windows.Forms.DataGrid" /> controllo. Il metodo viene chiamato anche da altri metodi privati, ad esempio, quando viene modificata la riga corrente.</para>
        </block>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConcedeFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void ConcedeFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ConcedeFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.ConcedeFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ConcedeFocus ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ConcedeFocus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica a una colonna che deve lasciare l'attivazione al controllo che ospita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per determinare quando un ulteriore intervento in una classe derivata. Ad esempio, questo metodo viene sottoposto a override per il <xref:System.Windows.Forms.DataGridTextBoxColumn> per nascondere il <xref:System.Windows.Forms.DataGridTextBox>.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Windows.Forms.DataGridColumnStyle.ConcedeFocus%2A> metodo per nascondere un <xref:System.Windows.Forms.TextBox> ospitato dal <xref:System.Windows.Forms.DataGridTextBoxColumn>.  
  
 [!code-cpp[Classic DataGridColumnStyle.ConcedeFocus Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.ConcedeFocus Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.ConcedeFocus Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.ConcedeFocus Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.ConcedeFocus Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.ConcedeFocus Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHeaderAccessibleObject">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateHeaderAccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateHeaderAccessibleObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.CreateHeaderAccessibleObject" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateHeaderAccessibleObject () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateHeaderAccessibleObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Windows.Forms.AccessibleObject" /> per la colonna.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Forms.AccessibleObject" /> per la colonna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà viene chiamata da un <xref:System.Windows.Forms.DataGridTableStyle> quando il relativo <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> le modifiche alle proprietà. Questa proprietà è obbligatoria perché tutti i controlli figlio ospitato da un <xref:System.Windows.Forms.DataGridColumnStyle> deve essere aggiunto per il <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> del controllo `ControlCollection`.  
  
   
  
## Examples  
 Nell'esempio di codice vengono ottenuti i <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> di un <xref:System.Windows.Forms.DataGridColumnStyle>.  
  
 [!code-cpp[Classic DataGridColumnStyle.CreateHeaderAccessibleObject Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.CreateHeaderAccessibleObject Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.CreateHeaderAccessibleObject Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.CreateHeaderAccessibleObject Example/CS/source.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGrid" />
        <altmember cref="T:System.Windows.Forms.DataGridTableStyle" />
      </Docs>
    </Member>
    <Member MemberName="DataGridTableStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridTableStyle DataGridTableStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridTableStyle DataGridTableStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataGridTableStyle As DataGridTableStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridTableStyle ^ DataGridTableStyle { System::Windows::Forms::DataGridTableStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridTableStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Windows.Forms.DataGridTableStyle" /> per la colonna.</summary>
        <value>Proprietà <see cref="P:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle" /> che contiene l'oggetto <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice riportato di seguito viene stampato il <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> di un <xref:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle%2A> che contiene un <xref:System.Windows.Forms.DataGridColumnStyle>.  
  
 [!code-vb[Classic DataGridColumnStyle.DataGridTableStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.DataGridTableStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridTableStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Edit">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Prepara la cella per la modifica di un valore.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="protected internal virtual void Edit (System.Windows.Forms.CurrencyManager source, int rowNum, System.Drawing.Rectangle bounds, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Edit(class System.Windows.Forms.CurrencyManager source, int32 rowNum, valuetype System.Drawing.Rectangle bounds, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Edit (source As CurrencyManager, rowNum As Integer, bounds As Rectangle, readOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Edit(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Drawing::Rectangle bounds, bool readOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">Oggetto <see cref="T:System.Windows.Forms.CurrencyManager" /> per l'oggetto <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</param>
        <param name="rowNum">Numero di riga da modificare.</param>
        <param name="bounds">Oggetto <see cref="T:System.Drawing.Rectangle" /> di delimitazione in cui deve essere situato il controllo.</param>
        <param name="readOnly">Valore che indica se la colonna è di sola lettura. <see langword="true" /> se il valore è in sola lettura. In caso contrario, <see langword="false" />.</param>
        <summary>Prepara una cella per la modifica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, il <xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A> metodo posiziona un controllo sulla griglia nella posizione della cella da modificare.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="protected internal virtual void Edit (System.Windows.Forms.CurrencyManager source, int rowNum, System.Drawing.Rectangle bounds, bool readOnly, string displayText);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Edit(class System.Windows.Forms.CurrencyManager source, int32 rowNum, valuetype System.Drawing.Rectangle bounds, bool readOnly, string displayText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Edit (source As CurrencyManager, rowNum As Integer, bounds As Rectangle, readOnly As Boolean, displayText As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Edit(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Drawing::Rectangle bounds, bool readOnly, System::String ^ displayText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="readOnly" Type="System.Boolean" />
        <Parameter Name="displayText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Oggetto <see cref="T:System.Windows.Forms.CurrencyManager" /> per l'oggetto <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</param>
        <param name="rowNum">Numero di riga in corso di modifica all'interno di questa colonna.</param>
        <param name="bounds">Oggetto <see cref="T:System.Drawing.Rectangle" /> in cui deve essere situato il controllo.</param>
        <param name="readOnly">Valore che indica se la colonna è di sola lettura. <see langword="true" /> se il valore è in sola lettura. In caso contrario, <see langword="false" />.</param>
        <param name="displayText">Testo da visualizzare nel controllo.</param>
        <summary>Prepara la cella per la modifica mediante i parametri dell'oggetto <see cref="T:System.Windows.Forms.CurrencyManager" />, del numero di riga e dell'oggetto <see cref="T:System.Drawing.Rectangle" /> specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, il <xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A> metodo posiziona un controllo sulla griglia nella posizione della cella da modificare.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A> metodo per modificare il testo di una cella selezionata nel <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> controllo.  
  
 [!code-cpp[Classic DataGridColumnStyle.Edit1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.Edit1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.Edit1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.Edit1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.Edit1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.Edit1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="protected internal abstract void Edit (System.Windows.Forms.CurrencyManager source, int rowNum, System.Drawing.Rectangle bounds, bool readOnly, string displayText, bool cellIsVisible);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Edit(class System.Windows.Forms.CurrencyManager source, int32 rowNum, valuetype System.Drawing.Rectangle bounds, bool readOnly, string displayText, bool cellIsVisible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Edit (source As CurrencyManager, rowNum As Integer, bounds As Rectangle, readOnly As Boolean, displayText As String, cellIsVisible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Edit(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Drawing::Rectangle bounds, bool readOnly, System::String ^ displayText, bool cellIsVisible);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="readOnly" Type="System.Boolean" />
        <Parameter Name="displayText" Type="System.String" />
        <Parameter Name="cellIsVisible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">Oggetto <see cref="T:System.Windows.Forms.CurrencyManager" /> per l'oggetto <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</param>
        <param name="rowNum">Numero di riga in corso di modifica all'interno di questa colonna.</param>
        <param name="bounds">Oggetto <see cref="T:System.Drawing.Rectangle" /> in cui deve essere situato il controllo.</param>
        <param name="readOnly">Valore che indica se la colonna è di sola lettura. <see langword="true" /> se il valore è in sola lettura. In caso contrario, <see langword="false" />.</param>
        <param name="displayText">Testo da visualizzare nel controllo.</param>
        <param name="cellIsVisible">Valore che indica se la cella è visibile. <see langword="true" /> se la cella è visibile; in caso contrario, <see langword="false" />.</param>
        <summary>Quando ne viene eseguito l'override in una classe derivata, prepara una cella per la modifica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, il <xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A> metodo posiziona un controllo sulla griglia nella posizione della cella da modificare.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="protected void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Riprende il disegno delle colonne sospeso chiamando il metodo <see cref="M:System.Windows.Forms.DataGridColumnStyle.BeginUpdate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando vengono apportate numerose modifiche all'aspetto di un <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> controllo (se le modifiche sono negli attributi della colonna o i dati visualizzati dal controllo), è necessario richiamare il <xref:System.Windows.Forms.DataGridColumnStyle.BeginUpdate%2A> metodo per bloccare temporaneamente il disegno del controllo. Di conseguenza distrazioni all'utente e un miglioramento delle prestazioni. Dopo avere apportati tutti gli aggiornamenti, richiamare il <xref:System.Windows.Forms.DataGridColumnStyle.EndUpdate%2A> metodo per riprendere il disegno del controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.BeginUpdate" />
      </Docs>
    </Member>
    <Member MemberName="EnterNullValue">
      <MemberSignature Language="C#" Value="protected internal virtual void EnterNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void EnterNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.EnterNullValue" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub EnterNullValue ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void EnterNullValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Immette un valore <see cref="F:System.DBNull.Value" /> nella colonna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato quando l'utente preme ALT + 0 per consentire a una colonna per immettere il valore null appropriato. Ad esempio, quando viene chiamato su un <xref:System.Windows.Forms.DataGridTextBoxColumn>, appropriata <xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A> valore viene inserito nella colonna.  
  
 Il <xref:System.Windows.Forms.DataGridColumnStyle.EnterNullValue%2A> non dispone di alcun comportamento predefinito. Quando si eredita da <xref:System.Windows.Forms.DataGridColumnStyle>, eseguire l'override per immettere `null` in una colonna.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un possibile sottoporre a override di <xref:System.Windows.Forms.DataGridColumnStyle.EnterNullValue%2A> metodo.  
  
 [!code-vb[Classic DataGridColumnStyle.EnterNullValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.EnterNullValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridColumnStyle.NullText" />
        <altmember cref="E:System.Windows.Forms.DataGridColumnStyle.NullTextChanged" />
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il tipo di carattere della colonna cambia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontHeight">
      <MemberSignature Language="C#" Value="protected int FontHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FontHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.FontHeight" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FontHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int FontHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'altezza del tipo di carattere della colonna.</summary>
        <value>Altezza in pixel del tipo di carattere. Se non è stata impostata un'altezza del tipo di carattere, la proprietà restituisce l'altezza del carattere del controllo <see cref="T:System.Windows.Forms.DataGrid" />; se tale proprietà non è stata impostata, viene restituita l'altezza del tipo di carattere predefinita per il controllo <see cref="T:System.Windows.Forms.DataGrid" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnValueAtRow">
      <MemberSignature Language="C#" Value="protected internal virtual object GetColumnValueAtRow (System.Windows.Forms.CurrencyManager source, int rowNum);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetColumnValueAtRow(class System.Windows.Forms.CurrencyManager source, int32 rowNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.GetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetColumnValueAtRow (source As CurrencyManager, rowNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ GetColumnValueAtRow(System::Windows::Forms::CurrencyManager ^ source, int rowNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Oggetto <see cref="T:System.Windows.Forms.CurrencyManager" /> che contiene i dati.</param>
        <param name="rowNum">Numero di riga che contiene i dati.</param>
        <summary>Ottiene il valore nella riga specificata dall'oggetto <see cref="T:System.Windows.Forms.CurrencyManager" /> specificato.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> che contiene il valore.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'origine dati per la colonna è un <xref:System.Data.DataTable>, utilizzare il <xref:System.Data.DataTable.ColumnChanging> o <xref:System.Data.DataTable.RowChanging> eventi per determinare quando è stato modificato un valore di riga o colonna.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException">Il controllo <see cref="T:System.Data.DataColumn" /> per questo oggetto <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> non è stato ancora impostato.</exception>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetMinimumHeight">
      <MemberSignature Language="C#" Value="protected internal abstract int GetMinimumHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance int32 GetMinimumHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.GetMinimumHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetMinimumHeight () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract int GetMinimumHeight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe derivata, ottiene l'altezza minima di una riga.</summary>
        <returns>Altezza minima di una riga.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente ottiene l'altezza minima della colonna.  
  
 [!code-cpp[Classic DataGridColumnStyle.GetMinimumHeight Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetMinimumHeight Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.GetMinimumHeight Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetMinimumHeight Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.GetMinimumHeight Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetMinimumHeight Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight(System.Drawing.Graphics,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize(System.Drawing.Graphics,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredHeight">
      <MemberSignature Language="C#" Value="protected internal abstract int GetPreferredHeight (System.Drawing.Graphics g, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance int32 GetPreferredHeight(class System.Drawing.Graphics g, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight(System.Drawing.Graphics,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetPreferredHeight (g As Graphics, value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract int GetPreferredHeight(System::Drawing::Graphics ^ g, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="g">Un oggetto <see cref="T:System.Drawing.Graphics" />.</param>
        <param name="value">Valore di un oggetto di cui vogliono conoscere altezza e larghezza su schermo.</param>
        <summary>Quando ne viene eseguito l'override in una classe derivata, ottiene l'altezza usata per il ridimensionamento automatico delle colonne.</summary>
        <returns>Altezza usata per il ridimensionamento automatico di una cella.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize%2A> in genere viene richiamato da un evento per ridimensionare l'altezza di una colonna per una stringa lunga di selezione del mouse.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight%2A> per restituire l'altezza di una cella.  
  
 [!code-cpp[Classic DataGridColumnStyle.GetPreferredHeight Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredHeight Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.GetPreferredHeight Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredHeight Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.GetPreferredHeight Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredHeight Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize(System.Drawing.Graphics,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetMinimumHeight" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="protected internal abstract System.Drawing.Size GetPreferredSize (System.Drawing.Graphics g, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Drawing.Size GetPreferredSize(class System.Drawing.Graphics g, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize(System.Drawing.Graphics,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetPreferredSize (g As Graphics, value As Object) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Drawing::Size GetPreferredSize(System::Drawing::Graphics ^ g, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="g">Un oggetto <see cref="T:System.Drawing.Graphics" />.</param>
        <param name="value">Valore di un oggetto di cui vogliono conoscere altezza e larghezza su schermo.</param>
        <summary>Quando ne viene eseguito l'override in una classe derivata, ottiene la larghezza e l'altezza del valore specificato. La larghezza e l'altezza vengono usate quando l'utente passa all'elemento <see cref="T:System.Windows.Forms.DataGridTableStyle" /> usando <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.Size" /> che contiene le dimensioni della cella.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare <xref:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize%2A> per determinare la larghezza deve essere ridimensionato una colonna, una particolare stringa o un carattere numerico.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize%2A> per restituire le dimensioni ottimali di un valore.  
  
 [!code-cpp[Classic DataGridColumnStyle.GetPreferredSize Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.GetPreferredSize Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredSize Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.GetPreferredSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight(System.Drawing.Graphics,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetMinimumHeight" />
      </Docs>
    </Member>
    <Member MemberName="HeaderAccessibleObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject HeaderAccessibleObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject HeaderAccessibleObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.HeaderAccessibleObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderAccessibleObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ HeaderAccessibleObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Windows.Forms.AccessibleObject" /> per la colonna.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.AccessibleObject" /> per la colonna.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo dell'intestazione della colonna.</summary>
        <value>Stringa visualizzata come intestazione della colonna. Se viene creata da <see cref="T:System.Windows.Forms.DataGrid" />, il valore predefinito sarà il nome dell'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> usato per creare la colonna. Se viene creata dall'utente, il valore predefinito sarà una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A> proprietà viene in genere utilizzata per visualizzare un titolo è diverso dal <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> valore quando il <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> valore non è facilmente comprensibile. Ad esempio, è possibile modificare il <xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A> per "Nome" quando il <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> valore è "FName".  
  
   
  
## Examples  
 Nell'esempio di codice viene impostata la <xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A> un nuovo valore della proprietà.  
  
 [!code-cpp[Classic DataGridColumnStyle.HeaderText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.HeaderText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.HeaderText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.HeaderText Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.HeaderText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.HeaderText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HeaderTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HeaderTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.HeaderTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HeaderTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HeaderTextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro.  
  
 [!code-cpp[DataGridColumnStyle_HeaderTextChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_HeaderTextChanged/CPP/datagridcolumnstyle_headertextchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_HeaderTextChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_HeaderTextChanged/CS/datagridcolumnstyle_headertextchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_HeaderTextChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_HeaderTextChanged/VB/datagridcolumnstyle_headertextchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="protected virtual void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Invalidate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ridisegna la colonna e fa sì che venga inviato un messaggio di disegno al controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.DataGridColumnStyle.Invalidate%2A> viene in genere chiamato dopo che un'operazione di modifica è stata interrotta. Ad esempio, è possibile chiamare il metodo quando si implementa il <xref:System.Windows.Forms.DataGridColumnStyle.Abort%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.Abort(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MappingName">
      <MemberSignature Language="C#" Value="public string MappingName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappingName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.MappingName" />
      <MemberSignature Language="VB.NET" Value="Public Property MappingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MappingName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridColumnStyleMappingNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del membro dati in base al quale eseguire il mapping dello stile di colonna.</summary>
        <value>Nome del membro dati in base al quale eseguire il mapping dello stile di colonna.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il confronto utilizzato per far corrispondere il <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> e i membro dati non tra maiuscole e minuscole.  
  
 Questo <xref:System.Windows.Forms.DataGridColumnStyle> viene utilizzato per il rendering dei dati nel membro dati indicato, ogni volta che l'origine dati corrisponde a quella indicata dal <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> proprietà del <xref:System.Windows.Forms.DataGridTableStyle> che contiene questo stile di colonna.  
  
 Il <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A?displayProperty=nameWithType> proprietà è impostata in genere il <xref:System.Data.DataColumn.ColumnName%2A> di un <xref:System.Data.DataColumn>.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.DataGridTableStyle>e vengono aggiunti due <xref:System.Windows.Forms.DataGridColumnStyle> oggetti per il <xref:System.Windows.Forms.GridColumnStylesCollection>. Il <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> per ogni <xref:System.Windows.Forms.DataGridColumnStyle> è impostato sul <xref:System.Data.DataColumn.ColumnName%2A> di un <xref:System.Data.DataColumn>.  
  
 [!code-cpp[GridTableStylesCollectionExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/GridTableStylesCollectionExamples/CPP/gridtablestylescollectionexamples.cpp#4)]
 [!code-csharp[GridTableStylesCollectionExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/GridTableStylesCollectionExamples/CS/gridtablestylescollectionexamples.cs#4)]
 [!code-vb[GridTableStylesCollectionExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GridTableStylesCollectionExamples/VB/gridtablestylescollectionexamples.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MappingNameChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MappingNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MappingNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.MappingNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MappingNameChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MappingNameChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore dell'oggetto <see cref="P:System.Windows.Forms.DataGridColumnStyle.MappingName" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro.  
  
 [!code-cpp[DataGridColumnStyle_MappingNameChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_MappingNameChanged/CPP/datagridcolumnstyle_mappingnamechanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_MappingNameChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_MappingNameChanged/CS/datagridcolumnstyle_mappingnamechanged.cs#1)]
 [!code-vb[DataGridColumnStyle_MappingNameChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_MappingNameChanged/VB/datagridcolumnstyle_mappingnamechanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NullText">
      <MemberSignature Language="C#" Value="public virtual string NullText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.NullText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo visualizzato quando la colonna contiene un valore <see langword="null" />.</summary>
        <value>Stringa visualizzata in una colonna che contiene un valore <see cref="F:System.DBNull.Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.DataColumn> della classe <xref:System.Data.DataColumn.AllowDBNull%2A> proprietà determina se una colonna può contenere valori null.  
  
   
  
## Examples  
 Nell'esempio di codice viene impostata la <xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A> proprietà a una nuova stringa.  
  
 [!code-cpp[Classic DataGridColumnStyle.NullText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.NullText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.NullText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.NullText Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.NullText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.NullText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
      </Docs>
    </Member>
    <Member MemberName="NullTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler NullTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler NullTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.NullTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NullTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ NullTextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore dell'oggetto <see cref="P:System.Windows.Forms.DataGridColumnStyle.NullText" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro.  
  
 [!code-cpp[DataGridColumnStyle_NullTextChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_NullTextChanged/CPP/datagridcolumnstyle_nulltextchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_NullTextChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_NullTextChanged/CS/datagridcolumnstyle_nulltextchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_NullTextChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_NullTextChanged/VB/datagridcolumnstyle_nulltextchanged.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.EnterNullValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Paint">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe derivata, disegna la colonna in un controllo <see cref="T:System.Windows.Forms.DataGrid" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal abstract void Paint (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.CurrencyManager source, int rowNum);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.CurrencyManager source, int32 rowNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Paint (g As Graphics, bounds As Rectangle, source As CurrencyManager, rowNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Paint(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::CurrencyManager ^ source, int rowNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="g">Oggetto <see cref="T:System.Drawing.Graphics" /> su cui disegnare.</param>
        <param name="bounds">Oggetto <see cref="T:System.Drawing.Rectangle" /> di delimitazione in cui disegnare.</param>
        <param name="source">Oggetto <see cref="T:System.Windows.Forms.CurrencyManager" /> del controllo <see cref="T:System.Windows.Forms.DataGrid" /> a cui appartiene la colonna.</param>
        <param name="rowNum">Numero della riga a cui si fa riferimento nei dati sottostanti.</param>
        <summary>Disegna l'oggetto <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> con gli oggetti <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, <see cref="T:System.Windows.Forms.CurrencyManager" /> e il numero di riga specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal abstract void Paint (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.CurrencyManager source, int rowNum, bool alignToRight);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.CurrencyManager source, int32 rowNum, bool alignToRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Paint (g As Graphics, bounds As Rectangle, source As CurrencyManager, rowNum As Integer, alignToRight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Paint(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::CurrencyManager ^ source, int rowNum, bool alignToRight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="alignToRight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="g">Oggetto <see cref="T:System.Drawing.Graphics" /> su cui disegnare.</param>
        <param name="bounds">Oggetto <see cref="T:System.Drawing.Rectangle" /> di delimitazione in cui disegnare.</param>
        <param name="source">Oggetto <see cref="T:System.Windows.Forms.CurrencyManager" /> del controllo <see cref="T:System.Windows.Forms.DataGrid" /> a cui appartiene la colonna.</param>
        <param name="rowNum">Numero della riga a cui si fa riferimento nei dati sottostanti.</param>
        <param name="alignToRight">Valore che indica se allineare a destra il contenuto della colonna. <see langword="true" /> se il contenuto deve essere allineato a destra. In caso contrario, <see langword="false" />.</param>
        <summary>Quando ne viene eseguito l'override in una classe derivata, disegna un oggetto <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> con gli oggetti <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, <see cref="T:System.Windows.Forms.CurrencyManager" />, il numero di riga e l'allineamento specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal virtual void Paint (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.CurrencyManager source, int rowNum, System.Drawing.Brush backBrush, System.Drawing.Brush foreBrush, bool alignToRight);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.CurrencyManager source, int32 rowNum, class System.Drawing.Brush backBrush, class System.Drawing.Brush foreBrush, bool alignToRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Paint (g As Graphics, bounds As Rectangle, source As CurrencyManager, rowNum As Integer, backBrush As Brush, foreBrush As Brush, alignToRight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Paint(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Drawing::Brush ^ backBrush, System::Drawing::Brush ^ foreBrush, bool alignToRight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="backBrush" Type="System.Drawing.Brush" />
        <Parameter Name="foreBrush" Type="System.Drawing.Brush" />
        <Parameter Name="alignToRight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="g">Oggetto <see cref="T:System.Drawing.Graphics" /> su cui disegnare.</param>
        <param name="bounds">Oggetto <see cref="T:System.Drawing.Rectangle" /> di delimitazione in cui disegnare.</param>
        <param name="source">Oggetto <see cref="T:System.Windows.Forms.CurrencyManager" /> del controllo <see cref="T:System.Windows.Forms.DataGrid" /> a cui appartiene la colonna.</param>
        <param name="rowNum">Numero della riga a cui si fa riferimento nella tabella di dati sottostanti.</param>
        <param name="backBrush">Oggetto <see cref="T:System.Drawing.Brush" /> usato per disegnare il colore di sfondo.</param>
        <param name="foreBrush">Oggetto <see cref="T:System.Drawing.Color" /> usato per disegnare il colore primo piano.</param>
        <param name="alignToRight">Valore che indica se allineare a destra il contenuto. <see langword="true" /> se il contenuto viene allineato a destra. In caso contrario, <see langword="false" />.</param>
        <summary>Disegna un oggetto <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> con gli oggetti <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, <see cref="T:System.Windows.Forms.CurrencyManager" />, il numero di riga, il colore di sfondo, il colore primo piano e l'allineamento specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PropertyDescriptor As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ PropertyDescriptor { System::ComponentModel::PropertyDescriptor ^ get(); void set(System::ComponentModel::PropertyDescriptor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che determina gli attributi dei dati visualizzati dall'oggetto <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</summary>
        <value>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che contiene i dati sugli attributi della colonna.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.PropertyDescriptor> per una colonna viene impostata mediante il <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> metodo il <xref:System.Windows.Forms.BindingManagerBase>. Vedere il <xref:System.Windows.Forms.DataGridColumnStyle.%23ctor%2A> costruttore per un esempio di utilizzo di <xref:System.ComponentModel.PropertyDescriptor> per creare un nuovo <xref:System.Windows.Forms.DataGridColumnStyle>.  
  
   
  
## Examples  
 Nell'esempio di codice vengono ottenuti i <xref:System.ComponentModel.PropertyDescriptor> di una colonna in un <xref:System.Windows.Forms.GridColumnStylesCollection>. Nel secondo esempio viene creato un nuovo <xref:System.Windows.Forms.DataGridColumnStyle> con un <xref:System.ComponentModel.PropertyDescriptor>.  
  
 [!code-cpp[Classic DataGridColumnStyle.PropertyDescriptor Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.PropertyDescriptor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.PropertyDescriptor Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.PropertyDescriptor Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.PropertyDescriptor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.PropertyDescriptor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PropertyDescriptorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PropertyDescriptorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyDescriptorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PropertyDescriptorChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptor" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro.  
  
 [!code-cpp[DataGridColumnStyle_PropertyDescriptorChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_PropertyDescriptorChanged/CPP/propertydescriptorchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_PropertyDescriptorChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_PropertyDescriptorChanged/CS/propertydescriptorchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_PropertyDescriptorChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_PropertyDescriptorChanged/VB/propertydescriptorchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se i dati nella colonna possono essere modificati.</summary>
        <value>
          <see langword="true" /> se i dati non possono essere modificati; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare una colonna di sola lettura se contiene una chiave primaria o se il relativo valore viene generato automaticamente (come quando il <xref:System.Data.DataColumn> dell'oggetto <xref:System.Data.DataColumn.AutoIncrement%2A> è impostata su `true`).  
  
 Proprietà di sola lettura simili presenti in altre classi, ognuna delle quali consente un controllo maggiore sull'accesso ai dati. Ad esempio, il <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> è possibile impostare utilizzando la modalità di sola lettura di controllo relativo <xref:System.Windows.Forms.DataGrid.ReadOnly%2A> proprietà; il <xref:System.Windows.Forms.DataGridTableStyle> dispone anche di un <xref:System.Windows.Forms.DataGridTableStyle.ReadOnly%2A> proprietà e <xref:System.Data.DataColumn> classe dispone di un <xref:System.Data.DataColumn.ReadOnly%2A> proprietà che consentono di limitare gli aggiornamenti dei dati.  
  
   
  
## Examples  
 Il codice seguente viene impostata la <xref:System.Windows.Forms.DataGridColumnStyle> dell'oggetto <xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A> lo stesso valore di proprietà di <xref:System.Data.DataColumn> dell'oggetto <xref:System.Data.DataColumn.ReadOnly%2A> proprietà.  
  
 [!code-cpp[Classic DataGridColumnStyle.ReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.ReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.DataGridColumnStyle.ReadOnly" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro.  
  
 [!code-cpp[DataGridColumnStyle_ReadOnlyChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_ReadOnlyChanged/CPP/datagridcolumnstyle_readonlychanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_ReadOnlyChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_ReadOnlyChanged/CS/datagridcolumnstyle_readonlychanged.cs#1)]
 [!code-vb[DataGridColumnStyle_ReadOnlyChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_ReadOnlyChanged/VB/datagridcolumnstyle_readonlychanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHostedControl">
      <MemberSignature Language="C#" Value="protected internal virtual void ReleaseHostedControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ReleaseHostedControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.ReleaseHostedControl" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ReleaseHostedControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ReleaseHostedControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente la liberazione di risorse della colonna quando il controllo in essa contenuto non è più necessario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si crea una classe che deriva da <xref:System.Windows.Forms.DataGridColumnStyle>, spesso si utilizzerà la classe derivata per ospitare un controllo che consente di modificare i dati. È necessario eseguire l'override di <xref:System.Windows.Forms.DataGridColumnStyle.ReleaseHostedControl%2A> metodo per rilasciare i riferimenti al controllo per liberare risorse di sistema. Ad esempio, il <xref:System.Windows.Forms.DataGridTextBoxColumn> classe derivata utilizza questo metodo per rilasciare il riferimento al contenuto <xref:System.Windows.Forms.DataGridTextBox>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetHeaderText">
      <MemberSignature Language="C#" Value="public void ResetHeaderText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetHeaderText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.ResetHeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetHeaderText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetHeaderText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reimposta la proprietà <see cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" /> sul valore predefinito <see langword="null" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo in genere se si crea una finestra di progettazione per il <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>, o la creazione di controllo personalizzato che includa il <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro.  
  
 [!code-cpp[DataGridColumnStyle_ResetHeaderText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_ResetHeaderText/CPP/datagridcolumnstyle_resetheadertext.cpp#1)]
 [!code-csharp[DataGridColumnStyle_ResetHeaderText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_ResetHeaderText/CS/datagridcolumnstyle_resetheadertext.cs#1)]
 [!code-vb[DataGridColumnStyle_ResetHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_ResetHeaderText/VB/datagridcolumnstyle_resetheadertext.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnValueAtRow">
      <MemberSignature Language="C#" Value="protected internal virtual void SetColumnValueAtRow (System.Windows.Forms.CurrencyManager source, int rowNum, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetColumnValueAtRow(class System.Windows.Forms.CurrencyManager source, int32 rowNum, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetColumnValueAtRow (source As CurrencyManager, rowNum As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetColumnValueAtRow(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Oggetto <see cref="T:System.Windows.Forms.CurrencyManager" /> associato all'oggetto <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</param>
        <param name="rowNum">Numero della riga.</param>
        <param name="value">Il valore da impostare.</param>
        <summary>Imposta il valore in una riga specificata con il valore di un oggetto <see cref="T:System.Windows.Forms.CurrencyManager" />. specificato.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">La proprietà <see cref="T:System.Windows.Forms.CurrencyManager" /> dell'oggetto <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> non corrisponde a <paramref name="rowNum" />.</exception>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDataGrid">
      <MemberSignature Language="C#" Value="protected virtual void SetDataGrid (System.Windows.Forms.DataGrid value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDataGrid(class System.Windows.Forms.DataGrid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.SetDataGrid(System.Windows.Forms.DataGrid)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDataGrid (value As DataGrid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDataGrid(System::Windows::Forms::DataGrid ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.DataGrid" />
      </Parameters>
      <Docs>
        <param name="value">Controllo <see cref="T:System.Windows.Forms.DataGrid" /> a cui appartiene la colonna.</param>
        <summary>Imposta il controllo <see cref="T:System.Windows.Forms.DataGrid" /> a cui appartiene la colonna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, è consigliabile utilizzare il <xref:System.Windows.Forms.DataGridColumnStyle.SetDataGridInColumn%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName="SetDataGridInColumn">
      <MemberSignature Language="C#" Value="protected virtual void SetDataGridInColumn (System.Windows.Forms.DataGrid value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDataGridInColumn(class System.Windows.Forms.DataGrid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.SetDataGridInColumn(System.Windows.Forms.DataGrid)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDataGridInColumn (value As DataGrid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDataGridInColumn(System::Windows::Forms::DataGrid ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.DataGrid" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto <see cref="T:System.Windows.Forms.DataGrid" />.</param>
        <summary>Imposta il controllo <see cref="T:System.Windows.Forms.DataGrid" /> per la colonna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere questo metodo viene sottoposto a override dalle classi derivate per eseguire un'elaborazione speciale quando il <xref:System.Windows.Forms.DataGridColumnStyle> viene aggiunto a <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>. Ad esempio, il <xref:System.Windows.Forms.DataGridTextBoxColumn> Usa questo metodo per aggiungere il <xref:System.Windows.Forms.DataGridTextBox> come elemento figlio il <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing">
      <MemberSignature Language="C#" Value="void IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing (System.Windows.Forms.Control editingControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing(class System.Windows.Forms.Control editingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.System#Windows#Forms#IDataGridColumnStyleEditingNotificationService#ColumnStartedEditing(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Sub ColumnStartedEditing (editingControl As Control) Implements IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing(System::Windows::Forms::Control ^ editingControl) = System::Windows::Forms::IDataGridColumnStyleEditingNotificationService::ColumnStartedEditing;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing(System.Windows.Forms.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="editingControl">L'oggetto <see cref="T:System.Windows.Forms.Control" /> con cui si sta modificando la colonna.</param>
        <summary>Informa il controllo <see cref="T:System.Windows.Forms.DataGrid" /> che l'utente ha iniziato a modificare la colonna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene chiamato, il <xref:System.Windows.Forms.DataGridColumnStyle.ColumnStartedEditing%2A> metodo consente di <xref:System.Windows.Forms.DataGrid> controllo per visualizzare una matita nell'intestazione di riga che indica la riga viene modificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUI">
      <MemberSignature Language="C#" Value="protected internal virtual void UpdateUI (System.Windows.Forms.CurrencyManager source, int rowNum, string displayText);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void UpdateUI(class System.Windows.Forms.CurrencyManager source, int32 rowNum, string displayText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.UpdateUI(System.Windows.Forms.CurrencyManager,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub UpdateUI (source As CurrencyManager, rowNum As Integer, displayText As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void UpdateUI(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::String ^ displayText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="displayText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Oggetto <see cref="T:System.Windows.Forms.CurrencyManager" /> associato all'oggetto <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</param>
        <param name="rowNum">Riga da aggiornare.</param>
        <param name="displayText">Nuovo valore.</param>
        <summary>Aggiorna il valore di una riga specificata con il testo dato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Windows.Forms.DataGridColumnStyle.UpdateUI%2A> per impostare un nuovo valore.  
  
 [!code-cpp[Classic DataGridColumnStyle.UpdateUI Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.UpdateUI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.UpdateUI Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.UpdateUI Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.UpdateUI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.UpdateUI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Width { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la larghezza della colonna.</summary>
        <value>Larghezza della colonna in pixel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente imposta la larghezza di un <xref:System.Windows.Forms.DataGridColumnStyle> su un nuovo valore.  
  
 [!code-vb[Classic DataGridColumnStyle.Width Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.Width Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridColumnStyle.WidthChanged" />
      </Docs>
    </Member>
    <Member MemberName="WidthChanged">
      <MemberSignature Language="C#" Value="public event EventHandler WidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler WidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.WidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WidthChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ WidthChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.DataGridColumnStyle.Width" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro.  
  
 [!code-cpp[DataGridColumnStyle_WidthChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_WidthChanged/CPP/datagridcolumnstyle_widthchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_WidthChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_WidthChanged/CS/datagridcolumnstyle_widthchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_WidthChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_WidthChanged/VB/datagridcolumnstyle_widthchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>