<Type Name="LabelEditEventArgs" FullName="System.Windows.Forms.LabelEditEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ac0c1a4d06a43e8a9959887a2b0b0779f1ffa38d" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39978962" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LabelEditEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LabelEditEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i dati per gli eventi <see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" /> e <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Forms.LabelEditEventArgs> specifica l'indice e la didascalia di un <xref:System.Windows.Forms.ListViewItem> e dalla didascalia dopo che è stato modificato dall'utente. Questa classe fornisce inoltre un <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> proprietà. È possibile usare questa proprietà in un <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> gestore eventi per impedire all'utente di modificare l'etichetta. È anche possibile usare in un <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> gestore dell'evento per annullare le modifiche, restituendo l'etichetta per il valore originale. Ciò è utile quando si desidera convalidare l'input dell'utente prima del commit della modifica.  
  
> [!NOTE]
>  Poiché il <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> evento ha luogo prima della modifica dell'etichetta viene eseguito il commit, la chiamata di <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> metodo in un gestore per questo evento verrà ordinare l'elemento con il valore originale.  
  
   
  
## Examples  
 Il codice seguente viene mostrato come gestire il <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> evento e l'uso di <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> e <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> proprietà. Per eseguire l'esempio, incollare il codice seguente in un form contenente un <xref:System.Windows.Forms.ListView> controllo denominato `ListView1` e popolato con almeno 3 elementi. Verificare che tutti gli eventi sono associati i relativi metodi di gestione degli eventi.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.LabelEditEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelEditEventArgs (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LabelEditEventArgs.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LabelEditEventArgs(int item);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LabelEditEventArgs : int -&gt; System.Windows.Forms.LabelEditEventArgs" Usage="new System.Windows.Forms.LabelEditEventArgs item" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">L'indice in base zero di <see cref="T:System.Windows.Forms.ListViewItem" /> che contiene l’etichetta da modificare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> con l'indice specificato in corrispondenza dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> da modificare.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questo costruttore quando si genera il <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> o <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> eventi per specificare un elemento di elenco specifico in fase di esecuzione il <xref:System.Windows.Forms.ListView> da modificare.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelEditEventArgs (int item, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 item, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LabelEditEventArgs.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As Integer, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LabelEditEventArgs(int item, System::String ^ label);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LabelEditEventArgs : int * string -&gt; System.Windows.Forms.LabelEditEventArgs" Usage="new System.Windows.Forms.LabelEditEventArgs (item, label)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">L'indice in base zero di <see cref="T:System.Windows.Forms.ListViewItem" /> che contiene l’etichetta da modificare.</param>
        <param name="label">Il nuovo testo assegnato all'etichetta dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> con l'indice specificato in corrispondenza dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> da modificare e il nuovo testo dell'etichetta dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questo costruttore quando si genera il <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> o <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> eventi in fase di esecuzione per specificare una voce di elenco nel <xref:System.Windows.Forms.ListView> da modificare. Il costruttore consente anche di specificare il nuovo testo associato all'etichetta del <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : bool with get, set" Usage="System.Windows.Forms.LabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se devono essere annullate le modifiche apportate all'etichetta dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem" /></summary>
        <value>
          <see langword="true" /> se l'operazione di modifica dell'etichetta per l'oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> deve essere annullata; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questa proprietà per annullare le modifiche apportate all'etichetta di un <xref:System.Windows.Forms.ListViewItem> e ripristinarne il testo originale. Usare questa proprietà per impedire che la didascalia di un elemento viene modificato un valore che non soddisfa i requisiti dell'applicazione.  
  
   
  
## Examples  
 Il codice seguente viene mostrato come gestire il <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> evento e l'uso di <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> e <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> proprietà. Per eseguire l'esempio, incollare il codice seguente in un form contenente un controllo ListView denominata ListView1 e popolato con almeno 3 elementi. Verificare che tutti gli eventi sono associati i relativi metodi di gestione degli eventi.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Item { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : int" Usage="System.Windows.Forms.LabelEditEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'indice in base zero dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> che contiene l'etichetta da modificare.</summary>
        <value>L’indice in base zero dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Il codice seguente viene mostrato come gestire il <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> evento e l'uso di <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> e <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> proprietà. Per eseguire l'esempio, incollare il codice seguente in un form contenente un controllo ListView denominata ListView1 e popolato con almeno 3 elementi. Verificare che tutti gli eventi sono associati i relativi metodi di gestione degli eventi.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Windows.Forms.LabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nuovo testo assegnato all'etichetta dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value>Nuovo testo associato all'oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> oppure <see langword="null" /> se il testo non è stato modificato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore dell'evento segnala l'occorrenza del <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> evento. Questo report consente di capire quando l'evento si verifica e può agevolare il debug. Per creare report su più eventi o sugli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di tipo <xref:System.Windows.Forms.ListView> denominato `ListView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#463](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#463)]
 [!code-vb[System.Windows.Forms.EventExamples#463](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#463)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>