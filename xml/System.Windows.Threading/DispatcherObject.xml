<Type Name="DispatcherObject" FullName="System.Windows.Threading.DispatcherObject">
  <TypeSignature Language="C#" Value="public abstract class DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DispatcherObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherObject abstract" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f4fb8-101">Rappresenta un oggetto associato a un oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-101">Represents an object that is associated with a <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4fb8-102">Solo il thread che il <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> è stato creato sarà accessibile il <xref:System.Windows.Threading.DispatcherObject> direttamente.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-102">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="f4fb8-103">Per accedere a un <xref:System.Windows.Threading.DispatcherObject> da un thread diverso da quello del <xref:System.Windows.Threading.DispatcherObject> è stato creato, chiamare <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> sul <xref:System.Windows.Threading.Dispatcher> il <xref:System.Windows.Threading.DispatcherObject> è associato.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-103">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 <span data-ttu-id="f4fb8-104">Le sottoclassi di <xref:System.Windows.Threading.DispatcherObject> che è necessario per applicare la thread safety possibile farlo chiamando <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> su tutti i metodi pubblici.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-104">Subclasses of <xref:System.Windows.Threading.DispatcherObject> that need to enforce thread safety can do so by calling <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> on all public methods.</span></span>  <span data-ttu-id="f4fb8-105">In questo modo si garantisce il thread chiamante è il thread che il <xref:System.Windows.Threading.DispatcherObject> è stato creato.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-105">This guarantees the calling thread is the thread that the <xref:System.Windows.Threading.DispatcherObject> was created on.</span></span>  
  
 <span data-ttu-id="f4fb8-106">Oggetto <xref:System.Windows.Threading.DispatcherObject> non è possibile creare in modo indipendente; ovvero, vengono protetti tutti i costruttori.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-106">A <xref:System.Windows.Threading.DispatcherObject> cannot be independently instantiated; that is, all constructors are protected.</span></span>  
  
 <span data-ttu-id="f4fb8-107">Gli oggetti che derivano da <xref:System.Windows.Threading.DispatcherObject> presentano affinità di thread.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-107">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="f4fb8-108">Gli oggetti che derivano da <xref:System.Windows.Freezable> sono a thread libero quando sono bloccati.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-108">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="f4fb8-109">Per altre informazioni, vedere [Cenni preliminari sugli oggetti Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="f4fb8-109">For more information, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f4fb8-110">Qualsiasi pubblico <see langword="static" /> i membri di questo tipo sono thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-110">Any public <see langword="static" /> members of this type are thread safe.</span></span> <span data-ttu-id="f4fb8-111">I membri di istanza non sono garantiti come thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-111">Any instance members are not guaranteed to be thread safe.</span></span>  
  
 <span data-ttu-id="f4fb8-112">Questo oggetto sono accessibili solo dal thread in cui è stato creato.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-112">This object can be accessed only from the thread on which it was created.</span></span> <span data-ttu-id="f4fb8-113">I tentativi di accesso da altri thread genereranno un <see cref="T:System.InvalidOperationException" />.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-113">Attempts to access it from other threads will throw an <see cref="T:System.InvalidOperationException" />.</span></span> <span data-ttu-id="f4fb8-114"><see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> o <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> forniscono il supporto per il marshalling al thread corretto.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-114"><see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> or <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> provide support for marshalling work to the correct thread.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DispatcherObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DispatcherObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4fb8-115">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherObject" />.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherObject" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4fb8-116">Determina se il thread chiamante ha accesso a <see cref="T:System.Windows.Threading.DispatcherObject" />.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-116">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span></span></summary>
        <returns>
          <span data-ttu-id="f4fb8-117"><see langword="true" /> se il thread chiamate ha accesso a questo oggetto; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-117"><see langword="true" /> if the calling thread has access to this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4fb8-118">Solo il thread di <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> è stato creato sarà accessibile il <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-118">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="f4fb8-119">Qualsiasi thread può verificare se ha accesso a <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-119">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="f4fb8-120">La differenza tra <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> e <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> che <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> restituisce un valore booleano che specifica se il thread chiamante dispone dell'accesso a questo <xref:System.Windows.Threading.DispatcherObject> e <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> genera un'eccezione se il thread chiamante non dispone di accesso per il questo <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-120">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="f4fb8-121">Chiamare questo metodo è identica alla chiamata al metodo <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> sull'oggetto associato <xref:System.Windows.Threading.Dispatcher> oggetto.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-121">Calling this method is identical to calling <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> on the associated <xref:System.Windows.Threading.Dispatcher> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4fb8-122">L'esempio seguente usa <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> per determinare se un thread ha accesso al thread che un <xref:System.Windows.Controls.Button> è stato creato.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-122">The following example uses <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="f4fb8-123">Il <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> metodo il <xref:System.Windows.Controls.Button> viene chiamato per verificare l'accesso al thread.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-123">The <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> method on the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="f4fb8-124">Se il thread chiamante dispone dell'accesso, il <xref:System.Windows.Controls.Button> viene aggiornato per l'accesso solo ai membri del <xref:System.Windows.Controls.Button>; in caso contrario, un delegato che accetta un <xref:System.Windows.Controls.Button> come argomento, viene inserito nel <xref:System.Windows.Threading.Dispatcher> del <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-124">If the calling thread has access, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is posted onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccesscheckaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccesscheckaccess)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4fb8-125">Ottiene l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato a <see cref="T:System.Windows.Threading.DispatcherObject" />.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-125">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> this <see cref="T:System.Windows.Threading.DispatcherObject" /> is associated with.</span></span></summary>
        <value><span data-ttu-id="f4fb8-126">Dispatcher.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-126">The dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4fb8-127">Solo il thread che il <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> è stato creato sarà accessibile il <xref:System.Windows.Threading.DispatcherObject> direttamente.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-127">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="f4fb8-128">Per accedere a un <xref:System.Windows.Threading.DispatcherObject> da un thread diverso da quello del <xref:System.Windows.Threading.DispatcherObject> è stato creato, chiamare <xref:System.Windows.Threading.Dispatcher.Invoke%2A> e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> sul <xref:System.Windows.Threading.Dispatcher> il <xref:System.Windows.Threading.DispatcherObject> è associato.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-128">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4fb8-129">Impone che il thread chiamante abbia accesso a <see cref="T:System.Windows.Threading.DispatcherObject" />.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-129">Enforces that the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4fb8-130">Solo il thread di <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> è stato creato sarà accessibile il <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-130">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="f4fb8-131">Qualsiasi thread può verificare se ha accesso a <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-131">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="f4fb8-132">La differenza tra <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> e <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> che <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> restituisce un valore booleano che specifica se il thread chiamante dispone dell'accesso a questo <xref:System.Windows.Threading.DispatcherObject> e <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> genera un'eccezione se il thread chiamante non dispone di accesso per il questo <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-132">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4fb8-133">L'esempio seguente usa <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> per determinare se un thread ha accesso al thread che un <xref:System.Windows.Controls.Button> è stato creato.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-133">The following example uses <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="f4fb8-134">Se il thread chiamante non dispone di accesso, un <xref:System.InvalidOperationException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-134">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccessverifyaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f4fb8-135">Il thread chiamante non ha accesso a <see cref="T:System.Windows.Threading.DispatcherObject" />.</span><span class="sxs-lookup"><span data-stu-id="f4fb8-135">the calling thread does not have access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>