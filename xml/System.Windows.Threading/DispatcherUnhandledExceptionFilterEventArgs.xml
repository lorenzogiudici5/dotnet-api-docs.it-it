<Type Name="DispatcherUnhandledExceptionFilterEventArgs" FullName="System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8fdc3ab9665f9bc951aeb5c354d7793e5f37adf6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37551240" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DispatcherUnhandledExceptionFilterEventArgs : System.Windows.Threading.DispatcherEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DispatcherUnhandledExceptionFilterEventArgs extends System.Windows.Threading.DispatcherEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DispatcherUnhandledExceptionFilterEventArgs&#xA;Inherits DispatcherEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherUnhandledExceptionFilterEventArgs sealed : System::Windows::Threading::DispatcherEventArgs" />
  <TypeSignature Language="F#" Value="type DispatcherUnhandledExceptionFilterEventArgs = class&#xA;    inherit DispatcherEventArgs" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i dati per l'evento <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> evento si verifica quando il codice in esecuzione tramite il <xref:System.Windows.Threading.Dispatcher> genera un'eccezione che non è gestita.  
  
 Il <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> eventi fornisce un mezzo per non generare la <xref:System.Windows.Threading.Dispatcher.UnhandledException> evento.  Il <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> evento viene generato prima di tutto e, se <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> nel <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> è impostata su `false`, il <xref:System.Windows.Threading.Dispatcher.UnhandledException> evento non verrà generato.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
    <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
  <Members>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Genera l'eccezione generata quando il codice è stato eseguito tramite il dispatcher.</summary>
        <value>Eccezione.</value>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      </Docs>
    </Member>
    <Member MemberName="RequestCatch">
      <MemberSignature Language="C#" Value="public bool RequestCatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequestCatch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestCatch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequestCatch { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequestCatch : bool with get, set" Usage="System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta se l'eccezione deve essere rilevata e i gestori eventi devono essere chiamati.</summary>
        <value>
          <see langword="true" /> se gli eventi <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> devono essere generati; in caso contrario, <see langword="false" />.  Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> eventi fornisce un mezzo per non generare la <xref:System.Windows.Threading.Dispatcher.UnhandledException> evento.  Il <xref:System.Windows.Threading.Dispatcher.UnhandledException> viene generato prima di tutto e, se <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> nel <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> è impostata su `false`, il <xref:System.Windows.Threading.Dispatcher.UnhandledException> evento non verrà generato.  
  
 Un gestore precedente nell'evento multicast potrebbe avere già impostare questa proprietà `false`, che indica che l'eccezione non sarà rilevata.  Il comportamento di "catch non" sostituirà tutti gli altri utenti perché probabilmente significa che uno scenario di debug.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      </Docs>
    </Member>
  </Members>
</Type>