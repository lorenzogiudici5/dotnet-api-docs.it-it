<Type Name="DispatcherTimer" FullName="System.Windows.Threading.DispatcherTimer">
  <TypeSignature Language="C#" Value="public class DispatcherTimer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DispatcherTimer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherTimer" />
  <TypeSignature Language="VB.NET" Value="Public Class DispatcherTimer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherTimer" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2e220-101">Timer integrato nella coda <see cref="T:System.Windows.Threading.Dispatcher" /> che viene elaborato in un intervallo di tempo specificato e con una priorità specificata.</span><span class="sxs-lookup"><span data-stu-id="2e220-101">A timer that is integrated into the <see cref="T:System.Windows.Threading.Dispatcher" /> queue which is processed at a specified interval of time and at a specified priority.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e220-102">Il <xref:System.Windows.Threading.DispatcherTimer> viene rivalutata nella parte superiore di ogni <xref:System.Windows.Threading.Dispatcher> ciclo.</span><span class="sxs-lookup"><span data-stu-id="2e220-102">The <xref:System.Windows.Threading.DispatcherTimer> is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.</span></span>  
  
 <span data-ttu-id="2e220-103">Non è necessariamente timer eseguiti esattamente quando si verifica l'intervallo di tempo, ma sono sempre non eseguito prima che si verifica l'intervallo di tempo.</span><span class="sxs-lookup"><span data-stu-id="2e220-103">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="2e220-104">In questo modo <xref:System.Windows.Threading.DispatcherTimer> le operazioni vengono inserite nel <xref:System.Windows.Threading.Dispatcher> coda come le altre operazioni.</span><span class="sxs-lookup"><span data-stu-id="2e220-104">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="2e220-105">Quando il <xref:System.Windows.Threading.DispatcherTimer> viene eseguita l'operazione è dipendente da altri processi in coda e le priorità.</span><span class="sxs-lookup"><span data-stu-id="2e220-105">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
 <span data-ttu-id="2e220-106">Se un <xref:System.Timers.Timer?displayProperty=nameWithType> viene utilizzata in un [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] applicazione, è importante notare che il <xref:System.Timers.Timer?displayProperty=nameWithType> viene eseguito in un altro thread il [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.</span><span class="sxs-lookup"><span data-stu-id="2e220-106">If a <xref:System.Timers.Timer?displayProperty=nameWithType> is used in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=nameWithType> runs on a different thread then the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="2e220-107">Per accedere a oggetti nel [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, è necessario inserire l'operazione nel <xref:System.Windows.Threading.Dispatcher> del [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread utilizzando <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2e220-107">In order to access objects on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="2e220-108">Motivi per utilizzare un <xref:System.Windows.Threading.DispatcherTimer> anziché un <xref:System.Timers.Timer?displayProperty=nameWithType> che sono il <xref:System.Windows.Threading.DispatcherTimer> viene eseguito sullo stesso thread di <xref:System.Windows.Threading.Dispatcher> e un <xref:System.Windows.Threading.DispatcherPriority> può essere impostata sul <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="2e220-108">Reasons for using a <xref:System.Windows.Threading.DispatcherTimer> opposed to a <xref:System.Timers.Timer?displayProperty=nameWithType> are that the <xref:System.Windows.Threading.DispatcherTimer> runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  
  
 <span data-ttu-id="2e220-109">Oggetto <xref:System.Windows.Threading.DispatcherTimer> verrà mantenere attivo un oggetto ogni volta che il timer sono associati i metodi dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="2e220-109">A <xref:System.Windows.Threading.DispatcherTimer> will keep an object alive whenever the object's methods are bound to the timer.</span></span>  
  
## Examples  
 <span data-ttu-id="2e220-110">Nell'esempio seguente viene creato un <xref:System.Windows.Threading.DispatcherTimer> che aggiorna il contenuto di un <xref:System.Windows.Controls.Label> e chiama il <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> metodo il <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="2e220-110">The following example creates a <xref:System.Windows.Threading.DispatcherTimer> that updates the contents of a <xref:System.Windows.Controls.Label> and calls the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="2e220-111">Oggetto <xref:System.Windows.Threading.DispatcherTimer> oggetto denominato `dispatcherTimer` viene creato.</span><span class="sxs-lookup"><span data-stu-id="2e220-111">A <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="2e220-112">Il gestore dell'evento `dispatcherTimer_Tick` viene aggiunto per il <xref:System.Windows.Threading.DispatcherTimer.Tick> evento di `dispatcherTimer`.</span><span class="sxs-lookup"><span data-stu-id="2e220-112">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event of `dispatcherTimer`.</span></span>  <span data-ttu-id="2e220-113">Il <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> è impostato su 1 secondo tramite un <xref:System.Windows.Duration.TimeSpan%2A> oggetto e il timer è stato avviato.</span><span class="sxs-lookup"><span data-stu-id="2e220-113">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object, and the timer is started.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 <span data-ttu-id="2e220-114">Il <xref:System.Windows.Threading.DispatcherTimer.Tick> gestore eventi aggiorna un <xref:System.Windows.Controls.Label> che visualizza il secondo corrente, e chiama <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> sul <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="2e220-114">The <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2e220-115">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="2e220-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e220-116">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="2e220-116">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e220-117"><xref:System.Windows.Threading.DispatcherTimer> viene eseguito sul <xref:System.Windows.Threading.Dispatcher> del thread corrente <xref:System.Windows.Threading.DispatcherPriority.Background> priorità.</span><span class="sxs-lookup"><span data-stu-id="2e220-117"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority.</span></span>  <span data-ttu-id="2e220-118">Per specificare un altro <xref:System.Windows.Threading.Dispatcher>, utilizzare il costruttore seguente: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2e220-118">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="2e220-119">Priorità con cui richiamare il timer.</span><span class="sxs-lookup"><span data-stu-id="2e220-119">The priority at which to invoke the timer.</span></span></param>
        <summary><span data-ttu-id="2e220-120">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> che elabora gli eventi del timer con la priorità specificata.</span><span class="sxs-lookup"><span data-stu-id="2e220-120">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which processes timer events at the specified priority.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e220-121"><xref:System.Windows.Threading.DispatcherTimer> viene eseguito sul <xref:System.Windows.Threading.Dispatcher> del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="2e220-121"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.</span></span>  <span data-ttu-id="2e220-122">Per specificare un altro <xref:System.Windows.Threading.Dispatcher>, utilizzare il costruttore seguente: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span><span class="sxs-lookup"><span data-stu-id="2e220-122">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="2e220-123">Priorità con cui richiamare il timer.</span><span class="sxs-lookup"><span data-stu-id="2e220-123">The priority at which to invoke the timer.</span></span></param>
        <param name="dispatcher"><span data-ttu-id="2e220-124">Dispatcher cui è associato il timer.</span><span class="sxs-lookup"><span data-stu-id="2e220-124">The dispatcher the timer is associated with.</span></span></param>
        <summary><span data-ttu-id="2e220-125">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> che viene eseguita sull'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> specificato con la priorità indicata.</span><span class="sxs-lookup"><span data-stu-id="2e220-125">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which runs on the specified <see cref="T:System.Windows.Threading.Dispatcher" /> at the specified priority.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e220-126"><paramref name="dispatcher" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e220-126"><paramref name="dispatcher" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (TimeSpan interval, System.Windows.Threading.DispatcherPriority priority, EventHandler callback, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan interval, valuetype System.Windows.Threading.DispatcherPriority priority, class System.EventHandler callback, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(TimeSpan interval, System::Windows::Threading::DispatcherPriority priority, EventHandler ^ callback, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="callback" Type="System.EventHandler" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="2e220-127">Periodo tra unità di tempo.</span><span class="sxs-lookup"><span data-stu-id="2e220-127">The period of time between ticks.</span></span></param>
        <param name="priority"><span data-ttu-id="2e220-128">Priorità con cui richiamare il timer.</span><span class="sxs-lookup"><span data-stu-id="2e220-128">The priority at which to invoke the timer.</span></span></param>
        <param name="callback"><span data-ttu-id="2e220-129">Gestore eventi da chiamare quando si verifica l'evento <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" />.</span><span class="sxs-lookup"><span data-stu-id="2e220-129">The event handler to call when the <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> event occurs.</span></span></param>
        <param name="dispatcher"><span data-ttu-id="2e220-130">Dispatcher cui è associato il timer.</span><span class="sxs-lookup"><span data-stu-id="2e220-130">The dispatcher the timer is associated with.</span></span></param>
        <summary><span data-ttu-id="2e220-131">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> che utilizza l'intervallo di tempo, la priorità, il gestore eventi e l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> specificati.</span><span class="sxs-lookup"><span data-stu-id="2e220-131">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which uses the specified time interval, priority, event handler, and <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e220-132"><paramref name="callback" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e220-132"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2e220-133"><paramref name="interval" /> è minore di 0 o maggiore di <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="2e220-133"><paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e220-134">Ottiene l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato a questo oggetto <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="2e220-134">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> associated with this <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <value><span data-ttu-id="2e220-135">Dispatcher.</span><span class="sxs-lookup"><span data-stu-id="2e220-135">The dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e220-136">Il <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> proprietà è determinata al momento della creazione del <xref:System.Windows.Threading.DispatcherTimer> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2e220-136">The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.</span></span>  <span data-ttu-id="2e220-137">Il <xref:System.Windows.Threading.Dispatcher> è impostata su corrente <xref:System.Windows.Threading.Dispatcher> al momento della creazione, a meno che un altro <xref:System.Windows.Threading.Dispatcher> specificato.</span><span class="sxs-lookup"><span data-stu-id="2e220-137">The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public TimeSpan Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Interval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e220-138">Ottiene o imposta il periodo tra unità di tempo del timer.</span><span class="sxs-lookup"><span data-stu-id="2e220-138">Gets or sets the period of time between timer ticks.</span></span></summary>
        <value><span data-ttu-id="2e220-139">Periodo tra unità di tempo.</span><span class="sxs-lookup"><span data-stu-id="2e220-139">The period of time between ticks.</span></span> <span data-ttu-id="2e220-140">Il valore predefinito è 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="2e220-140">The default is 00:00:00.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e220-141">Non è necessariamente timer eseguiti esattamente quando si verifica l'intervallo di tempo, ma sono sempre non eseguito prima che si verifica l'intervallo di tempo.</span><span class="sxs-lookup"><span data-stu-id="2e220-141">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="2e220-142">In questo modo <xref:System.Windows.Threading.DispatcherTimer> le operazioni vengono inserite nel <xref:System.Windows.Threading.Dispatcher> coda come le altre operazioni.</span><span class="sxs-lookup"><span data-stu-id="2e220-142">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="2e220-143">Quando il <xref:System.Windows.Threading.DispatcherTimer> viene eseguita l'operazione è dipendente da altri processi in coda e le priorità.</span><span class="sxs-lookup"><span data-stu-id="2e220-143">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
## Examples  
 <span data-ttu-id="2e220-144">Nell'esempio seguente viene creato un <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="2e220-144">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="2e220-145">Un nuovo <xref:System.Windows.Threading.DispatcherTimer> oggetto denominato `dispatcherTimer` viene creato.</span><span class="sxs-lookup"><span data-stu-id="2e220-145">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="2e220-146">Il gestore dell'evento `dispatcherTimer_Tick` viene aggiunto per il <xref:System.Windows.Threading.DispatcherTimer.Tick> evento.</span><span class="sxs-lookup"><span data-stu-id="2e220-146">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="2e220-147">Il <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> è impostato su 1 secondo tramite un <xref:System.TimeSpan> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2e220-147">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2e220-148"><paramref name="interval" /> è minore di 0 o maggiore di <see cref="F:System.Int32.MaxValue" /> millisecondi.</span><span class="sxs-lookup"><span data-stu-id="2e220-148"><paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" /> milliseconds.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e220-149">Ottiene o imposta un valore che indica se il timer è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="2e220-149">Gets or sets a value that indicates whether the timer is running.</span></span></summary>
        <value>
          <span data-ttu-id="2e220-150"><see langword="true" /> se il timer è abilitato; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e220-150"><see langword="true" /> if the timer is enabled; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="2e220-151">Il valore predefinito è <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e220-151">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e220-152"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> deve essere impostato su `true` per il <xref:System.Windows.Threading.DispatcherTimer.Tick> dell'evento.</span><span class="sxs-lookup"><span data-stu-id="2e220-152"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised.</span></span>  
  
 <span data-ttu-id="2e220-153">La chiamata <xref:System.Windows.Threading.DispatcherTimer.Start%2A> imposta <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="2e220-153">Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="2e220-154">La chiamata <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> imposta <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `false`.</span><span class="sxs-lookup"><span data-stu-id="2e220-154">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
## Examples  
 <span data-ttu-id="2e220-155">Nell'esempio seguente viene creato un <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="2e220-155">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="2e220-156">Un nuovo <xref:System.Windows.Threading.DispatcherTimer> oggetto denominato `dispatcherTimer` viene creato.</span><span class="sxs-lookup"><span data-stu-id="2e220-156">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="2e220-157">Il gestore dell'evento `dispatcherTimer_Tick` viene aggiunto per il <xref:System.Windows.Threading.DispatcherTimer.Tick> evento.</span><span class="sxs-lookup"><span data-stu-id="2e220-157">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="2e220-158">Il <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> è impostato su 1 secondo tramite un <xref:System.TimeSpan> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2e220-158">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e220-159">Avvia <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="2e220-159">Starts the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e220-160">Impostazione <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `false` quando viene avviato il timer si arresta il timer.</span><span class="sxs-lookup"><span data-stu-id="2e220-160">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="2e220-161">Impostazione <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `true` quando l'arresto del timer avvia il timer.</span><span class="sxs-lookup"><span data-stu-id="2e220-161">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="2e220-162"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> imposta <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="2e220-162"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="2e220-163"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> Reimposta il timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</span><span class="sxs-lookup"><span data-stu-id="2e220-163"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e220-164">Nell'esempio seguente viene creato un <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="2e220-164">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="2e220-165">Un nuovo <xref:System.Windows.Threading.DispatcherTimer> oggetto denominato `dispatcherTimer` viene creato.</span><span class="sxs-lookup"><span data-stu-id="2e220-165">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="2e220-166">Il gestore dell'evento `dispatcherTimer_Tick` viene aggiunto per il <xref:System.Windows.Threading.DispatcherTimer.Tick> evento.</span><span class="sxs-lookup"><span data-stu-id="2e220-166">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="2e220-167">Il <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> è impostato su 1 secondo tramite un <xref:System.Windows.Duration.TimeSpan%2A> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2e220-167">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e220-168">Arresta <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="2e220-168">Stops the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e220-169">Impostazione <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `false` quando viene avviato il timer si arresta il timer.</span><span class="sxs-lookup"><span data-stu-id="2e220-169">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="2e220-170">Impostazione <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `true` quando l'arresto del timer avvia il timer.</span><span class="sxs-lookup"><span data-stu-id="2e220-170">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="2e220-171">La chiamata <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> imposta <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `false`.</span><span class="sxs-lookup"><span data-stu-id="2e220-171">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e220-172">Ottiene o imposta un oggetto dati definiti dall'utente.</span><span class="sxs-lookup"><span data-stu-id="2e220-172">Gets or sets a user-defined data object.</span></span></summary>
        <value><span data-ttu-id="2e220-173">Dati definiti dall'utente.</span><span class="sxs-lookup"><span data-stu-id="2e220-173">The user-defined data.</span></span>  <span data-ttu-id="2e220-174">Il valore predefinito è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e220-174">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherTimer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e220-175">Si verifica al termine dell'intervallo del timer.</span><span class="sxs-lookup"><span data-stu-id="2e220-175">Occurs when the timer interval has elapsed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2e220-176">Nell'esempio seguente viene creato un <xref:System.Windows.Threading.DispatcherTimer.Tick> gestore dell'evento.</span><span class="sxs-lookup"><span data-stu-id="2e220-176">The following example creates a <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler.</span></span>  <span data-ttu-id="2e220-177">Il gestore eventi aggiorna un <xref:System.Windows.Controls.Label> che visualizza il secondo corrente, e chiama <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> sul <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="2e220-177">The event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>