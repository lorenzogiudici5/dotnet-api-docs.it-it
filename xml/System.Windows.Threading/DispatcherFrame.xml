<Type Name="DispatcherFrame" FullName="System.Windows.Threading.DispatcherFrame">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9957a74cb2fe72e0c5c271f7ef952d2c1c3f3159" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36463998" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DispatcherFrame : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DispatcherFrame extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherFrame" />
  <TypeSignature Language="VB.NET" Value="Public Class DispatcherFrame&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherFrame : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type DispatcherFrame = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un ciclo di esecuzione nell'oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Threading.DispatcherFrame> gli oggetti rientrano in genere in due categorie:  
  
-   Esecuzione prolungata, generale scopo frame uscire solo quando richiesto.  Questi frame deve essere chiusa quando vengono richiesti.  
  
-   In breve, esecuzione molto specifico frame che terminano quando viene soddisfatto un criterio importante.  Questi frame possono prendere in considerazione la chiusura quando vengono richiesti a favore di attendere che vengano soddisfatti i relativi criteri di uscita.  Questi frame deve essere un timeout a essi associato.  
  
<a name="xamlTextUsage_DispatcherFrame"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 È possibile utilizzare questa classe gestita in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Windows.Threading.DispatcherFrame> per ottenere risultati simili come il [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> metodo.  
  
 [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]
 [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherFrame" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherFrame ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherFrame.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherFrame();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherFrame" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherFrame (bool exitWhenRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool exitWhenRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exitWhenRequested As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherFrame(bool exitWhenRequested);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherFrame : bool -&gt; System.Windows.Threading.DispatcherFrame" Usage="new System.Windows.Threading.DispatcherFrame exitWhenRequested" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exitWhenRequested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exitWhenRequested">Indica se questo frame terminerà quando a tutti i frame viene richiesto di uscire.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherFrame" /> utilizzando il flag di richiesta di uscita specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Threading.DispatcherFrame> in genere rientrano in due categorie:  
  
-   Esecuzione prolungata, generale scopo frame, uscire solo quando richiesto.  Questi frame deve essere chiusa quando vengono richiesti.  
  
-   In breve, esecuzione molto specifico frame che terminano quando viene soddisfatto un criterio importante.  Questi frame consigliabile non terminare quando vengono richiesti a favore di attendere che vengano soddisfatti i relativi criteri di uscita.  Questi frame deve essere un timeout a essi associato.  
  
-  
  
-   All'arresto dell'applicazione, tutti i frame sono richieste per uscire dall'installazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public bool Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Continue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherFrame.Continue" />
      <MemberSignature Language="VB.NET" Value="Public Property Continue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Continue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Continue : bool with get, set" Usage="System.Windows.Threading.DispatcherFrame.Continue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se <see cref="T:System.Windows.Threading.DispatcherFrame" /> deve continuare.</summary>
        <value>
          <see langword="true" /> se il frame deve continuare; in caso contrario, <see langword="false" />.  Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> viene eseguita una query nella parte superiore di ogni ciclo del dispatcher.  
  
 All'arresto dell'applicazione, tutti i frame sono richieste per uscire dall'installazione.  
  
<a name="xamlTextUsage_Continue"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 I membri di questa classe vengono in genere non viene utilizzati [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], o non possono essere usate [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Windows.Threading.DispatcherFrame> per ottenere risultati simili come il [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> metodo.  
  
 [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]
 [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
      </Docs>
    </Member>
  </Members>
</Type>