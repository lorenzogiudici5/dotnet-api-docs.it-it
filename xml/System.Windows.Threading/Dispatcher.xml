<Type Name="Dispatcher" FullName="System.Windows.Threading.Dispatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ad9e62b91662435080a893038a5962630437e09" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39942341" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Dispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Dispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.Dispatcher" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Dispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dispatcher sealed" />
  <TypeSignature Language="F#" Value="type Dispatcher = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ca393-101">Fornisce i servizi per la gestione della coda di elementi di lavoro per un thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca393-101">Provides services for managing the queue of work items for a thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-102">Il <xref:System.Windows.Threading.Dispatcher> mantiene una coda con priorità degli elementi di lavoro per un thread specifico.</span><span class="sxs-lookup"><span data-stu-id="ca393-102">The <xref:System.Windows.Threading.Dispatcher> maintains a prioritized queue of work items for a specific thread.</span></span>  
  
 <span data-ttu-id="ca393-103">Quando un <xref:System.Windows.Threading.Dispatcher> viene creato su un thread, diventa l'unico <xref:System.Windows.Threading.Dispatcher> che possono essere associate al thread, anche se il <xref:System.Windows.Threading.Dispatcher> è stato arrestato.</span><span class="sxs-lookup"><span data-stu-id="ca393-103">When a <xref:System.Windows.Threading.Dispatcher> is created on a thread, it becomes the only <xref:System.Windows.Threading.Dispatcher> that can be associated with the thread, even if the <xref:System.Windows.Threading.Dispatcher> is shut down.</span></span>  
  
 <span data-ttu-id="ca393-104">Se si prova a ottenere il <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> per il thread corrente e un <xref:System.Windows.Threading.Dispatcher> non è associato al thread, un <xref:System.Windows.Threading.Dispatcher> verrà creato.</span><span class="sxs-lookup"><span data-stu-id="ca393-104">If you attempt to get the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> for the current thread and a <xref:System.Windows.Threading.Dispatcher> is not associated with the thread, a <xref:System.Windows.Threading.Dispatcher> will be created.</span></span> <span data-ttu-id="ca393-105">Oggetto <xref:System.Windows.Threading.Dispatcher> viene creato anche quando si crea un <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="ca393-105">A <xref:System.Windows.Threading.Dispatcher> is also created when you create a <xref:System.Windows.Threading.DispatcherObject>.</span></span> <span data-ttu-id="ca393-106">Se si crea un <xref:System.Windows.Threading.Dispatcher> su un thread in background, assicurarsi di arrestare il dispatcher prima di uscire il thread.</span><span class="sxs-lookup"><span data-stu-id="ca393-106">If you create a <xref:System.Windows.Threading.Dispatcher> on a background thread, be sure to shut down the dispatcher before exiting the thread.</span></span>  
  
 <span data-ttu-id="ca393-107">Se un <xref:System.Windows.Threading.Dispatcher> è arrestato, non può essere riavviata.</span><span class="sxs-lookup"><span data-stu-id="ca393-107">If a <xref:System.Windows.Threading.Dispatcher> is shut down, it cannot be restarted.</span></span>  
  
 <span data-ttu-id="ca393-108">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], un <xref:System.Windows.Threading.DispatcherObject> sono accessibili solo dal <xref:System.Windows.Threading.Dispatcher> è associato.</span><span class="sxs-lookup"><span data-stu-id="ca393-108">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], a <xref:System.Windows.Threading.DispatcherObject> can only be accessed by the <xref:System.Windows.Threading.Dispatcher> it is associated with.</span></span>  <span data-ttu-id="ca393-109">Ad esempio, un thread in background non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> che è associato il <xref:System.Windows.Threading.Dispatcher> nel [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span><span class="sxs-lookup"><span data-stu-id="ca393-109">For example, a background thread cannot update the contents of a <xref:System.Windows.Controls.Button> that is associated with the <xref:System.Windows.Threading.Dispatcher> on the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="ca393-110">Affinché il thread in background accedere la <xref:System.Windows.Controls.ContentControl.Content%2A> proprietà del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato il [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span><span class="sxs-lookup"><span data-stu-id="ca393-110">In order for the background thread to access the <xref:System.Windows.Controls.ContentControl.Content%2A> property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="ca393-111">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-111">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ca393-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ca393-113">L'operazione viene aggiunta alla coda dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-113">The operation is added to the queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-114">Se <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> viene chiamato su una <xref:System.Windows.Threading.Dispatcher> che ha interrotto l'esecuzione, la proprietà status dell'oggetto restituito <xref:System.Windows.Threading.DispatcherOperation> è impostata su <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ca393-114">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 <span data-ttu-id="ca393-115">Tutti i metodi sul <xref:System.Windows.Threading.Dispatcher>, ad eccezione di <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, sono a thread libero.</span><span class="sxs-lookup"><span data-stu-id="ca393-115">All of the methods on <xref:System.Windows.Threading.Dispatcher>, with the exception of <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, are free-threaded.</span></span>  
  
 <span data-ttu-id="ca393-116">Gli oggetti che derivano da <xref:System.Windows.Threading.DispatcherObject> presentano affinità di thread.</span><span class="sxs-lookup"><span data-stu-id="ca393-116">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="ca393-117">Gli oggetti che derivano da <xref:System.Windows.Freezable> sono a thread libero quando sono bloccati.</span><span class="sxs-lookup"><span data-stu-id="ca393-117">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="ca393-118">Per altre informazioni, vedere [Cenni preliminari sugli oggetti Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ca393-118">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca393-119">Nell'esempio seguente viene illustrato come inserire un'operazione in un <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ca393-119">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="ca393-120">Per il codice sorgente completo di questo esempio, vedere [applicazione Single-Threaded con calcolo a esecuzione prolungata](http://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="ca393-120">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](http://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="ca393-121">In primo luogo, viene creato un delegato che non accetta argomenti.</span><span class="sxs-lookup"><span data-stu-id="ca393-121">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="ca393-122">Successivamente, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="ca393-122">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="ca393-123">Questa chiamata a <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> accetta due parametri: la priorità, che è impostata su <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>e il callback, che viene passato un'istanza del delegato `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="ca393-123">This call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginInvoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-124">Esegue in modo asincrono un delegato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-124">Executes a delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-125">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-125">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ca393-126">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-126">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ca393-127">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-127">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ca393-128">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-128">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ca393-129"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-129"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ca393-130">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-130">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-131"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona; di conseguenza, controllo viene restituito immediatamente all'oggetto chiamante dopo la chiamata.</span><span class="sxs-lookup"><span data-stu-id="ca393-131"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="ca393-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Restituisce un <xref:System.Windows.Threading.DispatcherOperation> oggetto che può essere utilizzato per interagire con il delegato quando il delegato è nell'evento della coda.</span><span class="sxs-lookup"><span data-stu-id="ca393-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="ca393-133">Il <xref:System.Windows.Threading.DispatcherOperation> oggetto restituito da <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> può essere usato in diversi modi per interagire con il delegato specificato, ad esempio:</span><span class="sxs-lookup"><span data-stu-id="ca393-133">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="ca393-134">Modifica il <xref:System.Windows.Threading.DispatcherPriority> del delegato perché è in sospeso l'esecuzione nella coda degli eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-134">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="ca393-135">Rimozione del delegato dalla coda degli eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-135">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="ca393-136">In attesa per il delegato da restituire.</span><span class="sxs-lookup"><span data-stu-id="ca393-136">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="ca393-137">Viene eseguito il recupero del valore restituito dal delegato dopo di esso.</span><span class="sxs-lookup"><span data-stu-id="ca393-137">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="ca393-138">Se più <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> chiamate alla stessa <xref:System.Windows.Threading.DispatcherPriority>, verranno eseguite nell'ordine in cui sono state effettuate.</span><span class="sxs-lookup"><span data-stu-id="ca393-138">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="ca393-139">Se <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> viene chiamato su una <xref:System.Windows.Threading.Dispatcher> che ha interrotto l'esecuzione, la proprietà status dell'oggetto restituito <xref:System.Windows.Threading.DispatcherOperation> è impostata su <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ca393-139">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="ca393-140">Delegato a un metodo che accetta i parametri specificati in <c>args</c>, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-140">The delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ca393-141">Matrice di oggetti da passare come argomenti al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-141">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="ca393-142">Può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-142">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-143">Esegue in modo asincrono il delegato specificato con gli argomenti specificati sul thread in cui è stato creato l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-143">Executes the specified delegate asynchronously with the specified arguments on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-144">Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-144">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-145">Il <xref:System.Windows.Threading.DispatcherOperation> oggetto restituito da <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> può essere usato in diversi modi per interagire con il delegato specificato, ad esempio:</span><span class="sxs-lookup"><span data-stu-id="ca393-145">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="ca393-146">Modifica il <xref:System.Windows.Threading.DispatcherPriority> del delegato perché è in sospeso l'esecuzione nella coda degli eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-146">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="ca393-147">Rimozione del delegato dalla coda degli eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-147">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="ca393-148">In attesa per il delegato da restituire.</span><span class="sxs-lookup"><span data-stu-id="ca393-148">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="ca393-149">Viene eseguito il recupero del valore restituito dal delegato dopo di esso.</span><span class="sxs-lookup"><span data-stu-id="ca393-149">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="ca393-150"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona; di conseguenza, controllo viene restituito immediatamente all'oggetto chiamante dopo la chiamata.</span><span class="sxs-lookup"><span data-stu-id="ca393-150"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="ca393-151">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-151">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="ca393-152">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-152">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="ca393-153">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-153">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="ca393-154">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-154">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ca393-155"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-155"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="ca393-156">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-156">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-157">Se <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> viene chiamato su una <xref:System.Windows.Threading.Dispatcher> che ha interrotto l'esecuzione, la proprietà status dell'oggetto restituito <xref:System.Windows.Threading.DispatcherOperation> è impostata su <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ca393-157">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ca393-158">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-158">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ca393-159">Delegato a un metodo che non accetta argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-159">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-160">Esegue in modo asincrono il delegato specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-160">Executes the specified delegate asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-161">Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-161">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-162">Se più <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> chiamate alla stessa <xref:System.Windows.Threading.DispatcherPriority>, verranno eseguite nell'ordine in cui sono state effettuate.</span><span class="sxs-lookup"><span data-stu-id="ca393-162">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="ca393-163"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Restituisce un <xref:System.Windows.Threading.DispatcherOperation> oggetto che può essere utilizzato per interagire con il delegato quando il delegato è nell'evento della coda.</span><span class="sxs-lookup"><span data-stu-id="ca393-163"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="ca393-164">Il <xref:System.Windows.Threading.DispatcherOperation> oggetto restituito da <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> può essere usato in diversi modi per interagire con il delegato specificato, ad esempio:</span><span class="sxs-lookup"><span data-stu-id="ca393-164">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="ca393-165">Modifica il <xref:System.Windows.Threading.DispatcherPriority> del delegato perché è in sospeso l'esecuzione nella coda degli eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-165">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="ca393-166">Rimozione del delegato dalla coda degli eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-166">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="ca393-167">In attesa per il delegato da restituire.</span><span class="sxs-lookup"><span data-stu-id="ca393-167">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="ca393-168">Viene eseguito il recupero del valore restituito dal delegato dopo di esso.</span><span class="sxs-lookup"><span data-stu-id="ca393-168">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="ca393-169"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona; di conseguenza, controllo viene restituito immediatamente all'oggetto chiamante dopo la chiamata.</span><span class="sxs-lookup"><span data-stu-id="ca393-169"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="ca393-170">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-170">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ca393-171">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-171">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ca393-172">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-172">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ca393-173">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-173">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ca393-174"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-174"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ca393-175">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-175">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-176">Se <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> viene chiamato su una <xref:System.Windows.Threading.Dispatcher> che ha interrotto l'esecuzione, la proprietà status dell'oggetto restituito <xref:System.Windows.Threading.DispatcherOperation> è impostata su <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ca393-176">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca393-177">Nell'esempio seguente viene illustrato come inserire un'operazione in un <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ca393-177">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="ca393-178">Per il codice sorgente completo di questo esempio, vedere [applicazione Single-Threaded con calcolo a esecuzione prolungata](http://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="ca393-178">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](http://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="ca393-179">In primo luogo, viene creato un delegato che non accetta argomenti.</span><span class="sxs-lookup"><span data-stu-id="ca393-179">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="ca393-180">Successivamente, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="ca393-180">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="ca393-181">Poiché ogni <xref:System.Windows.Threading.DispatcherObject> ha una proprietà che restituisce il <xref:System.Windows.Threading.Dispatcher> associato, il valore desiderato <xref:System.Windows.Threading.Dispatcher> viene ottenuto eseguendo una query il <xref:System.Windows.Threading.DispatcherObject>, in questo caso un <xref:System.Windows.Controls.Button> denominato `startStopButton`.</span><span class="sxs-lookup"><span data-stu-id="ca393-181">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Button> named `startStopButton`.</span></span>   <span data-ttu-id="ca393-182">La chiamata a <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> accetta due parametri: la priorità, che è impostata su <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>e il callback, che viene passato un'istanza del delegato `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="ca393-182">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca393-183">
            <paramref name="method" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-183">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ca393-184">
            <paramref name="priority" /> non è un oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-184">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate * System.Windows.Threading.DispatcherPriority * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (method, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="ca393-185">Delegato a un metodo che accetta i parametri specificati in <c>args</c>, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-185">The delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-186">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-186">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ca393-187">Matrice di oggetti da passare come argomenti al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-187">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="ca393-188">Può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-188">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-189">Esegue in modo asincrono il delegato specificato con gli argomenti specificati, con la priorità specificata, sul thread in cui è stato creato l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-189">Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-190">Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-190">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-191">Il <xref:System.Windows.Threading.DispatcherOperation> oggetto restituito da <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> può essere usato in diversi modi per interagire con il delegato specificato, ad esempio:</span><span class="sxs-lookup"><span data-stu-id="ca393-191">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="ca393-192">Modifica il <xref:System.Windows.Threading.DispatcherPriority> del delegato perché è in sospeso l'esecuzione nella coda degli eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-192">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="ca393-193">Rimozione del delegato dalla coda degli eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-193">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="ca393-194">In attesa per il delegato da restituire.</span><span class="sxs-lookup"><span data-stu-id="ca393-194">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="ca393-195">Viene eseguito il recupero del valore restituito dal delegato dopo di esso.</span><span class="sxs-lookup"><span data-stu-id="ca393-195">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="ca393-196"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona; di conseguenza, controllo viene restituito immediatamente all'oggetto chiamante dopo la chiamata.</span><span class="sxs-lookup"><span data-stu-id="ca393-196"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="ca393-197">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-197">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="ca393-198">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-198">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="ca393-199">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-199">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="ca393-200">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-200">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ca393-201"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-201"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="ca393-202">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-202">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-203">Se <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> viene chiamato su una <xref:System.Windows.Threading.Dispatcher> che ha interrotto l'esecuzione, la proprietà status dell'oggetto restituito <xref:System.Windows.Threading.DispatcherOperation> è impostata su <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ca393-203">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate * obj -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ca393-204">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-204">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ca393-205">Delegato a un metodo che accetta un argomento, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-205">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ca393-206">Oggetto da passare come argomento al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-206">The object to pass as an argument to the specified method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-207">Esegue in modo asincrono il delegato specificato con la priorità e l'argomento specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-207">Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-208">Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-208">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-209">`Arg` può essere `null` se non sono necessari argomenti.</span><span class="sxs-lookup"><span data-stu-id="ca393-209">`Arg` can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="ca393-210"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Restituisce un <xref:System.Windows.Threading.DispatcherOperation> oggetto che può essere utilizzato per interagire con il delegato quando il delegato è nell'evento della coda.</span><span class="sxs-lookup"><span data-stu-id="ca393-210"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="ca393-211">Il <xref:System.Windows.Threading.DispatcherOperation> oggetto restituito da <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> può essere usato in diversi modi per interagire con il delegato specificato, ad esempio:</span><span class="sxs-lookup"><span data-stu-id="ca393-211">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="ca393-212">Modifica il <xref:System.Windows.Threading.DispatcherPriority> del delegato perché è in sospeso l'esecuzione nella coda degli eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-212">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="ca393-213">Rimozione del delegato dalla coda degli eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-213">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="ca393-214">In attesa per il delegato da restituire.</span><span class="sxs-lookup"><span data-stu-id="ca393-214">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="ca393-215">Viene eseguito il recupero del valore restituito dal delegato dopo di esso.</span><span class="sxs-lookup"><span data-stu-id="ca393-215">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="ca393-216"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona; di conseguenza, controllo viene restituito immediatamente all'oggetto chiamante dopo la chiamata.</span><span class="sxs-lookup"><span data-stu-id="ca393-216"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="ca393-217">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-217">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ca393-218">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-218">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ca393-219">Affinché il thread in background accedere alla proprietà content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-219">In order for the background thread to access the content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ca393-220">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-220">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ca393-221"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-221"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ca393-222">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-222">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-223">Se più <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> chiamate alla stessa <xref:System.Windows.Threading.DispatcherPriority>, verranno eseguite nell'ordine in cui sono state effettuate.</span><span class="sxs-lookup"><span data-stu-id="ca393-223">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="ca393-224">Se <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> viene chiamato su una <xref:System.Windows.Threading.Dispatcher> che ha interrotto l'esecuzione, la proprietà status dell'oggetto restituito <xref:System.Windows.Threading.DispatcherOperation> è impostata su <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ca393-224">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca393-225">Nell'esempio seguente viene illustrato come inserire un'operazione in un <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ca393-225">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="ca393-226">In primo luogo, viene creato un delegato che accetta un solo argomento, in questo caso una stringa.</span><span class="sxs-lookup"><span data-stu-id="ca393-226">First, a delegate is created that accepts one argument, in this case a string.</span></span>  
  
 [!code-csharp[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdelegates)]
 [!code-vb[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdelegates)]  
  
 <span data-ttu-id="ca393-227">Successivamente, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="ca393-227">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> is called.</span></span>  <span data-ttu-id="ca393-228">Poiché ogni <xref:System.Windows.Threading.DispatcherObject> ha una proprietà che restituisce il <xref:System.Windows.Threading.Dispatcher> associato, il valore desiderato <xref:System.Windows.Threading.Dispatcher> viene ottenuto eseguendo una query il <xref:System.Windows.Threading.DispatcherObject>, in questo caso un <xref:System.Windows.Controls.Grid> denominato `tomorrowsWeather`.</span><span class="sxs-lookup"><span data-stu-id="ca393-228">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Grid> named `tomorrowsWeather`.</span></span> <span data-ttu-id="ca393-229">La chiamata a <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> accetta tre parametri: la priorità, che è impostata su <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; i callback, che viene passato un'istanza del delegato `OneArgDelegate`; e una stringa denominata `weather`, ovvero l'argomento per il callback.</span><span class="sxs-lookup"><span data-stu-id="ca393-229">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> takes three parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; the callback, which is passed in through an instance of the delegate `OneArgDelegate`; and a string named `weather`, which is the argument for the callback.</span></span>  
  
 [!code-csharp[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdispatcheronearge)]
 [!code-vb[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdispatcheronearge)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca393-230">
            <paramref name="method" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-230">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ca393-231">
            <paramref name="priority" /> non è un oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-231">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate * obj * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ca393-232">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-232">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ca393-233">Delegato a un metodo che accetta più argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-233">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ca393-234">Oggetto da passare come argomento al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-234">The object to pass as an argument to the specified method.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ca393-235">Matrice di oggetti da passare come argomenti al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-235">An array of objects to pass as arguments to the specified method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-236">Esegue in modo asincrono il delegato specificato con la priorità e la matrice di argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-236">Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-237">Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-237">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-238">Il `arg` parametro può essere `null` se non sono necessari argomenti.</span><span class="sxs-lookup"><span data-stu-id="ca393-238">The `arg` parameter can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="ca393-239"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Restituisce un <xref:System.Windows.Threading.DispatcherOperation> oggetto che può essere utilizzato per interagire con il delegato quando il delegato è nell'evento della coda.</span><span class="sxs-lookup"><span data-stu-id="ca393-239"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="ca393-240">Il <xref:System.Windows.Threading.DispatcherOperation> oggetto restituito da <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> può essere usato in diversi modi per interagire con il delegato specificato, ad esempio:</span><span class="sxs-lookup"><span data-stu-id="ca393-240">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="ca393-241">Modifica il <xref:System.Windows.Threading.DispatcherPriority> del delegato perché è in sospeso l'esecuzione nella coda degli eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-241">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="ca393-242">Rimozione del delegato dalla coda degli eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-242">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="ca393-243">In attesa per il delegato da restituire.</span><span class="sxs-lookup"><span data-stu-id="ca393-243">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="ca393-244">Viene eseguito il recupero del valore restituito dal delegato dopo di esso.</span><span class="sxs-lookup"><span data-stu-id="ca393-244">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="ca393-245"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona; di conseguenza, controllo viene restituito immediatamente all'oggetto chiamante dopo la chiamata.</span><span class="sxs-lookup"><span data-stu-id="ca393-245"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="ca393-246">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-246">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ca393-247">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-247">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ca393-248">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-248">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ca393-249">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-249">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ca393-250"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-250"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ca393-251">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-251">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-252">Se più <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> chiamate alla stessa <xref:System.Windows.Threading.DispatcherPriority>, verranno eseguite nell'ordine in cui sono state effettuate.</span><span class="sxs-lookup"><span data-stu-id="ca393-252">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="ca393-253">Se <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> viene chiamato su una <xref:System.Windows.Threading.Dispatcher> che ha interrotto l'esecuzione, la proprietà status dell'oggetto restituito <xref:System.Windows.Threading.DispatcherOperation> è impostata su <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ca393-253">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca393-254">
            <paramref name="method" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-254">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ca393-255">
            <see cref="T:System.Windows.Threading.DispatcherPriority" /> non è una priorità valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-255">
              <see cref="T:System.Windows.Threading.DispatcherPriority" /> is not a valid priority.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvokeShutdown">
      <MemberSignature Language="C#" Value="public void BeginInvokeShutdown (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginInvokeShutdown(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInvokeShutdown (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginInvokeShutdown(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.BeginInvokeShutdown : System.Windows.Threading.DispatcherPriority -&gt; unit" Usage="dispatcher.BeginInvokeShutdown priority" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ca393-256">Priorità con la quale iniziare ad arrestare il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-256">The priority at which to begin shutting down the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-257">Inizia in modo asincrono l'arresto di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-257">Initiates shutdown of the <see cref="T:System.Windows.Threading.Dispatcher" /> asynchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-258"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> le richieste di autorizzazioni dell'interfaccia utente senza restrizioni.</span><span class="sxs-lookup"><span data-stu-id="ca393-258"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="ca393-259">Quando la <xref:System.Windows.Threading.Dispatcher> inizia l'arresto, il <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> evento viene generato e <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ca393-259">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="ca393-260">Il <xref:System.Windows.Threading.Dispatcher> si arresta completamente fino a quando la coda degli eventi viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="ca393-260">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="ca393-261">Quando il Dispatcher termina l'arresto, la <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> viene generato l'evento e il <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ca393-261">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ca393-262">Una volta avviato il processo di arresto, tutto lavoro in sospeso vengono interrotte elementi nella coda.</span><span class="sxs-lookup"><span data-stu-id="ca393-262">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ca393-263">Per arrestare il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-263">for shutting down the dispatcher.</span>
          </span>
          <span data-ttu-id="ca393-264">Enumerazioni associate:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-264">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; bool" Usage="dispatcher.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca393-265">Determina se il thread chiamante è il thread associato a questo oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-265">Determines whether the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-266">
            <see langword="true" /> se il thread chiamante è il thread associato a <see cref="T:System.Windows.Threading.Dispatcher" />, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-266">
              <see langword="true" /> if the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-267">Solo le <xref:System.Windows.Threading.Dispatcher> che un <xref:System.Windows.Threading.DispatcherObject> viene creato nella può accedere all'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-267">Only the <xref:System.Windows.Threading.Dispatcher> that a <xref:System.Windows.Threading.DispatcherObject> is created on may access the object.</span></span>  <span data-ttu-id="ca393-268">Uso <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> per accedere all'oggetto da un thread diverso.</span><span class="sxs-lookup"><span data-stu-id="ca393-268">Use <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> to access the object from a different thread.</span></span>  
  
 <span data-ttu-id="ca393-269"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> può essere chiamato da qualsiasi thread.</span><span class="sxs-lookup"><span data-stu-id="ca393-269"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> can be called from any thread.</span></span>  
  
 <span data-ttu-id="ca393-270">La differenza tra <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> e <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> viene <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> restituisce un valore booleano che indica se il thread chiamante ha accesso per il <xref:System.Windows.Threading.Dispatcher> e <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="ca393-270">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean indicating whether the calling thread has access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca393-271">L'esempio seguente usa <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> per determinare se un thread può accedere a un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ca393-271">The following example uses <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> to determine whether a thread has access to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="ca393-272">Il <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> metodo sul <xref:System.Windows.Threading.Dispatcher> associato il <xref:System.Windows.Controls.Button> viene chiamato per verificare l'accesso al thread.</span><span class="sxs-lookup"><span data-stu-id="ca393-272">The <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> associated with the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="ca393-273">Se il thread chiamante può accedere al <xref:System.Windows.Threading.Dispatcher>, il <xref:System.Windows.Controls.Button> viene aggiornata tramite l'accesso a membri del <xref:System.Windows.Controls.Button>; in caso contrario, un delegato che accetta un <xref:System.Windows.Controls.Button> come argomento, viene inserito nel <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ca393-273">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is placed onto the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="ca393-274">Il <xref:System.Windows.Threading.Dispatcher> delegherà l'operazione di aggiornamento di <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ca393-274">The <xref:System.Windows.Threading.Dispatcher> will delegate the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccesscheckaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccesscheckaccess)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDispatcher">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher CurrentDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Threading.Dispatcher CurrentDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.CurrentDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Threading::Dispatcher ^ CurrentDispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.Dispatcher.CurrentDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-275">Ottiene <see cref="T:System.Windows.Threading.Dispatcher" /> per il thread attualmente in esecuzione e crea un nuovo <see cref="T:System.Windows.Threading.Dispatcher" /> se al thread non ne è già associato uno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-275">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the thread currently executing and creates a new <see cref="T:System.Windows.Threading.Dispatcher" /> if one is not already associated with the thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca393-276">Dispatcher associato al thread corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-276">The dispatcher associated with the current thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-277">Se un <xref:System.Windows.Threading.Dispatcher> non è associato il thread corrente, un nuovo <xref:System.Windows.Threading.Dispatcher> verrà creato.</span><span class="sxs-lookup"><span data-stu-id="ca393-277">If a <xref:System.Windows.Threading.Dispatcher> is not associated with the current thread, a new <xref:System.Windows.Threading.Dispatcher> will be created.</span></span>  <span data-ttu-id="ca393-278">Non è il caso del metodo <xref:System.Windows.Threading.Dispatcher.FromThread%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-278">This is not the case with the <xref:System.Windows.Threading.Dispatcher.FromThread%2A> method.</span></span>  <span data-ttu-id="ca393-279"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> restituirà `null` se non esiste un dispatcher associato al thread specificato.</span><span class="sxs-lookup"><span data-stu-id="ca393-279"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> will return `null` if there is not a dispatcher associated with the specified thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableProcessing">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.DisableProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Function DisableProcessing () As DispatcherProcessingDisabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherProcessingDisabled DisableProcessing();" />
      <MemberSignature Language="F#" Value="member this.DisableProcessing : unit -&gt; System.Windows.Threading.DispatcherProcessingDisabled" Usage="dispatcher.DisableProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherProcessingDisabled</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca393-280">Disabilita l'elaborazione della coda di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-280">Disables processing of the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-281">Struttura utilizzata per attivare nuovamente l'elaborazione del dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-281">A structure used to re-enable dispatcher processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-282">Disabilitare l'elaborazione del dispatcher è un metodo avanzato che consente di eliminare le probabilità di reentrancy non correlate.</span><span class="sxs-lookup"><span data-stu-id="ca393-282">Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.</span></span>  
  
 <span data-ttu-id="ca393-283">Gli effetti della disabilitazione dell'elaborazione sono i seguenti:</span><span class="sxs-lookup"><span data-stu-id="ca393-283">The effects of disabling processing are as follows:</span></span>  
  
-   <span data-ttu-id="ca393-284">I blocchi CLR non saranno il message pump internamente.</span><span class="sxs-lookup"><span data-stu-id="ca393-284">CLR locks will not pump messages internally.</span></span>  
  
-   <span data-ttu-id="ca393-285"><xref:System.Windows.Threading.DispatcherFrame> gli oggetti non sono consentiti per il push.</span><span class="sxs-lookup"><span data-stu-id="ca393-285"><xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.</span></span>  
  
-   <span data-ttu-id="ca393-286">L'elaborazione dei messaggi non è consentito.</span><span class="sxs-lookup"><span data-stu-id="ca393-286">Message processing is not permitted.</span></span>  
  
 <span data-ttu-id="ca393-287">Il <xref:System.Windows.Threading.DispatcherProcessingDisabled> struttura <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> restituisce quando viene chiamata può essere utilizzato per abilitare di nuovo l'elaborazione del dispatcher.</span><span class="sxs-lookup"><span data-stu-id="ca393-287">The <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns when it is called can be used to re-enable dispatcher processing.</span></span>  <span data-ttu-id="ca393-288">La chiamata <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> nella <xref:System.Windows.Threading.DispatcherProcessingDisabled> struttura riabilita l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="ca393-288">Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure re-enables processing.</span></span>  
  
 <span data-ttu-id="ca393-289"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> può essere chiamato solo sul thread di <xref:System.Windows.Threading.Dispatcher> è associato.</span><span class="sxs-lookup"><span data-stu-id="ca393-289"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> can only be called on the thread the <xref:System.Windows.Threading.Dispatcher> is associated with.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca393-290">Nell'esempio seguente viene illustrato come disabilitare e riabilitare l'elaborazione del dispatcher.</span><span class="sxs-lookup"><span data-stu-id="ca393-290">The following example shows how to disable dispatcher processing and re-enable dispatcher processing.</span></span>  <span data-ttu-id="ca393-291"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> viene chiamato un **usando** istruzione.</span><span class="sxs-lookup"><span data-stu-id="ca393-291"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> is called in a **using** statement.</span></span>  <span data-ttu-id="ca393-292"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> Restituisce un <xref:System.Windows.Threading.DispatcherProcessingDisabled> struttura utilizzata come oggetto di essere eliminato quando il **usando** blocca al termine della.</span><span class="sxs-lookup"><span data-stu-id="ca393-292"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that is used as the object to be disposed when the **using** block finishes.</span></span>  <span data-ttu-id="ca393-293">Quando <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> viene chiamato sul <xref:System.Windows.Threading.DispatcherProcessingDisabled> struttura, l'elaborazione del dispatcher viene riabilitato.</span><span class="sxs-lookup"><span data-stu-id="ca393-293">When <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> is called on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure, dispatcher processing is re-enabled.</span></span>  
  
 [!code-csharp[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdisableprocessing)]
 [!code-vb[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdisableprocessing)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAllFrames">
      <MemberSignature Language="C#" Value="public static void ExitAllFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExitAllFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExitAllFrames ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExitAllFrames();" />
      <MemberSignature Language="F#" Value="static member ExitAllFrames : unit -&gt; unit" Usage="System.Windows.Threading.Dispatcher.ExitAllFrames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca393-294">Richiede l'uscita di tutti i frame, inclusi i frame annidati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-294">Requests that all frames exit, including nested frames.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ca393-295">per chiamare questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-295">for calling this method.</span>
          </span>
          <span data-ttu-id="ca393-296">Enumerazioni associate:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-296">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
        <altmember cref="T:System.Windows.Threading.DispatcherFrame" />
      </Docs>
    </Member>
    <Member MemberName="FromThread">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher FromThread (System.Threading.Thread thread);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Threading.Dispatcher FromThread(class System.Threading.Thread thread) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::Dispatcher ^ FromThread(System::Threading::Thread ^ thread);" />
      <MemberSignature Language="F#" Value="static member FromThread : System.Threading.Thread -&gt; System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.Dispatcher.FromThread thread" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thread" Type="System.Threading.Thread" />
      </Parameters>
      <Docs>
        <param name="thread">
          <span data-ttu-id="ca393-297">Thread dal quale ottenere <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-297">The thread to obtain the <see cref="T:System.Windows.Threading.Dispatcher" /> from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-298">Ottiene <see cref="T:System.Windows.Threading.Dispatcher" /> per il thread specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-298">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the specified thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-299">Dispatcher per <paramref name="thread" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-299">The dispatcher for <paramref name="thread" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-300">Se non è disponibile per il thread specificato, un dispatcher `null` verranno restituiti.</span><span class="sxs-lookup"><span data-stu-id="ca393-300">If a dispatcher is not available for the specified thread, `null` will be returned.</span></span>  
  
 <span data-ttu-id="ca393-301"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> non crea una <xref:System.Windows.Threading.Dispatcher> su un thread che non ha un <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ca393-301"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> does not create a <xref:System.Windows.Threading.Dispatcher> on a thread that does not have a <xref:System.Windows.Threading.Dispatcher>.</span></span>   <span data-ttu-id="ca393-302">Una nuova <xref:System.Windows.Threading.Dispatcher> viene creato su un thread che non dispone già di un <xref:System.Windows.Threading.Dispatcher> quando si prova a ottenere il <xref:System.Windows.Threading.Dispatcher> utilizzando il <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ca393-302">A new <xref:System.Windows.Threading.Dispatcher> is created on a thread that does not already have a <xref:System.Windows.Threading.Dispatcher> when attempting to get the <xref:System.Windows.Threading.Dispatcher> by using the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownFinished">
      <MemberSignature Language="C#" Value="public bool HasShutdownFinished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownFinished" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownFinished As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownFinished { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownFinished : bool" Usage="System.Windows.Threading.Dispatcher.HasShutdownFinished" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-303">Determina se <see cref="T:System.Windows.Threading.Dispatcher" /> ha terminato l'arresto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-303">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> has finished shutting down.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca393-304">
            <see langword="true" /> se il dispatcher ha concluso l'arresto, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-304">
              <see langword="true" /> if the dispatcher has finished shutting down; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-305">Quando la <xref:System.Windows.Threading.Dispatcher> inizia l'arresto, il <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> evento viene generato e <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ca393-305">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="ca393-306">Il <xref:System.Windows.Threading.Dispatcher> non si arresta completamente fino a quando la coda degli eventi viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="ca393-306">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="ca393-307">Quando il Dispatcher termina l'arresto, la <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> viene generato l'evento e il <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ca393-307">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ca393-308">Una volta avviato il processo di arresto, tutto lavoro in sospeso vengono interrotte elementi nella coda.</span><span class="sxs-lookup"><span data-stu-id="ca393-308">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownStarted">
      <MemberSignature Language="C#" Value="public bool HasShutdownStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownStarted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownStarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownStarted : bool" Usage="System.Windows.Threading.Dispatcher.HasShutdownStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-309">Determina se <see cref="T:System.Windows.Threading.Dispatcher" /> si stia arrestando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-309">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> is shutting down.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca393-310">
            <see langword="true" /> se <see cref="T:System.Windows.Threading.Dispatcher" /> ha iniziato l'arresto, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-310">
              <see langword="true" /> if the <see cref="T:System.Windows.Threading.Dispatcher" /> has started shutting down; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-311">Quando la <xref:System.Windows.Threading.Dispatcher> inizia l'arresto, il <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> evento viene generato e <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ca393-311">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="ca393-312">Il <xref:System.Windows.Threading.Dispatcher> si arresta completamente fino a quando la coda degli eventi viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="ca393-312">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="ca393-313">Quando il Dispatcher termina l'arresto, la <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> viene generato l'evento e il <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ca393-313">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ca393-314">Una volta avviato il processo di arresto, tutto lavoro in sospeso vengono interrotte elementi nella coda.</span><span class="sxs-lookup"><span data-stu-id="ca393-314">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hooks">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherHooks Hooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.DispatcherHooks Hooks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Hooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hooks As DispatcherHooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherHooks ^ Hooks { System::Windows::Threading::DispatcherHooks ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Hooks : System.Windows.Threading.DispatcherHooks" Usage="System.Windows.Threading.Dispatcher.Hooks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherHooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-315">Ottiene l'insieme di hook che forniscono informazioni aggiuntive sull'evento relativamente a <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-315">Gets the collection of hooks that provide additional event information about the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca393-316">Hook associato a <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-316">The hooks associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-317">Il <xref:System.Windows.Threading.DispatcherHooks> classe vengono fornite informazioni aggiuntive sull'evento sul <xref:System.Windows.Threading.Dispatcher>, ad esempio, quando il <xref:System.Windows.Threading.Dispatcher> è inattiva o quando un'operazione è stata completata.</span><span class="sxs-lookup"><span data-stu-id="ca393-317">The <xref:System.Windows.Threading.DispatcherHooks> class provides additional event information about the <xref:System.Windows.Threading.Dispatcher>, such as when the <xref:System.Windows.Threading.Dispatcher> is inactive or when an operation has competed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ca393-318">Per ottenere questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-318">for getting this property.</span>
          </span>
          <span data-ttu-id="ca393-319">Enumerazioni associate:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-319">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-320">Esegue in modo sincrono il delegato specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-320">Executes the specified delegate synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-321">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-321">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ca393-322">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-322">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ca393-323">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-323">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ca393-324">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-324">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ca393-325"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-325"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ca393-326">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-326">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-327"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è un'operazione sincrona. Pertanto, controllo non verrà restituito all'oggetto chiamante fino a dopo che viene restituito il callback.</span><span class="sxs-lookup"><span data-stu-id="ca393-327"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca393-328">L'esempio seguente viene inserito un delegato in un <xref:System.Windows.Threading.Dispatcher> alla <xref:System.Windows.Threading.DispatcherPriority.Normal> usando <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-328">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action -&gt; unit" Usage="dispatcher.Invoke callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ca393-329">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-329">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-330">Esegue in modo sincrono il <see cref="T:System.Action" /> specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-330">Executes the specified <see cref="T:System.Action" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action, priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority -&gt; unit" Usage="dispatcher.Invoke (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ca393-331">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-331">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-332">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-332">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-333">Esegue in modo sincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-333">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="ca393-334">Un delegato a un metodo che accetta i parametri specificati in <c>args</c>, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-334">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ca393-335">Matrice di oggetti da passare come argomenti al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-335">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="ca393-336">Può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-336">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-337">Esegue in modo asincrono il delegato specificato con gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-337">Executes the specified delegate with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-338">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-338">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-339">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-339">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="ca393-340">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-340">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="ca393-341">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-341">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="ca393-342">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-342">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ca393-343"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-343"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="ca393-344">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-344">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-345"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è un'operazione sincrona. Pertanto, controllo non verrà restituito all'oggetto chiamante fino a dopo che viene restituito il callback.</span><span class="sxs-lookup"><span data-stu-id="ca393-345"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate -&gt; obj" Usage="dispatcher.Invoke (priority, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ca393-346">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-346">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ca393-347">Delegato a un metodo che non accetta argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-347">A delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-348">Esegue in modo sincrono il delegato specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-348">Executes the specified delegate synchronously at the specified priority on the thread on which the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-349">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-349">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-350">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-350">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ca393-351">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-351">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ca393-352">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-352">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ca393-353">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-353">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ca393-354"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-354"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ca393-355">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-355">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-356"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è un'operazione sincrona. Pertanto, controllo non verrà restituito all'oggetto chiamante fino a dopo che viene restituito il callback.</span><span class="sxs-lookup"><span data-stu-id="ca393-356"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca393-357">L'esempio seguente viene inserito un delegato in un <xref:System.Windows.Threading.Dispatcher> alla <xref:System.Windows.Threading.DispatcherPriority.Normal> usando <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-357">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca393-358">
            <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-358">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ca393-359">
            <paramref name="priority" /> non è una priorità valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-359">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca393-360">
            <paramref name="method" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-360">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; unit" Usage="dispatcher.Invoke (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ca393-361">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-361">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-362">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-362">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca393-363">Oggetto che indica se annullare l'azione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-363">An object that indicates whether to cancel the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-364">Esegue in modo sincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-364">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * TimeSpan * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, timeout, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="ca393-365">Un delegato a un metodo che accetta i parametri specificati in <c>args</c>, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-365">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ca393-366">Periodo di tempo massimo di attesa del completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-366">The maximum amount of time to wait for the operation to complete.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ca393-367">Matrice di oggetti da passare come argomenti al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-367">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="ca393-368">Può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-368">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-369">Esegue in modo sincrono il delegato specificato entro l'intervallo di tempo designato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-369">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-370">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-370">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-371">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-371">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="ca393-372">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-372">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="ca393-373">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-373">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="ca393-374">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-374">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ca393-375"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-375"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="ca393-376">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-376">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-377"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è un'operazione sincrona. Pertanto, controllo non verrà restituito all'oggetto chiamante fino a dopo che viene restituito il callback.</span><span class="sxs-lookup"><span data-stu-id="ca393-377"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * System.Windows.Threading.DispatcherPriority * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="ca393-378">Un delegato a un metodo che accetta i parametri specificati in <c>args</c>, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-378">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-379">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-379">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ca393-380">Matrice di oggetti da passare come argomenti al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-380">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="ca393-381">Può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-381">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-382">Esegue in modo sincrono il delegato specificato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-382">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-383">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-383">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-384">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-384">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="ca393-385">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-385">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="ca393-386">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-386">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="ca393-387">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-387">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ca393-388"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-388"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="ca393-389">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-389">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-390"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è un'operazione sincrona. Pertanto, controllo non verrà restituito all'oggetto chiamante fino a dopo che viene restituito il callback.</span><span class="sxs-lookup"><span data-stu-id="ca393-390"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate * obj -&gt; obj" Usage="dispatcher.Invoke (priority, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ca393-391">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-391">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ca393-392">Delegato a un metodo che accetta un argomento, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-392">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ca393-393">Oggetto da passare come argomento al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-393">An object to pass as an argument to the given method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-394">Esegue in modo sincrono il delegato specificato con la priorità e l'argomento specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-394">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-395">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-395">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-396">`Arg` può essere `null` se non è necessario un argomento</span><span class="sxs-lookup"><span data-stu-id="ca393-396">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="ca393-397">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-397">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ca393-398">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-398">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ca393-399">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-399">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ca393-400">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-400">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ca393-401"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-401"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ca393-402">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-402">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-403"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è un'operazione sincrona. Pertanto, controllo non verrà restituito all'oggetto chiamante fino a dopo che viene restituito il callback.</span><span class="sxs-lookup"><span data-stu-id="ca393-403"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca393-404">
            <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-404">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ca393-405">
            <paramref name="priority" /> non è una priorità valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-405">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca393-406">
            <paramref name="method" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-406">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ca393-407">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-407">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ca393-408">Tempo massimo di attesa del termine dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-408">The maximum time to wait for the operation to finish.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ca393-409">Delegato a un metodo che non accetta argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-409">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-410">Esegue in modo sincrono il delegato specificato con la priorità e il valore di timeout specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-410">Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> was created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-411">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-411">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-412">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-412">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ca393-413">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-413">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ca393-414">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-414">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ca393-415">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-415">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ca393-416"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-416"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ca393-417">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-417">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-418"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è un'operazione sincrona. Pertanto, controllo non verrà restituito all'oggetto chiamante fino a dopo che viene restituito il callback.</span><span class="sxs-lookup"><span data-stu-id="ca393-418"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken * TimeSpan -&gt; unit" Usage="dispatcher.Invoke (callback, priority, cancellationToken, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ca393-419">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-419">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-420">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-420">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca393-421">Oggetto che indica se annullare l'azione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-421">An object that indicates whether to cancel the action.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ca393-422">Periodo di tempo minimo di attesa dell'avvio dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-422">The minimum amount of time to wait for the operation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-423">Esegue in modo sincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-423">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * TimeSpan * System.Windows.Threading.DispatcherPriority * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, timeout, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="ca393-424">Un delegato a un metodo che accetta i parametri specificati in <c>args</c>, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-424">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ca393-425">Periodo di tempo massimo di attesa del completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-425">The maximum amount of time to wait for the operation to complete.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-426">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-426">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ca393-427">Matrice di oggetti da passare come argomenti al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-427">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="ca393-428">Può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-428">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-429">Esegue in modo sincrono il delegato specificato entro l'intervallo di tempo designato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-429">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-430">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-430">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-431">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-431">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="ca393-432">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-432">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="ca393-433">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-433">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="ca393-434">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-434">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ca393-435"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-435"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="ca393-436">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-436">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-437"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è un'operazione sincrona. Pertanto, controllo non verrà restituito all'oggetto chiamante fino a dopo che viene restituito il callback.</span><span class="sxs-lookup"><span data-stu-id="ca393-437"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate * obj * obj[] -&gt; obj" Usage="dispatcher.Invoke (priority, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ca393-438">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-438">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ca393-439">Delegato a un metodo che accetta più argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-439">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ca393-440">Oggetto da passare come argomento al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-440">An object to pass as an argument to the given method.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ca393-441">Matrice di oggetti da passare come argomenti al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-441">An array of objects to pass as arguments to the given method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-442">Esegue in modo sincrono il delegato specificato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-442">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-443">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-443">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-444">`Arg` può essere `null` se non è necessario un argomento</span><span class="sxs-lookup"><span data-stu-id="ca393-444">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="ca393-445">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-445">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ca393-446">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-446">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ca393-447">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-447">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ca393-448">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-448">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ca393-449"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-449"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ca393-450">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-450">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-451"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è un'operazione sincrona. Pertanto, controllo non verrà restituito all'oggetto chiamante fino a dopo che viene restituito il callback.</span><span class="sxs-lookup"><span data-stu-id="ca393-451"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca393-452">
            <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-452">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ca393-453">
            <paramref name="priority" /> non è una priorità valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-453">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca393-454">
            <paramref name="method" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-454">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate * obj -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ca393-455">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-455">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ca393-456">Tempo massimo di attesa del termine dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-456">The maximum time to wait for the operation to finish.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ca393-457">Delegato a un metodo che accetta più argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-457">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ca393-458">Oggetto da passare come argomento al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-458">An object to pass as an argument to the given method.</span>
          </span>
          <span data-ttu-id="ca393-459">Se non sono richiesti argomenti, può corrispondere a <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-459">This can be <see langword="null" /> if no arguments are needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-460">Esegue in modo sincrono il delegato specificato con la priorità e l'argomento specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-460">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-461">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-461">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-462">`Arg` può essere `null` se non è necessario un argomento</span><span class="sxs-lookup"><span data-stu-id="ca393-462">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="ca393-463">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-463">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ca393-464">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-464">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ca393-465">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-465">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ca393-466">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-466">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ca393-467"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-467"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ca393-468">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-468">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-469"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è un'operazione sincrona. Pertanto, controllo non verrà restituito all'oggetto chiamante fino a dopo che viene restituito il callback.</span><span class="sxs-lookup"><span data-stu-id="ca393-469"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca393-470">
            <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-470">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ca393-471">
            <paramref name="priority" /> non è una priorità valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-471">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca393-472">
            <paramref name="method" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-472">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate * obj * obj[] -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ca393-473">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-473">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ca393-474">Tempo massimo di attesa del termine dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-474">The maximum time to wait for the operation to finish.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ca393-475">Delegato a un metodo che accetta più argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-475">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ca393-476">Oggetto da passare come argomento al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-476">An object to pass as an argument to the specified method.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ca393-477">Matrice di oggetti da passare come argomenti al metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-477">An array of objects to pass as arguments to the specified method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-478">Esegue in modo sincrono il delegato specificato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-478">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-479">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-479">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-480">`Arg` può essere `null` se un argomento non è necessaria.</span><span class="sxs-lookup"><span data-stu-id="ca393-480">`Arg` can be `null` if an argument is not needed.</span></span>  
  
 <span data-ttu-id="ca393-481">Nelle [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], solo i thread che ha creato un <xref:System.Windows.Threading.DispatcherObject> può accedere a quell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="ca393-481">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ca393-482">Ad esempio, un thread in background che viene attivato dal thread principale dell'interfaccia utente non è possibile aggiornare il contenuto di un <xref:System.Windows.Controls.Button> creato sul thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-482">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ca393-483">Affinché il thread in background accedere alla proprietà Content del <xref:System.Windows.Controls.Button>, il thread in background deve delegare il lavoro dal <xref:System.Windows.Threading.Dispatcher> associato al thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="ca393-483">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ca393-484">Questa operazione viene eseguita tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-484">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ca393-485"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è sincrono e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> è asincrona.</span><span class="sxs-lookup"><span data-stu-id="ca393-485"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ca393-486">L'operazione viene aggiunta alla coda degli eventi dei <xref:System.Windows.Threading.Dispatcher> corrispondente all'oggetto specificato <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ca393-486">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ca393-487"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> è un'operazione sincrona. Pertanto, controllo non verrà restituito all'oggetto chiamante fino a dopo che viene restituito il callback.</span><span class="sxs-lookup"><span data-stu-id="ca393-487"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca393-488">
            <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-488">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ca393-489">
            <paramref name="priority" /> non è un oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-489">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca393-490">
            <paramref name="method" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-490">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; -&gt; 'Result" Usage="dispatcher.Invoke callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ca393-491">Il tipo del valore restituito del delegato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-491">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ca393-492">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-492">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-493">Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-493">Executes the specified <see cref="T:System.Func`1" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-494">Il valore restituito da `callback`.</span><span class="sxs-lookup"><span data-stu-id="ca393-494">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ca393-495">Il tipo del valore restituito del delegato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-495">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ca393-496">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-496">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-497">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-497">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-498">Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-498">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-499">Il valore restituito da `callback`.</span><span class="sxs-lookup"><span data-stu-id="ca393-499">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ca393-500">Il tipo del valore restituito del delegato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-500">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ca393-501">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-501">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-502">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-502">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca393-503">Oggetto che indica se annullare l'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-503">An object that indicates whether to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-504">Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-504">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-505">Il valore restituito da `callback`.</span><span class="sxs-lookup"><span data-stu-id="ca393-505">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken * TimeSpan -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority, cancellationToken, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ca393-506">Il tipo del valore restituito del delegato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-506">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ca393-507">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-507">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-508">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-508">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca393-509">Oggetto che indica se annullare l'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-509">An object that indicates whether to cancel the operation.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ca393-510">Periodo di tempo minimo di attesa dell'avvio dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-510">The minimum amount of time to wait for the operation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-511">Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-511">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-512">Il valore restituito da `callback`.</span><span class="sxs-lookup"><span data-stu-id="ca393-512">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-513">Esegue in modo asincrono il delegato specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-513">Executes the specified delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ca393-514">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-514">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-515">Esegue in modo asincrono il <see cref="T:System.Action" /> specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-515">Executes the specified <see cref="T:System.Action" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-516">Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-516">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action, priority As DispatcherPriority) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action * System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ca393-517">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-517">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-518">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-518">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-519">Esegue in modo asincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-519">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-520">Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-520">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ca393-521">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-521">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-522">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-522">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca393-523">Oggetto che indica se annullare l'azione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-523">An object that indicates whether to cancel the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-524">Esegue in modo asincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-524">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-525">Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-525">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult)) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ca393-526">Il tipo del valore restituito del delegato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-526">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ca393-527">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-527">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-528">Esegue in modo asincrono il <see cref="T:System.Func`1" /> specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-528">Executes the specified <see cref="T:System.Func`1" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-529">Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-529">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ca393-530">Il tipo del valore restituito del delegato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-530">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ca393-531">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-531">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-532">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-532">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-533">Esegue in modo asincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-533">Executes the specified <see cref="T:System.Func`1" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-534">Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-534">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ca393-535">Il tipo del valore restituito del delegato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-535">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ca393-536">Un delegato da richiamare tramite il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-536">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ca393-537">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-537">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca393-538">Oggetto che indica se annullare l'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-538">An object that indicates whether to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-539">Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-539">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-540">Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-540">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeShutdown">
      <MemberSignature Language="C#" Value="public void InvokeShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvokeShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvokeShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvokeShutdown();" />
      <MemberSignature Language="F#" Value="member this.InvokeShutdown : unit -&gt; unit" Usage="dispatcher.InvokeShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca393-541">Inizia il processo di arresto di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-541">Initiates the shutdown process of the <see cref="T:System.Windows.Threading.Dispatcher" /> synchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-542"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> le richieste di autorizzazioni dell'interfaccia utente senza restrizioni.</span><span class="sxs-lookup"><span data-stu-id="ca393-542"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="ca393-543">Quando la <xref:System.Windows.Threading.Dispatcher> inizia l'arresto, il <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> evento viene generato e <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ca393-543">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="ca393-544">Il <xref:System.Windows.Threading.Dispatcher> si arresta completamente fino a quando la coda degli eventi viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="ca393-544">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="ca393-545">Quando il Dispatcher termina l'arresto, la <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> viene generato l'evento e il <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ca393-545">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ca393-546">Una volta avviato il processo di arresto, tutto lavoro in sospeso vengono interrotte elementi nella coda.</span><span class="sxs-lookup"><span data-stu-id="ca393-546">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ca393-547">Per arrestare il dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-547">for shutting down the dispatcher.</span>
          </span>
          <span data-ttu-id="ca393-548">Enumerazioni associate:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-548">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PushFrame">
      <MemberSignature Language="C#" Value="public static void PushFrame (System.Windows.Threading.DispatcherFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushFrame(class System.Windows.Threading.DispatcherFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushFrame (frame As DispatcherFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushFrame(System::Windows::Threading::DispatcherFrame ^ frame);" />
      <MemberSignature Language="F#" Value="static member PushFrame : System.Windows.Threading.DispatcherFrame -&gt; unit" Usage="System.Windows.Threading.Dispatcher.PushFrame frame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="System.Windows.Threading.DispatcherFrame" />
      </Parameters>
      <Docs>
        <param name="frame">
          <span data-ttu-id="ca393-549">Frame per il dispatcher da elaborare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-549">The frame for the dispatcher to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-550">Immette un ciclo di esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-550">Enters an execute loop.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-551">Oggetto <xref:System.Windows.Threading.DispatcherFrame> rappresenta un ciclo che elabora gli elementi di lavoro in sospeso.</span><span class="sxs-lookup"><span data-stu-id="ca393-551">A <xref:System.Windows.Threading.DispatcherFrame> represents a loop that processes pending work items.</span></span>  
  
 <span data-ttu-id="ca393-552">Il Dispatcher elabora la coda di elementi di lavoro in un ciclo.</span><span class="sxs-lookup"><span data-stu-id="ca393-552">The Dispatcher processes the work item queue in a loop.</span></span>  <span data-ttu-id="ca393-553">Il ciclo si intende un frame.</span><span class="sxs-lookup"><span data-stu-id="ca393-553">The loop is referred to as a frame.</span></span>  <span data-ttu-id="ca393-554">Il ciclo iniziale viene in genere avviato dall'applicazione chiamando <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-554">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="ca393-555"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> entra in un ciclo rappresentato dal parametro `frame`.</span><span class="sxs-lookup"><span data-stu-id="ca393-555"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> enters a loop represented by the parameter `frame`.</span></span>  <span data-ttu-id="ca393-556">A ogni iterazione del ciclo, il <xref:System.Windows.Threading.Dispatcher> controllerà il <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> proprietà di <xref:System.Windows.Threading.DispatcherFrame> classe per determinare se il ciclo deve continuare o se deve essere arrestata.</span><span class="sxs-lookup"><span data-stu-id="ca393-556">At each iteration of the loop, the <xref:System.Windows.Threading.Dispatcher> will check the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property on the <xref:System.Windows.Threading.DispatcherFrame> class to determine whether the loop should continue or if it should stop.</span></span>  
  
 <span data-ttu-id="ca393-557"><xref:System.Windows.Threading.DispatcherFrame> consente il <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> rispetta la proprietà da impostare in modo esplicito ed è il <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> proprietà di <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ca393-557"><xref:System.Windows.Threading.DispatcherFrame> allows for the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property to be set explicitly and it respects the <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> property on the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="ca393-558">Ciò significa che, quando la <xref:System.Windows.Threading.Dispatcher> inizia l'arresto, frame che utilizzano il valore predefinito <xref:System.Windows.Threading.DispatcherFrame> implementazione terminerà, che consente tutti i frame annidati uscire.</span><span class="sxs-lookup"><span data-stu-id="ca393-558">This means when the <xref:System.Windows.Threading.Dispatcher> starts to shut down, frames that use the default <xref:System.Windows.Threading.DispatcherFrame> implementation will exit, which enables all nested frames to exit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca393-559">Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Windows.Threading.DispatcherFrame> per ottenere risultati simili come i [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ca393-559">The following example shows how to use a <xref:System.Windows.Threading.DispatcherFrame> to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.</span></span>  
  
 [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]
 [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca393-560">
            <paramref name="frame" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-560">
              <paramref name="frame" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca393-561">
            <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> è <see langword="true" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-561">
              <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> is <see langword="true" /></span>
          </span>
          <span data-ttu-id="ca393-562">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-562">-or-</span>
          </span>
          <span data-ttu-id="ca393-563">
            <paramref name="frame" /> è in esecuzione su un oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> diverso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-563">
              <paramref name="frame" /> is running on a different <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
          <span data-ttu-id="ca393-564">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-564">-or-</span>
          </span>
          <span data-ttu-id="ca393-565">L'elaborazione del dispatcher è stata disabilitata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-565">Dispatcher processing has been disabled.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ca393-566">Per effettuare il push di un frame di esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-566">for pushing an execution frame.</span>
          </span>
          <span data-ttu-id="ca393-567">Enumerazioni associate:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-567">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Run" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run();" />
      <MemberSignature Language="F#" Value="static member Run : unit -&gt; unit" Usage="System.Windows.Threading.Dispatcher.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca393-568">Inserisce il frame di esecuzione principale nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-568">Pushes the main execution frame on the event queue of the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-569">Il <xref:System.Windows.Threading.Dispatcher> elabora la coda degli eventi in un ciclo.</span><span class="sxs-lookup"><span data-stu-id="ca393-569">The <xref:System.Windows.Threading.Dispatcher> processes the event queue in a loop.</span></span>  <span data-ttu-id="ca393-570">Il ciclo si intende un frame.</span><span class="sxs-lookup"><span data-stu-id="ca393-570">The loop is referred to as a frame.</span></span>  <span data-ttu-id="ca393-571">Il ciclo iniziale viene in genere avviato dall'applicazione chiamando <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca393-571">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="ca393-572">Il frame di esecuzione principale continuerà finché il <xref:System.Windows.Threading.Dispatcher> viene arrestato.</span><span class="sxs-lookup"><span data-stu-id="ca393-572">The main execution frame will continue until the <xref:System.Windows.Threading.Dispatcher> is shutdown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownFinished">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownFinished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownFinished" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownFinished As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownFinished;" />
      <MemberSignature Language="F#" Value="member this.ShutdownFinished : EventHandler " Usage="member this.ShutdownFinished : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-573">Si verifica quando <see cref="T:System.Windows.Threading.Dispatcher" /> termina l'arresto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-573">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> finishes shutting down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-574">Quando il processo di arresto di un <xref:System.Windows.Threading.Dispatcher> viene avviato, il <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> evento viene generato e <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ca393-574">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="ca393-575">Il <xref:System.Windows.Threading.Dispatcher> non si arresta completamente fino a quando la coda degli eventi viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="ca393-575">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="ca393-576">Quando il Dispatcher termina l'arresto, la <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> viene generato l'evento e il <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ca393-576">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ca393-577">Una volta avviato il processo di arresto, tutto lavoro in sospeso vengono interrotte elementi nella coda.</span><span class="sxs-lookup"><span data-stu-id="ca393-577">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownStarted">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownStarted;" />
      <MemberSignature Language="F#" Value="member this.ShutdownStarted : EventHandler " Usage="member this.ShutdownStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-578">Si verifica quando <see cref="T:System.Windows.Threading.Dispatcher" /> inizia l'arresto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-578">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> begins to shut down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-579">Quando il processo di arresto di un <xref:System.Windows.Threading.Dispatcher> viene avviato, il <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> evento viene generato e <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ca393-579">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="ca393-580">Il <xref:System.Windows.Threading.Dispatcher> non si arresta completamente fino a quando la coda degli eventi viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="ca393-580">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="ca393-581">Quando il Dispatcher termina l'arresto, la <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> viene generato l'evento e il <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ca393-581">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ca393-582">Una volta avviato il processo di arresto, tutto lavoro in sospeso vengono interrotte elementi nella coda.</span><span class="sxs-lookup"><span data-stu-id="ca393-582">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public System.Threading.Thread Thread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Thread Thread" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Thread" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thread As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Thread ^ Thread { System::Threading::Thread ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thread : System.Threading.Thread" Usage="System.Windows.Threading.Dispatcher.Thread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-583">Ottiene il thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-583">Gets the thread this <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca393-584">Thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-584">The thread.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Event UnhandledException As DispatcherUnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : System.Windows.Threading.DispatcherUnhandledExceptionEventHandler " Usage="member this.UnhandledException : System.Windows.Threading.DispatcherUnhandledExceptionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-585">Si verifica quando viene generata un'eccezione del thread non intercettata durante l'esecuzione di un delegato mediante <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> o <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-585">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-586">Questo evento viene generato quando un'eccezione generata durante l'esecuzione di un delegato tramite <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> viene intercettata.</span><span class="sxs-lookup"><span data-stu-id="ca393-586">This event is raised when an exception that was thrown during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is uncaught.</span></span>  
  
 <span data-ttu-id="ca393-587">Un gestore può contrassegnare l'eccezione come gestito, che verrà impedire venga chiamato il gestore dell'eccezione interna.</span><span class="sxs-lookup"><span data-stu-id="ca393-587">A handler can mark the exception as handled, which will prevent the internal exception handler from being called.</span></span>  
  
 <span data-ttu-id="ca393-588">I gestori eventi per questo evento devono essere scritto con attenzione per evitare di creare eccezioni secondarie e per intercettare qualsiasi che si verificano.</span><span class="sxs-lookup"><span data-stu-id="ca393-588">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span> <span data-ttu-id="ca393-589">È consigliabile evitare l'allocazione di memoria o per eseguire operazioni con uso intensivo nel gestore di tutte le risorse.</span><span class="sxs-lookup"><span data-stu-id="ca393-589">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="ca393-590">Il <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> eventi fornisce un mezzo per non generare la <xref:System.Windows.Threading.Dispatcher.UnhandledException> evento.</span><span class="sxs-lookup"><span data-stu-id="ca393-590">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="ca393-591">Il <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> evento viene generato prima di tutto e, se <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> nel <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> è impostata su `false`, il <xref:System.Windows.Threading.Dispatcher.UnhandledException> evento non verrà generato.</span><span class="sxs-lookup"><span data-stu-id="ca393-591">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="UnhandledExceptionFilter">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledExceptionFilter As DispatcherUnhandledExceptionFilterEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionFilterEventHandler ^ UnhandledExceptionFilter;" />
      <MemberSignature Language="F#" Value="member this.UnhandledExceptionFilter : System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler " Usage="member this.UnhandledExceptionFilter : System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-592">Si verifica quando viene generata un'eccezione del thread non intercettata durante l'esecuzione di un delegato mediante <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> o <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> in fase di filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-592">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> when in the filter stage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-593">Questo evento viene generato durante la fase di filtro per un'eccezione generata durante l'esecuzione per mezzo di un delegato <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> e non viene intercettata.</span><span class="sxs-lookup"><span data-stu-id="ca393-593">This event is raised during the filter stage for an exception that is raised during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> and is uncaught.</span></span>  
  
 <span data-ttu-id="ca393-594">Lo stack di chiamate non viene rimosso a questo punto (eccezioni first-chance).</span><span class="sxs-lookup"><span data-stu-id="ca393-594">The call stack is not unwound at this point (first-chance exception).</span></span>  
  
 <span data-ttu-id="ca393-595">I gestori eventi per questo evento devono essere scritto con attenzione per evitare di creare eccezioni secondarie e per intercettare qualsiasi che si verificano.</span><span class="sxs-lookup"><span data-stu-id="ca393-595">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span>  <span data-ttu-id="ca393-596">È consigliabile evitare l'allocazione di memoria o per eseguire operazioni con uso intensivo nel gestore di tutte le risorse.</span><span class="sxs-lookup"><span data-stu-id="ca393-596">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="ca393-597">Il <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> eventi fornisce un mezzo per non generare la <xref:System.Windows.Threading.Dispatcher.UnhandledException> evento.</span><span class="sxs-lookup"><span data-stu-id="ca393-597">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="ca393-598">Il <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> evento viene generato prima di tutto e, se <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> nel <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> è impostata su `false`, il <xref:System.Windows.Threading.Dispatcher.UnhandledException> evento non verrà generato.</span><span class="sxs-lookup"><span data-stu-id="ca393-598">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ca393-599">per l'aggiunta o rimozione di un gestore per questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-599">for adding or removing a handler for this event.</span>
          </span>
          <span data-ttu-id="ca393-600">Enumerazioni associate:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-600">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ValidatePriority">
      <MemberSignature Language="C#" Value="public static void ValidatePriority (System.Windows.Threading.DispatcherPriority priority, string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidatePriority(valuetype System.Windows.Threading.DispatcherPriority priority, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ValidatePriority (priority As DispatcherPriority, parameterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidatePriority(System::Windows::Threading::DispatcherPriority priority, System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="static member ValidatePriority : System.Windows.Threading.DispatcherPriority * string -&gt; unit" Usage="System.Windows.Threading.Dispatcher.ValidatePriority (priority, parameterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ca393-601">Priorità da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-601">The priority to check.</span>
          </span>
        </param>
        <param name="parameterName">
          <span data-ttu-id="ca393-602">Stringa che verrà restituita dall'eccezione che si verifica se la priorità non è valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-602">A string that will be returned by the exception that occurs if the priority is invalid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-603">Determina se la priorità stabilita dall'oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> specificato sia valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-603">Determines whether the specified <see cref="T:System.Windows.Threading.DispatcherPriority" /> is a valid priority.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ca393-604">
            <paramref name="priority" /> non è un oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-604">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberSignature Language="F#" Value="member this.VerifyAccess : unit -&gt; unit" Usage="dispatcher.VerifyAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca393-605">Determina se il thread chiamante ha accesso a <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-605">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-606">Solo il thread di <xref:System.Windows.Threading.Dispatcher> viene creato sarà accessibile il <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ca393-606">Only the thread the <xref:System.Windows.Threading.Dispatcher> is created on may access the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="ca393-607">Questo metodo è pubblico; di conseguenza, qualsiasi thread può verificare se dispone dell'accesso al <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ca393-607">This method is public; therefore, any thread can check to see whether it has access to the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="ca393-608">La differenza tra <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> e <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> viene <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> restituisce un valore booleano se il thread chiamante non ha accesso per il <xref:System.Windows.Threading.Dispatcher> e <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="ca393-608">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean if the calling thread does not have access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca393-609">L'esempio seguente usa <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> per determinare se un thread abbia accesso al thread che un <xref:System.Windows.Controls.Button> è stato creato.</span><span class="sxs-lookup"><span data-stu-id="ca393-609">The following example uses <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="ca393-610">Il metodo accetta un oggetto come argomento, che viene eseguito il cast a un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ca393-610">The method takes an object as an argument, which is cast to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="ca393-611">Il <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> metodo sul <xref:System.Windows.Threading.Dispatcher> del <xref:System.Windows.Controls.Button> viene chiamato per verificare l'accesso al thread.</span><span class="sxs-lookup"><span data-stu-id="ca393-611">The <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  
  
 <span data-ttu-id="ca393-612">Se il thread chiamante può accedere al <xref:System.Windows.Threading.Dispatcher>, il <xref:System.Windows.Controls.Button> viene aggiornata tramite l'accesso solo i membri del <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ca393-612">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="ca393-613">Se il thread chiamante non ha accesso, un <xref:System.InvalidOperationException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="ca393-613">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  <span data-ttu-id="ca393-614">In questo esempio rileva l'eccezione e inserisce un delegato che accetta un <xref:System.Windows.Controls.Button> come argomento, nelle <xref:System.Windows.Threading.Dispatcher> del <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ca393-614">This example catches the exception and pushes a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="ca393-615">Ciò <xref:System.Windows.Threading.Dispatcher> eseguirà l'operazione di aggiornamento di <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ca393-615">This <xref:System.Windows.Threading.Dispatcher> will do the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccessverifyaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca393-616">Il thread chiamante non ha accesso a <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-616">The calling thread does not have access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Yield">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca393-617">Crea un oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e offre al dispatcher la possibilità di elaborare altri eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-617">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield () As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield();" />
      <MemberSignature Language="F#" Value="static member Yield : unit -&gt; System.Windows.Threading.DispatcherPriorityAwaitable" Usage="System.Windows.Threading.Dispatcher.Yield " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca393-618">Crea un oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e offre al dispatcher la possibilità di elaborare altri eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-618">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-619">Oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e consente a quest'ultimo di elaborare altri eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-619">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-620">Questo metodo fornisce un modo per rilasciare temporaneamente il controllo dell'esecuzione al dispatcher corrente in modo che è possibile eseguire altre operazioni, ad esempio elaborare altri eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-620">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="ca393-621">Usare la `await`, o `Await` in Visual Basic, operatore sul valore restituito per restituire il controllo al dispatcher corrente.</span><span class="sxs-lookup"><span data-stu-id="ca393-621">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="ca393-622">Usare questo metodo se vuole permettere all'app di elaborare gli eventi mentre l'app esegue molte operazioni sul thread UI.</span><span class="sxs-lookup"><span data-stu-id="ca393-622">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="ca393-623">Ad esempio, è possibile utilizzare questo metodo in un ciclo di esecuzione prolungata che aggiorna un controllo.</span><span class="sxs-lookup"><span data-stu-id="ca393-623">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 <span data-ttu-id="ca393-624">Questo metodo è equivalente alla chiamata di <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> metodo e passando <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ca393-624">This method is equivalent to calling the <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> method and passing in <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield (priority As DispatcherPriority) As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="static member Yield : System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherPriorityAwaitable" Usage="System.Windows.Threading.Dispatcher.Yield priority" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ca393-625">Priorità con cui pianificare la continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-625">The priority at which to schedule the continuation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca393-626">Crea un oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e offre al dispatcher la possibilità di elaborare altri eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-626">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
          <span data-ttu-id="ca393-627">Il lavoro che si verifica quando il controllo ritorna al codice in attesa del risultato di questo metodo viene pianificato in base alla priorità specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-627">The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca393-628">Oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e consente a quest'ultimo di elaborare altri eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca393-628">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca393-629">Questo metodo fornisce un modo per rilasciare temporaneamente il controllo dell'esecuzione al dispatcher corrente in modo che è possibile eseguire altre operazioni, ad esempio elaborare altri eventi.</span><span class="sxs-lookup"><span data-stu-id="ca393-629">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="ca393-630">Usare la `await`, o `Await` in Visual Basic, operatore sul valore restituito per restituire il controllo al dispatcher corrente.</span><span class="sxs-lookup"><span data-stu-id="ca393-630">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="ca393-631">Usare questo metodo se vuole permettere all'app di elaborare gli eventi mentre l'app esegue molte operazioni sul thread UI.</span><span class="sxs-lookup"><span data-stu-id="ca393-631">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="ca393-632">Ad esempio, è possibile utilizzare questo metodo in un ciclo di esecuzione prolungata che aggiorna un controllo.</span><span class="sxs-lookup"><span data-stu-id="ca393-632">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>