<Type Name="Parallel" FullName="System.Activities.Statements.Parallel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bcaa55e8fb4da2905812803a1ecc21b5b3c33b8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Parallel : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Parallel extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.Parallel" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Parallel&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class Parallel sealed : System::Activities::NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Branches")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="51fc0-101">Un'attività che esegue simultaneamente e in modo asincrono tutte le attività figlio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="51fc0-101">An activity that executes all child activities simultaneously and asynchronously.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51fc0-102">Un'attività <xref:System.Activities.Statements.Parallel> funziona pianificando simultaneamente ogni <xref:System.Activities.Activity> nella propria raccolta <xref:System.Activities.Statements.Parallel.Branches%2A> all'inizio.</span><span class="sxs-lookup"><span data-stu-id="51fc0-102">A <xref:System.Activities.Statements.Parallel> activity operates by simultaneously scheduling each <xref:System.Activities.Activity> in its <xref:System.Activities.Statements.Parallel.Branches%2A> collection at the start.</span></span> <span data-ttu-id="51fc0-103">Viene completato quando tutti i relativi <xref:System.Activities.Statements.Parallel.Branches%2A> completo o quando il relativo <xref:System.Activities.Statements.Parallel.CompletionCondition%2A> restituisce proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="51fc0-103">It completes when all of its <xref:System.Activities.Statements.Parallel.Branches%2A> complete or when its <xref:System.Activities.Statements.Parallel.CompletionCondition%2A> property evaluates to `true`.</span></span> <span data-ttu-id="51fc0-104">Mentre tutti gli oggetti <xref:System.Activities.Activity> vengono eseguiti in modo asincrono, ma non sui thread separati, così ogni attività successiva verrà eseguita solo quando l'attività pianificata precedentemente viene completata o diventa inattiva.</span><span class="sxs-lookup"><span data-stu-id="51fc0-104">While all the <xref:System.Activities.Activity> objects run asynchronously, they do not execute on separate threads, so each successive activity only executes when the previously scheduled activity completes or goes idle.</span></span> <span data-ttu-id="51fc0-105">Se nessuna delle attività figlio diventa inattiva, questa attività viene eseguita come un'attività <xref:System.Activities.Statements.Sequence>.</span><span class="sxs-lookup"><span data-stu-id="51fc0-105">If none of the child activities of this activity go idle, this activity execute in the same way that a <xref:System.Activities.Statements.Sequence> activity does.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51fc0-106">Nell'esempio di codice riportato di seguito viene illustrata la creazione di un'attività <xref:System.Activities.Statements.Parallel>.</span><span class="sxs-lookup"><span data-stu-id="51fc0-106">The following code sample demonstrates creating a <xref:System.Activities.Statements.Parallel> activity.</span></span> <span data-ttu-id="51fc0-107">Questo esempio è tratto di [gestore di annullamento nell'attività compensabile](~/docs/framework/windows-workflow-foundation/samples/cancellation-handler-on-compensable-activity.md) esempio.</span><span class="sxs-lookup"><span data-stu-id="51fc0-107">This example is from the [Cancellation Handler on Compensable Activity](~/docs/framework/windows-workflow-foundation/samples/cancellation-handler-on-compensable-activity.md) sample.</span></span>  
  
 [!code-csharp[wfs_CompensationCancellation#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_compensationcancellation/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parallel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Parallel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parallel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51fc0-108">Crea una nuova istanza dell'attività <see cref="T:System.Activities.Statements.Parallel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51fc0-108">Creates a new instance of the <see cref="T:System.Activities.Statements.Parallel" /> activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51fc0-109">Nell'esempio di codice riportato di seguito viene illustrata la creazione di un'attività <xref:System.Activities.Statements.Parallel>.</span><span class="sxs-lookup"><span data-stu-id="51fc0-109">The following code sample demonstrates creating a <xref:System.Activities.Statements.Parallel> activity.</span></span> <span data-ttu-id="51fc0-110">Questo esempio è tratto di [gestore di annullamento nell'attività compensabile](~/docs/framework/windows-workflow-foundation/samples/cancellation-handler-on-compensable-activity.md) esempio.</span><span class="sxs-lookup"><span data-stu-id="51fc0-110">This example is from the [Cancellation Handler on Compensable Activity](~/docs/framework/windows-workflow-foundation/samples/cancellation-handler-on-compensable-activity.md) sample.</span></span>  
  
 [!code-csharp[wfs_CompensationCancellation#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_compensationcancellation/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Branches">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; Branches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; Branches" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Parallel.Branches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Branches As Collection(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ Branches { System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("CompletionCondition")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51fc0-111">Gli elementi figlio da eseguire in parallelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51fc0-111">The child elements to be executed in parallel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51fc0-112">Gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51fc0-112">The elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51fc0-113">Nell'esempio di codice riportato di seguito viene illustrata l'impostazione della proprietà Branches di un'attività <xref:System.Activities.Statements.Parallel>.</span><span class="sxs-lookup"><span data-stu-id="51fc0-113">The following code sample demonstrates setting the Branches property of a <xref:System.Activities.Statements.Parallel> activity.</span></span> <span data-ttu-id="51fc0-114">Questo esempio è tratto di [gestore di annullamento nell'attività compensabile](~/docs/framework/windows-workflow-foundation/samples/cancellation-handler-on-compensable-activity.md) esempio.</span><span class="sxs-lookup"><span data-stu-id="51fc0-114">This example is from the [Cancellation Handler on Compensable Activity](~/docs/framework/windows-workflow-foundation/samples/cancellation-handler-on-compensable-activity.md) sample.</span></span>  
  
 [!code-csharp[wfs_CompensationCancellation#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_compensationcancellation/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Parallel.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override void Cancel (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Cancel(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Parallel.Cancel(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Cancel (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Cancel(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletionCondition">
      <MemberSignature Language="C#" Value="public System.Activities.Activity&lt;bool&gt; CompletionCondition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity`1&lt;bool&gt; CompletionCondition" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Parallel.CompletionCondition" />
      <MemberSignature Language="VB.NET" Value="Public Property CompletionCondition As Activity(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity&lt;bool&gt; ^ CompletionCondition { System::Activities::Activity&lt;bool&gt; ^ get(); void set(System::Activities::Activity&lt;bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Variables")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51fc0-115">Esegue la restituzione dopo il completamento di ogni ramo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51fc0-115">Evaluates after any branch completes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51fc0-116">L'espressione di completamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51fc0-116">The completion expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51fc0-117">Se questa proprietà restituisce `true`, quindi gli altri elementi pianificati di <xref:System.Activities.Statements.Parallel.Branches%2A> raccolta sono state annullate.</span><span class="sxs-lookup"><span data-stu-id="51fc0-117">If this property evaluates to `true`, then the other scheduled elements in the <xref:System.Activities.Statements.Parallel.Branches%2A> collection are canceled.</span></span> <span data-ttu-id="51fc0-118">Se questa proprietà non è impostata, tutti gli oggetti <xref:System.Activities.Activity> nella raccolta <xref:System.Activities.Statements.Parallel.Branches%2A> vengono eseguiti fino al completamento.</span><span class="sxs-lookup"><span data-stu-id="51fc0-118">If this property is not set, all <xref:System.Activities.Activity> objects in the <xref:System.Activities.Statements.Parallel.Branches%2A> collection execute until completion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51fc0-119">Nell'esempio di codice riportato di seguito viene illustrata l'impostazione della proprietà CompletionCondition di un'attività <xref:System.Activities.Statements.Parallel>.</span><span class="sxs-lookup"><span data-stu-id="51fc0-119">The following code sample demonstrates setting the CompletionCondition property of a <xref:System.Activities.Statements.Parallel> activity.</span></span> <span data-ttu-id="51fc0-120">Questo esempio è tratto di [gestore di annullamento nell'attività compensabile](~/docs/framework/windows-workflow-foundation/samples/cancellation-handler-on-compensable-activity.md) esempio.</span><span class="sxs-lookup"><span data-stu-id="51fc0-120">This example is from the [Cancellation Handler on Compensable Activity](~/docs/framework/windows-workflow-foundation/samples/cancellation-handler-on-compensable-activity.md) sample.</span></span>  
  
 [!code-csharp[wfs_CompensationCancellation#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_compensationcancellation/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Parallel.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="originalActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInstance">
      <MemberSignature Language="C#" Value="protected override void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateInstance(class System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Parallel.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateInstance (updateContext As NativeActivityUpdateContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateInstance(System::Activities::DynamicUpdate::NativeActivityUpdateContext ^ updateContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateContext" Type="System.Activities.DynamicUpdate.NativeActivityUpdateContext" />
      </Parameters>
      <Docs>
        <param name="updateContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; Variables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; Variables" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Parallel.Variables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Variables As Collection(Of Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ Variables { System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51fc0-121">La raccolta di variabili contenute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51fc0-121">The collection of contained variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51fc0-122">Le variabili contenute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51fc0-122">The contained variables.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>