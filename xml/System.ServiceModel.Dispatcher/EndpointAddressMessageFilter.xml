<Type Name="EndpointAddressMessageFilter" FullName="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f5d986ef294ccab17423855f29426e51969bf07" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30518435" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointAddressMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointAddressMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointAddressMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e63a0-101">Rappresenta una query che controlla se un messaggio soddisfa i requisiti di un indirizzo dell'endpoint specificato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e63a0-101">Represents a query that tests whether a message satisfies the requirements of a specified endpoint address.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63a0-102">Questo filtro controlla se un messaggio soddisfa un indirizzo dell'endpoint specifico.</span><span class="sxs-lookup"><span data-stu-id="e63a0-102">This filter tests whether a message satisfies a particular endpoint address.</span></span> <span data-ttu-id="e63a0-103">Un oggetto <xref:System.ServiceModel.EndpointAddress> include un URI e una raccolta facoltativa di intestazioni di indirizzamento.</span><span class="sxs-lookup"><span data-stu-id="e63a0-103">An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers.</span></span> <span data-ttu-id="e63a0-104">Le intestazioni di indirizzamento e del messaggio sono convertite in formato canonico per essere confrontate per stabilirne l'uguaglianza.</span><span class="sxs-lookup"><span data-stu-id="e63a0-104">The addressing and message headers are canonicalized in order to be compared for equality.</span></span> <span data-ttu-id="e63a0-105">Se un parametro appare più di una volta in <xref:System.ServiceModel.EndpointAddress>, l'intestazione corrispondente deve comparire nel messaggio lo stesso numero di volte.</span><span class="sxs-lookup"><span data-stu-id="e63a0-105">If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.</span></span>  
  
 <span data-ttu-id="e63a0-106">IIS e il file system sottostante (NTFS o FAT) non fanno distinzione tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="e63a0-106">IIS and the underlying file system (NTFS or FAT) are case-insensitive.</span></span> <span data-ttu-id="e63a0-107">Anche i confronti URI eseguiti da questa classe non fanno distinzione tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="e63a0-107">URI comparisons done by this class are also case-insensitive.</span></span> <span data-ttu-id="e63a0-108">In questo caso, ad esempio http://www.microsoft.com viene considerato equivalente a http://WWW.microsoft.com.</span><span class="sxs-lookup"><span data-stu-id="e63a0-108">So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e63a0-109">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="e63a0-110">Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> utilizzato per il controllo dei messaggi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-110">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e63a0-111">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> con un indirizzo specificato rispetto al quale controllare un messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-111">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class with a specified address against which to test a message.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e63a0-112">
            <paramref name="address" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-112">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, includeHostNameInComparison As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address, bool includeHostNameInComparison);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="includeHostNameInComparison" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="e63a0-113">Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> utilizzato per il controllo dei messaggi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span>
          </span>
        </param>
        <param name="includeHostNameInComparison">
          <span data-ttu-id="e63a0-114">
            <see langword="true" /> se il nome host è incluso nel confronto dell'indirizzo dell'endpoint. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-114">
              <see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e63a0-115">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63a0-116">Se viene installato un servizio Web sul computer locale, esistono più modi equivalenti per farvi riferimento, tra cui:</span><span class="sxs-lookup"><span data-stu-id="e63a0-116">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="e63a0-117">http://[nome del computer]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="e63a0-117">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="e63a0-118">http://[nome del computer].[nome della società].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="e63a0-118">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="e63a0-119">Se il valore del parametro `includeHostNameInComparison` è `false`, tutti gli URI vengono risolti sullo stesso endpoint.</span><span class="sxs-lookup"><span data-stu-id="e63a0-119">If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e63a0-120">
            <paramref name="address" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-120">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ Address { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e63a0-121">Ottiene l'indirizzo dell'endpoint rispetto al quale <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> controlla i messaggi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-121">Gets the address that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e63a0-122">L'elemento <see cref="T:System.ServiceModel.EndpointAddress" /> rispetto al quale <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> controlla i messaggi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-122">The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">
          <span data-ttu-id="e63a0-123">Dati associati ai filtri della tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-123">Data associated with the filters in the table.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="e63a0-124">Crea una nuova tabella dei filtri che controlla contemporaneamente un messaggio rispetto a più indirizzi dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-124">Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e63a0-125">Un oggetto che implementa l'interfaccia <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> che può contenere <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> con <paramref name="FilterData" /> associati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-125">An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63a0-126">Il metodo restituisce un'istanza di <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> ottimizzata per controllare gli endpoint del messaggio specifici.</span><span class="sxs-lookup"><span data-stu-id="e63a0-126">The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.</span></span>  
  
 <span data-ttu-id="e63a0-127">Questo metodo deve essere utilizzato da <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="e63a0-127">This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="e63a0-128">Utilizzare i costruttori <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> per creare istanze della tabella dei filtri.</span><span class="sxs-lookup"><span data-stu-id="e63a0-128">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> constructors to create filter table instances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeHostNameInComparison">
      <MemberSignature Language="C#" Value="public bool IncludeHostNameInComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostNameInComparison" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeHostNameInComparison As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostNameInComparison { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e63a0-129">Ottiene un valore che indica se il nome host viene incluso nel confronto dell'indirizzo dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-129">Gets a value that indicates whether the host name is included in the endpoint address comparison.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e63a0-130">
            <see langword="true" /> se il nome host è incluso nel confronto dell'indirizzo dell'endpoint. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-130">
              <see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63a0-131">Se viene installato un servizio Web sul computer locale, esistono più modi equivalenti per farvi riferimento, tra cui:</span><span class="sxs-lookup"><span data-stu-id="e63a0-131">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="e63a0-132">http://[nome del computer]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="e63a0-132">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="e63a0-133">http://[nome del computer].[nome della società].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="e63a0-133">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="e63a0-134">Il valore predefinito di questa proprietà è `false`, pertanto tutti gli URI vengono risolti dallo stesso endpoint, a meno che non venga modificata la proprietà.</span><span class="sxs-lookup"><span data-stu-id="e63a0-134">The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e63a0-135">Controlla se un messaggio o un messaggio memorizzato nel buffer soddisfa i criteri del filtro dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-135">Tests whether a message or buffered message satisfies the criteria of the endpoint filter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63a0-136">La differenza tra i due overload del metodo <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> è che a quello che accetta il parametro <xref:System.ServiceModel.Channels.MessageBuffer> è consentito esaminare il corpo di un messaggio durante il controllo della corrispondenza, mentre a quello che accetta il parametro <xref:System.ServiceModel.Channels.Message> non è consentito.</span><span class="sxs-lookup"><span data-stu-id="e63a0-136">The difference between the two overloads of the <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> method is that the one that takes the <xref:System.ServiceModel.Channels.MessageBuffer> parameter is permitted to examine the body of a message when testing for a match, while the one that takes the <xref:System.ServiceModel.Channels.Message> parameter is not.</span></span>  
  
 <span data-ttu-id="e63a0-137"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> non controlla il contenuto del corpo di un messaggio, pertanto questi due metodi sono equivalenti.</span><span class="sxs-lookup"><span data-stu-id="e63a0-137"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> does not test the contents of the body of a message, so these two methods are equivalent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="e63a0-138">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-138">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e63a0-139">Controlla se un messaggio soddisfa l'indirizzo dell'endpoint specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-139">Tests whether a message satisfies the specified endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e63a0-140">
            <see langword="true" /> se l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> soddisfa l'indirizzo dell'endpoint specificato nel filtro. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-140">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63a0-141">I due overload di questo metodo sono equivalenti perché entrambi esaminano solo le intestazioni del messaggio.</span><span class="sxs-lookup"><span data-stu-id="e63a0-141">The two overloads of this method are equivalent because they both examine only message headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e63a0-142">
            <paramref name="message" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-142">
              <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="e63a0-143">Oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-143">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e63a0-144">Controlla se un messaggio memorizzato nel buffer soddisfa l'indirizzo dell'endpoint specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-144">Tests whether a buffered message satisfies the specified endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e63a0-145">
            <see langword="true" /> se l'oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> soddisfa l'indirizzo dell'endpoint. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-145">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63a0-146">I due overload di questo metodo sono equivalenti perché entrambi esaminano solo le intestazioni del messaggio.</span><span class="sxs-lookup"><span data-stu-id="e63a0-146">The two overloads of this method are equivalent because they both examine only message headers.</span></span> <span data-ttu-id="e63a0-147">L'unico motivo per utilizzare questo overload è se si ha a disposizione un  `messageBuffer` e non un messaggio, perché questo metodo converte il `messageBuffer` in un messaggio.</span><span class="sxs-lookup"><span data-stu-id="e63a0-147">The only reason to use this overload is if you already had a `messageBuffer` available and not a message, because this method converts the `messageBuffer` into a message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e63a0-148">
            <paramref name="messageBuffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e63a0-148">
              <paramref name="messageBuffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>