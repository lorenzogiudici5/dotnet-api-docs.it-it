<Type Name="EndpointAddressMessageFilter" FullName="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f5d986ef294ccab17423855f29426e51969bf07" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30518435" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointAddressMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointAddressMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointAddressMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta una query che controlla se un messaggio soddisfa i requisiti di un indirizzo dell'endpoint specificato.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo filtro controlla se un messaggio soddisfa un indirizzo dell'endpoint specifico. Un oggetto <xref:System.ServiceModel.EndpointAddress> include un URI e una raccolta facoltativa di intestazioni di indirizzamento. Le intestazioni di indirizzamento e del messaggio sono convertite in formato canonico per essere confrontate per stabilirne l'uguaglianza. Se un parametro appare più di una volta in <xref:System.ServiceModel.EndpointAddress>, l'intestazione corrispondente deve comparire nel messaggio lo stesso numero di volte.  
  
 IIS e il file system sottostante (NTFS o FAT) non fanno distinzione tra maiuscole e minuscole. Anche i confronti URI eseguiti da questa classe non fanno distinzione tra maiuscole e minuscole. In questo caso, ad esempio http://www.microsoft.com viene considerato equivalente a http://WWW.microsoft.com.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address">Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> utilizzato per il controllo dei messaggi.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> con un indirizzo specificato rispetto al quale controllare un messaggio.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, includeHostNameInComparison As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address, bool includeHostNameInComparison);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="includeHostNameInComparison" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> utilizzato per il controllo dei messaggi.</param>
        <param name="includeHostNameInComparison">
          <see langword="true" /> se il nome host è incluso nel confronto dell'indirizzo dell'endpoint. In caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se viene installato un servizio Web sul computer locale, esistono più modi equivalenti per farvi riferimento, tra cui:  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   http://[nome del computer]/foo.svc  
  
-   http://[nome del computer].[nome della società].com/foo.svc.  
  
 Se il valore del parametro `includeHostNameInComparison` è `false`, tutti gli URI vengono risolti sullo stesso endpoint.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ Address { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'indirizzo dell'endpoint rispetto al quale <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> controlla i messaggi.</summary>
        <value>L'elemento <see cref="T:System.ServiceModel.EndpointAddress" /> rispetto al quale <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> controlla i messaggi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">Dati associati ai filtri della tabella.</typeparam>
        <summary>Crea una nuova tabella dei filtri che controlla contemporaneamente un messaggio rispetto a più indirizzi dell'endpoint.</summary>
        <returns>Un oggetto che implementa l'interfaccia <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> che può contenere <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> con <paramref name="FilterData" /> associati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo restituisce un'istanza di <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> ottimizzata per controllare gli endpoint del messaggio specifici.  
  
 Questo metodo deve essere utilizzato da <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>. Utilizzare i costruttori <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> per creare istanze della tabella dei filtri.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeHostNameInComparison">
      <MemberSignature Language="C#" Value="public bool IncludeHostNameInComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostNameInComparison" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeHostNameInComparison As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostNameInComparison { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il nome host viene incluso nel confronto dell'indirizzo dell'endpoint.</summary>
        <value>
          <see langword="true" /> se il nome host è incluso nel confronto dell'indirizzo dell'endpoint. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se viene installato un servizio Web sul computer locale, esistono più modi equivalenti per farvi riferimento, tra cui:  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   http://[nome del computer]/foo.svc  
  
-   http://[nome del computer].[nome della società].com/foo.svc.  
  
 Il valore predefinito di questa proprietà è `false`, pertanto tutti gli URI vengono risolti dallo stesso endpoint, a meno che non venga modificata la proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Controlla se un messaggio o un messaggio memorizzato nel buffer soddisfa i criteri del filtro dell'endpoint.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La differenza tra i due overload del metodo <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> è che a quello che accetta il parametro <xref:System.ServiceModel.Channels.MessageBuffer> è consentito esaminare il corpo di un messaggio durante il controllo della corrispondenza, mentre a quello che accetta il parametro <xref:System.ServiceModel.Channels.Message> non è consentito.  
  
 <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> non controlla il contenuto del corpo di un messaggio, pertanto questi due metodi sono equivalenti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da controllare.</param>
        <summary>Controlla se un messaggio soddisfa l'indirizzo dell'endpoint specificato.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> soddisfa l'indirizzo dell'endpoint specificato nel filtro. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I due overload di questo metodo sono equivalenti perché entrambi esaminano solo le intestazioni del messaggio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">Oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> da controllare.</param>
        <summary>Controlla se un messaggio memorizzato nel buffer soddisfa l'indirizzo dell'endpoint specificato.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> soddisfa l'indirizzo dell'endpoint. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I due overload di questo metodo sono equivalenti perché entrambi esaminano solo le intestazioni del messaggio. L'unico motivo per utilizzare questo overload è se si ha a disposizione un  `messageBuffer` e non un messaggio, perché questo metodo converte il `messageBuffer` in un messaggio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageBuffer" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>