<Type Name="IInstanceContextProvider" FullName="System.ServiceModel.Dispatcher.IInstanceContextProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0aa99f55ad7d6609f503f36a43869a0e77c65cc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInstanceContextProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInstanceContextProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInstanceContextProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInstanceContextProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cdd4c-101">Implementare questa interfaccia per partecipare alla creazione o alla scelta di un oggetto <see cref="T:System.ServiceModel.InstanceContext" />, soprattutto per abilitare le sessioni condivise.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cdd4c-101">Implement to participate in the creation or choosing of a <see cref="T:System.ServiceModel.InstanceContext" /> object, especially to enable shared sessions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd4c-102">Implementare l'interfaccia <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> per fornire l'oggetto <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> appropriato al sistema.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-102">Implement the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> interface to provide the appropriate <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> object to the system.</span></span> <span data-ttu-id="cdd4c-103">In genere, questa interfaccia viene implementata per supportare sessioni condivise, abilitare il pooling delle istanze di servizio, controllare la durata delle istanze del servizio o raggruppare i contesti fra client.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-103">Typically, this interface is implemented to support shared sessions, enable service instance pooling, control lifetimes of service instances, or to group contexts among clients.</span></span>  
  
 <span data-ttu-id="cdd4c-104">Ad esempio, per implementare la condivisione, inserire un'interfaccia <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> personalizzata per decidere quale sessione o chiamate da un client è associata con quale oggetto <xref:System.ServiceModel.InstanceContext>.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-104">For example, to implement sharing, insert a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> to decide which session or call from a client is associated with which <xref:System.ServiceModel.InstanceContext> object.</span></span> <span data-ttu-id="cdd4c-105">Per un esempio che illustra la condivisione dei contesti di istanza, vedere [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span><span class="sxs-lookup"><span data-stu-id="cdd4c-105">For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cdd4c-106">Quando un'interfaccia <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> viene inserita in [!INCLUDE[indigo1](~/includes/indigo1-md.md)], la proprietà normale che controlla la creazione di oggetti <xref:System.ServiceModel.InstanceContext> (la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> ) non viene più controllata e non ha effetto.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-106">When an <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> is inserted into [!INCLUDE[indigo1](~/includes/indigo1-md.md)], the normal property that controls the creation of <xref:System.ServiceModel.InstanceContext> objects (the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property) is no longer checked and has no effect.</span></span>  
  
 <span data-ttu-id="cdd4c-107">Un meccanismo più generico con il quale è possibile inizializzare oggetti <xref:System.ServiceModel.InstanceContext> al momento della creazione (ad esempio, per allegare estensioni personalizzate a ogni <xref:System.ServiceModel.InstanceContext>) è rappresentato da <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-107">A more generic mechanism by which you can initialize <xref:System.ServiceModel.InstanceContext> objects when created (for example, to attach custom extensions to each <xref:System.ServiceModel.InstanceContext>) is the <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetExistingInstanceContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContext GetExistingInstanceContext (System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.InstanceContext GetExistingInstanceContext(class System.ServiceModel.Channels.Message message, class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::InstanceContext ^ GetExistingInstanceContext(System::ServiceModel::Channels::Message ^ message, System::ServiceModel::IContextChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="cdd4c-108">Il messaggio in entrata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-108">The incoming message.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="cdd4c-109">Il canale che riceve il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-109">The channel that received the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cdd4c-110">Metodo chiamato quando viene ricevuto un nuovo messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-110">Called when a new message is received.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cdd4c-111">L'oggetto <see cref="T:System.ServiceModel.InstanceContext" /> utilizzato per elaborare il messaggio. Restituire <see langword="null" /> per indicare a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] di creare un nuovo oggetto <see cref="T:System.ServiceModel.InstanceContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-111">The <see cref="T:System.ServiceModel.InstanceContext" /> object that is used to process the message; return <see langword="null" /> to instruct [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to create a new <see cref="T:System.ServiceModel.InstanceContext" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd4c-112">Il metodo <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> viene chiamato quando viene ricevuto un messaggio.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-112">The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> method is called when a message is received.</span></span> <span data-ttu-id="cdd4c-113">Restituire l'oggetto <xref:System.ServiceModel.InstanceContext> con cui elaborare il messaggio, oppure `null`.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-113">Return the <xref:System.ServiceModel.InstanceContext> object that you want to process the message, or `null`.</span></span> <span data-ttu-id="cdd4c-114">Se viene restituito `null`, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] crea un nuovo oggetto <xref:System.ServiceModel.InstanceContext> per il messaggio e quindi chiama il metodo <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A>.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-114">In the case of `null`, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] creates a new <xref:System.ServiceModel.InstanceContext> object for the message and then calls the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> method.</span></span>  
  
 <span data-ttu-id="cdd4c-115">Se viene restituito `null`, il nuovo oggetto <xref:System.ServiceModel.InstanceContext> va viene sottoposto al sistema di limitazione e va a incrementare il conteggio di <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-115">If you return `null`, the new <xref:System.ServiceModel.InstanceContext> object goes through the throttling system and increments the count of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeInstanceContext">
      <MemberSignature Language="C#" Value="public void InitializeInstanceContext (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeInstanceContext(class System.ServiceModel.InstanceContext instanceContext, class System.ServiceModel.Channels.Message message, class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeInstanceContext(System::ServiceModel::InstanceContext ^ instanceContext, System::ServiceModel::Channels::Message ^ message, System::ServiceModel::IContextChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="instanceContext">
          <span data-ttu-id="cdd4c-116">Nuovo oggetto <see cref="T:System.ServiceModel.InstanceContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-116">The new <see cref="T:System.ServiceModel.InstanceContext" /> object.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="cdd4c-117">Il messaggio in entrata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-117">The incoming message.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="cdd4c-118">Il canale che riceve il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-118">The channel that received the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cdd4c-119">Questo metodo viene chiamato quando viene restituito <see langword="null" /> dal metodo <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-119">Called when <see langword="null" /> is returned from the <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd4c-120">Il metodo <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> viene chiamato quando <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> restituisce `null` e viene creato un nuovo oggetto <xref:System.ServiceModel.InstanceContext>.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-120"><xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> is called when <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> returns `null` and a new <xref:System.ServiceModel.InstanceContext> object is created.</span></span> <span data-ttu-id="cdd4c-121">Questo metodo viene chiamato per notificare che è stato creato un nuovo oggetto <xref:System.ServiceModel.InstanceContext>.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-121">This method is called to notify you that a new <xref:System.ServiceModel.InstanceContext> has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle (System.ServiceModel.InstanceContext instanceContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsIdle(class System.ServiceModel.InstanceContext instanceContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle(System::ServiceModel::InstanceContext ^ instanceContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="instanceContext">
          <span data-ttu-id="cdd4c-122">L'oggetto <see cref="T:System.ServiceModel.InstanceContext" /> considerato inattivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-122">The <see cref="T:System.ServiceModel.InstanceContext" /> object that is considered idle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cdd4c-123">Questo metodo viene chiamato quando tutte le attività <see cref="T:System.ServiceModel.InstanceContext" /> sono state completate per consentire agli implementatori di impedire il riciclo di <see cref="T:System.ServiceModel.InstanceContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-123">Called when all <see cref="T:System.ServiceModel.InstanceContext" /> activities have completed to enable implementers to prevent the <see cref="T:System.ServiceModel.InstanceContext" /> from being recycled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cdd4c-124">
            <see langword="true" /> se [!INCLUDE[indigo1](~/includes/indigo1-md.md)] deve chiudere e riciclare l'oggetto <see cref="T:System.ServiceModel.InstanceContext" /> e regolare il valore di <see cref="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-124">
              <see langword="true" /> if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] is to close and recycle the <see cref="T:System.ServiceModel.InstanceContext" /> object and adjust the value of <see cref="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd4c-125">Il metodo <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> viene chiamato quando [!INCLUDE[indigo2](~/includes/indigo2-md.md)] sta per chiudere e riciclare un oggetto <xref:System.ServiceModel.InstanceContext> inattivo, in modo da poter indicare alla fase di esecuzione se completare il processo.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-125"><xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> is called when [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is about to close and recycle an idle <xref:System.ServiceModel.InstanceContext> object so that you can inform the runtime whether to continue doing so.</span></span>  
  
 <span data-ttu-id="cdd4c-126">Per un esempio che illustra la condivisione dei contesti di istanza, vedere [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span><span class="sxs-lookup"><span data-stu-id="cdd4c-126">For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyIdle">
      <MemberSignature Language="C#" Value="public void NotifyIdle (System.ServiceModel.Dispatcher.InstanceContextIdleCallback callback, System.ServiceModel.InstanceContext instanceContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyIdle(class System.ServiceModel.Dispatcher.InstanceContextIdleCallback callback, class System.ServiceModel.InstanceContext instanceContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyIdle(System::ServiceModel::Dispatcher::InstanceContextIdleCallback ^ callback, System::ServiceModel::InstanceContext ^ instanceContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.ServiceModel.Dispatcher.InstanceContextIdleCallback" />
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="cdd4c-127">L'oggetto <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /> che notifica a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] quando l'oggetto <see cref="T:System.ServiceModel.InstanceContext" /> deve essere chiuso e riciclato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-127">The <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /> object that notifies [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <see cref="T:System.ServiceModel.InstanceContext" /> object is to be closed and recycled.</span>
          </span>
        </param>
        <param name="instanceContext">
          <span data-ttu-id="cdd4c-128">Oggetto <see cref="T:System.ServiceModel.InstanceContext" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-128">The current <see cref="T:System.ServiceModel.InstanceContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cdd4c-129">Metodo chiamato quando il metodo <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /> restituisce <see langword="false" /> per consentire agli implementatori di fornire un callback per notificare a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] quando l'oggetto <see cref="T:System.ServiceModel.InstanceContext" /> è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4c-129">Called when the <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /> method returns <see langword="false" /> to enable implementers to provide a callback to notify [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <see cref="T:System.ServiceModel.InstanceContext" /> object is finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd4c-130">Il metodo <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A> viene chiamato quando il metodo <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> restituisce `false` per consentire di fornire a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] un oggetto <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> da utilizzare per informare la fase di esecuzione che <xref:System.ServiceModel.InstanceContext> ha completato il lavoro.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-130">The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A> method is called when the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> method returns `false` to enable you to provide [!INCLUDE[indigo2](~/includes/indigo2-md.md)] with a <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> object that you use to inform the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work.</span></span> <span data-ttu-id="cdd4c-131">Quando l'oggetto <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> notifica alla fase di esecuzione che <xref:System.ServiceModel.InstanceContext> ha completato l'elaborazione, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] chiama <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> ancora una volta.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-131">When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> object notifies the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> once again.</span></span> <span data-ttu-id="cdd4c-132">Questo ciclo continua fino a che <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> restituisce `true` e il contesto viene chiuso e riciclato.</span><span class="sxs-lookup"><span data-stu-id="cdd4c-132">This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> returns `true` and the context is closed and recycled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>