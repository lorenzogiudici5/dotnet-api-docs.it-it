<Type Name="MessageFilter" FullName="System.ServiceModel.Dispatcher.MessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44fa6f6bb564bb469186db822d7d73979753126e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30518575" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageFilter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      Classe <see langword="abstract" /> di base per classi di filtri diverse utilizzate per eseguire query sui messaggi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.MessageFilter> è una classe `abstract` che gli sviluppatori implementano per specificare i criteri da utilizzare per il controllo di messaggi. In genere, i filtri vengono utilizzati da un'applicazione dell'endpoint per determinare come comportarsi con un messaggio basato sull'attività di esame di una parte del messaggio. Un processo di accodamento, ad esempio, può utilizzare una query XPath 1.0 per controllare l'elemento prioritario di un'intestazione nota e determinare se spostare un messaggio all'inizio della coda.  
  
 I filtri vengono memorizzati in una tabella dei filtri che implementa <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>. Ogni filtro nella tabella è associato a dati filtro specificati che possono essere utilizzati per indicare quali azioni intraprendere se un messaggio corrisponde al filtro. I metodi <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> vengono utilizzati per determinare se un messaggio soddisfa un filtro.  
  
 Non è possibile modificare i criteri utilizzati da un filtro una volta costruito il filtro perché le tabelle dei filtri non sono in grado di rilevare modifiche. L'unico modo di modificare i criteri di un filtro è di costruirne un nuovo e di eliminare il filtro esistente.  
  
 Le seguenti classi implementano la classe `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter>:  
  
-   <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> utilizza un'espressione Xpath 1.0 per specificare i criteri per la corrispondenza.  
  
-   <xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> corrisponde a tutti i messaggi.  
  
-   <xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> non corrisponde ad alcun messaggio.  
  
-   <xref:System.ServiceModel.Dispatcher.ActionMessageFilter> controlla se l'azione di un messaggio fa parte di un set specificato di azioni.  
  
-   <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> controlla se un messaggio soddisfa un indirizzo dell'endpoint specificato.  
  
 <xref:System.ServiceModel.Channels.ChannelListenerBase%601> è una classe di base `abstract` da utilizzare per scrivere listener senza accodamento.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Quando viene chiamato in una classe derivata, inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il costruttore è protetto in modo che sia possibile creare istanze solo dei filtri derivati da <xref:System.ServiceModel.Dispatcher.MessageFilter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">Dati associati ai filtri della tabella.</typeparam>
        <summary>Crea una tabella dei filtri per un filtro a cui è associato un tipo di dati specificato.</summary>
        <returns>Oggetto <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> al quale possono essere aggiunti filtri associati a <paramref name="FilterData" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo deve essere chiamato da <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>. È necessario che gli utenti creino una tabella dei filtri chiamando un costruttore per la tabella dei filtri. L'implementazione predefinita di questo metodo restituisce una tabella dei filtri che chiama in sequenza il metodo <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> di ogni filtro. Eseguire l'override di questo metodo per associare una tabella dei filtri personalizzata durante l'implementazione di un filtro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Quando sottoposto a override in una classe derivata, controlla se un messaggio o un messaggio memorizzato nel buffer soddisfa i criteri di un filtro dell'endpoint.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La differenza tra i due overload è che uno accetta un parametro <xref:System.ServiceModel.Channels.Message> e non ha la possibilità di esaminare il corpo. L'altro accetta un parametro <xref:System.ServiceModel.Channels.MessageBuffer> e ha la possibilità di esaminare qualsiasi parte del messaggio. Le intestazioni del messaggio vengono automaticamente memorizzate nel buffer e possono essere controllate da un filtro senza essere utilizzate. Se il corpo deve essere controllato da un filtro, allora l'intero messaggio deve essere memorizzato nel buffer perché un corpo del messaggio non memorizzato nel buffer può essere utilizzato da una query e il contenuto può essere eliminato definitivamente.  
  
 Utilizzare <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> se l'attività di esame del corpo non è necessaria. Utilizzare <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> se l'attività di esame del corpo del messaggio è necessaria.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            I messaggi <see langword="Null" /> non sono validi e devono causare la generazione di un'eccezione <see cref="T:System.ArgumentNullException" />.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da controllare.</param>
        <summary>Quando sottoposto a override in una classe derivata, controlla se un messaggio soddisfa i criteri di un filtro dell'endpoint. Non è possibile esaminare il corpo.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> soddisfa i criteri del filtro. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non può controllare il contenuto del corpo del messaggio.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se il filtro tenta di esaminare il corpo di un messaggio non memorizzato nel buffer, il filtro deve generare un'eccezione <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />. Non deve restituire <see langword="false" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">Oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> da controllare.</param>
        <summary>Quando sottoposto a override in una classe derivata, controlla se un messaggio memorizzato nel buffer soddisfa i criteri di un filtro dell'endpoint.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> soddisfa i criteri del filtro. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il messaggio deve essere completamente memorizzato nel buffer se il corpo deve essere controllato dal filtro. Il corpo del <xref:System.ServiceModel.Channels.MessageBuffer> è completamente memorizzato nel buffer e quindi può essere controllato da un filtro. Il corpo di un <xref:System.ServiceModel.Channels.Message> che non è stato completamente memorizzato nel buffer può essere utilizzato dal controllo del filtro. L'elemento di intestazione di un <xref:System.ServiceModel.Channels.Message> viene automaticamente memorizzato nel filtro e quindi può essere controllato senza essere utilizzato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>