<Type Name="MessageFilter" FullName="System.ServiceModel.Dispatcher.MessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44fa6f6bb564bb469186db822d7d73979753126e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30518575" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageFilter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c002c-101">Classe <see langword="abstract" /> di base per classi di filtri diverse utilizzate per eseguire query sui messaggi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c002c-101">
          <see langword="abstract" /> base class for different classes of filters used to query messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c002c-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> è una classe `abstract` che gli sviluppatori implementano per specificare i criteri da utilizzare per il controllo di messaggi.</span><span class="sxs-lookup"><span data-stu-id="c002c-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> is an `abstract` class that developers implement in order to specify the criteria to use for inspecting messages.</span></span> <span data-ttu-id="c002c-103">In genere, i filtri vengono utilizzati da un'applicazione dell'endpoint per determinare come comportarsi con un messaggio basato sull'attività di esame di una parte del messaggio.</span><span class="sxs-lookup"><span data-stu-id="c002c-103">Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message.</span></span> <span data-ttu-id="c002c-104">Un processo di accodamento, ad esempio, può utilizzare una query XPath 1.0 per controllare l'elemento prioritario di un'intestazione nota e determinare se spostare un messaggio all'inizio della coda.</span><span class="sxs-lookup"><span data-stu-id="c002c-104">A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.</span></span>  
  
 <span data-ttu-id="c002c-105">I filtri vengono memorizzati in una tabella dei filtri che implementa <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="c002c-105">Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span></span> <span data-ttu-id="c002c-106">Ogni filtro nella tabella è associato a dati filtro specificati che possono essere utilizzati per indicare quali azioni intraprendere se un messaggio corrisponde al filtro.</span><span class="sxs-lookup"><span data-stu-id="c002c-106">Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter.</span></span> <span data-ttu-id="c002c-107">I metodi <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> vengono utilizzati per determinare se un messaggio soddisfa un filtro.</span><span class="sxs-lookup"><span data-stu-id="c002c-107">The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter.</span></span>  
  
 <span data-ttu-id="c002c-108">Non è possibile modificare i criteri utilizzati da un filtro una volta costruito il filtro perché le tabelle dei filtri non sono in grado di rilevare modifiche.</span><span class="sxs-lookup"><span data-stu-id="c002c-108">The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change.</span></span> <span data-ttu-id="c002c-109">L'unico modo di modificare i criteri di un filtro è di costruirne un nuovo e di eliminare il filtro esistente.</span><span class="sxs-lookup"><span data-stu-id="c002c-109">The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.</span></span>  
  
 <span data-ttu-id="c002c-110">Le seguenti classi implementano la classe `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter>:</span><span class="sxs-lookup"><span data-stu-id="c002c-110">The following classes implement the `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> class:</span></span>  
  
-   <span data-ttu-id="c002c-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> utilizza un'espressione Xpath 1.0 per specificare i criteri per la corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="c002c-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath 1.0 expression to specify the criteria for a match.</span></span>  
  
-   <span data-ttu-id="c002c-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> corrisponde a tutti i messaggi.</span><span class="sxs-lookup"><span data-stu-id="c002c-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> matches all messages.</span></span>  
  
-   <span data-ttu-id="c002c-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> non corrisponde ad alcun messaggio.</span><span class="sxs-lookup"><span data-stu-id="c002c-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> matches none of the messages.</span></span>  
  
-   <span data-ttu-id="c002c-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> controlla se l'azione di un messaggio fa parte di un set specificato di azioni.</span><span class="sxs-lookup"><span data-stu-id="c002c-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> tests whether the action of a message is one of a specified set of actions.</span></span>  
  
-   <span data-ttu-id="c002c-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> controlla se un messaggio soddisfa un indirizzo dell'endpoint specificato.</span><span class="sxs-lookup"><span data-stu-id="c002c-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> tests whether a message satisfies a specified endpoint address.</span></span>  
  
 <span data-ttu-id="c002c-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> è una classe di base `abstract` da utilizzare per scrivere listener senza accodamento.</span><span class="sxs-lookup"><span data-stu-id="c002c-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> is an `abstract` base class that you can use for writing non-queuing listeners.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c002c-117">Quando viene chiamato in una classe derivata, inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c002c-117">When called in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c002c-118">Il costruttore è protetto in modo che sia possibile creare istanze solo dei filtri derivati da <xref:System.ServiceModel.Dispatcher.MessageFilter>.</span><span class="sxs-lookup"><span data-stu-id="c002c-118">The constructor is protected so that only filters that derive from <xref:System.ServiceModel.Dispatcher.MessageFilter> can be instantiated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">
          <span data-ttu-id="c002c-119">Dati associati ai filtri della tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c002c-119">Data associated with the filters in the table.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="c002c-120">Crea una tabella dei filtri per un filtro a cui è associato un tipo di dati specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c002c-120">Creates a filter table for a filter that has a specified type of data associated with it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c002c-121">Oggetto <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> al quale possono essere aggiunti filtri associati a <paramref name="FilterData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c002c-121">An <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> object to which filters associated with <paramref name="FilterData" /> can be added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c002c-122">Questo metodo deve essere chiamato da <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="c002c-122">This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="c002c-123">È necessario che gli utenti creino una tabella dei filtri chiamando un costruttore per la tabella dei filtri.</span><span class="sxs-lookup"><span data-stu-id="c002c-123">Users should create a filter table by calling a constructor for the filter table.</span></span> <span data-ttu-id="c002c-124">L'implementazione predefinita di questo metodo restituisce una tabella dei filtri che chiama in sequenza il metodo <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> di ogni filtro.</span><span class="sxs-lookup"><span data-stu-id="c002c-124">The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially.</span></span> <span data-ttu-id="c002c-125">Eseguire l'override di questo metodo per associare una tabella dei filtri personalizzata durante l'implementazione di un filtro.</span><span class="sxs-lookup"><span data-stu-id="c002c-125">Override this method to associate a custom filter table when implementing a filter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c002c-126">Quando sottoposto a override in una classe derivata, controlla se un messaggio o un messaggio memorizzato nel buffer soddisfa i criteri di un filtro dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c002c-126">When overridden in a derived class, tests whether a message or a buffered message satisfies the criteria of a filter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c002c-127">La differenza tra i due overload è che uno accetta un parametro <xref:System.ServiceModel.Channels.Message> e non ha la possibilità di esaminare il corpo.</span><span class="sxs-lookup"><span data-stu-id="c002c-127">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the body.</span></span> <span data-ttu-id="c002c-128">L'altro accetta un parametro <xref:System.ServiceModel.Channels.MessageBuffer> e ha la possibilità di esaminare qualsiasi parte del messaggio.</span><span class="sxs-lookup"><span data-stu-id="c002c-128">The other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="c002c-129">Le intestazioni del messaggio vengono automaticamente memorizzate nel buffer e possono essere controllate da un filtro senza essere utilizzate.</span><span class="sxs-lookup"><span data-stu-id="c002c-129">Message headers are automatically buffered and can be inspected by a filter without being consumed.</span></span> <span data-ttu-id="c002c-130">Se il corpo deve essere controllato da un filtro, allora l'intero messaggio deve essere memorizzato nel buffer perché un corpo del messaggio non memorizzato nel buffer può essere utilizzato da una query e il contenuto può essere eliminato definitivamente.</span><span class="sxs-lookup"><span data-stu-id="c002c-130">But if the body is to be inspected by a filter, then the entire message must be buffered because an unbuffered message body can be consumed by a query and its contents destroyed.</span></span>  
  
 <span data-ttu-id="c002c-131">Utilizzare <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> se l'attività di esame del corpo non è necessaria.</span><span class="sxs-lookup"><span data-stu-id="c002c-131">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the body is not required.</span></span> <span data-ttu-id="c002c-132">Utilizzare <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> se l'attività di esame del corpo del messaggio è necessaria.</span><span class="sxs-lookup"><span data-stu-id="c002c-132">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the message body is required.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c002c-133">I messaggi <see langword="Null" /> non sono validi e devono causare la generazione di un'eccezione <see cref="T:System.ArgumentNullException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c002c-133">
                <see langword="Null" /> messages are invalid, and should cause an <see cref="T:System.ArgumentNullException" /> to be thrown.</span>
            </span>
          </para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c002c-134">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c002c-134">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c002c-135">Quando sottoposto a override in una classe derivata, controlla se un messaggio soddisfa i criteri di un filtro dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c002c-135">When overridden in a derived class, tests whether a message satisfies the filter criteria.</span>
          </span>
          <span data-ttu-id="c002c-136">Non è possibile esaminare il corpo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c002c-136">The body cannot be examined.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c002c-137">
            <see langword="true" /> se l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> soddisfa i criteri del filtro. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c002c-137">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c002c-138">Questo metodo non può controllare il contenuto del corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="c002c-138">This method cannot inspect the contents of the message body.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c002c-139">Se il filtro tenta di esaminare il corpo di un messaggio non memorizzato nel buffer, il filtro deve generare un'eccezione <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c002c-139">If the filter attempts to examine the body of an unbuffered message, then the filter must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />.</span>
            </span>
            <span data-ttu-id="c002c-140">Non deve restituire <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c002c-140">It should not return <see langword="false" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c002c-141">Oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c002c-141">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c002c-142">Quando sottoposto a override in una classe derivata, controlla se un messaggio memorizzato nel buffer soddisfa i criteri di un filtro dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c002c-142">When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c002c-143">
            <see langword="true" /> se l'oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> soddisfa i criteri del filtro. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c002c-143">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c002c-144">Il messaggio deve essere completamente memorizzato nel buffer se il corpo deve essere controllato dal filtro.</span><span class="sxs-lookup"><span data-stu-id="c002c-144">The message must be fully buffered if the body is to be inspected by the filter.</span></span> <span data-ttu-id="c002c-145">Il corpo del <xref:System.ServiceModel.Channels.MessageBuffer> è completamente memorizzato nel buffer e quindi può essere controllato da un filtro.</span><span class="sxs-lookup"><span data-stu-id="c002c-145">The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter.</span></span> <span data-ttu-id="c002c-146">Il corpo di un <xref:System.ServiceModel.Channels.Message> che non è stato completamente memorizzato nel buffer può essere utilizzato dal controllo del filtro.</span><span class="sxs-lookup"><span data-stu-id="c002c-146">The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection.</span></span> <span data-ttu-id="c002c-147">L'elemento di intestazione di un <xref:System.ServiceModel.Channels.Message> viene automaticamente memorizzato nel filtro e quindi può essere controllato senza essere utilizzato.</span><span class="sxs-lookup"><span data-stu-id="c002c-147">The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>