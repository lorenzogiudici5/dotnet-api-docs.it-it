<Type Name="IInputSessionShutdown" FullName="System.ServiceModel.Dispatcher.IInputSessionShutdown">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="299929ff295c069a5daedc8d226986d07a0d3f48" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30515195" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInputSessionShutdown" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInputSessionShutdown" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInputSessionShutdown" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInputSessionShutdown" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce il contratto che deve essere implementato per chiudere una sessione di input.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare l'interfaccia <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown> in una sessione duplex per inviare messaggi in uscita prima di chiudere la sessione. Ad esempio, se un client chiude una sessione il servizio può implementare <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving%2A> per essere notificato prima dell'arresto, consentendo al servizio di inviare un messaggio di notifica prima della restituzione. Il client riceve la notifica prima di confermare che il client può chiudere il canale.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ChannelFaulted">
      <MemberSignature Language="C#" Value="public void ChannelFaulted (System.ServiceModel.IDuplexContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChannelFaulted(class System.ServiceModel.IDuplexContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted(System.ServiceModel.IDuplexContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChannelFaulted (channel As IDuplexContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChannelFaulted(System::ServiceModel::IDuplexContextChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IDuplexContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel">Nell'interfaccia <see cref="T:System.ServiceModel.IDuplexContextChannel" /> in cui si sono verificati errori.</param>
        <summary>Indica che nel canale si sono verificati errori.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il metodo <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted%2A> per eseguire un comportamento personalizzato quando in un canale si verificano errori. In genere, il canale viene interrotto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoneReceiving">
      <MemberSignature Language="C#" Value="public void DoneReceiving (System.ServiceModel.IDuplexContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoneReceiving(class System.ServiceModel.IDuplexContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving(System.ServiceModel.IDuplexContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoneReceiving (channel As IDuplexContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoneReceiving(System::ServiceModel::IDuplexContextChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IDuplexContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel">L'interfaccia <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> che ha completato la ricezione.</param>
        <summary>Indica quando il canale del client ha completato la ricezione di messaggi come parte dello scambio di messaggi duplex.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>