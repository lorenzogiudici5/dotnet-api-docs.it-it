<Type Name="IInteractiveChannelInitializer" FullName="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a28ea60b8469e9308d63b77db761ba0f74156d33" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37455131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInteractiveChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInteractiveChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInteractiveChannelInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInteractiveChannelInitializer" />
  <TypeSignature Language="F#" Value="type IInteractiveChannelInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce i metodi che consentono a un'applicazione client di visualizzare un'interfaccia utente per raccogliere informazioni di identità prima di creare il canale.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementare l'interfaccia <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> per consentire a un'applicazione client di visualizzare un'interfaccia utente che consente all'utente dell'applicazione di creare o selezionare le credenziali prima di aprire un canale.  
  
 Per implementare <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, attenersi ai passaggi seguenti in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:  
  
1.  Richiedere e ottenere dall'utente un <xref:System.Net.NetworkCredential?displayProperty=nameWithType> appropriato.  
  
2.  Aggiungere un oggetto parametro del canale personalizzato alla raccolta restituita dal metodo <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> sull'oggetto <xref:System.ServiceModel.IClientChannel> con un parametro di tipo <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>. Questo oggetto parametro del canale viene utilizzato dall'elemento <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> personalizzato per stabilire i token di sicurezza per il canale.  
  
3.  Eseguire.  
  
 Per inserire <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>.  
  
1.  Eseguire l'override del metodo <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> nella classe <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType>  
  
2.  In quel metodo, determinare se è necessario un <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> all'endpoint e in quel caso, aggiungere <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> alla raccolta <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType>.  
  
 Esistono due modi in cui gli sviluppatori di applicazioni possono utilizzare un <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> inserito. L'applicazione client può chiamare <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> oppure <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (o una versione asincrona) prima dell'apertura del canale (il *esplicita* approccio) o semplicemente chiamare la prima operazione (il *implicita* approccio).  
  
 Se si utilizza l'approccio implicito, l'applicazione deve chiamare la prima operazione su un'estensione <xref:System.ServiceModel.ClientBase%601> o <xref:System.ServiceModel.IClientChannel>. Se chiama un elemento diverso dalla prima operazione, viene generata un'eccezione.  
  
 Se si usa l'approccio esplicito, l'applicazione deve eseguire i passaggi seguenti nell'ordine rappresentato:  
  
1.  Chiamare <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> o <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (o una versione asincrona).  
  
2.  Quando gli inizializzatori restituiscono un valore, chiamare il metodo <xref:System.ServiceModel.ICommunicationObject.Open%2A> sull'oggetto <xref:System.ServiceModel.IClientChannel> o sull'oggetto <xref:System.ServiceModel.IClientChannel> restituito dalla proprietà <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType>.  
  
3.  Chiamare le operazioni.  
  
 Si consiglia che le applicazioni di alta qualità controllino il processo dell'interfaccia utente adottando l'approccio esplicito.  
  
 Le applicazioni che usano l'approccio implicito richiamano gli inizializzatori dell'interfaccia utente, ma se l'utente dell'applicazione non risponde entro il periodo di timeout di invio dell'associazione, viene generata un'eccezione quando viene restituita l'interfaccia utente.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.ServiceModel.IClientChannel channel, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (channel As IClientChannel, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(System::ServiceModel::IClientChannel ^ channel, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDisplayInitializationUI : System.ServiceModel.IClientChannel * AsyncCallback * obj -&gt; IAsyncResult" Usage="iInteractiveChannelInitializer.BeginDisplayInitializationUI (channel, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel">Il canale del client.</param>
        <param name="callback">Oggetto di callback.</param>
        <param name="state">I dati di stato.</param>
        <summary>Chiamata asincrona per cominciare a utilizzare un'interfaccia utente al fine di ottenere informazioni sulle credenziali.</summary>
        <returns>L'interfaccia <see cref="T:System.IAsyncResult" /> da utilizzare per richiamare una volta completata l'elaborazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per implementare <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, attenersi ai passaggi seguenti in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:  
  
1.  Richiedere all'utente secondo necessità e ottenere un oggetto <xref:System.Net.NetworkCredential?displayProperty=nameWithType> appropriato.  
  
2.  Aggiungere un oggetto parametro del canale personalizzato alla raccolta restituita dal metodo <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> sull'oggetto <xref:System.ServiceModel.IClientChannel> con un parametro di tipo <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>. Questo oggetto parametro del canale viene utilizzato dall'elemento <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> personalizzato per stabilire i token di sicurezza per il canale.  
  
3.  Eseguire.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDisplayInitializationUI : IAsyncResult -&gt; unit" Usage="iInteractiveChannelInitializer.EndDisplayInitializationUI result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Oggetto <see cref="T:System.IAsyncResult" />.</param>
        <summary>Elemento che viene chiamato quando il metodo <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> viene modificato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>