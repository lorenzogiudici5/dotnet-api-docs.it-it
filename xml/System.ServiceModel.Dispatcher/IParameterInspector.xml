<Type Name="IParameterInspector" FullName="System.ServiceModel.Dispatcher.IParameterInspector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72588091c87250a2b84de5c8bfcbde5c02928849" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37615904" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IParameterInspector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IParameterInspector" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IParameterInspector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IParameterInspector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IParameterInspector" />
  <TypeSignature Language="F#" Value="type IParameterInspector = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="74dd7-101">Definisce il contratto implementato dai controlli del parametro personalizzati che consente di controllare o modificare le informazioni prima e dopo le chiamate sia sul client che sul servizio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="74dd7-101">Defines the contract implemented by custom parameter inspectors that enables inspection or modification of information prior to and subsequent to calls on either the client or the service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74dd7-102">Implementare l'interfaccia <xref:System.ServiceModel.Dispatcher.IParameterInspector> per creare un controllo del parametro personalizzato che può visualizzare e modificare il contenuto di una chiamata sia prima che dopo la chiamata nelle applicazioni client o di servizio.</span><span class="sxs-lookup"><span data-stu-id="74dd7-102">Implement the <xref:System.ServiceModel.Dispatcher.IParameterInspector> interface to create a custom parameter inspector that can view and modify the contents of a call both before the call and after the call in either client or service applications.</span></span>  
  
 <span data-ttu-id="74dd7-103">Nelle chiamate in uscita da un client, il controllo viene richiamato prima che il contenuto della richiesta sia serializzato e inviato al servizio.</span><span class="sxs-lookup"><span data-stu-id="74dd7-103">On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service.</span></span> <span data-ttu-id="74dd7-104">Il controllo viene chiamato anche dopo che la risposta è stata deserializzata ma prima che i valori restituiti vengano distribuiti al metodo del proxy.</span><span class="sxs-lookup"><span data-stu-id="74dd7-104">The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.</span></span>  
  
 <span data-ttu-id="74dd7-105">Su chiamate in entrata a un servizio, il controllo viene richiamato dopo la deserializzazione dei parametri, ma prima di essere distribuiti all'operazione del servizio.</span><span class="sxs-lookup"><span data-stu-id="74dd7-105">On inbound calls to a service, the inspector is invoked after parameters are deserialized but before they are dispatched to the service operation.</span></span>  
  
 <span data-ttu-id="74dd7-106">Utilizzare le proprietà <xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=nameWithType> o <xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=nameWithType> per aggiungere un'implementazione <xref:System.ServiceModel.Dispatcher.IParameterInspector> alla raccolta di controlli per un'operazione specifica.</span><span class="sxs-lookup"><span data-stu-id="74dd7-106">Use the <xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=nameWithType> or the <xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=nameWithType> properties to add an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation to the inspectors collection for a particular operation.</span></span>  
  
 <span data-ttu-id="74dd7-107">**Nota** gli sviluppatori e gli amministratori devono verificare che l'interazione con altre <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementazioni sia riconosciuta.</span><span class="sxs-lookup"><span data-stu-id="74dd7-107">**Note** Developers and administrators must ensure that the interaction with other <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementations is understood.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74dd7-108">Nell'esempio di codice seguente viene visualizzata un'implementazione di <xref:System.ServiceModel.Dispatcher.IParameterInspector> che:</span><span class="sxs-lookup"><span data-stu-id="74dd7-108">The following code example shows an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation that:</span></span>  
  
-   <span data-ttu-id="74dd7-109">Scrive nella console il nome e il valore restituito dell'operazione dopo che il servizio ha deserializzato una risposta o che un client ha serializzato una richiesta.</span><span class="sxs-lookup"><span data-stu-id="74dd7-109">Writes the operation name and return value to the console after a response has been deserialized by the service or a request has been serialized by a client.</span></span>  
  
-   <span data-ttu-id="74dd7-110">Scrive nella console il nome dell'operazione dopo che il client ha deserializzato una risposta o che un servizio ha serializzato una richiesta.</span><span class="sxs-lookup"><span data-stu-id="74dd7-110">Writes the operation name to the console after deserializing a response on the client or after a response has been serialized on the service.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="74dd7-111">Nell'esempio di codice seguente viene illustrato come utilizzare <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> o <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> per inserire oggetti <xref:System.ServiceModel.Dispatcher.IParameterInspector>.</span><span class="sxs-lookup"><span data-stu-id="74dd7-111">The following code example shows how to use either <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> or <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> to insert <xref:System.ServiceModel.Dispatcher.IParameterInspector> objects.</span></span>  
  
 [!code-csharp[Interceptors#5](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]
 [!code-vb[Interceptors#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AfterCall">
      <MemberSignature Language="C#" Value="public void AfterCall (string operationName, object[] outputs, object returnValue, object correlationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AfterCall(string operationName, object[] outputs, object returnValue, object correlationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AfterCall (operationName As String, outputs As Object(), returnValue As Object, correlationState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AfterCall(System::String ^ operationName, cli::array &lt;System::Object ^&gt; ^ outputs, System::Object ^ returnValue, System::Object ^ correlationState);" />
      <MemberSignature Language="F#" Value="abstract member AfterCall : string * obj[] * obj * obj -&gt; unit" Usage="iParameterInspector.AfterCall (operationName, outputs, returnValue, correlationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationName" Type="System.String" />
        <Parameter Name="outputs" Type="System.Object[]" />
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="correlationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="operationName">
          <span data-ttu-id="74dd7-112">Il nome dell'operazione richiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74dd7-112">The name of the invoked operation.</span>
          </span>
        </param>
        <param name="outputs">
          <span data-ttu-id="74dd7-113">Gli oggetti di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74dd7-113">Any output objects.</span>
          </span>
        </param>
        <param name="returnValue">
          <span data-ttu-id="74dd7-114">Il valore restituito dall'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74dd7-114">The return value of the operation.</span>
          </span>
        </param>
        <param name="correlationState">
          <span data-ttu-id="74dd7-115">Lo stato di correlazione restituito dal metodo <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74dd7-115">Any correlation state returned from the <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" /> method, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74dd7-116">Metodo chiamato dopo che le chiamate del client vengono restituite e prima che le risposte del servizio vengano inviate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74dd7-116">Called after client calls are returned and before service responses are sent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74dd7-117">Nelle chiamate in uscita da un client, il controllo viene richiamato prima che il contenuto della richiesta sia serializzato e inviato al servizio.</span><span class="sxs-lookup"><span data-stu-id="74dd7-117">On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service.</span></span> <span data-ttu-id="74dd7-118">Il controllo viene chiamato anche dopo che la risposta è stata deserializzata ma prima che i valori restituiti vengano distribuiti al metodo del proxy.</span><span class="sxs-lookup"><span data-stu-id="74dd7-118">The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.</span></span>  
  
 <span data-ttu-id="74dd7-119">Su chiamate in entrata a un servizio, il controllo viene richiamato dopo la deserializzazione dei parametri, ma prima di essere distribuiti all'operazione del servizio.</span><span class="sxs-lookup"><span data-stu-id="74dd7-119">On inbound calls to a service, the inspector is invoked after parameters are deserialized but before they are dispatched to the service operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74dd7-120">Nell'esempio di codice seguente viene visualizzata un'implementazione di <xref:System.ServiceModel.Dispatcher.IParameterInspector> che:</span><span class="sxs-lookup"><span data-stu-id="74dd7-120">The following code example shows an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation that:</span></span>  
  
-   <span data-ttu-id="74dd7-121">Scrive nella console il nome e il valore restituito dell'operazione dopo che il servizio ha deserializzato una risposta o che un client ha serializzato una richiesta.</span><span class="sxs-lookup"><span data-stu-id="74dd7-121">Writes the operation name and return value to the console after a response has been deserialized by the service or a request has been serialized by a client.</span></span>  
  
-   <span data-ttu-id="74dd7-122">Scrive nella console il nome dell'operazione dopo che il client ha deserializzato una risposta o che un servizio ha serializzato una richiesta.</span><span class="sxs-lookup"><span data-stu-id="74dd7-122">Writes the operation name to the console after deserializing a response on the client or after a response has been serialized on the service.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="74dd7-123">Nell'esempio di codice seguente viene illustrato come utilizzare <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> o <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> per inserire oggetti <xref:System.ServiceModel.Dispatcher.IParameterInspector>.</span><span class="sxs-lookup"><span data-stu-id="74dd7-123">The following code example shows how to use either <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, or <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> to insert <xref:System.ServiceModel.Dispatcher.IParameterInspector> objects.</span></span>  
  
 [!code-csharp[Interceptors#5](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]
 [!code-vb[Interceptors#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeCall">
      <MemberSignature Language="C#" Value="public object BeforeCall (string operationName, object[] inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BeforeCall(string operationName, object[] inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeforeCall (operationName As String, inputs As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ BeforeCall(System::String ^ operationName, cli::array &lt;System::Object ^&gt; ^ inputs);" />
      <MemberSignature Language="F#" Value="abstract member BeforeCall : string * obj[] -&gt; obj" Usage="iParameterInspector.BeforeCall (operationName, inputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationName" Type="System.String" />
        <Parameter Name="inputs" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="operationName">
          <span data-ttu-id="74dd7-124">Nome dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74dd7-124">The name of the operation.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="74dd7-125">Gli oggetti passati al metodo dal client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74dd7-125">The objects passed to the method by the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74dd7-126">Metodo chiamato prima che vengano inviate le chiamate del client e dopo che vengono restituite le risposte del servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74dd7-126">Called before client calls are sent and after service responses are returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74dd7-127">Lo stato di correlazione restituito come parametro <paramref name="correlationState" /> in <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74dd7-127">The correlation state that is returned as the <paramref name="correlationState" /> parameter in <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />.</span>
          </span>
          <span data-ttu-id="74dd7-128">Restituire <see langword="null" /> se non si intende utilizzare lo stato di correlazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74dd7-128">Return <see langword="null" /> if you do not intend to use correlation state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74dd7-129">Nelle chiamate in uscita da un client, il controllo viene richiamato prima che il contenuto della richiesta sia serializzato e inviato al servizio.</span><span class="sxs-lookup"><span data-stu-id="74dd7-129">On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service.</span></span> <span data-ttu-id="74dd7-130">Il controllo viene chiamato anche dopo che la risposta è stata deserializzata ma prima che i valori restituiti vengano distribuiti al metodo del proxy.</span><span class="sxs-lookup"><span data-stu-id="74dd7-130">The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.</span></span>  
  
 <span data-ttu-id="74dd7-131">Nelle chiamate in entrata in un servizio, il controllo viene richiamato dopo che il contenuto della richiesta sia deserializzato e inviato all'operazione del servizio e prima che il contenuto della risposta sia serializzato e distribuito al client.</span><span class="sxs-lookup"><span data-stu-id="74dd7-131">On inbound calls to a service, the inspector is invoked after the request contents are deserialized and dispatched to the service operation and before the response contents are serialized and sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74dd7-132">Nell'esempio di codice seguente viene visualizzata un'implementazione di <xref:System.ServiceModel.Dispatcher.IParameterInspector> che:</span><span class="sxs-lookup"><span data-stu-id="74dd7-132">The following code example shows an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation that:</span></span>  
  
-   <span data-ttu-id="74dd7-133">Scrive nella console il nome e il valore restituito dell'operazione dopo che il servizio ha deserializzato una risposta o che un client ha serializzato una richiesta.</span><span class="sxs-lookup"><span data-stu-id="74dd7-133">Writes the operation name and return value to the console after a response has been deserialized by the service or a request has been serialized by a client.</span></span>  
  
-   <span data-ttu-id="74dd7-134">Scrive nella console il nome dell'operazione dopo che il client ha deserializzato una risposta o che un servizio ha serializzato una richiesta.</span><span class="sxs-lookup"><span data-stu-id="74dd7-134">Writes the operation name to the console after deserializing a response on the client or after a response is serialized on the service.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="74dd7-135">Nell'esempio di codice seguente viene illustrato come utilizzare <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> o <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> per inserire oggetti <xref:System.ServiceModel.Dispatcher.IParameterInspector>.</span><span class="sxs-lookup"><span data-stu-id="74dd7-135">The following code example shows how to use either <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> or <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> to insert <xref:System.ServiceModel.Dispatcher.IParameterInspector> objects.</span></span>  
  
 [!code-csharp[Interceptors#5](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]
 [!code-vb[Interceptors#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>