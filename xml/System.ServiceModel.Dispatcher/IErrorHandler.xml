<Type Name="IErrorHandler" FullName="System.ServiceModel.Dispatcher.IErrorHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f4c525f8c28ef846dc25e8b65ba94dc1081f6d2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IErrorHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IErrorHandler" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IErrorHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IErrorHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IErrorHandler" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2061a-101">Consente a un implementatore di controllare il messaggio di errore restituito al chiamante e facoltativamente di eseguire un'elaborazione di errori personalizzata, ad esempio la registrazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2061a-101">Allows an implementer to control the fault message returned to the caller and optionally perform custom error processing such as logging.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2061a-102">Per controllare in modo esplicito il comportamento dell'applicazione quando viene generata un'eccezione, implementare il <xref:System.ServiceModel.Dispatcher.IErrorHandler> interfaccia e aggiungerla al <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>del <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="2061a-102">To explicitly control the behavior of the application when an exception is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler> interface and add it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>’s <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span> <span data-ttu-id="2061a-103"><xref:System.ServiceModel.Dispatcher.IErrorHandler> consente di controllare in modo esplicito l'errore SOAP generato, decidere se restituirlo al client ed eseguire attività associate, ad esempio la registrazione.</span><span class="sxs-lookup"><span data-stu-id="2061a-103"><xref:System.ServiceModel.Dispatcher.IErrorHandler> enables you to explicitly control the SOAP fault generated, decide whether to send it back to the client, and perform associated tasks, such as logging.</span></span> <span data-ttu-id="2061a-104">I gestori di errori vengono chiamati nell'ordine in cui sono stati aggiunti alla proprietà <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="2061a-104">Error handlers are called in the order in which they were added to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 <span data-ttu-id="2061a-105">Implementare il metodo <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> per controllare il messaggio di errore restituito al client.</span><span class="sxs-lookup"><span data-stu-id="2061a-105">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method to control the fault message that is returned to the client.</span></span>  
  
 <span data-ttu-id="2061a-106">Implementare il metodo <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> per garantire i comportamenti relativi all'errore, inclusa la registrazione dell'errore, l'esecuzione di un FailFast, la chiusura dell'applicazione e così via.</span><span class="sxs-lookup"><span data-stu-id="2061a-106">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method to ensure error-related behaviors, including error logging, assuring a fail fast, shutting down the application, and so on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2061a-107">Poiché è possibile chiamare il metodo <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> da posizioni diverse, non vi è alcun modo di sapere su quale thread viene chiamato il metodo.</span><span class="sxs-lookup"><span data-stu-id="2061a-107">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="2061a-108">Non basarsi sul metodo <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> chiamato sul thread dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="2061a-108">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method being called on the operation thread.</span></span>  
  
 <span data-ttu-id="2061a-109">Tutte le implementazioni di <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> vengono chiamate prima di inviare un messaggio di risposta.</span><span class="sxs-lookup"><span data-stu-id="2061a-109">All <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations are called first, prior to sending a response message.</span></span> <span data-ttu-id="2061a-110">Quando tutte le implementazioni di <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> sono state chiamate e hanno restituito e se l'elemento `fault` è non  `null`, viene restituito al client in base al contratto dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="2061a-110">When all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations have been called and return, and if `fault` is non-`null`, it is sent back to the client according to the operation contract.</span></span> <span data-ttu-id="2061a-111">Se `fault` è `null` dopo che tutte le implementazioni sono state chiamate, il messaggio di risposta viene controllato dal valore della proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2061a-111">If `fault` is `null` after all implementations have been called, the response message is controlled by the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2061a-112">Possono verificarsi eccezioni dopo che tutte le implementazioni di <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> sono state chiamate e un messaggio di risposta è stato affidato al canale.</span><span class="sxs-lookup"><span data-stu-id="2061a-112">Exceptions can occur after all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations are called and a response message is handed to the channel.</span></span> <span data-ttu-id="2061a-113">Se si verifica un'eccezione di canale (ad esempio, la serializzazione del messaggio difficoltà) <xref:System.ServiceModel.Dispatcher.IErrorHandler> oggetti vengono visualizzata una notifica.</span><span class="sxs-lookup"><span data-stu-id="2061a-113">If a channel exception occurs (for example, difficulty serializing the message) <xref:System.ServiceModel.Dispatcher.IErrorHandler> objects are notified.</span></span> <span data-ttu-id="2061a-114">In questo caso, deve ancora assicurarsi che l'ambiente di sviluppo memorizza nella cache e visualizza tali eccezioni o si avvalgono di analisi per individuare il problema.</span><span class="sxs-lookup"><span data-stu-id="2061a-114">In this case, you should still make sure that your development environment catches and displays such exceptions to you or makes use of tracing to discover the problem.</span></span> <span data-ttu-id="2061a-115">Per ulteriori informazioni sulla traccia, vedere [utilizzando opzioni di traccia per risolvere i problemi dell'applicazione](~/docs/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application.md).</span><span class="sxs-lookup"><span data-stu-id="2061a-115">For more information about tracing, see [Using Tracing to Troubleshoot Your Application](~/docs/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application.md).</span></span>  
  
 <span data-ttu-id="2061a-116">Una volta inviato il messaggio di risposta, tutte le implementazioni di <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> vengono chiamate nello stesso ordine.</span><span class="sxs-lookup"><span data-stu-id="2061a-116">After the response message has been sent, all <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> implementations are called in the same order.</span></span>  
  
 <span data-ttu-id="2061a-117">In genere, un'implementazione di <xref:System.ServiceModel.Dispatcher.IErrorHandler> viene aggiunta alla proprietà <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> nel servizio (e nel client nel caso di comunicazione duplex).</span><span class="sxs-lookup"><span data-stu-id="2061a-117">Typically, an <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation is added to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property on the service (and the client in the case of duplex communication).</span></span>  
  
 <span data-ttu-id="2061a-118">È possibile aggiungere <xref:System.ServiceModel.Dispatcher.IErrorHandler> alla fase di esecuzione implementando un comportamento (un oggetto <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> o <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> ) e utilizzare il comportamento a livello di programmazione, da un file di configurazione o con un attributo personalizzato per allegare <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span><span class="sxs-lookup"><span data-stu-id="2061a-118">You can add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> to the runtime by implementing a behavior (either an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>, or <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> object) and use the behavior programmatically, from a configuration file or with a custom attribute to attach your <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span></span>  
  
 <span data-ttu-id="2061a-119">Per ulteriori informazioni sull'utilizzo dei comportamenti per modificare il runtime, vedere [la configurazione e l'estensione del Runtime con i comportamenti](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span><span class="sxs-lookup"><span data-stu-id="2061a-119">For more information about using behaviors to modify the runtime, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2061a-120">Nell'esempio di codice seguente viene illustrato un servizio che implementa <xref:System.ServiceModel.Dispatcher.IErrorHandler> che restituisce solo <xref:System.ServiceModel.FaultException%601> di tipo `GreetingFault` quando un metodo del servizio genera un'eccezione gestita.</span><span class="sxs-lookup"><span data-stu-id="2061a-120">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="2061a-121">Nell'esempio di codice seguente viene illustrato come utilizzare un comportamento del servizio per aggiungere l'implementazione di <xref:System.ServiceModel.Dispatcher.IErrorHandler> alla proprietà <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="2061a-121">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="2061a-122">Nell'esempio di codice seguente viene illustrato come configurare il servizio per caricare il comportamento del servizio utilizzando un file di configurazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2061a-122">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="2061a-123">Per ulteriori dettagli su come esporre il comportamento di un servizio in un file di configurazione, vedere <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="2061a-123">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  

 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleError">
      <MemberSignature Language="C#" Value="public bool HandleError (Exception error);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception error) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleError (error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ error);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public bool HandleError (Exception exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception exception) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="exception">To be added.</param>
        <summary>
          <span data-ttu-id="2061a-124">Consente l'elaborazione relativa agli errori e restituisce un valore che indica se il dispatcher interrompe la sessione e il contesto dell'istanza in alcuni casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2061a-124">Enables error-related processing and returns a value that indicates whether the dispatcher aborts the session and the instance context in certain cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2061a-125">
            <see langword="true" /> se [!INCLUDE[indigo1](~/includes/indigo1-md.md)] non deve interrompere la sessione (se presente) e il contesto dell'istanza se il contesto dell'istanza non è <see cref="F:System.ServiceModel.InstanceContextMode.Single" />. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2061a-125">
              <see langword="true" /> if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] should not abort the session (if there is one) and instance context if the instance context is not <see cref="F:System.ServiceModel.InstanceContextMode.Single" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2061a-126">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2061a-126">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2061a-127">Utilizzare il metodo <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> per implementare i comportamenti relativi agli errori, ad esempio la registrazione degli errori, le notifiche di sistema, la chiusura dell'applicazione e così via e restituire un valore che specifichi se l'eccezione è stata gestita in modo appropriato.</span><span class="sxs-lookup"><span data-stu-id="2061a-127">Use the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method to implement error-related behaviors such as error logging, system notifications, shutting down the application, and so on, and return a value that specifies whether the exception has been handled appropriately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2061a-128">Poiché è possibile chiamare il metodo <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> da posizioni diverse, non vi è alcun modo di sapere su quale thread viene chiamato il metodo.</span><span class="sxs-lookup"><span data-stu-id="2061a-128">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="2061a-129">Non basarsi sul metodo <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> chiamato sul thread dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="2061a-129">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method being called on the operation thread.</span></span>  
  
 <span data-ttu-id="2061a-130">Vengono chiamate tutte le implementazioni <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span><span class="sxs-lookup"><span data-stu-id="2061a-130">All <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementations are called.</span></span> <span data-ttu-id="2061a-131">Per impostazione predefinita (quando il valore restituito è `false`), se si è verificata un'eccezione, il dispatcher interrompe qualsiasi sessione e <xref:System.ServiceModel.InstanceContext> se <xref:System.ServiceModel.InstanceContextMode> è diverso da <xref:System.ServiceModel.InstanceContextMode.Single>.</span><span class="sxs-lookup"><span data-stu-id="2061a-131">By default (when the return value is `false`), if there is an exception, the dispatcher aborts any session and aborts the <xref:System.ServiceModel.InstanceContext> if the <xref:System.ServiceModel.InstanceContextMode> is anything other than <xref:System.ServiceModel.InstanceContextMode.Single>.</span></span>  <span data-ttu-id="2061a-132">L'eccezione viene considerata non gestita e qualsiasi stato viene considerato danneggiato.</span><span class="sxs-lookup"><span data-stu-id="2061a-132">The exception is then considered unhandled and any state is considered corrupt.</span></span>  
  
 <span data-ttu-id="2061a-133">Restituire `true` da <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> per evitare questo comportamento predefinito.</span><span class="sxs-lookup"><span data-stu-id="2061a-133">Return `true` from <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> to prevent this default behavior.</span></span> <span data-ttu-id="2061a-134">Se un gestore di errori restituisce `true` indica a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] che è possibile continuare a utilizzare senza problemi lo stato associato alla richiesta non riuscita.</span><span class="sxs-lookup"><span data-stu-id="2061a-134">If any error handler returns `true` it instructs [!INCLUDE[indigo2](~/includes/indigo2-md.md)] that it is safe to continue using state associated with the failed request.</span></span>  
  
 <span data-ttu-id="2061a-135">Se nessun gestore di errori restituisce `true` dal metodo <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, l'eccezione viene considerata non gestita e viene applicata la risposta predefinita, comportando una potenziale interruzione di <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> e del canale durante la comunicazione su un canale della sessione oppure la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> non è impostata su <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2061a-135">If no error handler returns `true` from the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method the exception is considered unhandled and the default response applies, potentially resulting in an aborted <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> and channel when communicating on a session channel or the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property is not set to <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2061a-136">Il parametro `error` non è mai `null` e contiene l'oggetto eccezione generato.</span><span class="sxs-lookup"><span data-stu-id="2061a-136">The `error` parameter is never `null` and contains the exception object that was thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2061a-137">Nell'esempio di codice seguente viene illustrato un servizio che implementa <xref:System.ServiceModel.Dispatcher.IErrorHandler> che restituisce solo <xref:System.ServiceModel.FaultException%601> di tipo `GreetingFault` quando un metodo del servizio genera un'eccezione gestita.</span><span class="sxs-lookup"><span data-stu-id="2061a-137">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="2061a-138">Nell'esempio di codice seguente viene illustrato come utilizzare un comportamento del servizio per aggiungere l'implementazione di <xref:System.ServiceModel.Dispatcher.IErrorHandler> alla proprietà <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="2061a-138">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="2061a-139">Nell'esempio di codice seguente viene illustrato come configurare il servizio per caricare il comportamento del servizio utilizzando un file di configurazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2061a-139">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="2061a-140">Per ulteriori dettagli su come esporre il comportamento di un servizio in un file di configurazione, vedere <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="2061a-140">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideFault">
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception error, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception error, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProvideFault (error As Exception, version As MessageVersion, ByRef fault As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ error, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception exception, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception exception, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ exception, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" Index="1" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.Message&amp;" RefType="ref" Index="2" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="exception">To be added.</param>
        <param name="version">
          <span data-ttu-id="2061a-141">La versione SOAP del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2061a-141">The SOAP version of the message.</span>
          </span>
        </param>
        <param name="fault">
          <span data-ttu-id="2061a-142">L'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> restituito al client o al servizio, nel caso duplex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2061a-142">The <see cref="T:System.ServiceModel.Channels.Message" /> object that is returned to the client, or service, in the duplex case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2061a-143">Consente di creare un oggetto <see cref="T:System.ServiceModel.FaultException`1" /> restituito da un'eccezione nel corso di un metodo del servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2061a-143">Enables the creation of a custom <see cref="T:System.ServiceModel.FaultException`1" /> that is returned from an exception in the course of a service method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2061a-144">Implementare il metodo <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> per creare un messaggio di errore personalizzato da restituire al client.</span><span class="sxs-lookup"><span data-stu-id="2061a-144">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method to create a custom fault message that is returned to the client.</span></span>  <span data-ttu-id="2061a-145">Il <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> metodo sarà sempre chiamato per le eccezioni che lasciano operazioni, ad eccezione di quando il runtime WCF riconosce l'eccezione come particolarmente irreversibile e rigenera l'eccezione stessa.</span><span class="sxs-lookup"><span data-stu-id="2061a-145">The <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method will always be called for exceptions that leave operations, except when the WCF runtime recognizes the exception as especially fatal and rethrows the exception itself.</span></span> <span data-ttu-id="2061a-146">Quando tutte le implementazioni di <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> sono state chiamate, il messaggio di errore viene restituito al client (se l'elemento `fault` è non  `null`).</span><span class="sxs-lookup"><span data-stu-id="2061a-146">When all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations have been called, the fault message is sent back to the client (if `fault` is non-`null`).</span></span> <span data-ttu-id="2061a-147">Se il `fault` parametro `null` il messaggio di errore predefinito viene inviato al client.</span><span class="sxs-lookup"><span data-stu-id="2061a-147">If the `fault` parameter is `null` the default fault is sent to the client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2061a-148">Il messaggio in entrata che causa l'errore di elaborazione è disponibile durante l'applicazione di questo metodo dalla proprietà <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2061a-148">The inbound message that caused the processing error is available during this method from the <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2061a-149">Poiché è possibile chiamare il metodo <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> da posizioni diverse, non vi è alcun modo di sapere su quale thread viene chiamato il metodo.</span><span class="sxs-lookup"><span data-stu-id="2061a-149">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="2061a-150">Non basarsi sul metodo <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> chiamato sul thread dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="2061a-150">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method being called on the operation thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2061a-151">Nell'esempio di codice seguente viene illustrato un servizio che implementa <xref:System.ServiceModel.Dispatcher.IErrorHandler> che restituisce solo <xref:System.ServiceModel.FaultException%601> di tipo `GreetingFault` quando un metodo del servizio genera un'eccezione gestita.</span><span class="sxs-lookup"><span data-stu-id="2061a-151">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="2061a-152">Nell'esempio di codice seguente viene illustrato come utilizzare un comportamento del servizio per aggiungere l'implementazione di <xref:System.ServiceModel.Dispatcher.IErrorHandler> alla proprietà <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="2061a-152">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="2061a-153">Nell'esempio di codice seguente viene illustrato come configurare il servizio per caricare il comportamento del servizio utilizzando un file di configurazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2061a-153">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="2061a-154">Per ulteriori dettagli su come esporre il comportamento di un servizio in un file di configurazione, vedere <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="2061a-154">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>