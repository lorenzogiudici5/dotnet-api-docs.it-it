<Type Name="IInstanceProvider" FullName="System.ServiceModel.Dispatcher.IInstanceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d99445906f7000f567c08da21e17ff96cb11451f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37615917" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInstanceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInstanceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInstanceProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInstanceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInstanceProvider" />
  <TypeSignature Language="F#" Value="type IInstanceProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4ddae-101">Dichiara metodi che specificano un oggetto servizio o lo riciclano per un servizio di Windows Communication Foundation (WCF).</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ddae-101">Declares methods that provide a service object or recycle a service object for a Windows Communication Foundation (WCF) service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ddae-102">Implementare l'interfaccia <xref:System.ServiceModel.Dispatcher.IInstanceProvider> per controllare la creazione e il riciclaggio di oggetti servizio quando un oggetto <xref:System.ServiceModel.InstanceContext> ne richiede o ne elimina uno.</span><span class="sxs-lookup"><span data-stu-id="4ddae-102">Implement the <xref:System.ServiceModel.Dispatcher.IInstanceProvider> interface to control the creation and recycling of service objects when one is requested or disposed by an <xref:System.ServiceModel.InstanceContext> object.</span></span>  
  
 <span data-ttu-id="4ddae-103">Una volta implementata l'interfaccia <xref:System.ServiceModel.Dispatcher.IInstanceProvider>, è necessario assegnare l'oggetto provider di istanze personalizzato alla proprietà <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A> utilizzando un comportamento dell'endpoint (un oggetto <xref:System.ServiceModel.Description.IEndpointBehavior>) o un comportamento del contratto (un oggetto <xref:System.ServiceModel.Description.IContractBehavior>).</span><span class="sxs-lookup"><span data-stu-id="4ddae-103">Once the <xref:System.ServiceModel.Dispatcher.IInstanceProvider> interface is implemented, you must assign your custom instance provider object to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A> property using either an endpoint behavior (a <xref:System.ServiceModel.Description.IEndpointBehavior> object) or a contract behavior (a <xref:System.ServiceModel.Description.IContractBehavior> object).</span></span>  
  
 <span data-ttu-id="4ddae-104">Se il meccanismo di inserimento è un comportamento dell'endpoint, è anche possibile implementare un oggetto <xref:System.ServiceModel.Configuration.BehaviorExtensionElement> in grado di inserire il comportamento personalizzato utilizzando un file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="4ddae-104">If the insertion mechanism is an endpoint behavior you can also implement a <xref:System.ServiceModel.Configuration.BehaviorExtensionElement> object that can insert your custom behavior using a configuration file.</span></span> <span data-ttu-id="4ddae-105">Se il meccanismo di inserimento è un comportamento del contratto, è possibile inserire il comportamento a livello di programmazione prima dell'apertura dell'host del servizio o implementare un attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="4ddae-105">If the insertion mechanism is a contract behavior, you can insert the behavior programmatically prior to the opening of the service host or you can implement a custom attribute.</span></span> <span data-ttu-id="4ddae-106">Per un'esempio dell'approccio relativo al comportamento del contratto, vedere la sezione relativa agli esempi.</span><span class="sxs-lookup"><span data-stu-id="4ddae-106">(For an example of the contract behavior approach, see the Example section.)</span></span>  
  
 <span data-ttu-id="4ddae-107">L'oggetto <xref:System.ServiceModel.Dispatcher.IInstanceProvider> dispone di due metodi: <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> e <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="4ddae-107"><xref:System.ServiceModel.Dispatcher.IInstanceProvider> has two methods, <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> and <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A>.</span></span> <span data-ttu-id="4ddae-108">Questi metodi vengono in genere implementati per creare oggetti servizio utilizzando un costruttore non predefinito oppure per inizializzare o eliminare stati correlati alla durata dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="4ddae-108">These methods are typically implemented to create service objects using a non-default constructor or to initialize or dispose of some state related to the lifetime of the object.</span></span> <span data-ttu-id="4ddae-109">Il pooling degli oggetti servizio è un esempio di funzionalità <xref:System.ServiceModel.Dispatcher.IInstanceProvider> personalizzata.</span><span class="sxs-lookup"><span data-stu-id="4ddae-109">Service object pooling is one example of custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> functionality.</span></span>  
  
 <span data-ttu-id="4ddae-110"><xref:System.ServiceModel.InstanceContext> in genere richiama <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> quando l'oggetto <xref:System.ServiceModel.InstanceContext> viene creato inizialmente e chiama il metodo <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> quando <xref:System.ServiceModel.InstanceContext> viene chiuso.</span><span class="sxs-lookup"><span data-stu-id="4ddae-110">Typically, the <xref:System.ServiceModel.InstanceContext> invokes the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> when the <xref:System.ServiceModel.InstanceContext> is first created and invokes the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method when the <xref:System.ServiceModel.InstanceContext> is closed.</span></span>  
  
 <span data-ttu-id="4ddae-111">Sono disponibili due modalità per fare in modo che un oggetto <xref:System.ServiceModel.InstanceContext> rilasci un oggetto servizio prima che <xref:System.ServiceModel.InstanceContext> venga chiuso.</span><span class="sxs-lookup"><span data-stu-id="4ddae-111">There are two ways to cause an <xref:System.ServiceModel.InstanceContext> object to release a service object before the <xref:System.ServiceModel.InstanceContext> is closed.</span></span> <span data-ttu-id="4ddae-112">Il primo metodo consiste nell'impostare <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> su<xref:System.ServiceModel.ReleaseInstanceMode.AfterCall> o su <xref:System.ServiceModel.ReleaseInstanceMode.BeforeAndAfterCall>.</span><span class="sxs-lookup"><span data-stu-id="4ddae-112">The first method is to set the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> to <xref:System.ServiceModel.ReleaseInstanceMode.AfterCall> or <xref:System.ServiceModel.ReleaseInstanceMode.BeforeAndAfterCall>.</span></span> <span data-ttu-id="4ddae-113">La seconda possibilità consiste nel chiamare il metodo <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="4ddae-113">The second method is to call the <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> method.</span></span> <span data-ttu-id="4ddae-114">Se si procede in questo modo, <xref:System.ServiceModel.InstanceContext> chiama il metodo <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> sul provider di istanze del dispatcher.</span><span class="sxs-lookup"><span data-stu-id="4ddae-114">If this is done, the <xref:System.ServiceModel.InstanceContext> calls the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method on the dispatcher's instance provider.</span></span> <span data-ttu-id="4ddae-115">Se arriva un nuovo messaggio dopo che l'istanza è stata rilasciata, WCF consente di creare una nuova istanza utilizzando il <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="4ddae-115">If a new message arrives after the instance has been released, WCF creates a new instance using the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ddae-116">Se l'oggetto <xref:System.ServiceModel.InstanceContextMode> del servizio è <xref:System.ServiceModel.InstanceContextMode.Single>, il sistema non chiama i metodi <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> e <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> anche se l'utente non ha fornito un oggetto servizio noto, a meno che l'utente non chiami direttamente <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> e quindi <xref:System.ServiceModel.InstanceContext.GetServiceInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="4ddae-116">If the <xref:System.ServiceModel.InstanceContextMode> of the service is <xref:System.ServiceModel.InstanceContextMode.Single>, the system does not call the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> or <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> methods even when the user did not provide a well-known service object unless the user directly calls <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> and then calls <xref:System.ServiceModel.InstanceContext.GetServiceInstance%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ddae-117">Nell'esempio di codice seguente viene illustrato come implementare un oggetto <xref:System.ServiceModel.Dispatcher.IInstanceProvider> che fornisca un comportamento "singleton", restituisca sempre la stessa istanza del servizio e non la ricicli.</span><span class="sxs-lookup"><span data-stu-id="4ddae-117">The following code example shows how to implement <xref:System.ServiceModel.Dispatcher.IInstanceProvider> that provides "singleton" behavior; it always returns the same service instance and does not recycle it.</span></span>  
  
 [!code-csharp[IContractBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#1)]
 [!code-vb[IContractBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#1)]  
  
 <span data-ttu-id="4ddae-118">Nell'esempio di codice seguente viene illustrato come implementare un attributo personalizzato che implementi <xref:System.ServiceModel.Description.IContractBehavior> al fine di inserire il provider di istanze del servizio personalizzato.</span><span class="sxs-lookup"><span data-stu-id="4ddae-118">The following code example shows how to implement a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider.</span></span> <span data-ttu-id="4ddae-119">Implementa inoltre <xref:System.ServiceModel.Description.IContractBehaviorAttribute> che ne associa l'utilizzo a un contratto specifico.</span><span class="sxs-lookup"><span data-stu-id="4ddae-119">It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to a specific contract.</span></span>  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetInstance">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4ddae-120">Restituisce un oggetto servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ddae-120">Returns a service object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public object GetInstance (System.ServiceModel.InstanceContext instanceContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInstance(class System.ServiceModel.InstanceContext instanceContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInstance(System::ServiceModel::InstanceContext ^ instanceContext);" />
      <MemberSignature Language="F#" Value="abstract member GetInstance : System.ServiceModel.InstanceContext -&gt; obj" Usage="iInstanceProvider.GetInstance instanceContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="instanceContext">
          <span data-ttu-id="4ddae-121">Oggetto <see cref="T:System.ServiceModel.InstanceContext" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ddae-121">The current <see cref="T:System.ServiceModel.InstanceContext" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ddae-122">Restituisce un oggetto servizio dato l'oggetto <see cref="T:System.ServiceModel.InstanceContext" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ddae-122">Returns a service object given the specified <see cref="T:System.ServiceModel.InstanceContext" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ddae-123">Oggetto servizio definito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ddae-123">A user-defined service object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ddae-124">Usare il <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%28System.ServiceModel.InstanceContext%29> metodo per controllare l'oggetto servizio esatto che un servizio WCF riceve quando si tenta di crearne uno nuovo.</span><span class="sxs-lookup"><span data-stu-id="4ddae-124">Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%28System.ServiceModel.InstanceContext%29> method to control the exact service object that a WCF service receives when it attempts to create a new one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ddae-125">Nell'esempio di codice seguente viene illustrato come implementare un oggetto <xref:System.ServiceModel.Dispatcher.IInstanceProvider> che fornisca un comportamento "singleton", restituisca sempre la stessa istanza del servizio e non la ricicli.</span><span class="sxs-lookup"><span data-stu-id="4ddae-125">The following code example shows how to implement <xref:System.ServiceModel.Dispatcher.IInstanceProvider> that provides "singleton" behavior; it always returns the same service instance and does not recycle it.</span></span>  
  
 [!code-csharp[IContractBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#1)]
 [!code-vb[IContractBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#1)]  
  
 <span data-ttu-id="4ddae-126">Nell'esempio di codice seguente viene illustrato come implementare un attributo personalizzato che implementi <xref:System.ServiceModel.Description.IContractBehavior> al fine di inserire il provider di istanze del servizio personalizzato.</span><span class="sxs-lookup"><span data-stu-id="4ddae-126">The following code example shows how to implement a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider.</span></span> <span data-ttu-id="4ddae-127">Implementa inoltre <xref:System.ServiceModel.Description.IContractBehaviorAttribute> che ne associa l'utilizzo a un contratto specifico.</span><span class="sxs-lookup"><span data-stu-id="4ddae-127">It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to a specific contract.</span></span>  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public object GetInstance (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInstance(class System.ServiceModel.InstanceContext instanceContext, class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInstance(System::ServiceModel::InstanceContext ^ instanceContext, System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetInstance : System.ServiceModel.InstanceContext * System.ServiceModel.Channels.Message -&gt; obj" Usage="iInstanceProvider.GetInstance (instanceContext, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="instanceContext">
          <span data-ttu-id="4ddae-128">Oggetto <see cref="T:System.ServiceModel.InstanceContext" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ddae-128">The current <see cref="T:System.ServiceModel.InstanceContext" /> object.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="4ddae-129">Messaggio che ha causato la creazione di un oggetto servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ddae-129">The message that triggered the creation of a service object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ddae-130">Restituisce un oggetto servizio dato l'oggetto <see cref="T:System.ServiceModel.InstanceContext" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ddae-130">Returns a service object given the specified <see cref="T:System.ServiceModel.InstanceContext" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ddae-131">Oggetto servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ddae-131">The service object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ddae-132">Usare il <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%28System.ServiceModel.InstanceContext%2CSystem.ServiceModel.Channels.Message%29> metodo per controllare l'oggetto servizio esatto che un servizio WCF riceve quando si tenta di crearne uno nuovo.</span><span class="sxs-lookup"><span data-stu-id="4ddae-132">Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%28System.ServiceModel.InstanceContext%2CSystem.ServiceModel.Channels.Message%29> method to control the exact service object that a WCF service receives when it attempts to create a new one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ddae-133">Nell'esempio di codice seguente viene illustrato come implementare un oggetto <xref:System.ServiceModel.Dispatcher.IInstanceProvider> che fornisca un comportamento "singleton", restituisca sempre la stessa istanza del servizio e non la ricicli.</span><span class="sxs-lookup"><span data-stu-id="4ddae-133">The following code example shows how to implement <xref:System.ServiceModel.Dispatcher.IInstanceProvider> that provides "singleton" behavior; it always returns the same service instance and does not recycle it.</span></span>  
  
 [!code-csharp[IContractBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#1)]
 [!code-vb[IContractBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#1)]  
  
 <span data-ttu-id="4ddae-134">Nell'esempio di codice seguente viene illustrato come implementare un attributo personalizzato che implementi <xref:System.ServiceModel.Description.IContractBehavior> al fine di inserire il provider di istanze del servizio personalizzato.</span><span class="sxs-lookup"><span data-stu-id="4ddae-134">The following code example shows how to implement a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider.</span></span> <span data-ttu-id="4ddae-135">Implementa inoltre <xref:System.ServiceModel.Description.IContractBehaviorAttribute> che ne associa l'utilizzo a un contratto specifico.</span><span class="sxs-lookup"><span data-stu-id="4ddae-135">It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to a specific contract.</span></span>  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstance">
      <MemberSignature Language="C#" Value="public void ReleaseInstance (System.ServiceModel.InstanceContext instanceContext, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseInstance(class System.ServiceModel.InstanceContext instanceContext, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseInstance(System::ServiceModel::InstanceContext ^ instanceContext, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseInstance : System.ServiceModel.InstanceContext * obj -&gt; unit" Usage="iInstanceProvider.ReleaseInstance (instanceContext, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceContext">
          <span data-ttu-id="4ddae-136">Contesto dell'istanza del servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ddae-136">The service's instance context.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="4ddae-137">Oggetto servizio da riciclare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ddae-137">The service object to be recycled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ddae-138">Chiamato quando un oggetto <see cref="T:System.ServiceModel.InstanceContext" /> ricicla un oggetto servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ddae-138">Called when an <see cref="T:System.ServiceModel.InstanceContext" /> object recycles a service object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ddae-139">Utilizzare il metodo <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> per eliminare o riciclare alcune risorse in modo personalizzato quando un servizio ricicla un oggetto servizio.</span><span class="sxs-lookup"><span data-stu-id="4ddae-139">Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method to perform some custom resource disposal or other recycling customization when a service recycles a service object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>