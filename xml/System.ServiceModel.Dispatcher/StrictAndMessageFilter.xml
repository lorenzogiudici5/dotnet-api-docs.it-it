<Type Name="StrictAndMessageFilter" FullName="System.ServiceModel.Dispatcher.StrictAndMessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1892348bec53748a493ace1083135880e077d12a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StrictAndMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StrictAndMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class StrictAndMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrictAndMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="49b5c-101">Rappresenta una query che testa se un messaggio soddisfa entrambi gli oggetti <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> specificati.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49b5c-101">Represents a query that tests whether a message satisfies both specified <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b5c-102">Le corrispondenze eseguite da questo filtro valuteranno sempre entrambi gli oggetti <xref:System.ServiceModel.Dispatcher.MessageFilter> prima di restituire un risultato.</span><span class="sxs-lookup"><span data-stu-id="49b5c-102">Matches performed by this filter will always evaluate both <xref:System.ServiceModel.Dispatcher.MessageFilter> objects before returning a result.</span></span>  
  
 <span data-ttu-id="49b5c-103">Questa operazione AND non fa cortocircuito se il primo oggetto <xref:System.ServiceModel.Dispatcher.MessageFilter> valutato restituisce false.</span><span class="sxs-lookup"><span data-stu-id="49b5c-103">This AND operation does not short circuit if the first <xref:System.ServiceModel.Dispatcher.MessageFilter> evaluated returns false.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrictAndMessageFilter (System.ServiceModel.Dispatcher.MessageFilter filter1, System.ServiceModel.Dispatcher.MessageFilter filter2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Dispatcher.MessageFilter filter1, class System.ServiceModel.Dispatcher.MessageFilter filter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.#ctor(System.ServiceModel.Dispatcher.MessageFilter,System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter1 As MessageFilter, filter2 As MessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrictAndMessageFilter(System::ServiceModel::Dispatcher::MessageFilter ^ filter1, System::ServiceModel::Dispatcher::MessageFilter ^ filter2);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter1" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="filter2" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter1">
          <span data-ttu-id="49b5c-104">Primo oggetto <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-104">The first <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> object.</span>
          </span>
        </param>
        <param name="filter2">
          <span data-ttu-id="49b5c-105">Secondo oggetto <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-105">The second <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49b5c-106">Crea una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" /> utilizzando gli oggetti <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-106">Creates a new instance of the <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" /> class using the specified <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;TFilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt; CreateFilterTable&lt;TFilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!TFilterData&gt; CreateFilterTable&lt;TFilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of TFilterData) () As IMessageFilterTable(Of TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TFilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;TFilterData&gt; ^ CreateFilterTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TFilterData">
          <span data-ttu-id="49b5c-107">Tipo di dati associati al filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-107">The type of data associated with the filter.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="49b5c-108">Crea un nuovo oggetto <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-108">Creates a new <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49b5c-109">Oggetto <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> appena creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-109">A newly created <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49b5c-110">Verifica se un messaggio o un messaggio memorizzato nel buffer corrisponde al filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-110">Tests whether a message or a buffered message matches the filter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b5c-111">In caso di verifica di una condizione di corrispondenza, entrambi gli oggetti <xref:System.ServiceModel.Dispatcher.MessageFilter> vengono valutati prima della restituzione di un risultato.</span><span class="sxs-lookup"><span data-stu-id="49b5c-111">When testing for a match condition, both <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are evaluated before returning a result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="49b5c-112">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da verificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-112">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49b5c-113">Verifica se un messaggio corrisponde a entrambi gli oggetti <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> specificati in questo filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-113">Tests whether a message matches both of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects specified in this filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49b5c-114">**true** se il messaggio contenuto nel buffer corrisponde a entrambi i filtri del messaggio, in caso contrario **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-114">**true** if the message contained in the buffer matches both message filters; otherwise, **false**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="49b5c-115">Oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> da verificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-115">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49b5c-116">Verifica se un messaggio memorizzato nel buffer corrisponde a entrambi gli oggetti <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> specificati in questo filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-116">Tests whether a buffered message matches both of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects specified in this filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49b5c-117">**true** se il messaggio contenuto nel buffer corrisponde a entrambi i filtri del messaggio, in caso contrario **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b5c-117">**true** if the message contained in the buffer matches both message filters; otherwise, **false**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b5c-118">In caso di verifica di una condizione di corrispondenza, entrambi gli oggetti <xref:System.ServiceModel.Dispatcher.MessageFilter> vengono valutati prima della restituzione di un risultato.</span><span class="sxs-lookup"><span data-stu-id="49b5c-118">When testing for a match condition, both <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are evaluated before returning a result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>