<Type Name="QueryStringConverter" FullName="System.ServiceModel.Dispatcher.QueryStringConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7ba49f06695b759d67e8d4d02c6642a37ae85da8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36614353" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class QueryStringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryStringConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryStringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryStringConverter" />
  <TypeSignature Language="F#" Value="type QueryStringConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8281a-101">Questa classe converte un parametro di una stringa di query in un oggetto del tipo adatto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8281a-101">This class converts a parameter in a query string to an object of the appropriate type.</span>
      </span>
      <span data-ttu-id="8281a-102">Può inoltre convertire un parametro da un oggetto nella relativa rappresentazione della stringa di query.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8281a-102">It can also convert a parameter from an object to its query string representation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8281a-103">È possibile specificare parametri in una stringa di query all'interno di un URL.</span><span class="sxs-lookup"><span data-stu-id="8281a-103">Parameters can be specified in a query string within a URL.</span></span> <span data-ttu-id="8281a-104">Questa classe accetta i parametri specificati in una stringa e li converte in oggetti.</span><span class="sxs-lookup"><span data-stu-id="8281a-104">This class takes those parameters specified in a string and converts them into objects.</span></span> <span data-ttu-id="8281a-105">Si supponga, ad esempio, che venga definito il contratto seguente:</span><span class="sxs-lookup"><span data-stu-id="8281a-105">For example, the following contract is defined.</span></span>  
  
```  
[ServiceContract]  
interface Calculator  
{  
   [WebGet(UriTemplate="Add?n1={n1}&n2={n2}")]  
   [OperationContract]  
   long Add(long n1, long n2);  
}  
```  
  
 <span data-ttu-id="8281a-106">Un servizio Windows Communication Foundation (WCF) implementa questa interfaccia e la espone su un endpoint con il <xref:System.ServiceModel.Description.WebHttpBehavior> in http://localhost:8000/MyCalcService.</span><span class="sxs-lookup"><span data-stu-id="8281a-106">A Windows Communication Foundation (WCF) service implements this interface and exposes it on an endpoint with the <xref:System.ServiceModel.Description.WebHttpBehavior> at http://localhost:8000/MyCalcService.</span></span> <span data-ttu-id="8281a-107">Il `Add` operazione del servizio può essere chiamato inviando una richiesta HTTP GET per http://localhost:8000/MyCalcService/Add?n1=10&n2=5.</span><span class="sxs-lookup"><span data-stu-id="8281a-107">The `Add` service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&n2=5.</span></span> <span data-ttu-id="8281a-108"><xref:System.ServiceModel.Dispatcher.QueryStringConverter> riceve l'URL e converte i due parametri (n1 e n2) specificati nell'URL in due oggetti `long` con i valori appropriati.</span><span class="sxs-lookup"><span data-stu-id="8281a-108">The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> receives this URL and converts the two parameters (n1 and n2) specified in the URL into two `long` objects with the appropriate values.</span></span>  
  
 <span data-ttu-id="8281a-109">È possibile derivare una classe da <xref:System.ServiceModel.Dispatcher.QueryStringConverter> per controllare la modalità di esecuzione del mapping dei parametri della stringa di query ai parametri di un'operazione del servizio.</span><span class="sxs-lookup"><span data-stu-id="8281a-109">You can derive a class from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> to control how query string parameters are mapped into a service operation's parameters.</span></span>  
  
 <span data-ttu-id="8281a-110">Per impostazione predefinita, <xref:System.ServiceModel.Dispatcher.QueryStringConverter> supporta i seguenti tipi:</span><span class="sxs-lookup"><span data-stu-id="8281a-110">The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> supports the following types by default:</span></span>  
  
-   <xref:System.Byte>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
-   <xref:System.Single>  
  
-   <xref:System.Double>  
  
-   <xref:System.Char>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.String>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.Guid>  
  
-   <span data-ttu-id="8281a-111">Matrice <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="8281a-111"><xref:System.Byte> array</span></span>  
  
-   <xref:System.Uri>  
  
-   <xref:System.Object>  
  
-   <xref:System.DateTimeOffset>  
  
-   <span data-ttu-id="8281a-112">Enumerazioni</span><span class="sxs-lookup"><span data-stu-id="8281a-112">Enums</span></span>  
  
-   <span data-ttu-id="8281a-113">Tipi con `TypeConverterAttribute` in grado di convertire il tipo in e da una rappresentazione di stringa.</span><span class="sxs-lookup"><span data-stu-id="8281a-113">Types that have a `TypeConverterAttribute` that can convert the type to and from a string representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8281a-114">Nel codice seguente viene illustrato l'utilizzo della classe <xref:System.ServiceModel.Dispatcher.QueryStringConverter> per eseguire la conversione tra una stringa e un valore integer a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="8281a-114">The following code shows how to use the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> class to convert between a string and a 32-bit integer.</span></span>  
  
 [!code-csharp[QueryStringConverter#0](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#0)]
 [!code-vb[QueryStringConverter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8281a-115">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8281a-116">Nel codice seguente viene illustrato come creare un'istanza della classe <xref:System.ServiceModel.Dispatcher.QueryStringConverter>.</span><span class="sxs-lookup"><span data-stu-id="8281a-116">The following code shows how to create an instance of the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> class.</span></span>  
  
 [!code-csharp[QueryStringConverter#1](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#1)]
 [!code-vb[QueryStringConverter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public virtual bool CanConvert (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvert(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvert(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CanConvert : Type -&gt; bool&#xA;override this.CanConvert : Type -&gt; bool" Usage="queryStringConverter.CanConvert type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="8281a-117">Oggetto <see cref="T:System.Type" /> da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-117">The <see cref="T:System.Type" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8281a-118">Determina se sia possibile convertire il tipo specificato in e da una rappresentazione di stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-118">Determines whether the specified type can be converted to and from a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8281a-119">Valore che specifica se è possibile convertire il tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-119">A value that specifies whether the type can be converted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8281a-120">Nel codice seguente viene illustrato come determinare se <xref:System.ServiceModel.Dispatcher.QueryStringConverter> può convertire da e verso il tipo specificato.</span><span class="sxs-lookup"><span data-stu-id="8281a-120">The following code shows how to determine whether the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> can convert to and from the specified type.</span></span>  
  
 [!code-csharp[QueryStringConverter#2](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#2)]
 [!code-vb[QueryStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="public virtual object ConvertStringToValue (string parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertStringToValue(string parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertStringToValue (parameter As String, parameterType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertStringToValue(System::String ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertStringToValue : string * Type -&gt; obj&#xA;override this.ConvertStringToValue : string * Type -&gt; obj" Usage="queryStringConverter.ConvertStringToValue (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="8281a-121">Parametro e valore in forma di stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-121">The string form of the parameter and value.</span>
          </span>
        </param>
        <param name="parameterType">
          <span data-ttu-id="8281a-122">Oggetto <see cref="T:System.Type" /> in cui convertire il parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-122">The <see cref="T:System.Type" /> to convert the parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8281a-123">Converte un parametro della stringa di query nel tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-123">Converts a query string parameter to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8281a-124">Parametro convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-124">The converted parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8281a-125">Se `parameterType` è il tipo di un valore e il parametro è `null`, verrà restituito il valore predefinito `parameterType`.</span><span class="sxs-lookup"><span data-stu-id="8281a-125">If the `parameterType` is a value type and the parameter is `null`, then the default value of the `parameterType` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8281a-126">Nel codice seguente viene illustrato come convertire una stringa nel tipo specificato.</span><span class="sxs-lookup"><span data-stu-id="8281a-126">The following code shows how to convert a string to the specified type.</span></span>  
  
 [!code-csharp[QueryStringConverter#2](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#2)]
 [!code-vb[QueryStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8281a-127">La stringa non è in formato corretto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-127">The provided string does not have the correct format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertValueToString (object parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertValueToString(object parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertValueToString (parameter As Object, parameterType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertValueToString(System::Object ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertValueToString : obj * Type -&gt; string&#xA;override this.ConvertValueToString : obj * Type -&gt; string" Usage="queryStringConverter.ConvertValueToString (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="8281a-128">Parametro da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-128">The parameter to convert.</span>
          </span>
        </param>
        <param name="parameterType">
          <span data-ttu-id="8281a-129">Oggetto <see cref="T:System.Type" /> del parametro da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-129">The <see cref="T:System.Type" /> of the parameter to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8281a-130">Converte un parametro in una rappresentazione della stringa di query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-130">Converts a parameter to a query string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8281a-131">Nome e valore del parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8281a-131">The parameter name and value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8281a-132">Nel codice seguente viene illustrato come convertire un valore tipizzato in una rappresentazione di stringa del valore.</span><span class="sxs-lookup"><span data-stu-id="8281a-132">The following code shows how to convert a typed value into a string representation of the value.</span></span>  
  
 [!code-csharp[QueryStringConverter#3](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#3)]
 [!code-vb[QueryStringConverter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>