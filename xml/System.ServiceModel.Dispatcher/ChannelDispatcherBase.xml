<Type Name="ChannelDispatcherBase" FullName="System.ServiceModel.Dispatcher.ChannelDispatcherBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f11b9d85cad26795cfc2ff3756f71132472a2e9d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37616339" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelDispatcherBase extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelDispatcherBase&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcherBase abstract : System::ServiceModel::Channels::CommunicationObject" />
  <TypeSignature Language="F#" Value="type ChannelDispatcherBase = class&#xA;    inherit CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe di base astratta per il ChannelDispatcher che accetta canali e li associa a un servizio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene utilizzato dagli sviluppatori che vogliono mantenere il modello di programmazione di Windows Communication Foundation (WCF), ma sostituire la fase di esecuzione fornita dal sistema. Tali applicazioni effettueranno il pull dei messaggi dai canali e li gestiranno direttamente con i dispatcher definiti dall'utente. Per utilizzare <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>, creare una classe derivata, estendere <xref:System.ServiceModel.ServiceHost> ed eseguire l'override di <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, aggiungendo istanze della classe derivate da <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 L'interfaccia <xref:System.ServiceModel.Channels.IChannelListener> e la classe <xref:System.ServiceModel.ServiceHost>, associate con l'oggetto <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> sono disponibili per essere esaminate o modificate utilizzando <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> e <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>.  
  
 La classe <xref:System.ServiceModel.ServiceHost> chiama il metodo <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> durante l'aggiunta o la rimozione di un elemento <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> dalla raccolta <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 La classe <xref:System.ServiceModel.ServiceHost> chiama il metodo <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> durante l'arresto, prima di chiudere InstanceContexts. Windows Communication Foundation (WCF) utilizza questa chiamata per chiudere i canali del datagramma e aspettare che tutti i messaggi ottengano un InstanceContext.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelDispatcherBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelDispatcherBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected virtual void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Attach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Attach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Attach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">Oggetto della classe <see cref="T:System.ServiceModel.ServiceHostBase" /> relativo al servizio.</param>
        <summary>Quando sottoposto a override in una classe derivata, allega il ChannelDispatcher a un host specifico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere impostato solo quando l'istanza della classe <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> è nello stato <xref:System.ServiceModel.CommunicationState.Created>, in quanto questo è l'unico stato che oltre a essere modificabile non è stato eliminato.  
  
 Una classe <xref:System.ServiceModel.ServiceHost> chiama questo metodo quando un oggetto <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> viene aggiunto alla raccolta <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> corrispondente  In questo modo <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> ha la possibilità di eseguire l'hook di eventi, di controllare <xref:System.ServiceModel.ServiceHost> e fornisce il valore che deve essere restituito dalla proprietà <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opening" /> o <see cref="F:System.ServiceModel.CommunicationState.Opened" /> oppure l'host è già stato impostato.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public virtual void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseInput();" />
      <MemberSignature Language="F#" Value="abstract member CloseInput : unit -&gt; unit&#xA;override this.CloseInput : unit -&gt; unit" Usage="channelDispatcherBase.CloseInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando sottoposto a override in una classe derivata, rimuove i dispatcher dell'endpoint associati al ChannelDispatcher.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceHost> chiama questo metodo durante l'arresto per dare al dispatcher la possibilità di svuotare i messaggi. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> utilizza questa chiamata per chiudere i canali del datagramma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected virtual void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Detach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Detach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Detach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">Oggetto <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
        <summary>Quando sottoposto a override in una classe derivata, disconnette il ChannelDispatcher da un host specifico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto <xref:System.ServiceModel.ServiceHostBase> può essere scollegato solo quando l'istanza della classe <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> è nello stato <xref:System.ServiceModel.CommunicationState.Created>, in quanto questo è l'unico stato che oltre a essere modificabile non è stato eliminato.  
  
 È necessario impostare l'oggetto <xref:System.ServiceModel.ServiceHostBase> associato al ChannelDispatcher su `null`.  
  
 Una classe <xref:System.ServiceModel.ServiceHost> chiama questo metodo quando un oggetto <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> viene rimosso alla raccolta <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> corrispondente In questo modo <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> ha la possibilità di eseguire l'unhook di eventi e di controllare <xref:System.ServiceModel.ServiceHost>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opening" /> o <see cref="F:System.ServiceModel.CommunicationState.Opened" /> oppure l'host è già stato impostato.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.ServiceModel.ServiceHostBase" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando sottoposto a override in una classe derivata, ottiene l'host del servizio associato al ChannelDispatcher.</summary>
        <value>La classe <see cref="T:System.ServiceModel.ServiceHostBase" /> per il servizio associato al dispatcher.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni oggetto <xref:System.ServiceModel.ServiceHost> può essere dotato di molti oggetti <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, ognuno associato a un'interfaccia <xref:System.ServiceModel.Channels.IChannelListener> diversa per quel servizio. L'host conserva un elenco di questi oggetti <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> nella raccolta <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listener : System.ServiceModel.Channels.IChannelListener" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando sottoposto a override in una classe derivata, ottiene il listener del canale associato al ChannelDispatcher.</summary>
        <value>L'interfaccia <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associata a al ChannelDispatcher.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associa un'interfaccia <xref:System.ServiceModel.Channels.IChannelListener> i cui canali e messaggi vengono distribuiti da <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>