<Type Name="ChannelDispatcherBase" FullName="System.ServiceModel.Dispatcher.ChannelDispatcherBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dad5e141479796dd737e2665a74ecbfdfd17ee12" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316216" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelDispatcherBase extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelDispatcherBase&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcherBase abstract : System::ServiceModel::Channels::CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d5a7e-101">Classe di base astratta per il ChannelDispatcher che accetta canali e li associa a un servizio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5a7e-101">Abstract base class for the channel dispatcher that accepts channels and associates them with a service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a7e-102">Viene utilizzato dagli sviluppatori che vogliono mantenere il modello di programmazione di Windows Communication Foundation (WCF), ma sostituire la fase di esecuzione fornita dal sistema.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-102">This is used by developers who want to keep the Windows Communication Foundation (WCF) programming model but replace the system-provided runtime.</span></span> <span data-ttu-id="d5a7e-103">Tali applicazioni effettueranno il pull dei messaggi dai canali e li gestiranno direttamente con i dispatcher definiti dall'utente.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-103">Such applications will pull messages out of channels and handle them directly with user-defined dispatchers.</span></span> <span data-ttu-id="d5a7e-104">Per utilizzare <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>, creare una classe derivata, estendere <xref:System.ServiceModel.ServiceHost> ed eseguire l'override di <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, aggiungendo istanze della classe derivate da <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-104">To use <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> , create a class derived from it, extend <xref:System.ServiceModel.ServiceHost> and override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adding instances of your class derived from <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> to <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.</span></span>  
  
 <span data-ttu-id="d5a7e-105">L'interfaccia <xref:System.ServiceModel.Channels.IChannelListener> e la classe <xref:System.ServiceModel.ServiceHost>, associate con l'oggetto <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> sono disponibili per essere esaminate o modificate utilizzando <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> e <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-105">The <xref:System.ServiceModel.Channels.IChannelListener> and the <xref:System.ServiceModel.ServiceHost>, associated with the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> object are available for inspection or modification through the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> and <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectively.</span></span>  
  
 <span data-ttu-id="d5a7e-106">La classe <xref:System.ServiceModel.ServiceHost> chiama il metodo <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> durante l'aggiunta o la rimozione di un elemento <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> dalla raccolta <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-106"><xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> or <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> methods when adding or removing a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> item from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  
  
 <span data-ttu-id="d5a7e-107">La classe <xref:System.ServiceModel.ServiceHost> chiama il metodo <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> durante l'arresto, prima di chiudere InstanceContexts.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-107"><xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> during shutdown before closing InstanceContexts.</span></span> <span data-ttu-id="d5a7e-108">Windows Communication Foundation (WCF) utilizza questa chiamata per chiudere i canali del datagramma e attendere che tutti i messaggi ottengano un InstanceContext.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-108">Windows Communication Foundation (WCF) uses this call to close datagram channels and wait for all messages to get to an InstanceContext.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelDispatcherBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelDispatcherBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5a7e-109">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected virtual void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="d5a7e-110">Oggetto della classe <see cref="T:System.ServiceModel.ServiceHostBase" /> relativo al servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-110">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a7e-111">Quando sottoposto a override in una classe derivata, allega il ChannelDispatcher a un host specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-111">When overridden in a derived class, attaches the channel dispatcher to a specific host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a7e-112">Questo metodo può essere impostato solo quando l'istanza della classe <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> è nello stato <xref:System.ServiceModel.CommunicationState.Created>, in quanto questo è l'unico stato che oltre a essere modificabile non è stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-112">This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="d5a7e-113">Una classe <xref:System.ServiceModel.ServiceHost> chiama questo metodo quando un oggetto <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> viene aggiunto alla raccolta <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> corrispondente</span><span class="sxs-lookup"><span data-stu-id="d5a7e-113">A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  <span data-ttu-id="d5a7e-114">In questo modo <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> ha la possibilità di eseguire l'hook di eventi, di controllare <xref:System.ServiceModel.ServiceHost> e fornisce il valore che deve essere restituito dalla proprietà <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-114">This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5a7e-115">
            <paramref name="host" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-115">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5a7e-116">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opening" /> o <see cref="F:System.ServiceModel.CommunicationState.Opened" /> oppure l'host è già stato impostato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-116">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state or the host is already set.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a7e-117">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-117">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="d5a7e-118">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-118">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public virtual void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseInput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5a7e-119">Quando sottoposto a override in una classe derivata, rimuove i dispatcher dell'endpoint associati al ChannelDispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-119">When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a7e-120"><xref:System.ServiceModel.ServiceHost> chiama questo metodo durante l'arresto per dare al dispatcher la possibilità di svuotare i messaggi.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-120"><xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages.</span></span> <span data-ttu-id="d5a7e-121"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> utilizza questa chiamata per chiudere i canali del datagramma.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-121"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected virtual void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="d5a7e-122">Oggetto <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-122">The <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a7e-123">Quando sottoposto a override in una classe derivata, disconnette il ChannelDispatcher da un host specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-123">When overridden in a derived class, detaches the channel dispatcher from a specific host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a7e-124">L'oggetto <xref:System.ServiceModel.ServiceHostBase> può essere scollegato solo quando l'istanza della classe <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> è nello stato <xref:System.ServiceModel.CommunicationState.Created>, in quanto questo è l'unico stato che oltre a essere modificabile non è stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-124">The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="d5a7e-125">È necessario impostare l'oggetto <xref:System.ServiceModel.ServiceHostBase> associato al ChannelDispatcher su `null`.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-125">Should set the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.</span></span>  
  
 <span data-ttu-id="d5a7e-126">Una classe <xref:System.ServiceModel.ServiceHost> chiama questo metodo quando un oggetto <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> viene rimosso alla raccolta <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> corrispondente</span><span class="sxs-lookup"><span data-stu-id="d5a7e-126"><xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span> <span data-ttu-id="d5a7e-127">In questo modo <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> ha la possibilità di eseguire l'unhook di eventi e di controllare <xref:System.ServiceModel.ServiceHost>.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-127">This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5a7e-128">
            <paramref name="host" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-128">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5a7e-129">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Opening" /> o <see cref="F:System.ServiceModel.CommunicationState.Opened" /> oppure l'host è già stato impostato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-129">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state or the host is already set.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a7e-130">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-130">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="d5a7e-131">L'oggetto di comunicazione si trova in uno stato <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-131">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5a7e-132">Quando sottoposto a override in una classe derivata, ottiene l'host del servizio associato al ChannelDispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-132">When overridden in a derived class, gets the service host associated with the channel dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5a7e-133">La classe <see cref="T:System.ServiceModel.ServiceHostBase" /> per il servizio associato al dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-133">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service associated with the dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a7e-134">Ogni oggetto <xref:System.ServiceModel.ServiceHost> può essere dotato di molti oggetti <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, ognuno associato a un'interfaccia <xref:System.ServiceModel.Channels.IChannelListener> diversa per quel servizio.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-134">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.</span></span> <span data-ttu-id="d5a7e-135">L'host conserva un elenco di questi oggetti <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> nella raccolta <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-135">The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5a7e-136">Quando sottoposto a override in una classe derivata, ottiene il listener del canale associato al ChannelDispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-136">When overridden in a derived class, gets the channel listener associated with the channel dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5a7e-137">L'interfaccia <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associata a al ChannelDispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a7e-137">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associated with the channel dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a7e-138"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associa un'interfaccia <xref:System.ServiceModel.Channels.IChannelListener> i cui canali e messaggi vengono distribuiti da <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>.</span><span class="sxs-lookup"><span data-stu-id="d5a7e-138">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> whose channels and messages this <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is dispatching.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>