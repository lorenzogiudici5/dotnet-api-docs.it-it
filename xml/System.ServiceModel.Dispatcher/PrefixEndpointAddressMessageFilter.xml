<Type Name="PrefixEndpointAddressMessageFilter" FullName="System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter">
  <TypeSignature Language="C#" Value="public class PrefixEndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrefixEndpointAddressMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class PrefixEndpointAddressMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrefixEndpointAddressMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8ff5c-101">Rappresenta una query che controlla se un messaggio corrisponde a un EndpointAddress usando una *corrispondenza del prefisso più lungo* per il componente URI.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-101">Represents a query that tests whether a message matches an EndpointAddress using a *Longest-Prefix Match* for the URI component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ff5c-102">Un oggetto <xref:System.ServiceModel.EndpointAddress> include un URI e una raccolta facoltativa di intestazioni di indirizzamento.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-102">An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers.</span></span> <span data-ttu-id="8ff5c-103">Le intestazioni di indirizzamento e del messaggio sono convertite in formato canonico per essere confrontate per stabilirne l'uguaglianza.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-103">The addressing and message headers are canonicalized to be compared for equality.</span></span> <span data-ttu-id="8ff5c-104">Se un parametro appare più di una volta in <xref:System.ServiceModel.EndpointAddress>, l'intestazione corrispondente deve comparire nel messaggio lo stesso numero di volte.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-104">If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.</span></span>  
  
 <span data-ttu-id="8ff5c-105">Questo filtro esegue la stessa query come <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, ad eccezione del fatto che il test se un messaggio corrisponde a un indirizzo endpoint per l'operazione viene eseguito un *corrispondenza di prefisso più lungo*.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-105">This filter performs the same query as <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, except that the test for whether a message matches an endpoint address is done by a *Longest-Prefix Match*.</span></span> <span data-ttu-id="8ff5c-106">Questo significa che l'URI specificato nel filtro non deve necessariamente corrispondere esattamente all'URI del messaggio, ma che deve essere contenuto in quell'URI come prefisso.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-106">This means that the URI specified in the filter does not have to match the message's URI exactly, but must be contained in that URI as a prefix.</span></span> <span data-ttu-id="8ff5c-107">Ad esempio, se un filtro specifica l'indirizzo "www.foo.com" e un messaggio viene indirizzato a "www.foo.com/customerA", la parte URI della condizione della query del filtro sarà soddisfatta.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-107">For example, if a filter specifies the address "www.foo.com", and a message is addressed to "www.foo.com/customerA", then the URI part of the filter query condition will be met.</span></span> <span data-ttu-id="8ff5c-108">Tuttavia, la parte dell'intestazione della query del filtro deve essere ancora completata.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-108">However, the header portion of the filter query still has to be done.</span></span>  
  
 <span data-ttu-id="8ff5c-109">Internet Information Services (IIS) e il file system sottostante (NTFS o FAT) non fanno distinzione tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-109">Internet Information Services (IIS) and the underlying file system (NTFS or FAT) are case-insensitive.</span></span> <span data-ttu-id="8ff5c-110">Anche i confronti URI eseguiti da questa classe non fanno distinzione tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-110">URI comparisons done by this class are also case-insensitive.</span></span> <span data-ttu-id="8ff5c-111">In questo caso, ad esempio http://www.microsoft.com viene considerato equivalente a http://WWW.microsoft.com.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-111">So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ff5c-112">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrefixEndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="8ff5c-113">Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> utilizzato per il controllo dei messaggi.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <summary><span data-ttu-id="8ff5c-114">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-114">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ff5c-115"><paramref name="address" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-115"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, includeHostNameInComparison As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrefixEndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address, bool includeHostNameInComparison);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="includeHostNameInComparison" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="8ff5c-116">Oggetto della classe <see cref="T:System.ServiceModel.EndpointAddress" /> utilizzato per il controllo dei messaggi.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-116">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <param name="includeHostNameInComparison">
          <span data-ttu-id="8ff5c-117"><see langword="true" /> se il nome host è incluso nel confronto dell'indirizzo dell'endpoint. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-117"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8ff5c-118">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ff5c-119">Se viene installato un servizio Web sul computer locale, esistono più modi equivalenti per farvi riferimento, tra cui:</span><span class="sxs-lookup"><span data-stu-id="8ff5c-119">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="8ff5c-120">http://[nome del computer]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="8ff5c-120">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="8ff5c-121">http://[nome del computer].[nome della società].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-121">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="8ff5c-122">Se il valore del parametro `includeHostNameInComparison` è `false`, tutti gli URI vengono risolti sullo stesso endpoint.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-122">If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ff5c-123"><paramref name="address" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-123"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ Address { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ff5c-124">Ottiene l'indirizzo dell'endpoint rispetto al quale <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> controlla i messaggi.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-124">Gets the Endpoint Address that the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> tests messages against.</span></span></summary>
        <value><span data-ttu-id="8ff5c-125">L'elemento <see cref="T:System.ServiceModel.EndpointAddress" /> rispetto al quale <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> controlla i messaggi.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-125">The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> tests messages against.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="8ff5c-126">Dati associati ai filtri della tabella.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-126">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="8ff5c-127">Crea una nuova tabella dei filtri che controlla contemporaneamente un messaggio rispetto a più indirizzi dell'endpoint.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-127">Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</span></span></summary>
        <returns><span data-ttu-id="8ff5c-128">Un oggetto che implementa l'interfaccia <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> che può contenere <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> con <paramref name="FilterData" /> associati.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-128">An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ff5c-129">Il metodo restituisce un'istanza di <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> ottimizzata per controllare gli endpoint del messaggio specifici.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-129">The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.</span></span>  
  
 <span data-ttu-id="8ff5c-130">Questo metodo deve essere utilizzato da <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-130">This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeHostNameInComparison">
      <MemberSignature Language="C#" Value="public bool IncludeHostNameInComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostNameInComparison" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeHostNameInComparison As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostNameInComparison { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ff5c-131">Ottiene un valore che indica se il nome host viene incluso nel confronto dell'indirizzo dell'endpoint.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-131">Gets a value that indicates whether the host name is included in the endpoint address comparison.</span></span></summary>
        <value>
          <span data-ttu-id="8ff5c-132"><see langword="true" /> se il nome host è incluso nel confronto dell'indirizzo dell'endpoint. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-132"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ff5c-133">Se viene installato un servizio Web sul computer locale, esistono più modi equivalenti per farvi riferimento, tra cui:</span><span class="sxs-lookup"><span data-stu-id="8ff5c-133">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="8ff5c-134">http://[nome del computer]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="8ff5c-134">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="8ff5c-135">http://[nome del computer].[nome della società].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-135">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="8ff5c-136">Il valore predefinito di questa proprietà è `false`, pertanto tutti gli URI vengono risolti dallo stesso endpoint, a meno che non venga modificata la proprietà.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-136">The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ff5c-137">Controlla se un messaggio o un messaggio memorizzato nel buffer soddisfa i criteri del filtro dell'endpoint.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-137">Tests whether a message or buffered message satisfies the criteria of the endpoint filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ff5c-138">I due overload di questo metodo sono equivalenti perché questo filtro non esamina il corpo del messaggio, ma solo l'indirizzo per fare una corrispondenza di prefisso più lungo e quindi le intestazioni.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-138">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8ff5c-139">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da controllare.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-139">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span></span></param>
        <summary><span data-ttu-id="8ff5c-140">Controlla se un messaggio soddisfa l'indirizzo dell'endpoint specificato.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-140">Tests whether a message satisfies the specified endpoint address.</span></span></summary>
        <returns>
          <span data-ttu-id="8ff5c-141"><see langword="true" /> se l'oggetto <see cref="T:System.ServiceModel.Channels.Message" /> soddisfa l'indirizzo dell'endpoint specificato nel filtro. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-141"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ff5c-142">I due overload di questo metodo sono equivalenti perché questo filtro non esamina il corpo del messaggio, ma solo l'indirizzo per fare una corrispondenza di prefisso più lungo e quindi le intestazioni.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-142">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ff5c-143"><paramref name="message" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-143"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="8ff5c-144">Oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> da controllare.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-144">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span></span></param>
        <summary><span data-ttu-id="8ff5c-145">Controlla se un messaggio memorizzato nel buffer soddisfa l'indirizzo dell'endpoint specificato.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-145">Tests whether a buffered message satisfies the specified endpoint address.</span></span></summary>
        <returns>
          <span data-ttu-id="8ff5c-146"><see langword="true" /> se l'oggetto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> soddisfa l'indirizzo dell'endpoint. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-146"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ff5c-147">I due overload di questo metodo sono equivalenti perché questo filtro non esamina il corpo del messaggio, ma solo l'indirizzo per fare una corrispondenza di prefisso più lungo e quindi le intestazioni.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-147">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ff5c-148"><paramref name="messageBuffer" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8ff5c-148"><paramref name="messageBuffer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>