<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventListener.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55480267b4cc4099ed5038e8eba1ce5464a5580f5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5480267b4cc4099ed5038e8eba1ce5464a5580f5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Provides methods for enabling and disabling events from event sources.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>An event listener represents the target for all events generated by event source (<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> object) implementations in the current application domain.</source>
          <target state="translated">Un listener di eventi rappresenta la destinazione per tutti gli eventi generati dall'origine evento (<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> oggetto) implementazioni nel dominio applicazione corrente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>When a new event listener is created, it is logically attached to all event sources in that application domain.</source>
          <target state="translated">Quando viene creato un nuovo listener, in modo logico è collegato a tutte le origini evento nel dominio dell'applicazione.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Questo tipo implementa il <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>When you have finished using the type, you must dispose of it either directly or indirectly.</source>
          <target state="translated">Al termine dell'utilizzo del tipo, è necessario eliminare direttamente o indirettamente di esso.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Per eliminare direttamente il tipo, chiamare il relativo <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> metodo in un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> blocco.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio <ph id="ph1">`using`</ph> in C# o <ph id="ph2">`Using`</ph> in Visual Basic.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Per ulteriori informazioni, consultare la sezione "Utilizzo di oggetti che implementano IDisposable" nell'argomento <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> dell'interfaccia.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>An event listener can enable or disable on a per-current event source basis by using event levels (<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventLevel&gt;</ph>) and event keywords (<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventKeywords&gt;</ph>) to further restrict the set of events to be sent to the listener.</source>
          <target state="translated">Un listener di eventi è possibile abilitare o disabilitare una singola origine evento al corrente con i livelli evento (<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventLevel&gt;</ph>) e le parole chiave evento (<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventKeywords&gt;</ph>) per limitare ulteriormente il set di eventi da inviare al listener.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>The listener can also send arbitrary commands to a specific current event source by using the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> method.</source>
          <target state="translated">Il listener può inoltre inviare comandi arbitrari per un'origine evento corrente utilizzando il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>The meanings of the commands are specific to the implementation of the event source.</source>
          <target state="translated">I significati dei comandi sono specifici per l'implementazione dell'origine evento.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> object that is used to enable or disable events is <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, all event sources in the application domain are affected.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> proprietà il <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> oggetto utilizzato per abilitare o disabilitare gli eventi è <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, sono interessate tutte le origini evento nel dominio dell'applicazione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Multiple event listeners can be defined in a single application domain.</source>
          <target state="translated">È possibile definire più listener di eventi in un singolo dominio applicazione.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Each listener is logically independent of the other listeners so that events that are enabled or disabled by one listener affect only that listener.</source>
          <target state="translated">Ogni listener è logicamente indipendente dalle altre listener in modo che gli eventi che vengono abilitati o disabilitati da un listener interessano solo il listener.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>It is possible for commands sent with the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> method to do a semantic operation (such as a garbage collection or flushing data) that affects the other listeners, but this is the exception rather than the rule.</source>
          <target state="translated">È possibile che i comandi inviati con il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> metodo per eseguire un'operazione semantica (ad esempio un'operazione di garbage collection o lo scaricamento di dati) che interessa gli altri listener, ma questa è l'eccezione, anziché la regola.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Each event source   keeps a list of event listeners that it sends events to.</source>
          <target state="translated">Ogni origine evento conserva un elenco di listener di eventi che invia gli eventi.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>A set of filtering criteria is associated with each event source-listener pair.</source>
          <target state="translated">Un set di criteri di filtro è associato a ogni coppia di listener dell'origine evento.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>These criteria determine the events that listener will receive for the current event source.</source>
          <target state="translated">Questi criteri determinano gli eventi il listener verrà visualizzato per l'origine evento corrente.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Listeners receive the events on their <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A&gt;</ph> method.</source>
          <target state="translated">I listener di riceveranno gli eventi nel loro <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Therefore, subclasses of <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> must override this method to do something useful with the data.</source>
          <target state="translated">Pertanto, le sottoclassi di <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> deve eseguire l'override di questo metodo per eseguire un'operazione utile con i dati.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>When a new event source is created, the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> method is called.</source>
          <target state="translated">Quando viene creata una nuova origine evento, il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Every current event listener gets exactly one <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> call for every current event source that can send it log messages.</source>
          <target state="translated">Ogni listener di eventi corrente ottiene esattamente uno <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> chiamare per ogni origine evento corrente che può inviare i messaggi del log.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>When an event listener is created, a series of <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> calls are made to notify the new listener of all the event sources that existed before the listener was created.</source>
          <target state="translated">Quando si crea un listener di eventi, una serie di <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> vengono effettuate chiamate a notificare il nuovo listener di tutte le origini evento precedente è stato creato il listener.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventListener" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.#ctor">
          <source>All events are disabled when a new instance is created.</source>
          <target state="translated">Tutti gli eventi sono disabilitati quando viene creata una nuova istanza.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EnableEvents%2A&gt;</ph> methods to enable events.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EnableEvents%2A&gt;</ph> metodi per abilitare gli eventi.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)">
          <source>The event source to disable events for.</source>
          
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)">
          <source>Disables all events for the specified event source.</source>
          
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> property for <ph id="ph2">`eventSource`</ph> is <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, events for all event sources in the application domain are disabled for this event listener.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> proprietà <ph id="ph2">`eventSource`</ph> è <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, gli eventi per tutte le origini evento nel dominio dell'applicazione sono disabilitati per questo listener di eventi.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.Dispose">
          <source>Releases the resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventListener" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph>.</source>
          <target state="translated">Chiamare il metodo <ph id="ph1">`Dispose`</ph> dopo aver terminato di utilizzare l'oggetto <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> in an unusable state.</source>
          <target state="translated">Il metodo <ph id="ph1">`Dispose`</ph> lascia l'oggetto <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> in una condizione di inutilizzabilità.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> was occupying.</source>
          <target state="translated">Dopo la chiamata <ph id="ph1">`Dispose`</ph>, è necessario rilasciare tutti i riferimenti al <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> in modo che il garbage collector può recuperare la memoria che di <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> occupata.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementazione di un metodo Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Enables events for the specified event source.</source>
          
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
          <source>The event source to enable events for.</source>
          
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
          <source>The level of events to enable.</source>
          
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
          <source>Enables events for the specified event source that has the specified verbosity level or lower.</source>
          
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> property in the specified <ph id="ph2">`eventSource`</ph> is <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, all event sources in the application domain are affected.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> proprietà nell'oggetto specificato <ph id="ph2">`eventSource`</ph> è <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, sono interessate tutte le origini evento nel dominio dell'applicazione.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The event source to enable events for.</source>
          
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The level of events to enable.</source>
          
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The keyword flags necessary to enable the events.</source>
          
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>Enables events for the specified event source that has the specified verbosity level or lower, and matching keyword flags.</source>
          
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> property in the specified <ph id="ph2">`eventSource`</ph> is <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, all event sources in the application domain are affected.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> proprietà nell'oggetto specificato <ph id="ph2">`eventSource`</ph> è <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, sono interessate tutte le origini evento nel dominio dell'applicazione.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The event source to enable events for.</source>
          
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The level of events to enable.</source>
          
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The keyword flags necessary to enable the events.</source>
          
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The arguments to be matched to enable the events.</source>
          
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Enables events for the specified event source that has the specified verbosity level or lower, matching event keyword flag, and matching arguments.</source>
          
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> property in the specified <ph id="ph2">`eventSource`</ph> is <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, all event sources in the application domain are affected.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> proprietà nell'oggetto specificato <ph id="ph2">`eventSource`</ph> è <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, sono interessate tutte le origini evento nel dominio dell'applicazione.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated">
          <source>Occurs when an event source (<ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> object) is attached to the dispatcher.</source>
          
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EventSourceCreated&gt;</ph> occurs for all existing event sources when the event listener is created, as well as for any event sources that are created after the event listener's creation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EventSourceCreated&gt;</ph> si verifica per tutte le origini evento esistenti quando viene creato il listener di eventi, nonché per tutte le origini di eventi che vengono create dopo la creazione del listener di eventi.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>The event source to find the index for.</source>
          
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>Gets a small non-negative number that represents the specified event source.</source>
          
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>A small non-negative number that represents the specified event source.</source>
          
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>The value returned by <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A&gt;</ph> identifies an event source that is suitable for indexing an array.</source>
          <target state="translated">Il valore restituito da <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A&gt;</ph> identifica un'origine evento che è adatta per l'indicizzazione di una matrice.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>This integer is unique within the application domain.</source>
          <target state="translated">Questo numero intero è univoco all'interno del dominio applicazione.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>An event listener might find it useful to store additional information about each event source that is connected to it.</source>
          <target state="translated">Un listener di eventi potrebbe risultare utile per archiviare informazioni aggiuntive su ogni origine evento che si è connessi a esso.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>The value returned by <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A&gt;</ph> allows this extra information to be efficiently stored in a  expandable array such as <ph id="ph2">`List&lt;T&gt;`</ph>.</source>
          <target state="translated">Il valore restituito da <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A&gt;</ph> consente queste informazioni aggiuntive da archiviare in modo efficiente in una matrice espandibile, ad esempio <ph id="ph2">`List&lt;T&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Tracing.EventListener.EventWritten">
          <source>Occurs when an event has been written by an event source (<ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> object) for which the event listener has enabled events.</source>
          
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
          <source>The event source.</source>
          
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
          <source>Called for all existing event sources when the event listener is created and when a new event source is attached to the listener.</source>
          
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
          <source>Event source implementations should be aware that these callbacks are issued for existing event sources when the event listener is instantiated.</source>
          <target state="translated">Le implementazioni di origine evento devono essere consapevoli che questi callback vengono generati per le origini evento esistenti quando viene creata un'istanza del listener di eventi.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
          <source>In a multithreaded environment, it is possible for <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A&gt;</ph> callbacks  to occur before the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> callback.</source>
          <target state="translated">In un ambiente con multithreading, è possibile che <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A&gt;</ph> callback precedano il <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> callback.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)">
          <source>The event arguments that describe the event.</source>
          
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)">
          <source>Called whenever an event has been written by an event source for which the event listener has enabled events.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>