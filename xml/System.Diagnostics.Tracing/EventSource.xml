<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventSource.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b5daf229c103a69c7b6709895f511ed1fd50792e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5daf229c103a69c7b6709895f511ed1fd50792e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Provides the ability to create events for event tracing for Windows (ETW).</source>
          <target state="translated">Consente di creare eventi per Traccia eventi per Windows (ETW).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This class is intended to be inherited by a user class that provides specific events to be used for ETW.</source>
          <target state="translated">Questa classe è destinata a essere ereditato da una classe che fornisce eventi specifici da utilizzare per l'ETW.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType&gt;</ph> methods are called to log the events.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType&gt;</ph> per registrare gli eventi vengono chiamati i metodi.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Questo tipo implementa il <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Per eliminare direttamente il tipo, chiamare il relativo <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> metodo in un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> blocco.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio <ph id="ph1">`using`</ph> in C# o <ph id="ph2">`Using`</ph> in Visual Basic.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> argomento relativo all'interfaccia.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The basic functionality of <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is sufficient for most applications.</source>
          <target state="translated">Le funzionalità di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> è sufficiente per la maggior parte delle applicazioni.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>If you want more control over the ETW manifest that is created, you can apply the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventAttribute&gt;</ph> attribute to the methods.</source>
          <target state="translated">Se si desidera più preciso del manifesto ETW creato, è possibile applicare il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventAttribute&gt;</ph> attributo ai metodi.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>For advanced event source applications, it is possible to intercept the commands being sent to the derived event source and change the filtering, or to cause actions (such as dumping a data structure) to be performed by the inheritor.</source>
          <target state="translated">Per le applicazioni di origine eventi avanzati, è possibile intercettare i comandi inviati all'origine evento derivata e modificare il filtro o causare azioni (ad esempio il dump di una struttura di dati) che deve essere eseguito dall'erede.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>An event source can be activated with Windows ETW controllers, such as the Logman tool, immediately.</source>
          <target state="translated">Un'origine evento può essere attivata immediatamente con controller ETW di Windows, ad esempio lo strumento Logman.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>It is also possible to programmatically control and intercept the data dispatcher.</source>
          <target state="translated">È inoltre possibile controllare a livello di codice e intercettare dispatcher di dati.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> class provides additional functionality.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> classe fornisce funzionalità aggiuntive.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Starting with <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> provides channel support and some of the event source validation rules have been relaxed.</source>
          <target state="translated">A partire da <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> fornisce supporto per il canale e alcune delle regole di convalida di origine evento sono stati ridotti.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This means:</source>
          <target state="translated">Vale a dire che:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> types may now implement interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> tipi ora possono implementare interfacce.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This enables the use of event source types in advanced logging systems that use interfaces to define a common logging target.</source>
          <target state="translated">In questo modo l'utilizzo di tipi di origine evento in sistemi di registrazione avanzata che utilizzano le interfacce per definire una destinazione di registrazione comuni.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The concept of a utility event source type has been introduced.</source>
          <target state="translated">È stato introdotto il concetto di un tipo di origine evento utilità.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This feature enables sharing code across multiple event source types in a project to enable scenarios such as optimized <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> overloads.</source>
          <target state="translated">Questa funzionalità consente al codice condivisione tra più tipi di origine evento in un progetto per abilitare gli scenari, ad esempio ottimizzato <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> overload.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>For a version of the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class that provides features such as channel support you are targeting <ph id="ph2">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> or earlier, see <bpt id="p1">[</bpt>Microsoft EventSource Library 1.0.16<ept id="p1">](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource)</ept>.</source>
          <target state="translated">Per una versione di <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> destinazione classe che fornisce supporto per funzionalità quali canali si <ph id="ph2">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> o versioni precedenti, vedere <bpt id="p1">[</bpt>Microsoft EventSource Library 1.0.16<ept id="p1">](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The following example shows a simple implementation of the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">Nell'esempio seguente viene illustrata un'implementazione semplice del <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The following example shows a more complex implementation of the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">Nell'esempio seguente viene illustrata un'implementazione più complessa del <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This type is thread safe.</source>
          <target state="translated">Questo tipo è thread-safe.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to throw an exception when an error occurs in the underlying Windows code; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per generare un'eccezione quando si verifica un errore nel codice sottostante di Windows; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> e specifica se generare un'eccezione quando si verifica un errore nel codice sottostante di Windows.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
          <source>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</source>
          <target state="translated">Combinazione bit per bit di valori di enumerazione che specificano le impostazioni di configurazione da applicare all'origine evento.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class with the specified configuration settings.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> con le impostazioni di configurazione specificate.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Specifying <ph id="ph1">`settings`</ph> when the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</source>
          <target state="translated">Specifica di <ph id="ph1">`settings`</ph> quando il <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> viene costruito consente di specificare se l'evento viene scritto in un formato autodescrittivo o basato su manifesto.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
          <source>In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</source>
          <target state="translated">Inoltre, è possibile specificare che deve essere generata un'eccezione quando si verifica un errore durante il processo di scrittura di eventi.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
          <source>The name to apply to the event source.</source>
          <target state="translated">Nome da applicare all'origine evento.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
          <source>Must not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Non deve essere <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class with the specified name.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> con il nome specificato.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</source>
          <target state="translated">Combinazione bit per bit di valori di enumerazione che specificano le impostazioni di configurazione da applicare all'origine evento.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>The key-value pairs that specify traits for the event source.</source>
          <target state="translated">Coppie chiave-valore che specificano i tratti per l'origine evento.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> to be used with non-contract events that contains the specified settings and traits.</source>
          <target state="translated">Inizializza una nuova istanza dell'oggetto <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> da usare con eventi non di contratto che contengono le impostazioni e i tratti specificati.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Traits provide additional information for an event and are interpreted by an event listener.</source>
          <target state="translated">Tratti di forniscono informazioni aggiuntive per un evento e sono interpretati da un listener di eventi.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</source>
          <target state="translated">Tratti vengono specificati come coppie chiave-valore e se non specificato in coppie, si verificherà un'eccezione.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>You can retrieve a trait by passing the key to the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A&gt;</ph>, method.</source>
          <target state="translated">È possibile recuperare un tratto passando la chiave per la <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A&gt;</ph>, metodo.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Specifying <ph id="ph1">`settings`</ph> when the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</source>
          <target state="translated">Specifica di <ph id="ph1">`settings`</ph> quando il <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> viene costruito consente di specificare se l'evento viene scritto in un formato autodescrittivo o basato su manifesto.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</source>
          <target state="translated">Inoltre, è possibile specificare che deve essere generata un'eccezione quando si verifica un errore durante il processo di scrittura di eventi.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source><ph id="ph1">&lt;paramref name="traits" /&gt;</ph> is not specified in key-value pairs.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="traits" /&gt;</ph> non è specificato nelle coppie chiave-valore.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>The name to apply to the event source.</source>
          <target state="translated">Nome da applicare all'origine evento.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Must not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Non deve essere <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</source>
          <target state="translated">Combinazione bit per bit di valori di enumerazione che specificano le impostazioni di configurazione da applicare all'origine evento.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class with the specified name and settings.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> con il nome e le impostazioni specificate.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Specifying <ph id="ph1">`settings`</ph> when the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</source>
          <target state="translated">Specifica di <ph id="ph1">`settings`</ph> quando il <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> viene costruito consente di specificare se l'evento viene scritto in un formato autodescrittivo o basato su manifesto.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</source>
          <target state="translated">Inoltre, è possibile specificare che deve essere generata un'eccezione quando si verifica un errore durante il processo di scrittura di eventi.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>The name to apply to the event source.</source>
          <target state="translated">Nome da applicare all'origine evento.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Must not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Non deve essere <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</source>
          <target state="translated">Combinazione bit per bit di valori di enumerazione che specificano le impostazioni di configurazione da applicare all'origine evento.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>The key-value pairs that specify traits for the event source.</source>
          <target state="translated">Coppie chiave-valore che specificano i tratti per l'origine evento.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class with the specified configuration settings.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> con le impostazioni di configurazione specificate.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Traits provide additional information for an event and are interpreted by an event listener.</source>
          <target state="translated">Tratti di forniscono informazioni aggiuntive per un evento e sono interpretati da un listener di eventi.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</source>
          <target state="translated">Tratti vengono specificati come coppie chiave-valore e se non specificato in coppie, si verificherà un'eccezione.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>You can retrieve a trait by passing the key to the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A&gt;</ph>, method.</source>
          <target state="translated">È possibile recuperare un tratto passando la chiave per la <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A&gt;</ph>, metodo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Specifying <ph id="ph1">`config`</ph> when the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</source>
          <target state="translated">Specifica di <ph id="ph1">`config`</ph> quando il <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> viene costruito consente di specificare se l'evento viene scritto in un formato autodescrittivo o basato su manifesto.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</source>
          <target state="translated">Inoltre, è possibile specificare che deve essere generata un'eccezione quando si verifica un errore durante il processo di scrittura di eventi.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source><ph id="ph1">&lt;paramref name="traits" /&gt;</ph> is not specified in key-value pairs.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="traits" /&gt;</ph> non è specificato nelle coppie chiave-valore.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Supportato in .NET Framework 4.5.1 e versioni successive]</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source>Gets any exception that was thrown during the construction of the event source.</source>
          <target state="translated">Ottiene un'eccezione generata durante la costruzione dell'origine evento.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source>The exception that was thrown during the construction of the event source, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no exception was thrown.</source>
          <target state="translated">Eccezione generata durante la costruzione dell'origine evento o <ph id="ph1">&lt;see langword="null" /&gt;</ph> se non è stata generata alcuna eccezione.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> constructors do not throw exceptions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> i costruttori non generano eccezioni.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source>Instead, any exception that is thrown is assigned to the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A&gt;</ph> property and logged by the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Qualsiasi eccezione generata viene invece assegnato per il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A&gt;</ph> proprietà e registrati dal <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Supportato in .NET Framework 4.5.1 e versioni successive]</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
          <source>Gets the activity ID of the current thread.</source>
          <target state="translated">Ottiene l'ID attività del thread corrente.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
          <source>The activity ID of the current thread.</source>
          <target state="translated">ID attività del thread corrente.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class.</source>
          <target state="translated">Rilascia tutte le risorse usate dall'istanza corrente della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class.</source>
          <target state="translated">Rilascia tutte le risorse usate dall'istanza corrente della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>.</source>
          <target state="translated">Chiamare il metodo <ph id="ph1">`Dispose`</ph> dopo aver terminato di utilizzare l'oggetto <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> in an unusable state.</source>
          <target state="translated">Il metodo <ph id="ph1">`Dispose`</ph> lascia l'oggetto <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> in una condizione di inutilizzabilità.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> was occupying.</source>
          <target state="translated">Dopo la chiamata <ph id="ph1">`Dispose`</ph>, è necessario rilasciare tutti i riferimenti al <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> in modo che il garbage collector può recuperare la memoria che di <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> occupata.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementazione di un metodo Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>.</source>
          <target state="translated">Chiamare sempre il metodo <ph id="ph1">`Dispose`</ph> prima di rilasciare l'ultimo riferimento a <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> dell'oggetto <ph id="ph2">`Finalize`</ph> non viene richiamato dal Garbage Collector.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate dalla classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> e facoltativamente le risorse gestite.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">`Dispose()`</ph> (metodo) e <ph id="ph2">`Finalize`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> richiama il metodo protetto <ph id="ph2">`Dispose(Boolean)`</ph> metodo con il <ph id="ph3">`disposing`</ph> parametro impostato su <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> richiama <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> impostato su <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> references.</source>
          <target state="translated">Se il parametro <ph id="ph1">`disposing`</ph> è <ph id="ph2">`true`</ph>, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> fa riferimento.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">`Dispose()`</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier the Dispose Method call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, non fare riferimento a oggetti che sono stati eliminati in una precedente chiamata al metodo Dispose <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su come implementare <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted">
          <source>Occurs when a command comes from an event listener.</source>
          <target state="translated">Si verifica quando un comando proviene da un listener di eventi.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Finalize">
          <source>Allows the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</source>
          <target state="translated">Consente all'oggetto <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> di provare a liberare risorse ed eseguire altre operazioni di pulizia prima che l'oggetto venga recuperato da Garbage Collection.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Returns a string of the XML manifest that is associated with the current event source.</source>
          <target state="translated">Restituisce una stringa del manifesto XML associato all'origine evento corrente.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>The type of the event source.</source>
          <target state="translated">Tipo dell'origine evento.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>The path to the assembly file (.dll) to include in the <bpt id="p1">[</bpt>provider<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx)</ept> element of the manifest.</source>
          <target state="translated">Percorso del file di assembly (DLL) da includere nell'elemento <bpt id="p1">[</bpt>provider<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx)</ept> del manifesto.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>Returns a string of the XML manifest that is associated with the current event source.</source>
          <target state="translated">Restituisce una stringa del manifesto XML associato all'origine evento corrente.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>The XML data string.</source>
          <target state="translated">Stringa di dati XML.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>The information about the XML schema for the event manifest, see <bpt id="p1">[</bpt>Event Manifest Schema<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228077)</ept> in the MSDN Library.</source>
          <target state="translated">Le informazioni sullo schema XML per il manifesto di eventi, vedere <bpt id="p1">[</bpt>lo Schema di manifesto evento<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228077)</ept> in MSDN Library.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>The type of the event source.</source>
          <target state="translated">Tipo dell'origine evento.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>The path to the assembly file (.dll) file to include in the <bpt id="p1">[</bpt>provider<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx)</ept> element of the manifest.</source>
          <target state="translated">Percorso del file di assembly (DLL) da includere nell'elemento <bpt id="p1">[</bpt>provider<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx)</ept> del manifesto.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>A bitwise combination of the enumeration values that specify how the manifest is generated.</source>
          <target state="translated">Combinazione bit per bit dei valori di enumerazione che specificano le modalità di generazione del manifesto.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>Returns a string of the XML manifest that is associated with the current event source.</source>
          <target state="translated">Restituisce una stringa del manifesto XML associato all'origine evento corrente.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>The XML data string or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Stringa di dati XML o <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>If <ph id="ph1">`flags`</ph> specifies <ph id="ph2">`OnlyIfNeededForRegistration`</ph> and the <ph id="ph3">`eventSourceType`</ph> specified does not require explicit registration, <ph id="ph4">&lt;xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A&gt;</ph> returns <ph id="ph5">`null`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`flags`</ph> specifica <ph id="ph2">`OnlyIfNeededForRegistration`</ph> e <ph id="ph3">`eventSourceType`</ph> specificato non è necessario ricorrere alla registrazione esplicita, <ph id="ph4">&lt;xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A&gt;</ph> restituisce <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
          <source>The type of the event source.</source>
          <target state="translated">Tipo dell'origine evento.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
          <source>Gets the unique identifier for this implementation of the event source.</source>
          <target state="translated">Ottiene l'identificatore univoco per questa implementazione dell'origine evento.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
          <source>A unique identifier for this event source type.</source>
          <target state="translated">Identificatore univoco per questo tipo dell'origine evento.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
          <source>The type of the event source.</source>
          <target state="translated">Tipo dell'origine evento.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
          <source>Gets the friendly name of the event source.</source>
          <target state="translated">Ottiene il nome descrittivo dell'origine evento.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
          <source>The friendly name of the event source.</source>
          <target state="translated">Nome descrittivo dell'origine evento.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
          <source>The default is the simple name of the class.</source>
          <target state="translated">Il valore predefinito è il nome semplice della classe.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetSources">
          <source>Gets a snapshot of all the event sources for the application domain.</source>
          <target state="translated">Ottiene lo snapshot di tutte le origini evento per il dominio applicazione.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetSources">
          <source>An enumeration of all the event sources in the application domain.</source>
          <target state="translated">Enumerazione di tutte le origini evento nel dominio applicazione.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>The key of the trait to get.</source>
          <target state="translated">Chiave del tratto da ottenere.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>Gets the trait value associated with the specified key.</source>
          <target state="translated">Ottiene il valore del tratto associato alla chiave specificata.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>The trait value associated with the specified key.</source>
          <target state="translated">Valore del tratto associato alla chiave specificata.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>If the key is not found, returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se la chiave non viene trovata, restituisce <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>Traits provide additional information for an event and are interpreted by an event listener.</source>
          <target state="translated">Tratti di forniscono informazioni aggiuntive per un evento e sono interpretati da un listener di eventi.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>Traits are specified as key-value pairs when the event source is constructed.</source>
          <target state="translated">Tratti vengono specificati come coppie chiave-valore quando viene costruito l'origine evento.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.Guid">
          <source>The unique identifier for the event source.</source>
          <target state="translated">Identificatore univoco per l'origine evento.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.Guid">
          <source>A unique identifier for the event source.</source>
          <target state="translated">Identificatore univoco per l'origine evento.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Determines whether the current event source is enabled.</source>
          <target state="translated">Determina se l'origine evento corrente è abilitata.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled">
          <source>Determines whether the current event source is enabled.</source>
          <target state="translated">Determina se l'origine evento corrente è abilitata.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current event source is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'origine evento corrente è abilitata; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The level of the event source.</source>
          <target state="translated">Livello dell'origine evento.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The keyword of the event source.</source>
          <target state="translated">Parola chiave dell'origine evento.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>Determines whether the current event source that has the specified level and keyword is enabled.</source>
          <target state="translated">Determina se l'origine evento corrente con il livello e la parola chiave specificati è abilitata.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event source is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'origine evento è abilitata; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The result of this method is only an approximation of whether a particular event is active.</source>
          <target state="translated">Il risultato di questo metodo è solo un'approssimazione che indica se un particolare evento è attivo.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>Use it to avoid expensive computation for logging when logging is disabled.</source>
          <target state="translated">Usarlo per evitare attività onerose di calcolo per la registrazione quando quest'ultima è disabilitata.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>Event sources may have additional filtering that determines their activity.</source>
          <target state="translated">Origini evento possono includere filtri aggiuntivi che ne determinano l'attività.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>The event level to check.</source>
          <target state="translated">Livello dell'evento da controllare.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>An event source will be considered enabled when its level is greater than or equal to <bpt id="p1">&lt;c&gt;</bpt>level<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Un'origine evento verrà considerata abilitata quando il relativo livello è maggiore o uguale a <bpt id="p1">&lt;c&gt;</bpt>level<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>The event keywords to check.</source>
          <target state="translated">Parole chiave dell'evento da controllare.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>The event channel to check.</source>
          <target state="translated">Canale dell'evento da controllare.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>Determines whether the current event source is enabled for events with the specified level, keywords and channel.</source>
          <target state="translated">Determina se l'origine evento è abilitata per eventi con il livello, le parole chiave e il canale specificati.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event source is enabled for the specified event level, keywords and channel; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'origine evento è abilitata per il livello, le parole chiave e il canale specificati; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>The result of this method is only an approximation of whether a particular event is active.</source>
          <target state="translated">Il risultato di questo metodo è solo un'approssimazione che indica se un particolare evento è attivo.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>Use it to avoid expensive computation for logging when logging is disabled.</source>
          <target state="translated">Usarlo per evitare attività onerose di calcolo per la registrazione quando quest'ultima è disabilitata.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>Event sources may have additional filtering that determines their activity..</source>
          <target state="translated">Le origini evento possono includere filtri aggiuntivi che ne determinano l'attività.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>If the</source>
          <target state="translated">Se il</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.Name">
          <source>The friendly name of the class that is derived from the event source.</source>
          <target state="translated">Il nome descrittivo della classe che deriva dall'origine evento.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.Name">
          <source>The friendly name of the derived class.</source>
          <target state="translated">Nome descrittivo della classe derivata.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.Name">
          <source>The default is the simple name of the class.</source>
          <target state="translated">Il valore predefinito è il nome semplice della classe.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)">
          <source>The arguments for the event.</source>
          <target state="translated">Argomenti per l'evento.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)">
          <source>Called when the current event source is updated by the controller.</source>
          <target state="translated">Chiamato quando l'origine evento corrente viene aggiornata dal controller.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The event source to send the command to.</source>
          <target state="translated">L'origine evento a cui inviare il comando.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The event command to send.</source>
          <target state="translated">Il comando di evento da inviare.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The arguments for the event command.</source>
          <target state="translated">Argomenti per il comando evento.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Sends a command to a specified event source.</source>
          <target state="translated">Invia un comando a un'origine evento specificata.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> forwards the command to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A&gt;</ph> callback.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> inoltra il comando per il <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A&gt;</ph> callback.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>What the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> does with the command and its arguments is specific to the event source.</source>
          <target state="translated">Novità di <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> eseguite con il comando e i relativi argomenti è specifico per l'origine evento.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The command and command arguments are passed to the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A&gt;</ph> callback of the specified event source.</source>
          <target state="translated">Il comando e gli argomenti del comando vengono passati il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A&gt;</ph> callback dell'origine evento specificata.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>If possible, the current event source should not affect other event listeners' filtering events; however, that may not be possible if the command causes a garbage collection, a system flush, or some other global activity.</source>
          <target state="translated">Se possibile, l'origine evento corrente non dovrebbe influire eventi filtro altri listener di eventi. Tuttavia, che potrebbe non essere possibile se il comando fa sì che un'operazione di garbage collection, un sistema di scaricamento o un'altra attività globale.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Supportato in .NET Framework 4.5.1 e versioni successive]</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Sets the activity ID on the current thread.</source>
          <target state="translated">Imposta l'ID attività nel thread corrente.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>The current thread's new activity ID, or <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> to indicate that work on the current thread is not associated with any activity.</source>
          <target state="translated">ID attività del nuovo thread corrente o <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> per indicare che il lavoro sul thread corrente non è associato ad alcuna attività.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Supportato in .NET Framework 4.5.1 e versioni successive]</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>Sets the activity ID on the current thread.</source>
          <target state="translated">Imposta l'ID attività nel thread corrente.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A&gt;</ph> method sets the activity ID on a per-thread basis.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A&gt;</ph> metodo imposta l'ID attività in base al thread.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>All events on the thread will have that activity ID until a new activity is started on the same thread.</source>
          <target state="translated">Tutti gli eventi nel thread saranno necessario che l'ID attività fino a quando non viene avviata una nuova attività nello stesso thread.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>This method is called only by libraries that manage their own threads.</source>
          <target state="translated">Questo metodo viene chiamato solo da parte di librerie che gestiscono i propri thread.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>The current thread's new activity ID, or <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> to indicate that work on the current thread is not associated with any activity.</source>
          <target state="translated">ID attività del nuovo thread corrente o <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> per indicare che il lavoro sul thread corrente non è associato ad alcuna attività.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>When this method returns, contains the previous activity ID on the current thread.</source>
          <target state="translated">Quando questo metodo viene restituito, contiene l'ID attività precedente nel thread corrente.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Supportato in .NET Framework 4.5.1 e versioni successive]</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>Sets the activity ID on the current thread, and returns the previous activity ID.</source>
          <target state="translated">Imposta l'ID attività nel thread corrente e restituisce l'ID attività precedente.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29&gt;</ph> method to temporarily overwrite the current thread's activity ID with a new activity ID.</source>
          <target state="translated">È possibile chiamare il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29&gt;</ph> metodo temporaneamente sovrascrivere ID attività del thread corrente con un nuovo ID di attività.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>You must then restore the previous activity ID by passing the <ph id="ph1">`oldActivityThatWillContinue`</ph> argument to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29&gt;</ph> method.</source>
          <target state="translated">È quindi necessario ripristinare l'ID attività precedente, passando il <ph id="ph1">`oldActivityThatWillContinue`</ph> argomento per il <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.Settings">
          <source>Gets the settings applied to this event source.</source>
          <target state="translated">Ottiene le impostazioni applicate a questa origine evento.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.Settings">
          <source>The settings applied to this event source.</source>
          <target state="translated">Impostazioni applicate a questa origine evento.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.ToString">
          <source>Obtains a string representation of the current event source instance.</source>
          <target state="translated">Ottiene una rappresentazione di stringa dell'istanza dell'origine evento corrente.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.ToString">
          <source>The name and unique identifier that identify the current event source.</source>
          <target state="translated">Nome e identificatore univoco che identificano l'origine evento corrente.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Writes an event.</source>
          <target state="translated">Scrive un evento.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String)">
          <source>The name of the event to write.</source>
          <target state="translated">Nome dell'evento da scrivere.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String)">
          <source>Writes an event without fields, but with the specified name and default options.</source>
          <target state="translated">Scrive un evento senza campi, ma con il nome e le opzioni predefinite specificate.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String)">
          <source><ph id="ph1">&lt;paramref name="eventName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventName" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
          <source>The name of the event to write.</source>
          <target state="translated">Nome dell'evento da scrivere.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
          <source>The options such as level, keywords and operation code for the event.</source>
          <target state="translated">Opzioni, quali livello, parole chiave e codice operativo per l'evento.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
          <source>Writes an event without fields, but with the specified name and options.</source>
          <target state="translated">Scrive un evento senza campi, ma con il nome e le opzioni specificate.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
          <source><ph id="ph1">&lt;paramref name="eventName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventName" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>The type that defines the event and its associated data.</source>
          <target state="translated">Tipo che definisce l'evento e i relativi dati associati.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Questo tipo deve essere anonimo o contrassegnato con l'attributo <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>The name of the event.</source>
          <target state="translated">Nome dell'evento.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>The event data.</source>
          <target state="translated">Dati dell'evento.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Questo tipo deve essere anonimo o contrassegnato con l'attributo <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>Writes an event with the specified name and data.</source>
          <target state="translated">Scrive un evento con il nome e i dati specificati.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>If <ph id="ph1">`eventName`</ph> is <ph id="ph2">`null`</ph>, the event name is automatically derived from the type T’s event data (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) or determined based on the name of type <ph id="ph4">`T`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`eventName`</ph> è <ph id="ph2">`null`</ph>, il nome dell'evento automaticamente deriva dai dati di evento di tipo "T" (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) o viene determinata in base al nome di tipo <ph id="ph4">`T`</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>The public instance properties of <ph id="ph1">`data`</ph> will be written recursively to create the event fields.</source>
          <target state="translated">Proprietà dell'istanza di pubblico <ph id="ph1">`data`</ph> verranno scritti in modo ricorsivo per creare i campi evento.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The type that defines the event and its associated data.</source>
          <target state="translated">Tipo che definisce l'evento e i relativi dati associati.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Questo tipo deve essere anonimo o contrassegnato con l'attributo <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The name of the event.</source>
          <target state="translated">Nome dell'evento.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The event options.</source>
          <target state="translated">Opzioni dell'evento.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The event data.</source>
          <target state="translated">Dati dell'evento.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Questo tipo deve essere anonimo o contrassegnato con l'attributo <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>Writes an event with the specified name, event data and options.</source>
          <target state="translated">Scrive un evento con il nome, i dati e le opzioni specificate.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>If <ph id="ph1">`eventName`</ph> is <ph id="ph2">`null`</ph>, the event name is automatically derived from the type T’s event data (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) or determined based on the name of type <ph id="ph4">`T`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`eventName`</ph> è <ph id="ph2">`null`</ph>, il nome dell'evento automaticamente deriva dai dati di evento di tipo "T" (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) o viene determinata in base al nome di tipo <ph id="ph4">`T`</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The public instance properties of <ph id="ph1">`data`</ph> will be written recursively to create the event fields.</source>
          <target state="translated">Proprietà dell'istanza di pubblico <ph id="ph1">`data`</ph> verranno scritti in modo ricorsivo per creare i campi evento.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The type that defines the event and its associated data.</source>
          <target state="translated">Tipo che definisce l'evento e i relativi dati associati.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Questo tipo deve essere anonimo o contrassegnato con l'attributo <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The name of the event.</source>
          <target state="translated">Nome dell'evento.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The event options.</source>
          <target state="translated">Opzioni dell'evento.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The event data.</source>
          <target state="translated">Dati dell'evento.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Questo tipo deve essere anonimo o contrassegnato con l'attributo <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>Writes an event with the specified name, options and event data.</source>
          <target state="translated">Scrive un evento con il nome, le opzioni e i dati specificati.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>If <ph id="ph1">`eventName`</ph> is <ph id="ph2">`null`</ph>, the event name is automatically derived from the type T’s event data (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) or determined based on the name of type <ph id="ph4">`T`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`eventName`</ph> è <ph id="ph2">`null`</ph>, il nome dell'evento automaticamente deriva dai dati di evento di tipo "T" (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) o viene determinata in base al nome di tipo <ph id="ph4">`T`</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The public instance properties of <ph id="ph1">`data`</ph> will be written recursively to create the event fields.</source>
          <target state="translated">Proprietà dell'istanza di pubblico <ph id="ph1">`data`</ph> verranno scritti in modo ricorsivo per creare i campi evento.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The type that defines the event and its associated data.</source>
          <target state="translated">Tipo che definisce l'evento e i relativi dati associati.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Questo tipo deve essere anonimo o contrassegnato con l'attributo <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The name of the event.</source>
          <target state="translated">Nome dell'evento.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The event options.</source>
          <target state="translated">Opzioni dell'evento.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The ID of the activity associated with the event.</source>
          <target state="translated">ID dell'attività associata all'evento.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The ID of an associated activity, or <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> if there is no associated activity.</source>
          <target state="translated">ID di un'attività associata oppure <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> se non esiste alcuna attività associata.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The event data.</source>
          <target state="translated">Dati dell'evento.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Questo tipo deve essere anonimo o contrassegnato con l'attributo <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>Writes an event with the specified name, options, related activity and event data.</source>
          <target state="translated">Scrive un evento con il nome, le opzioni, le attività correlate e i dati specificati.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>If <ph id="ph1">`eventName`</ph> is <ph id="ph2">`null`</ph>, the event name is automatically derived from the type T’s event data (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) or determined based on the name of type <ph id="ph4">`T`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`eventName`</ph> è <ph id="ph2">`null`</ph>, il nome dell'evento automaticamente deriva dai dati di evento di tipo "T" (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) o viene determinata in base al nome di tipo <ph id="ph4">`T`</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The public instance properties of <ph id="ph1">`data`</ph> will be written recursively to create the event fields.</source>
          <target state="translated">Proprietà dell'istanza di pubblico <ph id="ph1">`data`</ph> verranno scritti in modo ricorsivo per creare i campi evento.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Writes an event by using the provided event identifier and optional arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti facoltativi.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The <ph id="ph1">`WriteEvent`</ph> method provides overloads with combinations of string and integer arguments.</source>
          <target state="translated">Il <ph id="ph1">`WriteEvent`</ph> metodo fornisce overload con combinazioni di argomenti di stringa e integer.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>If none of these combinations match the parameters for the call, the compiler uses the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> overload, which is considerably slower than the other overloads.</source>
          <target state="translated">Se nessuna di queste combinazioni corrispondono ai parametri per la chiamata, il compilatore utilizza il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> overload, che è notevolmente più lento rispetto a altri overload.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>See the overload page for details.</source>
          <target state="translated">Vedere la pagina di overload per i dettagli.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>In all cases, the <ph id="ph1">`eventid`</ph> parameter should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated">In tutti i casi, il <ph id="ph1">`eventid`</ph> parametro deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>You can also create a custom overload by using the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> method.</source>
          <target state="translated">È inoltre possibile creare un overload personalizzato usando il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>Writes an event by using the provided event identifier.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>The following example shows how to use this method overload to write an event.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare questo overload del metodo per scrivere un evento.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>A byte array argument.</source>
          <target state="translated">Argomento della matrice di byte.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>Writes an event by using the provided event identifier and byte array argument.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti di matrice di byte.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">Argomento di intero.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>Writes an event by using the provided event identifier and 32-bit integer argument.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e un argomento di intero a 32 bit.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>The following example shows how to use this method overload to write an event.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare questo overload del metodo per scrivere un evento.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argomento di intero a 64 bit.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>Writes an event by using the provided event identifier and 64-bit integer argument.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e un argomento di intero a 64 bit.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>An array of objects.</source>
          <target state="translated">Matrice di oggetti.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>Writes an event by using the provided event identifier and array of arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e la matrice di argomenti.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>By default, the compiler calls this overload if the parameters for the call do not match one of the other method overloads.</source>
          <target state="translated">Per impostazione predefinita, il compilatore chiama questo overload se i parametri per la chiamata non corrisponde a uno degli overload del metodo.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>This overload is much slower than the other overloads, because it does the following:</source>
          <target state="translated">Questo overload è molto più lento rispetto gli altri overload, perché le operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>It allocates an array to hold the variable argument.</source>
          <target state="translated">Alloca una matrice per contenere l'argomento di variabile.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>It casts each parameter to an object (which causes allocations for primitive types).</source>
          <target state="translated">Viene eseguito il cast di ogni parametro a un oggetto (che fa sì che le allocazioni per i tipi primitivi).</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>It assigns these objects to the array.</source>
          <target state="translated">Assegna questi oggetti nella matrice.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>It calls the function, which then determines the type of each argument so it can be serialized for ETW.</source>
          <target state="translated">Chiama la funzione, che quindi determina il tipo di ciascun argomento in modo che può essere serializzato per l'ETW.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>The high overhead for this overload is not significant when tracing low-volume events, because the method is used only when the provider is enabled.</source>
          <target state="translated">L'overhead elevato per questo overload non è significativo quando la tracciatura di eventi di volume ridotto, perché il metodo viene utilizzato solo quando il provider è abilitato.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>However, for high-volume events, the performance overhead can be significant.</source>
          <target state="translated">Tuttavia, per gli eventi con volumi elevati, l'overhead delle prestazioni può essere significativo.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>You can avoid using <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType&gt;</ph> for high-volume payloads by creating a new, faster  overload with the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> method.</source>
          <target state="translated">È possibile evitare di utilizzare <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType&gt;</ph> per volumi elevati di payload mediante la creazione di un overload di nuovo, più veloce con la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argomento stringa.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>Writes an event by using the provided event identifier and string argument.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti di stringa.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>The following example shows how to use this method overload to write an event.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare questo overload del metodo per scrivere un evento.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">Argomento di intero.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">Argomento di intero.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>Writes an event by using the provided event identifier and 32-bit integer arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti interi a 32 bit.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>A 32-bit integer argument.</source>
          <target state="translated">Argomento di intero a 32 bit.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argomento stringa.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>Writes an event by using the provided event identifier and 32-bit integer and string arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti di stringa e interi a 32 bit.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>A 64-bit integer argument.</source>
          <target state="translated">Argomento di intero a 64 bit.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>A byte array argument.</source>
          <target state="translated">Argomento della matrice di byte.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</source>
          <target state="translated">Scrive i dati dell'evento usando l'identificatore e gli argomenti di matrice di byte e di interi a 64 bit specificati.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argomento di intero a 64 bit.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argomento di intero a 64 bit.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>Writes an event by using the provided event identifier and 64-bit arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti a 64 bit.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>A 64-bit integer argument.</source>
          <target state="translated">Argomento di intero a 64 bit.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argomento stringa.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti di stringa e interi a 64 bit.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>A string argument.</source>
          <target state="translated">Argomento stringa.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>A 32 bit integer argument.</source>
          <target state="translated">Argomento di intero a 32 bit.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>Writes an event by using the provided event identifier and arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>A string argument.</source>
          <target state="translated">Argomento stringa.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argomento di intero a 64 bit.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>Writes an event by using the provided event identifier and arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argomento stringa.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argomento stringa.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>Writes an event by using the provided event identifier and string arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti di stringa.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">Argomento di intero.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">Argomento di intero.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">Argomento di intero.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Writes an event by using the provided event identifier and 32-bit integer arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti interi a 32 bit.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argomento di intero a 64 bit.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argomento di intero a 64 bit.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argomento di intero a 64 bit.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>Writes an event by using the provided event identifier and 64-bit arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti a 64 bit.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>A string argument.</source>
          <target state="translated">Argomento stringa.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>A 32 bit integer argument.</source>
          <target state="translated">Argomento di intero a 32 bit.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>A 32 bit integer argument.</source>
          <target state="translated">Argomento di intero a 32 bit.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>Writes an event by using the provided event identifier and arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Questo valore dovrebbe essere compreso tra 0 e 65535.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argomento stringa.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argomento stringa.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argomento stringa.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>Writes an event by using the provided event identifier and string arguments.</source>
          <target state="translated">Scrive un evento usando l'identificatore evento fornito e gli argomenti di stringa.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Quando si implementa un metodo che è stato identificato come un evento ETW in un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-classe derivata.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">È necessario chiamare la classe di base <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metodo passando la <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> e gli stessi argomenti al metodo implementato simile all'esempio seguente.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The event identifier.</source>
          <target state="translated">Identificatore dell'evento.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The number of event data items.</source>
          <target state="translated">Numero di elementi dei dati dell'evento.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The structure that contains the event data.</source>
          <target state="translated">Struttura che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Creates a new <ph id="ph1">&lt;see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /&gt;</ph> overload by using the provided event identifier and event data.</source>
          <target state="translated">Crea un nuovo overload di <ph id="ph1">&lt;see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /&gt;</ph> tramite l'identificatore evento e i dati dell'evento forniti.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> deve essere maggiore di 0 o inferiore a 65535 o possono verificarsi errori durante l'operazione.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>This protected method  enables users to define new <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> overloads that are faster than the provided overloads.</source>
          <target state="translated">Questo metodo protetto consente agli utenti di definire nuovi <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> overload che sono più veloci rispetto a overload specificato.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Creating a new overload involves unsafe code.</source>
          <target state="translated">Creazione di un nuovo overload implica codice unsafe.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The basic procedure is to stack-allocate an array of event data descriptors that matches the number of payload items.</source>
          <target state="translated">La procedura di base è stack-allocare una matrice di descrittori dei dati evento che corrisponde al numero di elementi di payload.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>For each payload item, set the correct size and value in the event data array.Call <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> with the initialized array.</source>
          <target state="translated">Per ogni elemento di payload, impostare le dimensioni corrette e matrice di dati dell'evento di valore. Chiamare <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> con matrice inizializzata.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The following example shows how to add a <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> overload that accepts four arguments.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come aggiungere un <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> overload che accetta quattro argomenti.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>An example would be if you have a logging event that logs a string and 3 integers.</source>
          <target state="translated">Un esempio sarebbe se si dispone di un evento di registrazione che registra una stringa e interi a 3.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>You could do this without calling <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph>, but it would be slower than it needs to be.</source>
          <target state="translated">È possibile eseguire questa senza chiamare <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph>, ma sarebbe più lento del necessario.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>That is because it uses arrays and reflection to figure out what to do.</source>
          <target state="translated">Ciò avviene perché Usa matrici e reflection per determinare quali operazioni eseguire.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>If you log these at a high rate (&gt; 1000 / sec), it can be worth making a fast helper, as shown in the following example.</source>
          <target state="translated">Se si accede a questi una frequenza elevata (1000 &gt; / sec), può essere necessario effettuare un rapido helper, come illustrato nell'esempio seguente.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The method shadows the existing <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>.</source>
          <target state="translated">Il metodo nasconde esistente <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Thus the original caller code (LogTime) does not actually change, but the C# compiler will use the more specialized version which will be faster.</source>
          <target state="translated">In questo modo il codice del chiamante originale (LogTime) non venga modificata, ma il compilatore C# utilizzeranno la versione più specializzata che sarà più veloce.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>To compile unsafe code, you must specify the <bpt id="p1">[</bpt>/unsafe (C# Compiler Options)<ept id="p1">](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md)</ept> compiler option.</source>
          <target state="translated">Per compilare codice unsafe, è necessario specificare il <bpt id="p1">[</bpt>/unsafe (opzioni del compilatore c#)<ept id="p1">](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md)</ept> l'opzione del compilatore.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">richiede l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>An identifier that uniquely identifies this event within the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</source>
          <target state="translated">Identificatore che identifica in modo univoco questo evento nell'oggetto <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>The related activity identifier.</source>
          <target state="translated">Identificatore dell'attività correlata.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>An array of objects that contain data about the event.</source>
          <target state="translated">Matrice di oggetti che contiene i dati relativi all'evento.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Supportato in .NET Framework 4.5.1 e versioni successive]</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Writes an event that indicates that the current activity is related to another activity.</source>
          <target state="translated">Scrive un evento che indica che l'attività corrente è correlata a un'altra attività.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> method logs a transfer event.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> metodo registra un evento di trasferimento.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>The activity of the current thread is logged with the event, and this allows two activities to be related by a consumer of events.</source>
          <target state="translated">L'attività del thread corrente viene registrato con l'evento, e in tal caso due attività devono essere correlate da un consumer di eventi.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Your ETW event method calling this function must follow these guidelines:</source>
          <target state="translated">Chiamare questa funzione il metodo di evento ETW deve seguire queste linee guida:</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Specify the first parameter as a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> named <ph id="ph2">`relatedActivityId`</ph>.</source>
          <target state="translated">Specificare il primo parametro come un <ph id="ph1">&lt;xref:System.Guid&gt;</ph> denominato <ph id="ph2">`relatedActivityId`</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Specify either <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Send&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Receive&gt;</ph> as the <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Specificare il parametro <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Send&gt;</ph> o <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Receive&gt;</ph> come il <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</source>
          <target state="translated">Chiamare <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> passando nell'evento ID, aggiungendo il GUID dell'ID correlati, seguito da tutti i parametri di metodo dell'evento viene passato, nello stesso ordine.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>If <ph id="ph1">`args`</ph> is not used, it is converted to an empty array for the resulting call to ETW.</source>
          <target state="translated">Se <ph id="ph1">`args`</ph> non è utilizzato, viene convertito in una matrice vuota per la chiamata risulta a ETW.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>The following code example shows how you might can specify an event source that calls <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come può specificare un'origine evento che chiama <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>An identifier that uniquely identifies this event within the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</source>
          <target state="translated">Identificatore che identifica in modo univoco questo evento nell'oggetto <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>A pointer to the GUID of the related activity ID.</source>
          <target state="translated">Puntatore al GUID dell'ID attività correlato.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The number of items in the <bpt id="p1">&lt;c&gt;</bpt>data<ept id="p1">&lt;/c&gt;</ept> field.</source>
          <target state="translated">Numero di elementi presenti nel campo <bpt id="p1">&lt;c&gt;</bpt>dati<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>A pointer to the first item in the event data field.</source>
          <target state="translated">Puntatore al primo elemento nel campo dati evento.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Supportato in .NET Framework 4.5.1 e versioni successive]</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Writes an event that indicates that the current activity is related to another activity.</source>
          <target state="translated">Scrive un evento che indica che l'attività corrente è correlata a un'altra attività.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph> is similar to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> method but offers better performance, bevcause it does not have to unbox the <ph id="ph3">`childActivityID`</ph> and <ph id="ph4">`data`</ph> arguments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph> è simile al <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> metodo ma offre prestazioni migliori, che è necessario eseguire la conversione unboxing bevcause il <ph id="ph3">`childActivityID`</ph> e <ph id="ph4">`data`</ph> argomenti.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Your ETW event method calling this function must follow these guidelines:</source>
          <target state="translated">Chiamare questa funzione il metodo di evento ETW deve seguire queste linee guida:</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Specify the first parameter as a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> named <ph id="ph2">`relatedActivityId`</ph>.</source>
          <target state="translated">Specificare il primo parametro come un <ph id="ph1">&lt;xref:System.Guid&gt;</ph> denominato <ph id="ph2">`relatedActivityId`</ph>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Specify either <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Send&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Receive&gt;</ph> as the <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Specificare il parametro <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Send&gt;</ph> o <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Receive&gt;</ph> come il <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</source>
          <target state="translated">Chiamare <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph> passando nell'evento ID, aggiungendo il GUID dell'ID correlati, seguito da tutti i parametri di metodo dell'evento viene passato, nello stesso ordine.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The following C# code example shows how to define a method overload that calls <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph>.</source>
          <target state="translated">Esempio di codice c# seguente viene illustrato come definire un overload del metodo che chiama <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>