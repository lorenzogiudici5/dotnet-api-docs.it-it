<Type Name="EventSource" FullName="System.Diagnostics.Tracing.EventSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9123473d643481ca29d41523e7f65cea5413f138" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36675843" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSource : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSource extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Tracing.EventSource" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSource&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSource : IDisposable" />
  <TypeSignature Language="F#" Value="type EventSource = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="a9f65-101">Provides the ability to create events for event tracing for Windows (ETW).</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9f65-101">Provides the ability to create events for event tracing for Windows (ETW).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-102">Questa classe è destinata a essere ereditato da una classe che fornisce eventi specifici da utilizzare per ETW.</span><span class="sxs-lookup"><span data-stu-id="a9f65-102">This class is intended to be inherited by a user class that provides specific events to be used for ETW.</span></span> <span data-ttu-id="a9f65-103">Il <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> metodi vengono chiamati per registrare gli eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-103">The <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> methods are called to log the events.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a9f65-104">Questo tipo implementa la <xref:System.IDisposable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a9f65-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="a9f65-105">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="a9f65-106">Per eliminare direttamente il tipo, chiamare il relativo <xref:System.IDisposable.Dispose%2A> metodo in un `try` / `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="a9f65-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="a9f65-107">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="a9f65-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="a9f65-108">Per altre informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a9f65-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="a9f65-109">Le funzionalità di base <xref:System.Diagnostics.Tracing.EventSource> è sufficiente per la maggior parte delle applicazioni.</span><span class="sxs-lookup"><span data-stu-id="a9f65-109">The basic functionality of <xref:System.Diagnostics.Tracing.EventSource> is sufficient for most applications.</span></span>  <span data-ttu-id="a9f65-110">Se si desidera controllare più del manifesto ETW creato, è possibile applicare il <xref:System.Diagnostics.Tracing.EventAttribute> attributo ai metodi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-110">If you want more control over the ETW manifest that is created, you can apply the <xref:System.Diagnostics.Tracing.EventAttribute> attribute to the methods.</span></span> <span data-ttu-id="a9f65-111">Per le applicazioni di origine eventi avanzati, è possibile intercettare i comandi inviati all'origine evento derivata e modificare il filtro o per fare in modo azioni (ad esempio, il dump di una struttura di dati) che deve essere eseguito dall'erede.</span><span class="sxs-lookup"><span data-stu-id="a9f65-111">For advanced event source applications, it is possible to intercept the commands being sent to the derived event source and change the filtering, or to cause actions (such as dumping a data structure) to be performed by the inheritor.</span></span>  <span data-ttu-id="a9f65-112">Un'origine evento può essere attivata immediatamente con controller ETW di Windows, ad esempio lo strumento Logman.</span><span class="sxs-lookup"><span data-stu-id="a9f65-112">An event source can be activated with Windows ETW controllers, such as the Logman tool, immediately.</span></span>  <span data-ttu-id="a9f65-113">È inoltre possibile controllare a livello di codice e di intercettare il dispatcher di dati.</span><span class="sxs-lookup"><span data-stu-id="a9f65-113">It is also possible to programmatically control and intercept the data dispatcher.</span></span>  <span data-ttu-id="a9f65-114">Il <xref:System.Diagnostics.Tracing.EventListener> classe fornisce funzionalità aggiuntive.</span><span class="sxs-lookup"><span data-stu-id="a9f65-114">The <xref:System.Diagnostics.Tracing.EventListener> class provides additional functionality.</span></span>  
  
 <span data-ttu-id="a9f65-115">A partire da [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> fornisce supporto per il canale e alcune delle regole di convalida di origine evento sono stati ridotti.</span><span class="sxs-lookup"><span data-stu-id="a9f65-115">Starting with [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> provides channel support and some of the event source validation rules have been relaxed.</span></span> <span data-ttu-id="a9f65-116">Vale a dire che:</span><span class="sxs-lookup"><span data-stu-id="a9f65-116">This means:</span></span>  
  
-   <span data-ttu-id="a9f65-117"><xref:System.Diagnostics.Tracing.EventSource> tipi ora possono implementare interfacce.</span><span class="sxs-lookup"><span data-stu-id="a9f65-117"><xref:System.Diagnostics.Tracing.EventSource> types may now implement interfaces.</span></span> <span data-ttu-id="a9f65-118">In questo modo l'utilizzo di tipi di origine evento in sistemi di registrazione avanzata che utilizzano le interfacce per definire una destinazione di registrazione comuni.</span><span class="sxs-lookup"><span data-stu-id="a9f65-118">This enables the use of event source types in advanced logging systems that use interfaces to define a common logging target.</span></span>  
  
-   <span data-ttu-id="a9f65-119">È stato introdotto il concetto di un tipo di origine evento utilità.</span><span class="sxs-lookup"><span data-stu-id="a9f65-119">The concept of a utility event source type has been introduced.</span></span> <span data-ttu-id="a9f65-120">Questa funzionalità consente al codice condivisione tra più tipi di origine evento in un progetto per abilitare gli scenari, ad esempio ottimizzato <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overload.</span><span class="sxs-lookup"><span data-stu-id="a9f65-120">This feature enables sharing code across multiple event source types in a project to enable scenarios such as optimized <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads.</span></span>  
  
 <span data-ttu-id="a9f65-121">Per una versione del <xref:System.Diagnostics.Tracing.EventSource> destinazione classe che fornisce funzionalità come canale consentono di sviluppare [!INCLUDE[net_v451](~/includes/net-v451-md.md)] o versioni precedenti, vedere [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span><span class="sxs-lookup"><span data-stu-id="a9f65-121">For a version of the <xref:System.Diagnostics.Tracing.EventSource> class that provides features such as channel support you are targeting [!INCLUDE[net_v451](~/includes/net-v451-md.md)] or earlier, see [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9f65-122">Nell'esempio seguente viene illustrata un'implementazione semplice del <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="a9f65-122">The following example shows a simple implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTraceSmall#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtracesmall/cs/program.cs#1)]
 [!code-vb[ETWTraceSmall#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtracesmall/vb/program.vb#1)]  
  
 <span data-ttu-id="a9f65-123">Nell'esempio seguente viene illustrata un'implementazione più complessa del <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="a9f65-123">The following example shows a more complex implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#1)]
 [!code-vb[ETWTrace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="a9f65-124">Questo tipo è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9f65-124">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-125">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-125">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-126">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-126">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (bool throwOnEventWriteErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool throwOnEventWriteErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (throwOnEventWriteErrors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(bool throwOnEventWriteErrors);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : bool -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource throwOnEventWriteErrors" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="throwOnEventWriteErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="throwOnEventWriteErrors">
          <span data-ttu-id="a9f65-127">
            <see langword="true" /> to throw an exception when an error occurs in the underlying Windows code; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-127">
              <see langword="true" /> to throw an exception when an error occurs in the underlying Windows code; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-128">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-128">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : System.Diagnostics.Tracing.EventSourceSettings -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="a9f65-129">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-129">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-130">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-130">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-131">Che specifica `settings` quando il <xref:System.Diagnostics.Tracing.EventSource> viene costruito consente di specificare se l'evento viene scritto in un formato autodescrittivo o basato su manifesto.</span><span class="sxs-lookup"><span data-stu-id="a9f65-131">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="a9f65-132">Inoltre, è possibile specificare che deve essere generata un'eccezione quando si verifica un errore durante il processo di scrittura di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-132">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : string -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource eventSourceName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="a9f65-133">The name to apply to the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-133">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="a9f65-134">Must not be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-134">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-135">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-135">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9f65-136">
            <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-136">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : System.Diagnostics.Tracing.EventSourceSettings * string[] -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource (settings, traits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="a9f65-137">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-137">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="a9f65-138">The key-value pairs that specify traits for the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-138">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-139">Initializes a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> to be used with non-contract events that contains the specified settings and traits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-139">Initializes a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> to be used with non-contract events that contains the specified settings and traits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-140">Tratti di forniscono informazioni aggiuntive per un evento e sono interpretati da un listener di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-140">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="a9f65-141">Tratti vengono specificati come coppie chiave-valore e se non specificato in coppie, si verificherà un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-141">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="a9f65-142">È possibile recuperare un tratto passando la chiave per la <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, metodo.</span><span class="sxs-lookup"><span data-stu-id="a9f65-142">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="a9f65-143">Che specifica `settings` quando il <xref:System.Diagnostics.Tracing.EventSource> viene costruito consente di specificare se l'evento viene scritto in un formato autodescrittivo o basato su manifesto.</span><span class="sxs-lookup"><span data-stu-id="a9f65-143">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="a9f65-144">Inoltre, è possibile specificare che deve essere generata un'eccezione quando si verifica un errore durante il processo di scrittura di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-144">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9f65-145">
            <paramref name="traits" /> is not specified in key-value pairs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-145">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : string * System.Diagnostics.Tracing.EventSourceSettings -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource (eventSourceName, config)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="a9f65-146">The name to apply to the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-146">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="a9f65-147">Must not be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-147">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="a9f65-148">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-148">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-149">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name and settings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-149">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name and settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-150">Che specifica `settings` quando il <xref:System.Diagnostics.Tracing.EventSource> viene costruito consente di specificare se l'evento viene scritto in un formato autodescrittivo o basato su manifesto.</span><span class="sxs-lookup"><span data-stu-id="a9f65-150">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="a9f65-151">Inoltre, è possibile specificare che deve essere generata un'eccezione quando si verifica un errore durante il processo di scrittura di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-151">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9f65-152">
            <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-152">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : string * System.Diagnostics.Tracing.EventSourceSettings * string[] -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource (eventSourceName, config, traits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="a9f65-153">The name to apply to the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-153">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="a9f65-154">Must not be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-154">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="a9f65-155">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-155">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="a9f65-156">The key-value pairs that specify traits for the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-156">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-157">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-157">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-158">Tratti di forniscono informazioni aggiuntive per un evento e sono interpretati da un listener di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-158">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="a9f65-159">Tratti vengono specificati come coppie chiave-valore e se non specificato in coppie, si verificherà un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-159">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="a9f65-160">È possibile recuperare un tratto passando la chiave per la <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, metodo.</span><span class="sxs-lookup"><span data-stu-id="a9f65-160">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="a9f65-161">Che specifica `config` quando il <xref:System.Diagnostics.Tracing.EventSource> viene costruito consente di specificare se l'evento viene scritto in un formato autodescrittivo o basato su manifesto.</span><span class="sxs-lookup"><span data-stu-id="a9f65-161">Specifying `config` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="a9f65-162">Inoltre, è possibile specificare che deve essere generata un'eccezione quando si verifica un errore durante il processo di scrittura di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-162">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9f65-163">
            <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-163">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9f65-164">
            <paramref name="traits" /> is not specified in key-value pairs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-164">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ConstructionException">
      <MemberSignature Language="C#" Value="public Exception ConstructionException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ConstructionException" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.ConstructionException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ConstructionException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionException : Exception" Usage="System.Diagnostics.Tracing.EventSource.ConstructionException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-165">[Supported in the .NET Framework 4.5.1 and later versions]  Gets any exception that was thrown during the construction of the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-165">[Supported in the .NET Framework 4.5.1 and later versions]  Gets any exception that was thrown during the construction of the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9f65-166">Eccezione generata durante la costruzione dell'origine evento o <see langword="null" /> se non è stata generata alcuna eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-166">The exception that was thrown during the construction of the event source, or <see langword="null" /> if no exception was thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-167"><xref:System.Diagnostics.Tracing.EventSource> i costruttori non generano eccezioni.</span><span class="sxs-lookup"><span data-stu-id="a9f65-167"><xref:System.Diagnostics.Tracing.EventSource> constructors do not throw exceptions.</span></span> <span data-ttu-id="a9f65-168">Qualsiasi eccezione generata viene invece assegnato per il <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> proprietà e registrati dal <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="a9f65-168">Instead, any exception that is thrown is assigned to the <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> property and logged by the <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static Guid CurrentThreadActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid CurrentThreadActivityId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentThreadActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid CurrentThreadActivityId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentThreadActivityId : Guid" Usage="System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-169">[Supported in the .NET Framework 4.5.1 and later versions]  Gets the activity ID of the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-169">[Supported in the .NET Framework 4.5.1 and later versions]  Gets the activity ID of the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9f65-170">ID attività del thread corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-170">The activity ID of the current thread.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-171">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-171">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventSource.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-172">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-172">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-173">Chiamare il metodo `Dispose` dopo aver terminato di utilizzare l'oggetto <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="a9f65-173">Call `Dispose` when you are finished using the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="a9f65-174">Il metodo `Dispose` lascia l'oggetto <xref:System.Diagnostics.Tracing.EventSource> in una condizione di inutilizzabilità.</span><span class="sxs-lookup"><span data-stu-id="a9f65-174">The `Dispose` method leaves the <xref:System.Diagnostics.Tracing.EventSource> in an unusable state.</span></span> <span data-ttu-id="a9f65-175">Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti per il <xref:System.Diagnostics.Tracing.EventSource> consentire al garbage collector di recuperare la memoria che il <xref:System.Diagnostics.Tracing.EventSource> occupata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-175">After calling `Dispose`, you must release all references to the <xref:System.Diagnostics.Tracing.EventSource> so the garbage collector can reclaim the memory that the <xref:System.Diagnostics.Tracing.EventSource> was occupying.</span></span>  
  
 <span data-ttu-id="a9f65-176">Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="a9f65-176">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9f65-177">Chiamare sempre il metodo `Dispose` prima di rilasciare l'ultimo riferimento a <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="a9f65-177">Always call `Dispose` before you release your last reference to the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="a9f65-178">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Diagnostics.Tracing.EventSource> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="a9f65-178">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Diagnostics.Tracing.EventSource> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="eventSource.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a9f65-179">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-179">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-180">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-180">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-181">Questo metodo viene chiamato dal metodo pubblico `Dispose()` metodo e il `Finalize` metodo.</span><span class="sxs-lookup"><span data-stu-id="a9f65-181">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="a9f65-182">`Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="a9f65-182">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="a9f65-183">`Finalize` richiama `Dispose` con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="a9f65-183">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="a9f65-184">Se il parametro `disposing` è `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <xref:System.Diagnostics.Tracing.EventSource> fa riferimento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-184">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.Tracing.EventSource> references.</span></span> <span data-ttu-id="a9f65-185">Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-185">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a9f65-186">
            <para>
              <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. Quando si esegue l'override <see langword="Dispose(Boolean)" />, non fare riferimento a oggetti che sono stati eliminati in una precedente chiamata al metodo Dispose <see langword="Dispose" />. Per ulteriori informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Per ulteriori informazioni <see langword="Dispose" /> e <see langword="Finalize" />, vedere [pulizia backup Resources](~/docs/standard/garbage-collection/unmanaged.md) non gestito.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-186">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier the Dispose Method call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EventCommandExecuted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventCommandExecuted As EventHandler(Of EventCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventCommandEventArgs ^&gt; ^ EventCommandExecuted;" />
      <MemberSignature Language="F#" Value="member this.EventCommandExecuted : EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; " Usage="member this.EventCommandExecuted : System.EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-187">Occurs when a command comes from an event listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-187">Occurs when a command comes from an event listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!EventSource ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="eventSource.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-188">Allows the <see cref="T:System.Diagnostics.Tracing.EventSource" /> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-188">Allows the <see cref="T:System.Diagnostics.Tracing.EventSource" /> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateManifest">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-189">Returns a string of the XML manifest that is associated with the current event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-189">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest);" />
      <MemberSignature Language="F#" Value="static member GenerateManifest : Type * string -&gt; string" Usage="System.Diagnostics.Tracing.EventSource.GenerateManifest (eventSourceType, assemblyPathToIncludeInManifest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="a9f65-190">The type of the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-190">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="a9f65-191">The path to the assembly file (.dll) to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-191">The path to the assembly file (.dll) to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-192">Returns a string of the XML manifest that is associated with the current event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-192">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f65-193">The XML data string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-193">The XML data string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-194">Le informazioni sullo schema XML per il manifesto di eventi, vedere [lo Schema di manifesto evento](http://go.microsoft.com/fwlink/?LinkId=228077) in MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a9f65-194">The information about the XML schema for the event manifest, see [Event Manifest Schema](http://go.microsoft.com/fwlink/?LinkId=228077) in the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest, System.Diagnostics.Tracing.EventManifestOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest, valuetype System.Diagnostics.Tracing.EventManifestOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String, flags As EventManifestOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest, System::Diagnostics::Tracing::EventManifestOptions flags);" />
      <MemberSignature Language="F#" Value="static member GenerateManifest : Type * string * System.Diagnostics.Tracing.EventManifestOptions -&gt; string" Usage="System.Diagnostics.Tracing.EventSource.GenerateManifest (eventSourceType, assemblyPathToIncludeInManifest, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
        <Parameter Name="flags" Type="System.Diagnostics.Tracing.EventManifestOptions" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="a9f65-195">The type of the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-195">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="a9f65-196">The path to the assembly file (.dll) file to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-196">The path to the assembly file (.dll) file to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="a9f65-197">A bitwise combination of the enumeration values that specify how the manifest is generated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-197">A bitwise combination of the enumeration values that specify how the manifest is generated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-198">Returns a string of the XML manifest that is associated with the current event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-198">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f65-199">The XML data string or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-199">The XML data string or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-200">Se `flags` specifica `OnlyIfNeededForRegistration` e il `eventSourceType` specificato non richiede la registrazione esplicita, <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="a9f65-200">If `flags` specifies `OnlyIfNeededForRegistration` and the `eventSourceType` specified does not require explicit registration, <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public static Guid GetGuid (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetGuid(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGuid (eventSourceType As Type) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetGuid(Type ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="static member GetGuid : Type -&gt; Guid" Usage="System.Diagnostics.Tracing.EventSource.GetGuid eventSourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="a9f65-201">The type of the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-201">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-202">Gets the unique identifier for this implementation of the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-202">Gets the unique identifier for this implementation of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f65-203">A unique identifier for this event source type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-203">A unique identifier for this event source type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (eventSourceType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="static member GetName : Type -&gt; string" Usage="System.Diagnostics.Tracing.EventSource.GetName eventSourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="a9f65-204">The type of the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-204">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-205">Gets the friendly name of the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-205">Gets the friendly name of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f65-206">The friendly name of the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-206">The friendly name of the event source.</span>
          </span>
          <span data-ttu-id="a9f65-207">The default is the simple name of the class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-207">The default is the simple name of the class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSources">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt; GetSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Diagnostics.Tracing.EventSource&gt; GetSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSources () As IEnumerable(Of EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::Diagnostics::Tracing::EventSource ^&gt; ^ GetSources();" />
      <MemberSignature Language="F#" Value="static member GetSources : unit -&gt; seq&lt;System.Diagnostics.Tracing.EventSource&gt;" Usage="System.Diagnostics.Tracing.EventSource.GetSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-208">Gets a snapshot of all the event sources for the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-208">Gets a snapshot of all the event sources for the application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f65-209">An enumeration of all the event sources in the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-209">An enumeration of all the event sources in the application domain.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrait">
      <MemberSignature Language="C#" Value="public string GetTrait (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTrait(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrait (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTrait(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetTrait : string -&gt; string" Usage="eventSource.GetTrait key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a9f65-210">The key of the trait to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-210">The key of the trait to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-211">Gets the trait value associated with the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-211">Gets the trait value associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f65-212">The trait value associated with the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-212">The trait value associated with the specified key.</span>
          </span>
          <span data-ttu-id="a9f65-213">If the key is not found, returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-213">If the key is not found, returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-214">Tratti di forniscono informazioni aggiuntive per un evento e sono interpretati da un listener di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-214">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="a9f65-215">Tratti vengono specificati come coppie chiave-valore quando viene costruito l'origine evento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-215">Traits are specified as key-value pairs when the event source is constructed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guid">
      <MemberSignature Language="C#" Value="public Guid Guid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Guid" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Guid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Guid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Guid : Guid" Usage="System.Diagnostics.Tracing.EventSource.Guid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-216">The unique identifier for the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-216">The unique identifier for the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9f65-217">Identificatore univoco per l'origine evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-217">A unique identifier for the event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEnabled">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-218">Determines whether the current event source is enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-218">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled();" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : unit -&gt; bool" Usage="eventSource.IsEnabled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-219">Determines whether the current event source is enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-219">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f65-220">
            <see langword="true" /> if the current event source is enabled; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-220">
              <see langword="true" /> if the current event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords);" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords -&gt; bool" Usage="eventSource.IsEnabled (level, keywords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="a9f65-221">The level of the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-221">The level of the event source.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="a9f65-222">The keyword of the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-222">The keyword of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-223">Determines whether the current event source that has the specified level and keyword is enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-223">Determines whether the current event source that has the specified level and keyword is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f65-224">
            <see langword="true" /> if the event source is enabled; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-224">
              <see langword="true" /> if the event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-225">Il risultato di questo metodo è solo un'approssimazione che indica se un particolare evento è attivo.</span><span class="sxs-lookup"><span data-stu-id="a9f65-225">The result of this method is only an approximation of whether a particular event is active.</span></span>  <span data-ttu-id="a9f65-226">Usarlo per evitare attività onerose di calcolo per la registrazione quando quest'ultima è disabilitata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-226">Use it to avoid expensive computation for logging when logging is disabled.</span></span>   <span data-ttu-id="a9f65-227">Origini evento possono includere filtri aggiuntivi che ne determinano l'attività.</span><span class="sxs-lookup"><span data-stu-id="a9f65-227">Event sources may have additional filtering that determines their activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords, System.Diagnostics.Tracing.EventChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords, valuetype System.Diagnostics.Tracing.EventChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords, channel As EventChannel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords, System::Diagnostics::Tracing::EventChannel channel);" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords * System.Diagnostics.Tracing.EventChannel -&gt; bool" Usage="eventSource.IsEnabled (level, keywords, channel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
        <Parameter Name="channel" Type="System.Diagnostics.Tracing.EventChannel" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="a9f65-228">The event level to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-228">The event level to check.</span>
          </span>
          <span data-ttu-id="a9f65-229">An event source will be considered enabled when its level is greater than or equal to <c>level</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-229">An event source will be considered enabled when its level is greater than or equal to <c>level</c>.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="a9f65-230">The event keywords to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-230">The event keywords to check.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="a9f65-231">The event channel to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-231">The event channel to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-232">Determines whether the current event source is enabled for events with the specified level, keywords and channel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-232">Determines whether the current event source is enabled for events with the specified level, keywords and channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f65-233">
            <see langword="true" /> if the event source is enabled for the specified event level, keywords and channel; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-233">
              <see langword="true" /> if the event source is enabled for the specified event level, keywords and channel; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a9f65-234">The result of this method is only an approximation of whether a particular event is active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-234">The result of this method is only an approximation of whether a particular event is active.</span>
          </span>
          <span data-ttu-id="a9f65-235">Use it to avoid expensive computation for logging when logging is disabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-235">Use it to avoid expensive computation for logging when logging is disabled.</span>
          </span>
          <span data-ttu-id="a9f65-236">Event sources may have additional filtering that determines their activity..</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-236">Event sources may have additional filtering that determines their activity..</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-237">Se il</span><span class="sxs-lookup"><span data-stu-id="a9f65-237">If the</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.Tracing.EventSource.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-238">The friendly name of the class that is derived from the event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-238">The friendly name of the class that is derived from the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9f65-239">Nome descrittivo della classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-239">The friendly name of the derived class.</span>
          </span>
          <span data-ttu-id="a9f65-240">Il valore predefinito è il nome semplice della classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-240">The default is the simple name of the class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEventCommand (System.Diagnostics.Tracing.EventCommandEventArgs command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEventCommand(class System.Diagnostics.Tracing.EventCommandEventArgs command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEventCommand (command As EventCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEventCommand(System::Diagnostics::Tracing::EventCommandEventArgs ^ command);" />
      <MemberSignature Language="F#" Value="abstract member OnEventCommand : System.Diagnostics.Tracing.EventCommandEventArgs -&gt; unit&#xA;override this.OnEventCommand : System.Diagnostics.Tracing.EventCommandEventArgs -&gt; unit" Usage="eventSource.OnEventCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="a9f65-241">The arguments for the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-241">The arguments for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-242">Called when the current event source is updated by the controller.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-242">Called when the current event source is updated by the controller.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCommand">
      <MemberSignature Language="C#" Value="public static void SendCommand (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventCommand command, System.Collections.Generic.IDictionary&lt;string,string&gt; commandArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendCommand(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventCommand command, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; commandArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendCommand(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventCommand command, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ commandArguments);" />
      <MemberSignature Language="F#" Value="static member SendCommand : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventCommand * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="System.Diagnostics.Tracing.EventSource.SendCommand (eventSource, command, commandArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommand" />
        <Parameter Name="commandArguments" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="a9f65-243">The event source to send the command to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-243">The event source to send the command to.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="a9f65-244">The event command to send.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-244">The event command to send.</span>
          </span>
        </param>
        <param name="commandArguments">
          <span data-ttu-id="a9f65-245">The arguments for the event command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-245">The arguments for the event command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-246">Sends a command to a specified event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-246">Sends a command to a specified event source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-247">La chiamata <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> inoltra il comando per il <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback.</span><span class="sxs-lookup"><span data-stu-id="a9f65-247">Calling <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> forwards the command to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback.</span></span>  <span data-ttu-id="a9f65-248">Che cosa il <xref:System.Diagnostics.Tracing.EventSource> eseguite con il comando e degli argomenti è specifica per l'origine evento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-248">What the <xref:System.Diagnostics.Tracing.EventSource> does with the command and its arguments is specific to the event source.</span></span>  <span data-ttu-id="a9f65-249">Il comando e i relativi argomenti vengono passati al <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback dell'origine evento specificata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-249">The command and command arguments are passed to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback of the specified event source.</span></span>   <span data-ttu-id="a9f65-250">Se possibile, l'origine evento corrente non dovrebbe incidere sulle eventi filtro altri listener di eventi. Tuttavia, che potrebbe non essere possibile se il comando fa sì che un'operazione di garbage collection, un sistema di scaricamento o un'altra attività globale.</span><span class="sxs-lookup"><span data-stu-id="a9f65-250">If possible, the current event source should not affect other event listeners' filtering events; however, that may not be possible if the command causes a garbage collection, a system flush, or some other global activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCurrentThreadActivityId">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-251">[Supported in the .NET Framework 4.5.1 and later versions]  Sets the activity ID on the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-251">[Supported in the .NET Framework 4.5.1 and later versions]  Sets the activity ID on the current thread.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId);" />
      <MemberSignature Language="F#" Value="static member SetCurrentThreadActivityId : Guid -&gt; unit" Usage="System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId activityId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="a9f65-252">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-252">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-253">[Supported in the .NET Framework 4.5.1 and later versions]  Sets the activity ID on the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-253">[Supported in the .NET Framework 4.5.1 and later versions]  Sets the activity ID on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-254">La chiamata di <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> metodo imposta l'ID attività in base al thread.</span><span class="sxs-lookup"><span data-stu-id="a9f65-254">Calling the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> method sets the activity ID on a per-thread basis.</span></span> <span data-ttu-id="a9f65-255">Tutti gli eventi sul thread avrà tale ID attività fino a quando non viene avviata una nuova attività nello stesso thread.</span><span class="sxs-lookup"><span data-stu-id="a9f65-255">All events on the thread will have that activity ID until a new activity is started on the same thread.</span></span>  
  
 <span data-ttu-id="a9f65-256">Questo metodo viene chiamato solo da parte di librerie che gestiscono i propri thread.</span><span class="sxs-lookup"><span data-stu-id="a9f65-256">This method is called only by libraries that manage their own threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId, out Guid oldActivityThatWillContinue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId, [out] valuetype System.Guid&amp; oldActivityThatWillContinue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid, ByRef oldActivityThatWillContinue As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId, [Runtime::InteropServices::Out] Guid % oldActivityThatWillContinue);" />
      <MemberSignature Language="F#" Value="static member SetCurrentThreadActivityId : Guid *  -&gt; unit" Usage="System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId (activityId, oldActivityThatWillContinue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
        <Parameter Name="oldActivityThatWillContinue" Type="System.Guid&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="a9f65-257">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-257">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <param name="oldActivityThatWillContinue">
          <span data-ttu-id="a9f65-258">When this method returns, contains the previous activity ID on the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-258">When this method returns, contains the previous activity ID on the current thread.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-259">[Supported in the .NET Framework 4.5.1 and later versions]  Sets the activity ID on the current thread, and returns the previous activity ID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-259">[Supported in the .NET Framework 4.5.1 and later versions]  Sets the activity ID on the current thread, and returns the previous activity ID.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-260">È possibile chiamare il <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> metodo temporaneamente sovrascrivere ID attività del thread corrente con un nuovo ID di attività.</span><span class="sxs-lookup"><span data-stu-id="a9f65-260">You can call the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> method to temporarily overwrite the current thread's activity ID with a new activity ID.</span></span> <span data-ttu-id="a9f65-261">È quindi necessario ripristinare l'ID attività precedente, passando il `oldActivityThatWillContinue` argomento per il <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="a9f65-261">You must then restore the previous activity ID by passing the `oldActivityThatWillContinue` argument to the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Tracing.EventSourceSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Tracing.EventSourceSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As EventSourceSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Tracing::EventSourceSettings Settings { System::Diagnostics::Tracing::EventSourceSettings get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Diagnostics.Tracing.EventSourceSettings" Usage="System.Diagnostics.Tracing.EventSource.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventSourceSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-262">Gets the settings applied to this event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-262">Gets the settings applied to this event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9f65-263">Impostazioni applicate a questa origine evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-263">The settings applied to this event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="eventSource.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-264">Obtains a string representation of the current event source instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-264">Obtains a string representation of the current event source instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f65-265">The name and unique identifier that identify the current event source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-265">The name and unique identifier that identify the current event source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-266">Writes an event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-266">Writes an event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName);" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="eventSource.Write eventName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="a9f65-267">The name of the event to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-267">The name of the event to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-268">Writes an event without fields, but with the specified name and default options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-268">Writes an event without fields, but with the specified name and default options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9f65-269">
            <paramref name="eventName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-269">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName, System.Diagnostics.Tracing.EventSourceOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String, options As EventSourceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options);" />
      <MemberSignature Language="F#" Value="member this.Write : string * System.Diagnostics.Tracing.EventSourceOptions -&gt; unit" Usage="eventSource.Write (eventName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="a9f65-270">The name of the event to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-270">The name of the event to write.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="a9f65-271">The options such as level, keywords and operation code for the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-271">The options such as level, keywords and operation code for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-272">Writes an event without fields, but with the specified name and options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-272">Writes an event without fields, but with the specified name and options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9f65-273">
            <paramref name="eventName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-273">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, T data);" />
      <MemberSignature Language="F#" Value="member this.Write : string * 'T -&gt; unit" Usage="eventSource.Write (eventName, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a9f65-274">Tipo che definisce l'evento e i relativi dati associati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-274">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="a9f65-275">Questo tipo deve essere anonimo o contrassegnato con l'attributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-275">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="a9f65-276">The name of the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-276">The name of the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="a9f65-277">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-277">The event data.</span>
          </span>
          <span data-ttu-id="a9f65-278">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-278">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-279">Writes an event with the specified name and data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-279">Writes an event with the specified name and data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-280">Se `eventName` viene `null`, il nome dell'evento verrà derivato automaticamente dal dati dell'evento il tipo T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) o viene determinata in base al nome di tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="a9f65-280">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="a9f65-281">Proprietà di istanza pubblico `data` verranno scritti in modo ricorsivo per creare i campi evento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-281">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, System.Diagnostics.Tracing.EventSourceOptions options, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, options As EventSourceOptions, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options, T data);" />
      <MemberSignature Language="F#" Value="member this.Write : string * System.Diagnostics.Tracing.EventSourceOptions * 'T -&gt; unit" Usage="eventSource.Write (eventName, options, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a9f65-282">Tipo che definisce l'evento e i relativi dati associati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-282">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="a9f65-283">Questo tipo deve essere anonimo o contrassegnato con l'attributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-283">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="a9f65-284">The name of the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-284">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="a9f65-285">The event options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-285">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="a9f65-286">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-286">The event data.</span>
          </span>
          <span data-ttu-id="a9f65-287">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-287">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-288">Writes an event with the specified name, event data and options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-288">Writes an event with the specified name, event data and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-289">Se `eventName` viene `null`, il nome dell'evento verrà derivato automaticamente dal dati dell'evento il tipo T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) o viene determinata in base al nome di tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="a9f65-289">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="a9f65-290">Proprietà di istanza pubblico `data` verranno scritti in modo ricorsivo per creare i campi evento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-290">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, T % data);" />
      <MemberSignature Language="F#" Value="member this.Write : string *  *  -&gt; unit" Usage="eventSource.Write (eventName, options, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions&amp;" RefType="ref" />
        <Parameter Name="data" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a9f65-291">Tipo che definisce l'evento e i relativi dati associati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-291">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="a9f65-292">Questo tipo deve essere anonimo o contrassegnato con l'attributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-292">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="a9f65-293">The name of the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-293">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="a9f65-294">The event options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-294">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="a9f65-295">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-295">The event data.</span>
          </span>
          <span data-ttu-id="a9f65-296">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-296">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-297">Writes an event with the specified name, options and event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-297">Writes an event with the specified name, options and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-298">Se `eventName` viene `null`, il nome dell'evento verrà derivato automaticamente dal dati dell'evento il tipo T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) o viene determinata in base al nome di tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="a9f65-298">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="a9f65-299">Proprietà di istanza pubblico `data` verranno scritti in modo ricorsivo per creare i campi evento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-299">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref Guid activityId, ref Guid relatedActivityId, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, valuetype System.Guid&amp; activityId, valuetype System.Guid&amp; relatedActivityId, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef activityId As Guid, ByRef relatedActivityId As Guid, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, Guid % activityId, Guid % relatedActivityId, T % data);" />
      <MemberSignature Language="F#" Value="member this.Write : string *  *  *  *  -&gt; unit" Usage="eventSource.Write (eventName, options, activityId, relatedActivityId, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions&amp;" RefType="ref" />
        <Parameter Name="activityId" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="relatedActivityId" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="data" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a9f65-300">Tipo che definisce l'evento e i relativi dati associati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-300">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="a9f65-301">Questo tipo deve essere anonimo o contrassegnato con l'attributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-301">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="a9f65-302">The name of the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-302">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="a9f65-303">The event options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-303">The event options.</span>
          </span>
        </param>
        <param name="activityId">
          <span data-ttu-id="a9f65-304">The ID of the activity associated with the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-304">The ID of the activity associated with the event.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="a9f65-305">The ID of an associated activity, or <see cref="F:System.Guid.Empty" /> if there is no associated activity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-305">The ID of an associated activity, or <see cref="F:System.Guid.Empty" /> if there is no associated activity.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="a9f65-306">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-306">The event data.</span>
          </span>
          <span data-ttu-id="a9f65-307">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-307">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-308">Writes an event with the specified name, options, related activity and event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-308">Writes an event with the specified name, options, related activity and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-309">Se `eventName` viene `null`, il nome dell'evento verrà derivato automaticamente dal dati dell'evento il tipo T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) o viene determinata in base al nome di tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="a9f65-309">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="a9f65-310">Proprietà di istanza pubblico `data` verranno scritti in modo ricorsivo per creare i campi evento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-310">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9f65-311">Writes an event by using the provided event identifier and optional arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-311">Writes an event by using the provided event identifier and optional arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-312">Il `WriteEvent` metodo fornisce overload con combinazioni di argomenti di stringa e integer.</span><span class="sxs-lookup"><span data-stu-id="a9f65-312">The `WriteEvent` method provides overloads with combinations of string and integer arguments.</span></span> <span data-ttu-id="a9f65-313">Se nessuna di queste combinazioni corrispondere ai parametri per la chiamata, il compilatore utilizza il <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload, che è notevolmente più lento rispetto a altri overload.</span><span class="sxs-lookup"><span data-stu-id="a9f65-313">If none of these combinations match the parameters for the call, the compiler uses the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload, which is considerably slower than the other overloads.</span></span> <span data-ttu-id="a9f65-314">Vedere la pagina di overload per i dettagli.</span><span class="sxs-lookup"><span data-stu-id="a9f65-314">See the overload page for details.</span></span>  
  
 <span data-ttu-id="a9f65-315">In tutti i casi, il `eventid` parametro deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-315">In all cases, the `eventid` parameter should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-316">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-316">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-317">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-317">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-318">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-318">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-319">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-319">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 <span data-ttu-id="a9f65-320">È inoltre possibile creare un overload personalizzato usando il <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a9f65-320">You can also create a custom overload by using the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int -&gt; unit" Usage="eventSource.WriteEvent eventId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-321">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-321">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-322">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-322">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-323">Writes an event by using the provided event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-323">Writes an event by using the provided event identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-324">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-324">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-325">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-325">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-326">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-326">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-327">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-327">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-328">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-328">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="a9f65-329">Nell'esempio seguente viene illustrato come utilizzare questo overload del metodo per scrivere un evento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-329">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="a9f65-330">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="a9f65-330">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, byte[] arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, unsigned int8[] arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, cli::array &lt;System::Byte&gt; ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * byte[] -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-331">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-331">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-332">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-332">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-333">A byte array argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-333">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-334">Writes an event by using the provided event identifier and byte array argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-334">Writes an event by using the provided event identifier and byte array argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-335">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-335">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-336">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-336">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-337">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-337">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-338">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-338">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-339">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-339">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(byte[] arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-340">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-340">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-341">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-341">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-342">An integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-342">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-343">Writes an event by using the provided event identifier and 32-bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-343">Writes an event by using the provided event identifier and 32-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-344">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-344">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-345">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-345">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-346">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-346">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-347">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-347">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-348">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-348">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int  arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="a9f65-349">Nell'esempio seguente viene illustrato come utilizzare questo overload del metodo per scrivere un evento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-349">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="a9f65-350">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="a9f65-350">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#8](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#8)]
 [!code-vb[ETWTrace#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-351">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-351">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-352">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-352">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-353">A 64 bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-353">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-354">Writes an event by using the provided event identifier and 64-bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-354">Writes an event by using the provided event identifier and 64-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-355">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-355">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-356">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-356">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-357">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-357">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-358">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-358">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-359">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-359">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * obj[] -&gt; unit" Usage="eventSource.WriteEvent (eventId, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-360">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-360">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-361">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-361">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="a9f65-362">An array of objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-362">An array of objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-363">Writes an event by using the provided event identifier and array of arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-363">Writes an event by using the provided event identifier and array of arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-364">Per impostazione predefinita, il compilatore chiama questo overload se i parametri per la chiamata non corrispondono a uno degli altri overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="a9f65-364">By default, the compiler calls this overload if the parameters for the call do not match one of the other method overloads.</span></span> <span data-ttu-id="a9f65-365">Questo overload è molto più lento rispetto gli altri overload, perché esegue le operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="a9f65-365">This overload is much slower than the other overloads, because it does the following:</span></span>  
  
1.  <span data-ttu-id="a9f65-366">Alloca una matrice per contenere argomenti variabili.</span><span class="sxs-lookup"><span data-stu-id="a9f65-366">It allocates an array to hold the variable argument.</span></span>  
  
2.  <span data-ttu-id="a9f65-367">Viene eseguito il cast di ogni parametro a un oggetto (che fa sì che le allocazioni per i tipi primitivi).</span><span class="sxs-lookup"><span data-stu-id="a9f65-367">It casts each parameter to an object (which causes allocations for primitive types).</span></span>  
  
3.  <span data-ttu-id="a9f65-368">Assegna questi oggetti nella matrice.</span><span class="sxs-lookup"><span data-stu-id="a9f65-368">It assigns these objects to the array.</span></span>  
  
4.  <span data-ttu-id="a9f65-369">Chiama la funzione, che quindi determina il tipo di ciascun argomento in modo da poter essere serializzato per ETW.</span><span class="sxs-lookup"><span data-stu-id="a9f65-369">It calls the function, which then determines the type of each argument so it can be serialized for ETW.</span></span>  
  
 <span data-ttu-id="a9f65-370">L'overhead elevato per questo overload non è significativo durante la traccia eventi volume ridotto, perché il metodo viene utilizzato solo quando il provider è abilitato.</span><span class="sxs-lookup"><span data-stu-id="a9f65-370">The high overhead for this overload is not significant when tracing low-volume events, because the method is used only when the provider is enabled.</span></span> <span data-ttu-id="a9f65-371">Tuttavia, per gli eventi con volumi elevati, l'overhead delle prestazioni può essere significativo.</span><span class="sxs-lookup"><span data-stu-id="a9f65-371">However, for high-volume events, the performance overhead can be significant.</span></span>  <span data-ttu-id="a9f65-372">È possibile evitare di usare <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> per il payload di volumi elevati mediante la creazione di un overload di nuovo, più veloce con la <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a9f65-372">You can avoid using <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> for high-volume payloads by creating a new, faster  overload with the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 <span data-ttu-id="a9f65-373">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-373">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-374">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-374">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-375">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-375">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-376">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-376">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-377">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-377">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-378">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-378">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-379">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-379">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-380">A string argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-380">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-381">Writes an event by using the provided event identifier and string argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-381">Writes an event by using the provided event identifier and string argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-382">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-382">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-383">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-383">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-384">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-384">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-385">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-385">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-386">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-386">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="a9f65-387">Nell'esempio seguente viene illustrato come utilizzare questo overload del metodo per scrivere un evento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-387">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="a9f65-388">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="a9f65-388">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-389">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-389">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-390">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-390">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-391">An integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-391">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="a9f65-392">An integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-392">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-393">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-393">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-394">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-394">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-395">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-395">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-396">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-396">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-397">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-397">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-398">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-398">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int arg1, int arg2, int arg3)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, System::String ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-399">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-399">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-400">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-400">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-401">A 32-bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-401">A 32-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="a9f65-402">A string argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-402">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-403">Writes an event by using the provided event identifier and 32-bit integer and string arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-403">Writes an event by using the provided event identifier and 32-bit integer and string arguments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, byte[] arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, unsigned int8[] arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, cli::array &lt;System::Byte&gt; ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * byte[] -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-404">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-404">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-405">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-405">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-406">A 64-bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-406">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="a9f65-407">A byte array argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-407">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-408">Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-408">Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-409">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-409">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-410">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-410">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-411">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-411">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-412">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-412">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-413">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-413">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, Byte[] arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-414">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-414">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-415">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-415">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-416">A 64 bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-416">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="a9f65-417">A 64 bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-417">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-418">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-418">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-419">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-419">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-420">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-420">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-421">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-421">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-422">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-422">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-423">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-423">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, System::String ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-424">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-424">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-425">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-425">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-426">A 64-bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-426">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="a9f65-427">A string argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-427">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-428">Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-428">Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-429">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-429">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-430">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-430">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-431">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-431">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-432">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-432">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-433">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-433">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, string arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-434">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-434">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-435">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-435">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-436">A string argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-436">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="a9f65-437">A 32 bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-437">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-438">Writes an event by using the provided event identifier and arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-438">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-439">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-439">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-440">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-440">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-441">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-441">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-442">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-442">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-443">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-443">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, long arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-444">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-444">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-445">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-445">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-446">A string argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-446">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="a9f65-447">A 64 bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-447">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-448">Writes an event by using the provided event identifier and arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-448">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-449">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-449">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-450">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-450">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-451">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-451">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-452">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-452">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-453">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-453">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-454">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-454">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-455">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-455">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-456">A string argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-456">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="a9f65-457">A string argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-457">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-458">Writes an event by using the provided event identifier and string arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-458">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-459">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-459">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-460">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-460">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-461">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-461">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-462">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-462">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-463">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-463">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2, int arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int * int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-464">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-464">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-465">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-465">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-466">An integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-466">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="a9f65-467">An integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-467">An integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="a9f65-468">An integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-468">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-469">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-469">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-470">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-470">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-471">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-471">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-472">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-472">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-473">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-473">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-474">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-474">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2, long arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2, int64 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long, arg3 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2, long arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * int64 * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
        <Parameter Name="arg3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-475">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-475">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-476">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-476">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-477">A 64 bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-477">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="a9f65-478">A 64 bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-478">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="a9f65-479">A 64 bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-479">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-480">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-480">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-481">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-481">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-482">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-482">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-483">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-483">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-484">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-484">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-485">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-485">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2, int arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-486">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-486">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-487">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-487">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-488">A string argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-488">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="a9f65-489">A 32 bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-489">A 32 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="a9f65-490">A 32 bit integer argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-490">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-491">Writes an event by using the provided event identifier and arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-491">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-492">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-492">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-493">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-493">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-494">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-494">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-495">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-495">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-496">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-496">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2, string arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2, string arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String, arg3 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2, System::String ^ arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * string * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
        <Parameter Name="arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-497">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-497">The event identifier.</span>
          </span>
          <span data-ttu-id="a9f65-498">This value should be between 0 and 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-498">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a9f65-499">A string argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-499">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="a9f65-500">A string argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-500">A string argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="a9f65-501">A string argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-501">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-502">Writes an event by using the provided event identifier and string arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-502">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-503">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-503">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-504">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-504">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-505">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-505">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-506">Quando si implementa un metodo che è stato identificato come un evento ETW in un <xref:System.Diagnostics.Tracing.EventSource>-classe derivata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-506">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="a9f65-507">È necessario chiamare la classe di base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> passando il <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e gli stessi argomenti come il metodo implementato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-507">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventCore">
      <MemberSignature Language="C#" Value="protected void WriteEventCore (int eventId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventCore(int32 eventId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventCore(int eventId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" />
      <MemberSignature Language="F#" Value="member this.WriteEventCore : int * int * nativeptr&lt;System.Diagnostics.Tracing.EventSource.EventData&gt; -&gt; unit" Usage="eventSource.WriteEventCore (eventId, eventDataCount, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="eventDataCount" Type="System.Int32" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-508">The event identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-508">The event identifier.</span>
          </span>
        </param>
        <param name="eventDataCount">
          <span data-ttu-id="a9f65-509">The number of event data items.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-509">The number of event data items.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="a9f65-510">The structure that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-510">The structure that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-511">Creates a new <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> overload by using the provided event identifier and event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-511">Creates a new <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> overload by using the provided event identifier and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-512">`eventid` deve essere maggiore di 0 o inferiore a 65535 oppure possono verificarsi errori nell'operazione.</span><span class="sxs-lookup"><span data-stu-id="a9f65-512">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="a9f65-513">Se si verificano errori, è possibile ottenere ulteriori informazioni sull'origine dell'errore controllando il flusso di output del debugger, se si dispone di un debugger al processo di generazione di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-513">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="a9f65-514">È inoltre possibile cercare gli errori segnalati nel flusso di eventi ETW, se si dispone di un listener ETW per l'origine evento in cui si verifica l'errore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-514">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="a9f65-515">Questo metodo protetto consente agli utenti di definire nuovi <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overload che sono più veloci rispetto a overload specificato.</span><span class="sxs-lookup"><span data-stu-id="a9f65-515">This protected method  enables users to define new <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads that are faster than the provided overloads.</span></span>   <span data-ttu-id="a9f65-516">La creazione di un nuovo overload prevede codice unsafe.</span><span class="sxs-lookup"><span data-stu-id="a9f65-516">Creating a new overload involves unsafe code.</span></span>  <span data-ttu-id="a9f65-517">La procedura di base è stack-allocare una matrice di descrittori dei dati di evento che corrisponde al numero di elementi di payload.</span><span class="sxs-lookup"><span data-stu-id="a9f65-517">The basic procedure is to stack-allocate an array of event data descriptors that matches the number of payload items.</span></span>   <span data-ttu-id="a9f65-518">Per ogni elemento di payload, impostare le dimensioni corrette e il valore dell'evento matrice di dati. Chiamare <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> con matrice inizializzata.</span><span class="sxs-lookup"><span data-stu-id="a9f65-518">For each payload item, set the correct size and value in the event data array.Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> with the initialized array.</span></span>  
  
 <span data-ttu-id="a9f65-519">Nell'esempio seguente viene illustrato come aggiungere un <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overload che accetta quattro argomenti.</span><span class="sxs-lookup"><span data-stu-id="a9f65-519">The following example shows how to add a <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overload that accepts four arguments.</span></span> <span data-ttu-id="a9f65-520">Un esempio sarebbe se si dispone di un evento di registrazione che registra una stringa e interi a 3.</span><span class="sxs-lookup"><span data-stu-id="a9f65-520">An example would be if you have a logging event that logs a string and 3 integers.</span></span>  
  
```csharp  
  
[Event(1)]  
public void LogTime(string tag, int hour, int minute, int second)   
{  
    WriteEvent(1, tag, hour, minute, second);  
}  
  
```  
  
 <span data-ttu-id="a9f65-521">È possibile eseguire questa senza chiamare <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, ma sarebbe più deve essere lento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-521">You could do this without calling <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, but it would be slower than it needs to be.</span></span> <span data-ttu-id="a9f65-522">Ciò avviene perché Usa matrici e reflection per determinare quali operazioni eseguire.</span><span class="sxs-lookup"><span data-stu-id="a9f65-522">That is because it uses arrays and reflection to figure out what to do.</span></span> <span data-ttu-id="a9f65-523">Se si accede in un valore elevato (> 1000 / sec), può essere necessario effettuare un helper veloce, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="a9f65-523">If you log these at a high rate (> 1000 / sec), it can be worth making a fast helper, as shown in the following example.</span></span> <span data-ttu-id="a9f65-524">Il metodo nasconde esistente <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9f65-524">The method shadows the existing <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span></span> <span data-ttu-id="a9f65-525">In questo modo il codice del chiamante originale (LogTime) non venga modificata, ma il compilatore c# utilizzeranno la versione più specializzata che sarà più veloce.</span><span class="sxs-lookup"><span data-stu-id="a9f65-525">Thus the original caller code (LogTime) does not actually change, but the C# compiler will use the more specialized version which will be faster.</span></span>  
  
 <span data-ttu-id="a9f65-526">Per compilare codice unsafe, è necessario specificare il [/unsafe (opzioni del compilatore c#)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) opzione del compilatore.</span><span class="sxs-lookup"><span data-stu-id="a9f65-526">To compile unsafe code, you must specify the [/unsafe (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) compiler option.</span></span>  
  
```csharp  
class AnotherEventSource : EventSource {  
  
    [NonEvent]  
    public unsafe void WriteEvent(int eventId, string arg1, int arg2, int arg3, int arg4)  
    {  
  
        fixed (char* arg1Ptr = arg1)  
        {  
            EventData* dataDesc = stackalloc EventData[4];  
  
            dataDesc[0].DataPointer = (IntPtr)arg1Ptr;  
            dataDesc[0].Size = (arg1.Length + 1) * 2; // Size in bytes, including a null terminator.   
            dataDesc[1].DataPointer = (IntPtr)(&arg2);  
            dataDesc[1].Size = 4;  
            dataDesc[2].DataPointer = (IntPtr)(&arg3);  
            dataDesc[2].Size = 4;  
            dataDesc[3].DataPointer = (IntPtr)(&arg4);  
            dataDesc[3].Size = 4;  
  
            WriteEventCore(eventId, 4, dataDesc);  
        }  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="a9f65-527">richiede attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-527">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="a9f65-528">L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-528">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityId">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid relatedActivityId, params object[] args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid relatedActivityId, object[] args) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, relatedActivityId As Guid, ParamArray args As Object())" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid relatedActivityId, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid childActivityID, params object[] args);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid childActivityID, object[] args) cil managed" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, childActivityID As Guid, ParamArray args As Object())" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid childActivityID, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="F#" Value="member this.WriteEventWithRelatedActivityId : int * Guid * obj[] -&gt; unit" Usage="eventSource.WriteEventWithRelatedActivityId (eventId, relatedActivityId, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="childActivityID" Type="System.Guid" Index="1" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
        <Parameter Name="args" Type="System.Object[]" Index="2">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-529">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-529">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="a9f65-530">The related activity identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-530">The related activity identifier.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="args">
          <span data-ttu-id="a9f65-531">An array of objects that contain data about the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-531">An array of objects that contain data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-532">[Supported in the .NET Framework 4.5.1 and later versions]  Writes an event that indicates that the current activity is related to another activity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-532">[Supported in the .NET Framework 4.5.1 and later versions]  Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-533">Il <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> metodo registra un evento di trasferimento.</span><span class="sxs-lookup"><span data-stu-id="a9f65-533">The <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method logs a transfer event.</span></span> <span data-ttu-id="a9f65-534">L'attività del thread corrente viene registrato con l'evento e in questo modo due attività devono essere correlate da un consumer di eventi.</span><span class="sxs-lookup"><span data-stu-id="a9f65-534">The activity of the current thread is logged with the event, and this allows two activities to be related by a consumer of events.</span></span>  
  
 <span data-ttu-id="a9f65-535">Chiamare questa funzione del metodo di evento ETW deve seguire queste linee guida:</span><span class="sxs-lookup"><span data-stu-id="a9f65-535">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="a9f65-536">Specificare il primo parametro come un <xref:System.Guid> denominato `relatedActivityId`.</span><span class="sxs-lookup"><span data-stu-id="a9f65-536">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="a9f65-537">Specificare il parametro <xref:System.Diagnostics.Tracing.EventOpcode.Send> oppure <xref:System.Diagnostics.Tracing.EventOpcode.Receive> come il <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a9f65-537">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="a9f65-538">Chiamare <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> passaggio nel caso in cui ID, aggiungendo il GUID dell'ID correlati, seguito da tutti i parametri di metodo dell'evento viene passato, nello stesso ordine.</span><span class="sxs-lookup"><span data-stu-id="a9f65-538">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
 <span data-ttu-id="a9f65-539">Se `args` non è usato, viene convertito in una matrice vuota per la chiamata risulta a ETW.</span><span class="sxs-lookup"><span data-stu-id="a9f65-539">If `args` is not used, it is converted to an empty array for the resulting call to ETW.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9f65-540">Esempio di codice seguente viene illustrato come può specificare un'origine evento che chiama <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9f65-540">The following code example shows how you might can specify an event source that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#1)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityIdCore">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* relatedActivityId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* relatedActivityId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* relatedActivityId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* childActivityID, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* childActivityID, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* childActivityID, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="F#" Value="member this.WriteEventWithRelatedActivityIdCore : int * nativeptr&lt;Guid&gt; * int * nativeptr&lt;System.Diagnostics.Tracing.EventSource.EventData&gt; -&gt; unit" Usage="eventSource.WriteEventWithRelatedActivityIdCore (eventId, relatedActivityId, eventDataCount, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid*" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="childActivityID" Type="System.Guid*" Index="1" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
        <Parameter Name="eventDataCount" Type="System.Int32" Index="2" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" Index="3" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="a9f65-541">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-541">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="a9f65-542">A pointer to the GUID of the related activity ID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-542">A pointer to the GUID of the related activity ID.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="eventDataCount">
          <span data-ttu-id="a9f65-543">The number of items in the <c>data</c> field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-543">The number of items in the <c>data</c> field.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="a9f65-544">A pointer to the first item in the event data field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-544">A pointer to the first item in the event data field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f65-545">[Supported in the .NET Framework 4.5.1 and later versions]  Writes an event that indicates that the current activity is related to another activity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f65-545">[Supported in the .NET Framework 4.5.1 and later versions]  Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f65-546"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> è simile ai <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> metodo ma offre prestazioni migliori, che è necessario eseguire la conversione unboxing bevcause il `childActivityID` e `data` argomenti.</span><span class="sxs-lookup"><span data-stu-id="a9f65-546"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> is similar to the <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method but offers better performance, bevcause it does not have to unbox the `childActivityID` and `data` arguments.</span></span>  
  
 <span data-ttu-id="a9f65-547">Chiamare questa funzione del metodo di evento ETW deve seguire queste linee guida:</span><span class="sxs-lookup"><span data-stu-id="a9f65-547">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="a9f65-548">Specificare il primo parametro come un <xref:System.Guid> denominato `relatedActivityId`.</span><span class="sxs-lookup"><span data-stu-id="a9f65-548">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="a9f65-549">Specificare il parametro <xref:System.Diagnostics.Tracing.EventOpcode.Send> oppure <xref:System.Diagnostics.Tracing.EventOpcode.Receive> come il <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a9f65-549">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="a9f65-550">Chiamare <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> passaggio nel caso in cui ID, aggiungendo il GUID dell'ID correlati, seguito da tutti i parametri di metodo dell'evento viene passato, nello stesso ordine.</span><span class="sxs-lookup"><span data-stu-id="a9f65-550">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9f65-551">Esempio di codice c# seguente viene illustrato come definire un overload del metodo che chiama <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9f65-551">The following C# code example shows how to define a method overload that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#5)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#3)]
[!code-vb[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>