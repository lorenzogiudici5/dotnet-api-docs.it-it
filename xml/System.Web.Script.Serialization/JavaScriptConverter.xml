<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="485319f71e70d94fa0f7b64c6b311c3c41bbec72" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52604979" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce una classe di base astratta per un convertitore di tipi personalizzato.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Script.Serialization.JavaScriptConverter> classe consente di implementare la serializzazione e deserializzazione dei processi per i tipi gestiti che non sono supportati in modo nativo dal <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe. È anche possibile usare <xref:System.Web.Script.Serialization.JavaScriptConverter> quando è necessario maggiore controllo sul processo di serializzazione e deserializzazione.  
  
 Il <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> proprietà indica i tipi per il quale un convertitore personalizzato offre servizi convertitore di tipi.  
  
 Per indicare che è necessario usare un convertitore personalizzato per il <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza, è necessario registrare il convertitore con l'istanza. Se si usa la <xref:System.Web.Script.Serialization.JavaScriptSerializer> diretto della classe, è necessario usare il <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> metodo per registrare il convertitore. In caso contrario, se si richiamano metodi Web ECMAScript (JavaScript) e si vuole usare il convertitore personalizzato, è possibile registrarlo aggiungendo un `converters` elemento nel file di configurazione. Per altre informazioni, vedere [procedura: configurare i servizi ASP.NET in Microsoft Ajax](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 Quando la <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza sta eseguendo la serializzazione di un tipo per cui dispone di un convertitore personalizzato registrato, il serializzatore chiama il <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> (metodo). Analogamente, quando la <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza deserializza una stringa di JavaScript Object Notation (JSON) e riconosce che un tipo all'interno della stringa JSON ha un convertitore personalizzato associato, il serializzatore chiama il <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> (metodo).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un convertitore personalizzato per il <xref:System.Web.UI.WebControls.ListItemCollection> classe.  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Quando si eredita da <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, è necessario eseguire l'override dei membri seguenti: 
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> fornisce il <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> metodo che verrà usato dai responsabili dell'implementazione <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Il codice del convertitore deve essere in grado di accettare un valore contenuta nel dizionario in cui il serializzatore passa modificarlo e quindi convertire tale valore in un oggetto di tipo <paramref name="T" />. Anziché implementare nuovamente il codice di conversione personalizzata a questo scopo, è possibile chiamare il <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> (metodo).</para>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">Servizi Web in ASP.NET AJAX</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">Istanza <see cref="T:System.Collections.Generic.IDictionary`2" /> di dati della proprietà archiviati come coppie nome/valore.</param>
        <param name="type">Tipo dell'oggetto risultante.</param>
        <param name="serializer">Istanza di <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</param>
        <summary>Se sottoposto a override in una classe derivata, converte il dizionario fornito in un oggetto del tipo specificato.</summary>
        <returns>Oggetto deserializzato.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Il <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> metodo consente di scorrere i valori nel <paramref name="dictionary" /> parametro per costruire un'istanza del tipo richiesto nel <paramref name="type" /> parametro. Anche se un convertitore di tipi può usare direttamente i valori <paramref name="dictionary" />, è consigliabile utilizzare l'implementatore del convertitore di <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> metodo invece. Il convertitore di tipi deve chiamare questo metodo per la <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> istanza disponibile dal <paramref name="serializer" /> parametro.  
  
Il <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> metodo consente a convertitore di tipi passare un valore della proprietà da <paramref name="dictionary" />e quindi restituire un valore del tipo previsto. In alcuni casi, un convertitore di tipi per un tipo personalizzato lavora con le proprietà dotate registrati convertitori di tipi (ad esempio, un tipo dispone di una proprietà di tipo B e tipo B è inoltre associato un convertitore personalizzato). In tal caso, richiamare <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> assicura che i convertitori personalizzati sarà richiamato per i dati della proprietà contenuta nel dizionario in modo ricorsivo. Quando il convertitore è scorrere tutte le voci nel dizionario, restituisce un'istanza costruita di tipo di destinazione.  
  
Se il convertitore rileva un problema durante la deserializzazione, deve generare un <see cref="T:System.InvalidOperationException" /> errore che descrive il problema.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da serializzare.</param>
        <param name="serializer">Oggetto responsabile della serializzazione.</param>
        <summary>Se sottoposto a override in una classe derivata, compila un dizionario di coppie nome/valore.</summary>
        <returns>Oggetto contenente coppie chiave-valore che rappresentano i dati dell'oggetto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si serializza un tipo per cui viene registrato un convertitore personalizzato, il <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza richiama il <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Il valore restituito di <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> deve essere un <see cref="T:System.Collections.Generic.IDictionary`2" /> istanza con zero o più coppie nome/valore che rappresentano i dati di un oggetto da convertire in formato JSON. Il convertitore non serializza i dati in formato JSON. Al contrario, il convertitore di tipi crea un dizionario di coppie nome/valore contenenti i nomi delle proprietà (la chiave di stringa per il dizionario) e la proprietà corrispondente (il valore dell'oggetto nel dizionario) i valori. Il <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> istanza esegue successivamente la conversione in formato JSON.  
  
Se si verifica un'eccezione, il convertitore deve generare un <see cref="T:System.InvalidOperationException" /> errore che descrive il problema.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se sottoposto a override in una classe derivata, ottiene un insieme dei tipi supportati.</summary>
        <value>Oggetto che implementa <see cref="T:System.Collections.Generic.IEnumerable`1" /> che rappresenta i tipi supportati dal convertitore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> proprietà sono elencati i tipi supportati dal convertitore. In fase di esecuzione, un <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza utilizza questa proprietà per determinare il mapping di tipi gestiti a convertitori personalizzati corrispondenti.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come eseguire l'override di <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> proprietà in una classe derivata. In questo esempio, il convertitore supporta solo il <xref:System.Web.UI.WebControls.ListItemCollection> tipo. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Web.Script.Serialization.JavaScriptConverter> classe.  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> deve sempre restituire che una raccolta e la raccolta deve contenere almeno una voce.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>