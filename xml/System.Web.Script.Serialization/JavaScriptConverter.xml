<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fed067b68018bdab0ef4b4da047a750da000af7e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36398208" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="af94d-101">Fornisce una classe di base astratta per un convertitore di tipi personalizzato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="af94d-101">Provides an abstract base class for a custom type converter.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af94d-102">Il <xref:System.Web.Script.Serialization.JavaScriptConverter> classe consente di implementare serializzazione e deserializzazione dei processi per i tipi gestiti che non sono supportati in modo nativo dal <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe.</span><span class="sxs-lookup"><span data-stu-id="af94d-102">The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="af94d-103">È anche possibile usare <xref:System.Web.Script.Serialization.JavaScriptConverter> quando è necessario un maggiore controllo sul processo di serializzazione e deserializzazione.</span><span class="sxs-lookup"><span data-stu-id="af94d-103">You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.</span></span>  
  
 <span data-ttu-id="af94d-104">Il <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> proprietà indica i tipi per il quale un convertitore personalizzato fornisce servizi di conversione.</span><span class="sxs-lookup"><span data-stu-id="af94d-104">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.</span></span>  
  
 <span data-ttu-id="af94d-105">Per indicare che un convertitore personalizzato deve essere usato dal <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza, è necessario registrare il convertitore di tipi con l'istanza.</span><span class="sxs-lookup"><span data-stu-id="af94d-105">To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance.</span></span> <span data-ttu-id="af94d-106">Se si utilizza il <xref:System.Web.Script.Serialization.JavaScriptSerializer> direttamente alla classe, è consigliabile utilizzare il <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> metodo per registrare il convertitore.</span><span class="sxs-lookup"><span data-stu-id="af94d-106">If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter.</span></span> <span data-ttu-id="af94d-107">In caso contrario, se si siano chiamando i metodi Web da ECMAScript (JavaScript) e si desidera utilizzare il convertitore personalizzato, è possibile registrarlo aggiungendo un `converters` elemento nel file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="af94d-107">Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file.</span></span> <span data-ttu-id="af94d-108">Per altre informazioni, vedere [procedura: configurare i servizi ASP.NET AJAX Microsoft](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span><span class="sxs-lookup"><span data-stu-id="af94d-108">For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 <span data-ttu-id="af94d-109">Quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza sta eseguendo la serializzazione di un tipo per cui dispone di un convertitore personalizzato registrato, il serializzatore chiama il <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="af94d-109">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span> <span data-ttu-id="af94d-110">Analogamente, quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza deserializza una stringa JavaScript Object Notation (JSON) e riconosce che un tipo all'interno della stringa JSON dispone di un convertitore personalizzato associato, il serializzatore chiama il <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="af94d-110">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af94d-111">Nell'esempio seguente viene illustrato come creare un convertitore personalizzato per il <xref:System.Web.UI.WebControls.ListItemCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="af94d-111">The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="af94d-112">
        <para>Quando si eredita da <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, è necessario eseguire l'override dei membri seguenti:- <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />   
  
-    <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />   
  
-    <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> fornisce il <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> metodo che verrà utilizzato dai responsabili dell'implementazione <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Il codice del convertitore deve essere in grado di accettare un valore che è contenuto nel dizionario in cui il serializzatore passa a esso e quindi convertire il valore in un oggetto di tipo <paramref name="T" />. Anziché implementare nuovamente il codice di conversione personalizzata a tale scopo, è possibile chiamare il <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> metodo.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="af94d-112">
          <para>When you inherit from <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, you must override the following members:  -   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> provides the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method that will be used by implementers of <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <paramref name="T" />. Rather than re-implementing the custom conversion code to accomplish this, you can call the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af94d-113">Inizializza una nuova istanza della classe <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-113">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="af94d-114">Istanza <see cref="T:System.Collections.Generic.IDictionary`2" /> di dati della proprietà archiviati come coppie nome/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-114">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="af94d-115">Tipo dell'oggetto risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-115">The type of the resulting object.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="af94d-116">Istanza di <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-116">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af94d-117">Se sottoposto a override in una classe derivata, converte il dizionario fornito in un oggetto del tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-117">When overridden in a derived class, converts the provided dictionary into an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af94d-118">Oggetto deserializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-118">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="af94d-119">
            <para>Il <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> metodo consente di scorrere i valori nel <paramref name="dictionary" /> parametro per costruire un'istanza del tipo richiesto nel <paramref name="type" /> parametro. Anche se un convertitore di tipi può utilizzare direttamente i valori da <paramref name="dictionary" />, è consigliabile utilizzare l'implementatore del convertitore di <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> metodo invece. Il convertitore deve chiamare questo metodo per la <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> istanza ottenibile il <paramref name="serializer" /> parametro.  Il <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> metodo consente a convertitore di tipi da passare un valore della proprietà da <paramref name="dictionary" />e quindi restituisce un valore del tipo previsto. In alcuni casi, un convertitore di tipi per un tipo personalizzato potrebbe funzionare con le proprietà che dotate di convertitori registrati (ad esempio, il tipo ha una proprietà di tipo B e tipo B è inoltre associato un convertitore personalizzato). In tal caso, la chiamata <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> assicura che i convertitori di tipi personalizzati sarà in modo ricorsivo richiamato per i dati della proprietà contenuta nel dizionario. Quando il convertitore è scorrere tutte le voci nel dizionario, che restituisce un'istanza costruita del tipo di destinazione.  Se il convertitore rileva un problema durante la deserializzazione, è necessario che venga generato un <see cref="T:System.InvalidOperationException" /> errore che descrive il problema.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-119">
              <para>The <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> method iterates through the values in the <paramref name="dictionary" /> parameter to construct an instance of the type requested in the <paramref name="type" /> parameter. Although a converter can directly use values from <paramref name="dictionary" />, we recommend that the converter implementer use the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method instead. The converter should call this method of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance available from the <paramref name="serializer" /> parameter.  The <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method enables converter to pass a property value from <paramref name="dictionary" />, and then return a value of the expected type. In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter). In that case, invoking <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary. When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.  If the converter encounters a problem during deserialization, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="af94d-120">Oggetto da serializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-120">The object to serialize.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="af94d-121">Oggetto responsabile della serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-121">The object that is responsible for the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af94d-122">Se sottoposto a override in una classe derivata, compila un dizionario di coppie nome/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-122">When overridden in a derived class, builds a dictionary of name/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af94d-123">Oggetto contenente coppie chiave/valore che rappresentano i dati dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-123">An object that contains key/value pairs that represent the object’s data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af94d-124">Quando si serializza un tipo per cui viene registrato un convertitore personalizzato, il <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza richiama il <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="af94d-124">When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="af94d-125">
            <para>Il valore restituito del <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> deve essere un <see cref="T:System.Collections.Generic.IDictionary`2" /> istanza con zero o più coppie nome/valore che rappresentano dati di un oggetto da convertire in formato JSON. Il convertitore non serializza i dati come JSON. Al contrario, il convertitore compila un dizionario di coppie nome/valore contenenti i nomi delle proprietà (la chiave di stringa per il dizionario) e proprietà corrispondenti valori (il valore dell'oggetto nel dizionario). Il <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> istanza esegue successivamente la conversione in formato JSON.  Se il convertitore rileva un'eccezione, è necessario che venga generato un <see cref="T:System.InvalidOperationException" /> errore che descrive il problema.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-125">
              <para>The return value of <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> must be an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON. The converter itself does not serialize data as JSON. Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary). The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance subsequently converts these to JSON.  If the converter encounters an exception, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af94d-126">Se sottoposto a override in una classe derivata, ottiene un insieme dei tipi supportati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-126">When overridden in a derived class, gets a collection of the supported types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af94d-127">Oggetto che implementa <see cref="T:System.Collections.Generic.IEnumerable`1" /> che rappresenta i tipi supportati dal convertitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-127">An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af94d-128">Il <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> proprietà sono elencati i tipi che sono supportati dal convertitore.</span><span class="sxs-lookup"><span data-stu-id="af94d-128">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter.</span></span> <span data-ttu-id="af94d-129">In fase di esecuzione, un <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza utilizza questa proprietà per determinare il mapping di tipi gestiti a convertitori personalizzati corrispondenti.</span><span class="sxs-lookup"><span data-stu-id="af94d-129">At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af94d-130">Nell'esempio seguente viene illustrato come eseguire l'override di <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> proprietà in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="af94d-130">The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class.</span></span> <span data-ttu-id="af94d-131">In questo esempio, il convertitore supporta solo il <xref:System.Web.UI.WebControls.ListItemCollection> tipo.</span><span class="sxs-lookup"><span data-stu-id="af94d-131">In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type.</span></span> <span data-ttu-id="af94d-132">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.Script.Serialization.JavaScriptConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="af94d-132">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="af94d-133">
            <para>
              <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> deve sempre restituire che una raccolta e la raccolta deve contenere almeno una voce.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="af94d-133">
              <para>
                <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> must always return a collection, and the collection must contain at least one entry.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>