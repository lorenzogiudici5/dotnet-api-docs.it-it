<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68b087218bcadcaee01e29ca84f4ae48fafa54b8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36398267" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptTypeResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce la classe di base astratta per l'implementazione di un resolver di tipi personalizzati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> classe fornisce i servizi per:  
  
-   Conversione di informazioni sui tipi per un valore stringa tramite il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> metodo.  
  
-   Risoluzione di un valore stringa per l'oggetto appropriato gestiti tipo tramite la <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> metodo.  
  
 Quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer> oggetto serializza tipi personalizzati, può facoltativamente includere nella stringa serializzata JavaScript Object Notation (JSON) un valore che contiene informazioni sul tipo. Durante la deserializzazione, <xref:System.Web.Script.Serialization.JavaScriptSerializer> può quindi riferimento gestito di questo valore di stringa per determinare i tipo in cui verrà convertita la stringa JSON.  
  
 Se si specifica un resolver di tipi per il <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza, il serializzatore utilizza il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> e <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> metodi per eseguire il mapping tra il tipo gestito e il valore di stringa durante il processo di serializzazione e la deserializzazione, rispettivamente.  
  
 Il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> classe è la classe base per il <xref:System.Web.Script.Serialization.SimpleTypeResolver> (classe), che fornisce un'implementazione di un resolver di tipi che utilizza il nome qualificato dall'assembly del tipo gestito.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un resolver di tipi personalizzato.  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Quando si implementa un resolver di tipi, la stringa restituita dal <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> metodo deve eseguire il mapping allo stesso tipo gestito quando il valore stringa viene passato al <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> metodo.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResolveType : string -&gt; Type" Usage="javaScriptTypeResolver.ResolveType id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Nome del tipo gestito.</param>
        <summary>Se sottoposto a override in una classe derivata, restituisce l'oggetto <see cref="T:System.Type" /> associato al nome del tipo specificato.</summary>
        <returns>Oggetto <see cref="T:System.Type" /> associato al nome del tipo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un resolver di tipi è associato a un <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza, il serializzatore utilizza il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> metodo quando si scorre una stringa JSON per determinare la specifica il tipo in cui convertire il tipo JSON gestito.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Dato un valore stringa, il resolver deve restituire un <see cref="T:System.Type" /> oggetto che rappresenta il corrispondente tipo gestito.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ResolveTypeId : Type -&gt; string" Usage="javaScriptTypeResolver.ResolveTypeId type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo gestito da risolvere.</param>
        <summary>Se sottoposto a override in una classe derivata, restituisce il nome del tipo per l'oggetto <see cref="T:System.Type" /> specificato.</summary>
        <returns>Nome del tipo gestito specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> metodo restituisce `null` o <xref:System.String.Empty>, quindi il resolver di tipi non supporta il tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>