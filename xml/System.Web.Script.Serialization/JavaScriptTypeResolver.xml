<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe8e0e840500610030d7c1d33f78c4810df879fe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9037c-101">Fornisce la classe di base astratta per l'implementazione di un resolver di tipi personalizzati.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9037c-101">Provides the abstract base class for implementing a custom type resolver.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9037c-102">La <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> classe fornisce i servizi per:</span><span class="sxs-lookup"><span data-stu-id="9037c-102">The <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class provides the services for:</span></span>  
  
-   <span data-ttu-id="9037c-103">Conversione di informazioni sui tipi per un valore stringa tramite il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="9037c-103">Converting managed type information to a string value through the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> method.</span></span>  
  
-   <span data-ttu-id="9037c-104">Risoluzione di un valore stringa per l'oggetto appropriato gestiti tipo tramite la <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="9037c-104">Resolving a string value back to the appropriate managed type through the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> method.</span></span>  
  
 <span data-ttu-id="9037c-105">Quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer> oggetto serializzazione di tipi personalizzati, può anche includere nella stringa serializzata JavaScript Object Notation (JSON) un valore che contiene informazioni sul tipo.</span><span class="sxs-lookup"><span data-stu-id="9037c-105">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object serializes custom types, it can optionally include in the serialized JavaScript Object Notation (JSON) string a value that contains type information.</span></span> <span data-ttu-id="9037c-106">Durante la deserializzazione, <xref:System.Web.Script.Serialization.JavaScriptSerializer> può quindi riferimento gestito di questo valore di stringa per determinare la versione appropriata di tipo in cui verrà convertita la stringa JSON.</span><span class="sxs-lookup"><span data-stu-id="9037c-106">During deserialization, <xref:System.Web.Script.Serialization.JavaScriptSerializer> can then reference this string value to determine the appropriate managed type to which the JSON string will be converted.</span></span>  
  
 <span data-ttu-id="9037c-107">Se si specifica un resolver di tipi per il <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza, il serializzatore utilizza il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> e <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> metodi per eseguire il mapping tra il tipo gestito e il valore di stringa durante il processo di serializzazione e la deserializzazione, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="9037c-107">If you provide a type resolver to the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, the serializer will use the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> and <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> methods to map between the managed type and the string value during the serialization and deserialization process, respectively.</span></span>  
  
 <span data-ttu-id="9037c-108">Il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> classe è la classe base per la <xref:System.Web.Script.Serialization.SimpleTypeResolver> classe che fornisce un'implementazione di un resolver di tipi che utilizza il nome completo dell'assembly del tipo gestito.</span><span class="sxs-lookup"><span data-stu-id="9037c-108">The <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class is the base class for the <xref:System.Web.Script.Serialization.SimpleTypeResolver> class, which provides an implementation of a type resolver that uses the managed type assembly-qualified name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9037c-109">Nell'esempio seguente viene illustrato come creare un resolver di tipi personalizzato.</span><span class="sxs-lookup"><span data-stu-id="9037c-109">The following example demonstrates how to create a custom type resolver.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="9037c-110">Quando si implementa un resolver di tipi, la stringa restituita dal <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> (metodo) deve eseguire il mapping al tipo gestito stesso quando il valore di stringa viene passato al <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> metodo.</span>
        <span class="sxs-lookup">
          <span data-stu-id="9037c-110">When you implement a type resolver, the string that is returned by the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> method must map back to the same managed type when the string value is passed to the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> method.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9037c-111">Inizializza una nuova istanza della classe <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9037c-111">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="9037c-112">Nome del tipo gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9037c-112">The name of the managed type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9037c-113">Se sottoposto a override in una classe derivata, restituisce l'oggetto <see cref="T:System.Type" /> associato al nome del tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9037c-113">When overridden in a derived class, returns the <see cref="T:System.Type" /> object that is associated with the specified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9037c-114">Oggetto <see cref="T:System.Type" /> associato al nome del tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9037c-114">The <see cref="T:System.Type" /> object that is associated with the specified type name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9037c-115">Quando un resolver di tipi è associato un <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza, il serializzatore utilizza il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> metodo quando si scorre una stringa JSON per determinare la specifica il tipo in cui convertire il tipo JSON gestito.</span><span class="sxs-lookup"><span data-stu-id="9037c-115">When a type resolver is associated with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, the serializer uses the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> method when it iterates through a JSON string to determine the specific managed type to which the JSON type should be converted.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9037c-116">Dato un valore stringa, il resolver deve restituire un <see cref="T:System.Type" /> oggetto che rappresenta il corrispondente tipo gestito.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9037c-116">Given a string value, the type resolver must return a <see cref="T:System.Type" /> object that represents the corresponding managed type.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="9037c-117">Tipo gestito da risolvere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9037c-117">The managed type to be resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9037c-118">Se sottoposto a override in una classe derivata, restituisce il nome del tipo per l'oggetto <see cref="T:System.Type" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9037c-118">When overridden in a derived class, returns the type name for the specified <see cref="T:System.Type" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9037c-119">Nome del tipo gestito specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9037c-119">The name of the specified managed type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9037c-120">Se il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> metodo restituisce `null` o <xref:System.String.Empty>, quindi il resolver di tipi non supporta il tipo.</span><span class="sxs-lookup"><span data-stu-id="9037c-120">If the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> method returns either `null` or <xref:System.String.Empty>, then the type resolver does not support the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>