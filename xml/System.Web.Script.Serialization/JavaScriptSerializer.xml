<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed139d90ee940c2091d55722bb0a7d9a029e089c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36597427" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>[Json.NET](http://www.newtonsoft.com/json) should be used serialization and deserialization. Provides serialization and deserialization functionality for AJAX-enabled applications.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe viene utilizzata internamente dal livello di comunicazione asincrona per serializzare e deserializzare i dati passati tra il browser e il server Web. È possibile accedere a quell'istanza del serializzatore. Tuttavia, questa classe espone un'API pubblica. Pertanto, è possibile utilizzare la classe quando si desidera utilizzare con JavaScript Object Notation (JSON) nel codice gestito.  
  
 Per serializzare un oggetto, utilizzare il <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> metodo. Per deserializzare una stringa JSON, utilizzare il <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> o <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> metodi. Per serializzare e deserializzare i tipi che non sono supportati in modo nativo da <xref:System.Web.Script.Serialization.JavaScriptSerializer>, implementare convertitori personalizzati usando il <xref:System.Web.Script.Serialization.JavaScriptConverter> classe. Registrare quindi i convertitori utilizzando il <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> metodo.  
  
## <a name="mapping-between-managed-types-and-json"></a>Mapping tra i tipi gestiti e JSON  
 Nella tabella seguente viene illustrato il mapping tra i tipi gestiti e JSON per il processo di serializzazione. Questi tipi gestiti in modo nativo sono supportati da <xref:System.Web.Script.Serialization.JavaScriptSerializer>. Quando la deserializzazione da una stringa JSON a un tipo gestito, viene applicato il mapping stesso. Tuttavia, la deserializzazione può essere asimmetrica; non tutti i tipi gestiti serializzabili possono essere deserializzati da JSON.  
  
> [!NOTE]
>  Una matrice multidimensionale è serializzata come una matrice unidimensionale e deve essere utilizzato come una matrice flat.  
  
|Tipo gestito|Equivalente JSON|  
|------------------|---------------------|  
|<xref:System.String> (Codifica UTF-8 solo).|Stringa|  
|<xref:System.Char>|Stringa|  
|Singolo carattere null (ad esempio, \0)|Null|  
|<xref:System.Boolean>|Proprietà di tipo Boolean. Rappresentato in JSON come `true` o `false`|  
|`null` (`null` riferimenti all'oggetto e <xref:System.Nullable> i tipi di valore).|Valore stringa null|  
|<xref:System.DBNull>|Valore stringa null|  
|I tipi primitivi (o numerici compatibilità numerica): <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, e <xref:System.Single>. Viene utilizzata la rappresentazione di stringa di impostazioni cultura invarianti.|Number|  
|<xref:System.DateTime>|Date (oggetto), rappresentato in JSON come "\\/data (numero di tick)\\/". Il numero di tick è un valore di tempo positivo o negativo che indica il numero di tick, in millisecondi, che sono trascorsi dalla mezzanotte 01 gennaio 1970 ora UTC.<br /><br /> Il valore massimo della data è supportato <xref:System.DateTime.MaxValue> (31/12/9999 11:59:59 PM) e il valore della data minimo supportato è <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM).|  
|Enumerazioni di tipo integer|Intero equivalente del valore di enumerazione|  
|I tipi che implementano <xref:System.Collections.IEnumerable> oppure <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> che non sono presenti anche le implementazioni di <xref:System.Collections.IDictionary> o <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>. Include tipi quali <xref:System.Array>, <xref:System.Collections.ArrayList>, e <xref:System.Collections.Generic.List%601>.|Matrice che usa la sintassi delle matrici JSON|  
|I tipi che implementano <xref:System.Collections.IDictionary> o <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>. Include tipi quali <xref:System.Collections.Generic.Dictionary%602> e <xref:System.Collections.Hashtable>.|Oggetto JavaScript che utilizza la sintassi del dizionario JSON|  
|Concreti (non astratte) tipi personalizzati che dispongono di proprietà di istanza pubblici dotati di ottengono le funzioni di accesso o campi di istanza pubblici.<br /><br /> Si noti che le proprietà pubbliche di sola scrittura, la proprietà pubblica o gli attributi di campo pubblico contrassegnato con <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, le proprietà indicizzate pubbliche in questi tipi sono ignorati.|Oggetto JavaScript che utilizza la sintassi del dizionario JSON. Una proprietà di metadati speciale denominata Type"viene inclusa per garantire una corretta deserializzazione. Assicurarsi che le proprietà dell'istanza pubblica avere get e set di funzioni di accesso per garantire una corretta deserializzazione.|  
|<xref:System.Guid>|Rappresentazione di stringa di un GUID|  
|<xref:System.Uri>|Rappresentazione di stringa del valore restituito di <xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 Nel primo esempio viene fornita un'illustrazione semplice come serializzare e deserializzare gli oggetti di dati. Richiede un persona riportata di seguito i nomi di classe.  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 L'esempio successivo mostra un progetto più complicato e completo che usa il <xref:System.Web.Script.Serialization.JavaScriptSerializer> (classe) per salvare e ripristinare lo stato di un oggetto utilizzando la serializzazione JSON. Questo codice Usa un convertitore personalizzato che viene fornito per il <xref:System.Web.Script.Serialization.JavaScriptConverter> classe.  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has no type resolver.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'istanza di <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe senza un resolver di tipi non include le proprietà dei metadati di tipo (denominate Type") nella stringa JSON serializzata. Una proprietà dei metadati del tipo viene utilizzata il <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> e <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> metodi per determinare gestita appropriata tipo in cui sarà possibile convertire la stringa JSON. Per informazioni su resolver di tipi, vedere il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">The custom type-resolver object.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has a custom type resolver.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si serializza un oggetto, il <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe Usa il `resolver` parametro per determinare il valore appropriato da includere nella stringa JSON serializzata per la proprietà dei metadati del tipo ( Type"). Analogamente, quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe deserializza una stringa JSON, risolve il valore della proprietà tipo dei metadati per il tipo gestito appropriato tramite l'istanza del resolver.  
  
 È possibile impostare il `resolver` parametro a `null`, che equivale alla chiamata al metodo il <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> costruttore.  
  
 L'istanza di <xref:System.Web.Script.Serialization.JavaScriptSerializer> che viene usato dal livello di comunicazione asincrona per richiamare i servizi Web da script client utilizza un resolver di tipi speciali. Il resolver di tipi che limita i tipi che possono essere deserializzati a quelli definiti nella firma del metodo del servizio Web o quelle che hanno il <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> applicato. È possibile modificare questo resolver predefiniti a livello di codice.  
  
> [!IMPORTANT]
>  Utilizzo di un'istanza di questo oggetto inizializzato con un resolver di tipi personalizzato può presentare un rischio per la sicurezza. Questo oggetto può essere utilizzato solo con dati attendibili. Per altre informazioni, vedere [la convalida dei dati](https://www.owasp.org/index.php/Data_Validation).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="targetType">The type to convert the object to.</param>
        <summary>Converts the specified object to the specified type.</summary>
        <returns>The serialized JSON string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza sta eseguendo la serializzazione di un tipo per cui viene registrato un convertitore personalizzato, il serializzatore chiama il <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> metodo per ottenere il dizionario di coppie nome/valore che verrà convertita in una stringa in formato JSON.  
  
 Il <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> metodo può generare eccezioni anche se l'oggetto grafico è troppo complessa o se le istanze registrate di <xref:System.Web.Script.Serialization.JavaScriptConverter> hanno causato la ricorsione del convertitore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resulting JSON-formatted string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</exception>
        <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">Il tipo a cui <c>obj</c> verrà convertito.</typeparam>
        <param name="obj">The object to convert.</param>
        <summary>Converts the given object to the specified type.</summary>
        <returns>The object that has been converted to the target type.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> metodo prova a convertire l'istanza dell'oggetto rappresentato dal `obj` a un'istanza di tipo `T`. Durante questa conversione non è possibile garantire che venga mantenuto l'uguaglianza di riferimento di oggetto. Pertanto, è possibile presupporre che `obj` e `T` fanno riferimento allo stesso oggetto.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> deve essere utilizzata se si implementa una classe che deriva da <xref:System.Web.Script.Serialization.JavaScriptConverter>. Il codice del convertitore deve essere in grado di accettare un valore che è presente nel dizionario che il serializzatore passa ad esso e quindi convertire tale valore in un'istanza del tipo `T`. Anziché implementare nuovamente il codice di conversione personalizzata per eseguire questa attività, è possibile chiamare il <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> metodo dal codice del convertitore.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> metodo per ottenere un <xref:System.Web.UI.WebControls.ListItem> oggetto da un valore nel dizionario passato per il convertitore. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe.  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the type resolver that is associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).  -or-  An attempt was made to convert <paramref name="obj" /> to an array-like managed type, which is not supported for use as a deserialization target.  -or-  It is not possible to convert <paramref name="obj" /> to <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="obj" /> includes member definitions that are not available on type <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="input">The JSON string to deserialize.</param>
        <param name="targetType">The type of the resulting object.</param>
        <summary>Converts a JSON-formatted string to an object of the specified type.</summary>
        <returns>The deserialized object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo di deserializzazione non tenta di eseguire il cast radice dell'oggetto grafico da un tipo specifico, la modalità che il <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The length of <paramref name="input" /> exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.  -or-  <paramref name="input" /> contains an unexpected character sequence.  -or-  <paramref name="input" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="input" /> includes member definitions that are not available on the target type.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).  -or-  An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  -or-  It is not possible to convert <paramref name="input" /> to the target type.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo dell'oggetto risultante.</typeparam>
        <param name="input">The JSON string to be deserialized.</param>
        <summary>Converts the specified JSON string to an object of type <paramref name="T" />.</summary>
        <returns>The deserialized object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> metodo equivale all'utilizzo prima di <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> metodo per ottenere un oggetto grafico e quindi tenta di eseguire il cast del risultato nel tipo `T`.  
  
 Durante la deserializzazione, corrente il resolver di tipi il serializzatore viene fatto riferimento, che determina il tipo gestito da utilizzare durante la conversione di elementi annidati all'interno di matrici e i tipi di dizionario. Di conseguenza, il processo di deserializzazione scorre tutti gli elementi annidati di `input`. Per ulteriori informazioni su resolver di tipi, vedere il <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> classe.  
  
   
  
## Examples  
Nell'esempio seguente fornisce una semplice illustrato come serializzare e deserializzare gli oggetti di dati.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Richiede una classe denominata `Person`, mostrato nell'esempio seguente. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.  -or-  <paramref name="input" /> contains an unexpected character sequence.  -or-  <paramref name="input" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="input" /> includes member definitions that are not available on type <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract types or an interface).  -or-  An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  -or-  It is not possible to convert <paramref name="input" /> to <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">The JSON string to be deserialized.</param>
        <summary>Converts the specified JSON string to an object graph.</summary>
        <returns>The deserialized object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo di deserializzazione non tenta di eseguire il cast radice dell'oggetto grafico da un tipo specifico, come con la <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.  -or-  <paramref name="input" /> contains an unexpected character sequence.  -or-  <paramref name="input" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="input" /> includes member definitions that are not available on the target type.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).  -or-  An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  -or-  It is not possible to convert <paramref name="input" /> to the target type.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum length of JSON strings that are accepted by the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</summary>
        <value>Lunghezza massima delle stringhe JSON. Il valore predefinito è 2097152 caratteri, che equivale a 4 MB di dati stringa Unicode.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore della <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> proprietà si applica solo quando si crea in modo esplicito un'istanza del <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe. Utilizzare il `jsonSerialization` elemento del file di configurazione per impostare la lunghezza massima per l'istanza del serializzatore interno utilizzato dal livello di comunicazione asincrona. Per ulteriori informazioni sugli elementi di configurazione per la serializzazione, vedere [procedura: configurare i servizi ASP.NET AJAX Microsoft](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value that is less than one.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the limit for constraining the number of object levels to process.</summary>
        <value>Numero di livelli dell'oggetto. Il valore predefinito è 100.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> proprietà fa riferimento al numero di livelli nella gerarchia di oggetti che <xref:System.Web.Script.Serialization.JavaScriptSerializer> elaborerà nei casi seguenti:  
  
-   Quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe deserializza una stringa JSON.  
  
-   Quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe si verifica un oggetto grafico durante la serializzazione.  
  
 Il valore di <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> si applica solo quando si crea in modo esplicito un'istanza di <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe. Utilizzare il `jsonSerialization` elemento del file di configurazione per impostare il numero di livelli dell'oggetto da elaborare per l'istanza del serializzatore interno che viene utilizzato il livello di comunicazione asincrona. Per ulteriori informazioni sugli elementi di configurazione per la serializzazione, vedere [procedura: configurare i servizi ASP.NET AJAX Microsoft](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value that is less than one.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">An array that contains the custom converters to be registered.</param>
        <summary>Registers a custom converter with the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile registrare uno o più convertitori personalizzati con un <xref:System.Web.Script.Serialization.JavaScriptSerializer> quando si utilizza il <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> metodo. Quando vengono registrati i convertitori di tipi personalizzati, <xref:System.Web.Script.Serialization.JavaScriptSerializer> utilizza i convertitori di tipi per serializzare tipi gestiti e deserializzare stringhe JSON in tipi gestiti.  
  
 Più convertitori di tipi può essere registrati con lo stesso <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza e i convertitori di tipi possono indicare il supporto per lo stesso tipo. Di conseguenza, l'ultimo convertitore registrato per un tipo specifico è quello che verrà usato da <xref:System.Web.Script.Serialization.JavaScriptSerializer> per serializzare il tipo.  
  
 Per ulteriori informazioni sui convertitori personalizzati, vedere il <xref:System.Web.Script.Serialization.JavaScriptConverter> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come registrare un convertitore personalizzato con un <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe.  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="converters" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converts an object to a JSON string.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to serialize.</param>
        <summary>Converts an object to a JSON string.</summary>
        <returns>The serialized JSON string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza sta eseguendo la serializzazione di un tipo per cui viene registrato un convertitore personalizzato, il serializzatore chiama il <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> metodo per ottenere il dizionario di coppie nome/valore che verrà convertita in una stringa JSON.  
  
 Il <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> metodo può generare eccezioni anche se l'oggetto grafico è troppo complessa o se le istanze registrate di <xref:System.Web.Script.Serialization.JavaScriptConverter> hanno causato la ricorsione del convertitore.  
  
   
  
## Examples  
Nell'esempio seguente fornisce una semplice illustrato come serializzare e deserializzare gli oggetti di dati.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Richiede una classe denominata `Person`, mostrato nell'esempio seguente. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</exception>
        <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">The object to serialize.</param>
        <param name="output">The <see cref="T:System.Text.StringBuilder" /> object that is used to write the JSON string.</param>
        <summary>Serializes an object and writes the resulting JSON string to the specified <see cref="T:System.Text.StringBuilder" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Web.Script.Serialization.JavaScriptSerializer> istanza sta eseguendo la serializzazione di un tipo per cui viene registrato un convertitore personalizzato, il serializzatore chiama il <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> metodo per ottenere il dizionario di coppie nome/valore che verrà convertita in una stringa JSON.  
  
 Il <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> metodo può generare eccezioni anche se l'oggetto grafico è troppo complessa o se le istanze registrate di <xref:System.Web.Script.Serialization.JavaScriptConverter> hanno causato la ricorsione del convertitore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</exception>
        <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="output" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>