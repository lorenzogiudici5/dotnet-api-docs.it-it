<Type Name="TypeCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5c7135f27d53800371810fb4850e3e706e3ba3c6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36708060" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <TypeSignature Language="F#" Value="type TypeCodeDomSerializer = class&#xA;    inherit CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c0510-101">Serializza un oggetto in un nuovo tipo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0510-101">Serializes an object to a new type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0510-102">Il <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> classe esegue le stesse attività come una <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, ma la serializzazione di un oggetto tramite questa classe definisce un nuovo tipo.</span><span class="sxs-lookup"><span data-stu-id="c0510-102">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> class performs the same tasks as a <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, but serializing an object through this class defines a new type.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0510-103">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj&#xA;override this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj" Usage="typeCodeDomSerializer.Deserialize (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="c0510-104">Gestore della serializzazione da utilizzare per la serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-104">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="c0510-105">Dichiarazione del tipo da utilizzare per la serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-105">Type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0510-106">Deserializza la dichiarazione del tipo dato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-106">Deserializes the given type declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0510-107">Oggetto radice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-107">The root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0510-108">Il <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> metodo deserializza una dichiarazione del tipo di codice precedentemente serializzata.</span><span class="sxs-lookup"><span data-stu-id="c0510-108">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method deserializes a previously serialized code type declaration.</span></span> <span data-ttu-id="c0510-109">La tabella seguente illustra che l'implementazione predefinita di attività esegue.</span><span class="sxs-lookup"><span data-stu-id="c0510-109">The following table shows the tasks default implementation performs.</span></span>  
  
|<span data-ttu-id="c0510-110">Attività</span><span class="sxs-lookup"><span data-stu-id="c0510-110">Task</span></span>|<span data-ttu-id="c0510-111">Descrizione</span><span class="sxs-lookup"><span data-stu-id="c0510-111">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="c0510-112">Controlli di distinzione maiuscole/minuscole</span><span class="sxs-lookup"><span data-stu-id="c0510-112">Case Sensitivity Checks</span></span>|<span data-ttu-id="c0510-113">L'implementazione cerca un <xref:System.CodeDom.Compiler.CodeDomProvider> servizio per determinare se i membri devono essere considerati con distinzione maiuscole / minuscole o maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="c0510-113">The implementation searches for a <xref:System.CodeDom.Compiler.CodeDomProvider> service to decide if it should treat members as case sensitive or case insensitive.</span></span>|  
|<span data-ttu-id="c0510-114">Ordinamento delle istruzioni</span><span class="sxs-lookup"><span data-stu-id="c0510-114">Statement Sorting</span></span>|<span data-ttu-id="c0510-115">Tutte le variabili membro e le variabili locali di metodi di inizializzazione vengono archiviate in una tabella.</span><span class="sxs-lookup"><span data-stu-id="c0510-115">All member variables and local variables from init methods are stored in a table.</span></span> <span data-ttu-id="c0510-116">Ogni istruzione in un metodo init viene quindi aggiunto a un insieme di istruzioni raggruppato in base al relativo lato sinistro, in modo da tutte le istruzioni di assegnazione o operano su una determinata variabile sono raggruppate sotto tale variabile.</span><span class="sxs-lookup"><span data-stu-id="c0510-116">Then each statement in an init method is added to a statement collection grouped according to its left-hand side, so all statements assigning or operating on a particular variable are grouped under that variable.</span></span> <span data-ttu-id="c0510-117">Le variabili che non presentano istruzioni vengono eliminate.</span><span class="sxs-lookup"><span data-stu-id="c0510-117">Variables that have no statements are discarded.</span></span>|  
|<span data-ttu-id="c0510-118">Deserializzazione</span><span class="sxs-lookup"><span data-stu-id="c0510-118">Deserialization</span></span>|<span data-ttu-id="c0510-119">Le raccolte di istruzione per ogni variabile vengono deserializzate in base alla variabile.</span><span class="sxs-lookup"><span data-stu-id="c0510-119">The statement collections for each variable are deserialized according to the variable.</span></span>|  
  
 <span data-ttu-id="c0510-120">Nella tabella seguente vengono mostrati i servizi di <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> metodo richiede.</span><span class="sxs-lookup"><span data-stu-id="c0510-120">The following table shows the services the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method requires.</span></span>  
  
|<span data-ttu-id="c0510-121">Service</span><span class="sxs-lookup"><span data-stu-id="c0510-121">Service</span></span>|<span data-ttu-id="c0510-122">Descrizione</span><span class="sxs-lookup"><span data-stu-id="c0510-122">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.CodeDom.Compiler.CodeDomProvider>|<span data-ttu-id="c0510-123">Benché non sia strettamente necessario, il servizio, se disponibile, viene utilizzato per determinare se la serializzazione deve essere tra maiuscole e minuscole o maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="c0510-123">While not strictly necessary, the service, if available, is used to determine if the serialization should be case sensitive or case insensitive.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="c0510-124">Se un oggetto non esiste nella tabella nome durante la deserializzazione, una query per <xref:System.ComponentModel.IContainer> viene eseguita.</span><span class="sxs-lookup"><span data-stu-id="c0510-124">If an object does not exist in the name table during deserialization, a query for <xref:System.ComponentModel.IContainer> is made.</span></span> <span data-ttu-id="c0510-125">Se la query ha esito positivo, il contenitore viene verificato per l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="c0510-125">If this query succeeds, the container is checked for the object.</span></span> <span data-ttu-id="c0510-126">Il contenitore viene usato anche come un sostituto per qualsiasi argomento contenitore richiesti dai componenti.</span><span class="sxs-lookup"><span data-stu-id="c0510-126">The container is also used as a stand-in for any container argument needed by components.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0510-127">
            <paramref name="manager" /> o <paramref name="typeDecl" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-127">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethod">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod GetInitializeMethod(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethod (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration, value As Object) As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::CodeDom::CodeMemberMethod ^ GetInitializeMethod(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod&#xA;override this.GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod" Usage="typeCodeDomSerializer.GetInitializeMethod (manager, declaration, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="c0510-128">Gestore della serializzazione da utilizzare per la serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-128">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="c0510-129">Dichiarazione di tipo da usare per la serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-129">The type declaration to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0510-130">Valore da usare per la serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-130">The value to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0510-131">Restituisce il metodo in cui sono archiviate le istruzioni usate per la serializzazione di un membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-131">Returns the method where statements used to serialize a member are stored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0510-132">Metodo usato per la creazione di tutto il codice di inizializzazione per il membro specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-132">The method used to emit all of the initialization code for the given member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0510-133">Il <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> metodo viene restituito il metodo per la creazione di tutto il codice di inizializzazione per il membro specificato.</span><span class="sxs-lookup"><span data-stu-id="c0510-133">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> method returns the method to emit all of the initialization code for the given member.</span></span> <span data-ttu-id="c0510-134">L'implementazione predefinita restituisce un costruttore vuoto.</span><span class="sxs-lookup"><span data-stu-id="c0510-134">The default implementation returns an empty constructor.</span></span> <span data-ttu-id="c0510-135">Se lo stesso metodo deve essere restituito per specificare più valori, la stessa istanza del metodo deve essere restituita.</span><span class="sxs-lookup"><span data-stu-id="c0510-135">If the same method is to be returned for multiple values, the same instance of the method should be returned.</span></span> <span data-ttu-id="c0510-136">È possibile utilizzare il <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dizionario per memorizzare i metodi è stato creato.</span><span class="sxs-lookup"><span data-stu-id="c0510-136">You can use the <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dictionary to remember methods you have created.</span></span> <span data-ttu-id="c0510-137">Il `typeDecl` parametro può essere utilizzato anche per aggiungere metodi di infrastruttura.</span><span class="sxs-lookup"><span data-stu-id="c0510-137">The `typeDecl` parameter can also be used to add infrastructure methods.</span></span> <span data-ttu-id="c0510-138">Ad esempio, se si desidera creare un metodo separato per ogni oggetto, è necessario un unico metodo che chiama a sua volta tutti questi metodi.</span><span class="sxs-lookup"><span data-stu-id="c0510-138">For example, if you want to emit a separate method for each object, you need a single method that calls all of these methods in turn.</span></span> <span data-ttu-id="c0510-139">Questo metodo può essere aggiunto alla dichiarazione di tipo di codice in base alle esigenze.</span><span class="sxs-lookup"><span data-stu-id="c0510-139">This method can be added to the code type declaration as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0510-140">
            <paramref name="manager" />, <paramref name="typeDecl" /> o <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-140">
              <paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethods">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod[] GetInitializeMethods(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethods (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As CodeMemberMethod()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::CodeDom::CodeMemberMethod ^&gt; ^ GetInitializeMethods(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]&#xA;override this.GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]" Usage="typeCodeDomSerializer.GetInitializeMethods (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="c0510-141">Gestore della serializzazione da utilizzare per la serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-141">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="c0510-142">Dichiarazione di tipo da usare per la serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-142">The type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0510-143">Restituisce una matrice di metodi da interpretare durante la deserializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-143">Returns an array of methods to be interpreted during deserialization.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0510-144">Matrice <see cref="T:System.CodeDom.CodeMemberMethod" /> di metodi da interpretare durante la deserializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-144">A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0510-145">L'implementazione predefinita restituisce una matrice a elemento singolo con il costruttore in essa contenuti.</span><span class="sxs-lookup"><span data-stu-id="c0510-145">The default implementation returns a single-element array with the constructor in it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0510-146">
            <paramref name="manager" /> o <paramref name="typeDecl" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-146">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, class System.Collections.ICollection members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, root As Object, members As ICollection) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeTypeDeclaration ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ root, System::Collections::ICollection ^ members);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration&#xA;override this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration" Usage="typeCodeDomSerializer.Serialize (manager, root, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="members" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="c0510-147">Gestore della serializzazione da utilizzare per la serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-147">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="root">
          <span data-ttu-id="c0510-148">Oggetto da serializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-148">The object to serialize.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="c0510-149">Insieme facoltativo di membri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-149">Optional collection of members.</span>
          </span>
          <span data-ttu-id="c0510-150">Può essere <see langword="null" /> o vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-150">Can be <see langword="null" /> or empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0510-151">Serializza l'elemento di primo livello dell'oggetto creando una nuova dichiarazione del tipo che definisce un elemento di primo livello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-151">Serializes the object root by creating a new type declaration that defines root.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0510-152">Classe <see cref="T:System.CodeDom.CodeTypeDeclaration" /> che definisce l'oggetto di primo livello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-152">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0510-153">Il <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> metodo serializza l'oggetto radice specificato e raccolta facoltativa di membri per creare una nuova definizione di tipo.</span><span class="sxs-lookup"><span data-stu-id="c0510-153">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method serializes the given root object and optional collection of members to create a new type definition.</span></span> <span data-ttu-id="c0510-154">Se il `members` insieme contiene i valori, questi valori vengono serializzati.</span><span class="sxs-lookup"><span data-stu-id="c0510-154">If the `members` collection contains values, these values are serialized.</span></span> <span data-ttu-id="c0510-155">Ai valori stessi possono serializzare come variabili membro o variabili locali.</span><span class="sxs-lookup"><span data-stu-id="c0510-155">Values themselves may serialize as either member variables or local variables.</span></span> <span data-ttu-id="c0510-156">Questa operazione viene effettuata eseguendo una ricerca di una proprietà di estensione per l'oggetto chiamato `GenerateMember`.</span><span class="sxs-lookup"><span data-stu-id="c0510-156">This determination is done by searching for an extender property on the object called `GenerateMember`.</span></span> <span data-ttu-id="c0510-157">Se `true`, verrà generato un membro.</span><span class="sxs-lookup"><span data-stu-id="c0510-157">If `true`, a member is generated.</span></span> <span data-ttu-id="c0510-158">In caso contrario, viene generata una variabile locale.</span><span class="sxs-lookup"><span data-stu-id="c0510-158">Otherwise, a local variable is generated.</span></span> <span data-ttu-id="c0510-159">Per praticità, la `members` raccolta può contenere l'oggetto radice.</span><span class="sxs-lookup"><span data-stu-id="c0510-159">For convenience, the `members` collection can contain the root object.</span></span> <span data-ttu-id="c0510-160">In questo caso, l'oggetto radice non viene inoltre aggiunto come un membro o una variabile locale.</span><span class="sxs-lookup"><span data-stu-id="c0510-160">In this case, the root object is not also added as a member or local variable.</span></span>  
  
 <span data-ttu-id="c0510-161">Il nome del tipo restituito viene utilizzato dal nome dell'oggetto radice, se si trattasse di un oggetto denominato.</span><span class="sxs-lookup"><span data-stu-id="c0510-161">The name of the returned type is taken from the root object’s name, if it was a named object.</span></span> <span data-ttu-id="c0510-162">In caso contrario, viene creato un nome dal nome del tipo semplice della classe radice.</span><span class="sxs-lookup"><span data-stu-id="c0510-162">If not, a name is fabricated from the simple type name of the root class.</span></span>  
  
 <span data-ttu-id="c0510-163">La tabella seguente illustra le attività eseguite dall'implementazione predefinita del <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c0510-163">The following table shows the tasks performed by the default implementation of the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method.</span></span>  
  
|<span data-ttu-id="c0510-164">Attività</span><span class="sxs-lookup"><span data-stu-id="c0510-164">Task</span></span>|<span data-ttu-id="c0510-165">Descrizione</span><span class="sxs-lookup"><span data-stu-id="c0510-165">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="c0510-166">Inizializzazione del contesto</span><span class="sxs-lookup"><span data-stu-id="c0510-166">Context Seeding</span></span>|<span data-ttu-id="c0510-167">Il contesto di serializzazione viene inizializzato con dati che includono il <xref:System.ComponentModel.Design.Serialization.RootContext> e <xref:System.CodeDom.CodeTypeDeclaration></span><span class="sxs-lookup"><span data-stu-id="c0510-167">The serialization context is initialized with data including the <xref:System.ComponentModel.Design.Serialization.RootContext> and <xref:System.CodeDom.CodeTypeDeclaration></span></span>|  
|<span data-ttu-id="c0510-168">Serializzazione dei membri</span><span class="sxs-lookup"><span data-stu-id="c0510-168">Member Serialization</span></span>|<span data-ttu-id="c0510-169">Successivamente, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> scorre tutti i membri e chiamate <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0510-169">Next, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> walks all of the members and calls <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span></span> <span data-ttu-id="c0510-170">Poiché la serializzazione viene eseguita in base alle esigenze in <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, in questo modo si garantisce che non venga eseguita due volte.</span><span class="sxs-lookup"><span data-stu-id="c0510-170">Because serialization is done opportunistically in <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, this ensures that serialization is not done twice.</span></span>|  
|<span data-ttu-id="c0510-171">Serializzazione radice</span><span class="sxs-lookup"><span data-stu-id="c0510-171">Root Serialization</span></span>|<span data-ttu-id="c0510-172">Successivamente, viene serializzato l'oggetto radice e le relative istruzioni vengono aggiunte alla raccolta di istruzione.</span><span class="sxs-lookup"><span data-stu-id="c0510-172">Next, the root object is serialized and its statements are added to the statement collection.</span></span>|  
|<span data-ttu-id="c0510-173">Integrazione di istruzione</span><span class="sxs-lookup"><span data-stu-id="c0510-173">Statement Integration</span></span>|<span data-ttu-id="c0510-174">Dopo che tutti gli oggetti vengono serializzati, i <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> metodo ordina le istruzioni e li aggiunge a un metodo restituito da <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0510-174">After all objects are serialized, the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method orders the statements and adds them to a method returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span> <span data-ttu-id="c0510-175">Infine, viene creato un costruttore che chiama tutti i metodi restituiti da <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0510-175">Finally, a constructor is fabricated that calls all of the methods returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span>|  
  
-  
  
 <span data-ttu-id="c0510-176">Nella tabella seguente vengono indicati gli oggetti di <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> metodo inserisce nello stack di contesto.</span><span class="sxs-lookup"><span data-stu-id="c0510-176">The following table shows the objects the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method places on the context stack.</span></span>  
  
|<span data-ttu-id="c0510-177">Istanza</span><span class="sxs-lookup"><span data-stu-id="c0510-177">Instance</span></span>|<span data-ttu-id="c0510-178">Descrizione</span><span class="sxs-lookup"><span data-stu-id="c0510-178">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>|<span data-ttu-id="c0510-179">Da questo serializzatore.</span><span class="sxs-lookup"><span data-stu-id="c0510-179">This serializer.</span></span> <span data-ttu-id="c0510-180">Derivazione di classi può risultare utile per aggiungere le proprietà pubbliche per questa classe.</span><span class="sxs-lookup"><span data-stu-id="c0510-180">Deriving classes may find it useful to add public properties to this class.</span></span>|  
|<xref:System.CodeDom.CodeTypeDeclaration>|<span data-ttu-id="c0510-181">Il tipo da creare.</span><span class="sxs-lookup"><span data-stu-id="c0510-181">The type being created.</span></span> <span data-ttu-id="c0510-182">La maggior parte degli oggetti non richiedono l'accesso diretto a questa.</span><span class="sxs-lookup"><span data-stu-id="c0510-182">Most objects do not need direct access to this.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0510-183">
            <paramref name="manager" /> o <paramref name="root" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0510-183">
              <paramref name="manager" /> or <paramref name="root" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
  </Members>
</Type>