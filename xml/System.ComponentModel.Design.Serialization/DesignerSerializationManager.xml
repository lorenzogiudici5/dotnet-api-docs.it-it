<Type Name="DesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.DesignerSerializationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d25755190c3410b70176ce9e68fb7096b9117195" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39773818" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <TypeSignature Language="F#" Value="type DesignerSerializationManager = class&#xA;    interface IDesignerSerializationManager&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="25566-101">Fornisce un'implementazione dell'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="25566-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-102">Il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interfaccia è progettata per essere un'interfaccia indipendente dal formato a un oggetto che controlla la serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-102">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization.</span></span> <span data-ttu-id="25566-103">Essenzialmente fornisce contesto e i servizi per i serializzatori, eseguono effettivamente la deserializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-103">It essentially provides context and services to serializers, which actually perform the deserialization.</span></span> <span data-ttu-id="25566-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> offre supporto per il processo di deserializzazione tenendo traccia degli oggetti.</span><span class="sxs-lookup"><span data-stu-id="25566-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects.</span></span> <span data-ttu-id="25566-105">Questa operazione è simile in tecnica per il <xref:System.ComponentModel.Design.IDesignerHost> interfaccia: le finestre di progettazione forniscono l'interfaccia utente (UI), e <xref:System.ComponentModel.Design.IDesignerHost> fornisce l'associazione che consente diversi ai progettisti di collaborare.</span><span class="sxs-lookup"><span data-stu-id="25566-105">This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.</span></span>  
  
 <span data-ttu-id="25566-106">Il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> classe implementa <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span><span class="sxs-lookup"><span data-stu-id="25566-106">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span></span> <span data-ttu-id="25566-107">È progettato per offrire un tipo generico di deserializzazione che è simile ai serializzatori in fase di esecuzione, ad esempio il <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span><span class="sxs-lookup"><span data-stu-id="25566-107">It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="25566-108">Il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> classe consente di ottenere tre obiettivi:</span><span class="sxs-lookup"><span data-stu-id="25566-108">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:</span></span>  
  
-   <span data-ttu-id="25566-109">È un oggetto semplice e pratico che può essere utilizzato per deserializzare una varietà di formati.</span><span class="sxs-lookup"><span data-stu-id="25566-109">It is a simple, turnkey object that can be used to deserialize a variety of formats.</span></span>  
  
-   <span data-ttu-id="25566-110">È generico e non collegati a un particolare formato.</span><span class="sxs-lookup"><span data-stu-id="25566-110">It is generic and not tied to any particular format.</span></span> <span data-ttu-id="25566-111">Può essere utilizzato per la deserializzazione di CodeDOM, nonché la deserializzazione di markup.</span><span class="sxs-lookup"><span data-stu-id="25566-111">It can be used equally for CodeDOM deserialization as well as markup deserialization.</span></span>  
  
-   <span data-ttu-id="25566-112">È estendibile e supporta i metodi di serializzazione diverso che vengono usati in scenari di copia/incolla e Annulla/Ripristina.</span><span class="sxs-lookup"><span data-stu-id="25566-112">It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.</span></span>  
  
 <span data-ttu-id="25566-113">Serializzazione in fase di progettazione presenta le differenze seguenti dalla serializzazione di oggetti in fase di esecuzione:</span><span class="sxs-lookup"><span data-stu-id="25566-113">Design-time serialization has the following differences from run-time object serialization:</span></span>  
  
-   <span data-ttu-id="25566-114">Oggetto che esegue la serializzazione è in genere separato dall'oggetto in fase di esecuzione, in modo che in fase di progettazione per la logica può essere rimossi da un componente.</span><span class="sxs-lookup"><span data-stu-id="25566-114">The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.</span></span>  
  
-   <span data-ttu-id="25566-115">Lo schema di serializzazione si presuppone che verrà creato l'oggetto completamente inizializzato e quindi modificato tramite proprietà e chiamate al metodo durante la deserializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-115">The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.</span></span>  
  
-   <span data-ttu-id="25566-116">Proprietà di un oggetto con valori che sono stati mai impostati sull'oggetto (di proprietà contiene i valori predefiniti) non vengono serializzate.</span><span class="sxs-lookup"><span data-stu-id="25566-116">Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.</span></span> <span data-ttu-id="25566-117">Al contrario, il flusso di deserializzazione potrebbe avere buchi.</span><span class="sxs-lookup"><span data-stu-id="25566-117">Conversely, the deserialization stream may have holes.</span></span>  
  
-   <span data-ttu-id="25566-118">Particolare attenzione è rivolta la qualità del contenuto all'interno di flusso di serializzazione, anziché la serializzazione completa di un oggetto.</span><span class="sxs-lookup"><span data-stu-id="25566-118">Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.</span></span> <span data-ttu-id="25566-119">Ciò significa che, se non è definito per serializzare un oggetto, tale oggetto può essere ignorata anziché generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="25566-119">This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.</span></span> <span data-ttu-id="25566-120">Il motore di serializzazione può prevedere euristica per determinare gli errori che possono essere ignorati e che non sono recuperabili.</span><span class="sxs-lookup"><span data-stu-id="25566-120">The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.</span></span>  
  
-   <span data-ttu-id="25566-121">Il flusso di serializzazione possa avere più dati è necessaria per la deserializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-121">The serialization stream may have more data than is needed for deserialization.</span></span> <span data-ttu-id="25566-122">La serializzazione del codice sorgente, ad esempio, ha il codice utente combinato con il codice necessario per deserializzare un oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="25566-122">Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.</span></span> <span data-ttu-id="25566-123">Questo codice utente deve essere ignorato durante la deserializzazione e mantenuto in caso di serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-123">This user code must be ignored on deserialization and preserved on serialization.</span></span>  
  
 <span data-ttu-id="25566-124">A causa di queste differenze, un modello di serializzazione diverso si applica a serializzazione in fase di progettazione.</span><span class="sxs-lookup"><span data-stu-id="25566-124">Because of these differences, a different serialization model applies to design-time serialization.</span></span> <span data-ttu-id="25566-125">Questo modello Usa un oggetto serializzatore separato per ogni tipo di dati in fase di serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-125">This model utilizes a separate serializer object for each data type being serialized.</span></span> <span data-ttu-id="25566-126">Ciascun serializzatore offre il suo contributo al problema di piccole dimensioni nel suo complesso.</span><span class="sxs-lookup"><span data-stu-id="25566-126">Each serializer provides its small contribution to the problem as a whole.</span></span> <span data-ttu-id="25566-127">Questi serializzatori sono tutte le coordinate attraverso un gestore di serializzazione comuni.</span><span class="sxs-lookup"><span data-stu-id="25566-127">These serializers are all coordinated through a common serialization manager.</span></span> <span data-ttu-id="25566-128">Il gestore della serializzazione è responsabile della gestione dello stato tra questi serializzatori diversi.</span><span class="sxs-lookup"><span data-stu-id="25566-128">The serialization manager is responsible for maintaining state between these different serializers.</span></span> <span data-ttu-id="25566-129">Ad esempio, si consideri la classe seguente:</span><span class="sxs-lookup"><span data-stu-id="25566-129">As an example, consider the following class:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)]  
  
 <span data-ttu-id="25566-130">Un'istanza di questa classe sarebbe utilizzare tre diversi serializzatori: uno per `SampleObject`, uno per le stringhe e l'altro per i numeri interi.</span><span class="sxs-lookup"><span data-stu-id="25566-130">An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers.</span></span> <span data-ttu-id="25566-131">Il serializzatore `SampleObject` viene chiamato il serializzatore di primo livello in quanto `SampleObject` è la radice del grafico di serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-131">The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph.</span></span> <span data-ttu-id="25566-132">È possibile creare anche oggetti grafici più complessi.</span><span class="sxs-lookup"><span data-stu-id="25566-132">More complex object graphs can be created as well.</span></span> <span data-ttu-id="25566-133">Ad esempio, si consideri cosa accadrebbe se `SampleObject` sono stati modificati nel modo seguente:</span><span class="sxs-lookup"><span data-stu-id="25566-133">For example, consider what would happen if `SampleObject` were changed as follows:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)]  
  
 <span data-ttu-id="25566-134">In questo modo `SampleObject` per avere un elemento figlio che è un'altra istanza di se stesso.</span><span class="sxs-lookup"><span data-stu-id="25566-134">This allows `SampleObject` to have a child that is another instance of itself.</span></span> <span data-ttu-id="25566-135">Il codice seguente viene compilato nell'oggetto grafico:</span><span class="sxs-lookup"><span data-stu-id="25566-135">The following code fills in the object graph:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)]  
  
 <span data-ttu-id="25566-136">Quando `root` viene serializzato, saranno presenti quattro serializzatori utilizzati: serializzatore di primo uno livello, un serializzatore per l'elemento figlio `SampleObject`, un serializzatore per `int`e un serializzatore per `string`.</span><span class="sxs-lookup"><span data-stu-id="25566-136">When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`.</span></span> <span data-ttu-id="25566-137">I serializzatori vengono memorizzati nella cache basata su tipo, in modo che non è necessario per creare un serializzatore per ogni istanza di `SampleObject`.</span><span class="sxs-lookup"><span data-stu-id="25566-137">Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`.</span></span>  
  
 <span data-ttu-id="25566-138">Il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> classe si basa sul concetto di una sessione di serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-138">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session.</span></span> <span data-ttu-id="25566-139">Una sessione mantiene lo stato accessibile dai serializzatori diversi.</span><span class="sxs-lookup"><span data-stu-id="25566-139">A session maintains state that can be accessed by the various serializers.</span></span> <span data-ttu-id="25566-140">Quando viene eliminata una sessione, questo stato viene eliminato definitivamente.</span><span class="sxs-lookup"><span data-stu-id="25566-140">When a session is disposed, this state is destroyed.</span></span> <span data-ttu-id="25566-141">Questa funzionalità garantisce che i serializzatori rimangono in gran parte senza stati e consente di pulire i serializzatori che sono sono danneggiati.</span><span class="sxs-lookup"><span data-stu-id="25566-141">This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.</span></span> <span data-ttu-id="25566-142">Le tabelle seguenti descrivono come viene gestito lo stato in e tra le sessioni.</span><span class="sxs-lookup"><span data-stu-id="25566-142">The following tables describe how state is managed in and among sessions.</span></span>  
  
## <a name="global-state"></a><span data-ttu-id="25566-143">Stato globale</span><span class="sxs-lookup"><span data-stu-id="25566-143">Global State</span></span>  
 <span data-ttu-id="25566-144">Questo stato è di proprietà dall'oggetto del gestore di serializzazione, ma è indipendente della sessione di serializzazione corrente.</span><span class="sxs-lookup"><span data-stu-id="25566-144">This state is owned by the serialization manager object, but is independent of the current serialization session.</span></span>  
  
|<span data-ttu-id="25566-145">Object</span><span class="sxs-lookup"><span data-stu-id="25566-145">Object</span></span>|<span data-ttu-id="25566-146">Utilizzo</span><span class="sxs-lookup"><span data-stu-id="25566-146">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="25566-147">Provider di serializzazione</span><span class="sxs-lookup"><span data-stu-id="25566-147">Serialization providers</span></span>|<span data-ttu-id="25566-148">Gli oggetti possono aggiungere se stessi come provider di serializzazione personalizzata.</span><span class="sxs-lookup"><span data-stu-id="25566-148">Objects can add themselves as custom serialization providers.</span></span> <span data-ttu-id="25566-149">Poiché questi provider vengono usati per individuare i serializzatori, durano più a una sessione di serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-149">Because these providers are used to locate serializers, they outlive a serialization session.</span></span>|  
  
## <a name="session-owned-state"></a><span data-ttu-id="25566-150">Stato di sessione-proprietà</span><span class="sxs-lookup"><span data-stu-id="25566-150">Session-Owned State</span></span>  
 <span data-ttu-id="25566-151">Questo stato è di proprietà di una sessione e viene eliminato quando si elimina una sessione.</span><span class="sxs-lookup"><span data-stu-id="25566-151">This state is owned by a session and is destroyed when a session is destroyed.</span></span> <span data-ttu-id="25566-152">L'accesso a qualsiasi proprietà o metodi che modificano i questo stato di conseguenza, genererà un'eccezione se il gestore della serializzazione non è presente in una sessione attiva.</span><span class="sxs-lookup"><span data-stu-id="25566-152">Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.</span></span>  
  
|<span data-ttu-id="25566-153">Object</span><span class="sxs-lookup"><span data-stu-id="25566-153">Object</span></span>|<span data-ttu-id="25566-154">Utilizzo</span><span class="sxs-lookup"><span data-stu-id="25566-154">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="25566-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> Evento</span><span class="sxs-lookup"><span data-stu-id="25566-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event</span></span>|<span data-ttu-id="25566-156">Il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> evento è associato da un serializzatore per fornire aggiuntivi per la risoluzione dei nomi.</span><span class="sxs-lookup"><span data-stu-id="25566-156">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names.</span></span> <span data-ttu-id="25566-157">Tutti i gestori vengono scollegati da questo evento quando termina una sessione.</span><span class="sxs-lookup"><span data-stu-id="25566-157">All handlers are detached from this event when a session terminates.</span></span>|  
|<span data-ttu-id="25566-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> Evento</span><span class="sxs-lookup"><span data-stu-id="25566-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event</span></span>|<span data-ttu-id="25566-159">Il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> evento viene generato appena prima dell'eliminazione di una sessione.</span><span class="sxs-lookup"><span data-stu-id="25566-159">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed.</span></span> <span data-ttu-id="25566-160">Quindi, tutti i gestori vengono scollegati da questo evento.</span><span class="sxs-lookup"><span data-stu-id="25566-160">Then, all handlers are detached from this event.</span></span>|  
|<span data-ttu-id="25566-161">Tabella dei nomi</span><span class="sxs-lookup"><span data-stu-id="25566-161">Name table</span></span>|<span data-ttu-id="25566-162">Il gestore della serializzazione mantiene una tabella in cui viene eseguito il mapping tra oggetti e i relativi nomi.</span><span class="sxs-lookup"><span data-stu-id="25566-162">The serialization manager maintains a table that maps between objects and their names.</span></span> <span data-ttu-id="25566-163">I serializzatori possono assegnare i nomi degli oggetti per facilitare l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="25566-163">Serializers may give objects names for easy identification.</span></span> <span data-ttu-id="25566-164">Questa tabella dei nomi viene cancellata al termine della sessione.</span><span class="sxs-lookup"><span data-stu-id="25566-164">This name table is cleared when the session terminates.</span></span>|  
|<span data-ttu-id="25566-165">Cache di serializzatori</span><span class="sxs-lookup"><span data-stu-id="25566-165">Serializer cache</span></span>|<span data-ttu-id="25566-166">Il gestore della serializzazione mantiene una cache di serializzatori che è stato chiesto di fornire.</span><span class="sxs-lookup"><span data-stu-id="25566-166">The serialization manager maintains a cache of serializers it has been asked to supply.</span></span> <span data-ttu-id="25566-167">Questa cache viene cancellata al termine della sessione.</span><span class="sxs-lookup"><span data-stu-id="25566-167">This cache is cleared when the session terminates.</span></span> <span data-ttu-id="25566-168">Pubblico <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> metodo può essere chiamato in modo sicuro in qualsiasi momento, ma il relativo valore viene memorizzato nella cache solo se viene chiamato dall'interno di una sessione.</span><span class="sxs-lookup"><span data-stu-id="25566-168">The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.</span></span>|  
|<span data-ttu-id="25566-169">Stack di contesto</span><span class="sxs-lookup"><span data-stu-id="25566-169">Context stack</span></span>|<span data-ttu-id="25566-170">Il gestore della serializzazione gestisce un oggetto denominato lo stack di contesto, che è possibile accedere con il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="25566-170">The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property.</span></span> <span data-ttu-id="25566-171">I serializzatori possono utilizzare questo stack per memorizzare informazioni aggiuntive che sono disponibile per altri serializzatori.</span><span class="sxs-lookup"><span data-stu-id="25566-171">Serializers can use this stack to store additional information that is available to other serializers.</span></span> <span data-ttu-id="25566-172">Ad esempio, un serializzatore che sta eseguendo la serializzazione di un valore della proprietà può inserire il nome della proprietà nello stack di serializzazione prima di richiedere il valore da serializzare.</span><span class="sxs-lookup"><span data-stu-id="25566-172">For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.</span></span> <span data-ttu-id="25566-173">Questo stack viene cancellato quando la sessione è terminata.</span><span class="sxs-lookup"><span data-stu-id="25566-173">This stack is cleared when the session is terminated.</span></span>|  
|<span data-ttu-id="25566-174">Elenco errori</span><span class="sxs-lookup"><span data-stu-id="25566-174">Error list</span></span>|<span data-ttu-id="25566-175">Il gestore della serializzazione mantiene un elenco di errori verificatisi durante la serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-175">The serialization manager maintains a list of errors that occurred during serialization.</span></span> <span data-ttu-id="25566-176">Questo elenco, accessibile tramite il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> proprietà, viene cancellata al termine della sessione.</span><span class="sxs-lookup"><span data-stu-id="25566-176">This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated.</span></span> <span data-ttu-id="25566-177">L'accesso al <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> proprietà tra le sessioni genererà un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="25566-177">Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="25566-178">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-178">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25566-179">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-179">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-180">Questo costruttore imposta la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> e <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> delle proprietà per `true`.</span><span class="sxs-lookup"><span data-stu-id="25566-180">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.DesignerSerializationManager : IServiceProvider -&gt; System.ComponentModel.Design.Serialization.DesignerSerializationManager" Usage="new System.ComponentModel.Design.Serialization.DesignerSerializationManager provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="25566-181">Oggetto <see cref="T:System.IServiceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-181">An <see cref="T:System.IServiceProvider" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-182">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> con il provider di servizi dato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-182">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-183">Se un serializzatore richiede i servizi che non possono essere soddisfatte dal gestore della serializzazione, l'implementazione predefinita inoltrerà le richieste al `provider` parametro.</span><span class="sxs-lookup"><span data-stu-id="25566-183">If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the `provider` parameter.</span></span>  
  
 <span data-ttu-id="25566-184">Questo costruttore imposta la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> e <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> delle proprietà per `true`.</span><span class="sxs-lookup"><span data-stu-id="25566-184">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25566-185">
            <paramref name="provider" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-185">
              <paramref name="provider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberSignature Language="VB.NET" Value="Public Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); void set(System::ComponentModel::IContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25566-186">Ottiene o imposta il contenitore per questo gestore della serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-186">Gets or sets to the container for this serialization manager.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25566-187">Interfaccia <see cref="T:System.ComponentModel.IContainer" /> a cui verranno aggiunti componenti dal gestore della serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-187">The <see cref="T:System.ComponentModel.IContainer" /> to which the serialization manager will add components.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-188">Se esiste un contenitore, tutti i componenti che vengono creati dal gestore della serializzazione verranno aggiunto al contenitore.</span><span class="sxs-lookup"><span data-stu-id="25566-188">If a container exists, all components that are created by the serialization manager will be added to the container.</span></span> <span data-ttu-id="25566-189">L'implementazione predefinita di questa proprietà cercherà il provider del servizio per un <xref:System.ComponentModel.Design.IDesignerHost> e usare il contenitore fornito dall'host di progettazione, se ne esiste uno.</span><span class="sxs-lookup"><span data-stu-id="25566-189">The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist.</span></span> <span data-ttu-id="25566-190">In caso contrario, questa proprietà restituirà `null` e nessun componente verranno aggiunto a un contenitore.</span><span class="sxs-lookup"><span data-stu-id="25566-190">Otherwise, this property will return `null` and no components will be added to a container.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25566-191">Il gestore della serializzazione presenta una sessione di serializzazione attiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-191">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj&#xA;override this.CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj" Usage="designerSerializationManager.CreateInstance (type, arguments, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="25566-192">Tipo di cui creare un'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-192">The type to create an instance of.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="25566-193">Parametri del costruttore del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-193">The parameters of the type’s constructor.</span>
          </span>
          <span data-ttu-id="25566-194">Può essere <see langword="null" /> o un insieme vuoto per richiamare il costruttore predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-194">This can be <see langword="null" /> or an empty collection to invoke the default constructor.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="25566-195">Nome da assegnare all'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-195">A name to give the object.</span>
          </span>
          <span data-ttu-id="25566-196">Se <see langword="null" />, non verrà assegnato un nome all'oggetto a meno che l'oggetto non venga aggiunto a un contenitore e sia quest'ultimo ad assegnargli un nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-196">If <see langword="null" />, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="25566-197">
            <see langword="true" /> per aggiungere l'oggetto al contenitore se implementa <see cref="T:System.ComponentModel.IComponent" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-197">
              <see langword="true" /> to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-198">Crea un'istanza di un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-198">Creates an instance of a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25566-199">Nuova istanza del tipo specificato da <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-199">A new instance of the type specified by <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-200">Questo metodo viene chiamato dai serializzatori quando tentano di creare un'istanza di un tipo.</span><span class="sxs-lookup"><span data-stu-id="25566-200">This method is called by serializers when they attempt to create an instance of a type.</span></span> <span data-ttu-id="25566-201">L'implementazione predefinita crea una nuova istanza del tipo, o può restituire un'istanza esistente a seconda dei valori del <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> e <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="25566-201">The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties.</span></span> <span data-ttu-id="25566-202">Il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> metodo Usa la reflection per creare istanze e verranno eseguite alcune generico <xref:System.IConvertible> trasformazioni sui parametri per trovare un costruttore corrispondente.</span><span class="sxs-lookup"><span data-stu-id="25566-202">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="25566-203">
            <paramref name="type" /> non dispone di un costruttore che accetta i parametri contenuti in <paramref name="arguments" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-203">
              <paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public IDisposable CreateSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable CreateSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSession () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ CreateSession();" />
      <MemberSignature Language="F#" Value="member this.CreateSession : unit -&gt; IDisposable" Usage="designerSerializationManager.CreateSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25566-204">Crea una nuova sessione di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-204">Creates a new serialization session.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25566-205">Interfaccia <see cref="T:System.IDisposable" /> che rappresenta una nuova sessione di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-205">An <see cref="T:System.IDisposable" /> that represents a new serialization session.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-206">La maggior parte dei dati all'interno del gestore della serializzazione è temporaneo e soltanto per il ciclo di vita di una sessione di serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-206">Most data within the serialization manager is transient and only lives for the life of a serialization session.</span></span> <span data-ttu-id="25566-207">Quando viene eliminata una sessione, la serializzazione è considerata completo e lo stato temporaneo viene cancellato.</span><span class="sxs-lookup"><span data-stu-id="25566-207">When a session is disposed, serialization is considered to be complete and this transient state is cleared.</span></span> <span data-ttu-id="25566-208">In questo modo una singola istanza di un gestore della serializzazione da utilizzare per serializzare più alberi degli oggetti.</span><span class="sxs-lookup"><span data-stu-id="25566-208">This allows a single instance of a serialization manager to be used to serialize multiple object trees.</span></span> <span data-ttu-id="25566-209">Alcuni stati, tra cui il provider di servizi e i provider di serializzazione personalizzata che sono stati aggiunti al gestore della serializzazione, estendono le sessioni.</span><span class="sxs-lookup"><span data-stu-id="25566-209">Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25566-210">Il gestore della serializzazione si trova già all'interno di una sessione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-210">The serialization manager is already within a session.</span>
          </span>
          <span data-ttu-id="25566-211">Questa versione di <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> non supporta sessioni simultanee.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-211">This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.IList Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Errors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Errors { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.IList" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25566-212">Ottiene l'elenco di errori verificatisi durante la serializzazione o deserializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-212">Gets the list of errors that occurred during serialization or deserialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25566-213">Elenco di errori verificatisi durante la serializzazione o deserializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-213">The list of errors that occurred during serialization or deserialization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-214">Elenco errori sono disponibili solo mentre è attiva una sessione di serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-214">You can only read the error list while a serialization session is active.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25566-215">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-215">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetRuntimeType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeType : string -&gt; Type" Usage="designerSerializationManager.GetRuntimeType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="25566-216">Nome del tipo da ottenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-216">The name of the type to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-217">Ottiene il tipo corrispondente al nome del tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-217">Gets the type corresponding to the specified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25566-218">Tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-218">The specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : Type * Type -&gt; obj" Usage="designerSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="25566-219">Tipo di oggetto per cui recuperare il serializzatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-219">The type of object for which to retrieve the serializer.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="25566-220">Tipo di serializzatore da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-220">The type of serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-221">Ottiene il serializzatore per il tipo di oggetto dato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-221">Gets the serializer for the given object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25566-222">Serializzatore per <paramref name="objectType" /> o <see langword="null" /> se non trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-222">The serializer for <paramref name="objectType" />, or <see langword="null" />, if not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-223">È possibile richiedere il tipo di serializzatore desiderato.</span><span class="sxs-lookup"><span data-stu-id="25566-223">You can request the type of serializer you would like.</span></span> <span data-ttu-id="25566-224">Questo metodo restituisce `null` se non esiste alcun serializzatore del tipo richiesto per il tipo di oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="25566-224">This method returns `null` if there is no serializer of the requested type for the specified object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25566-225">
            <paramref name="objectType" /> o <paramref name="serializerType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-225">
              <paramref name="objectType" /> or <paramref name="serializerType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designerSerializationManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="25566-226">Tipo di servizio da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-226">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-227">Ottiene il servizio richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-227">Gets the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25566-228">Servizio richiesto o <see langword="null" /> se il servizio non può essere risolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-228">The requested service, or <see langword="null" /> if the service cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-229">Il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> metodo offre l'accesso al contenitore sottostante o provider di servizi che è stato impostato nel costruttore.</span><span class="sxs-lookup"><span data-stu-id="25566-229">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="protected virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="designerSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="25566-230">Nome del tipo da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-230">The name of the type to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-231">Ottiene il tipo richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-231">Gets the requested type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25566-232">Tipo richiesto o <see langword="null" /> se il tipo non può essere risolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-232">The requested type, or <see langword="null" /> if the type cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-233">Il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> metodo eseguirà la ricerca a provider di servizi per un <xref:System.ComponentModel.Design.ITypeResolutionService> e, se disponibile, delegherà per tale servizio per risolvere il tipo.</span><span class="sxs-lookup"><span data-stu-id="25566-233">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type.</span></span> <span data-ttu-id="25566-234">Se un' <xref:System.ComponentModel.Design.ITypeResolutionService> non è disponibile, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> chiamerà il <xref:System.Object.GetType%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="25566-234">If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveName">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveName (e As ResolveNameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveName(System::ComponentModel::Design::Serialization::ResolveNameEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit&#xA;override this.OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit" Usage="designerSerializationManager.OnResolveName e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="25566-235">Oggetto <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-235">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-236">Genera l'evento <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-236">Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-237">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="25566-237">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="25566-238">Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="25566-238">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="25566-239">Il metodo <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="25566-239">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="25566-240">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="25566-240">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="25566-241">
            <para>Quando si esegue l'override <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-241">
              <para>When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionCreated : EventArgs -&gt; unit&#xA;override this.OnSessionCreated : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="25566-242">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-242">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-243">Genera l'evento <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-243">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-244">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="25566-244">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="25566-245">Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="25566-245">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="25566-246">Il metodo <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="25566-246">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="25566-247">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="25566-247">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="25566-248">
            <para>Quando si esegue l'override <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-248">
              <para>When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionDisposed">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionDisposed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionDisposed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionDisposed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionDisposed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionDisposed : EventArgs -&gt; unit&#xA;override this.OnSessionDisposed : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionDisposed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="25566-249">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-249">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-250">Genera l'evento <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-250">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-251">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="25566-251">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="25566-252">Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="25566-252">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="25566-253">Il metodo <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="25566-253">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="25566-254">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="25566-254">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="25566-255">
            <para>Quando si esegue l'override <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-255">
              <para>When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PreserveNames">
      <MemberSignature Language="C#" Value="public bool PreserveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNames" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNames { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveNames : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25566-256">Ottiene o imposta un valore che indica se il metodo <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> deve verificare la presenza del nome dato nel contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-256">Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25566-257">
            <see langword="true" /> se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> passerà il nome del componente dato; <see langword="false" /> se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verificherà la presenza del nome dato nel contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-257">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will pass the given component name; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will check for the presence of the given name in the container.</span>
          </span>
          <span data-ttu-id="25566-258">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-258">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-259">Il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> proprietà determina il comportamento del <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="25566-259">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span> <span data-ttu-id="25566-260">Se `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> passerà il nome del componente specificato.</span><span class="sxs-lookup"><span data-stu-id="25566-260">If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name.</span></span> <span data-ttu-id="25566-261">Se `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> controllerà la presenza del nome dato nel contenitore.</span><span class="sxs-lookup"><span data-stu-id="25566-261">If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="25566-262">Se il nome non esiste nel contenitore, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> utilizzerà il nome specificato.</span><span class="sxs-lookup"><span data-stu-id="25566-262">If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name.</span></span> <span data-ttu-id="25566-263">Se il nome esiste nel contenitore, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> passare un valore null come nome di un componente quando viene aggiunta al contenitore, assegnandogli un nuovo nome.</span><span class="sxs-lookup"><span data-stu-id="25566-263">If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.</span></span> <span data-ttu-id="25566-264">Questa seconda variante è utile per implementare un serializzatore che consente di duplicare sempre oggetti anziché supporre che tali oggetti non esistono.</span><span class="sxs-lookup"><span data-stu-id="25566-264">This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.</span></span> <span data-ttu-id="25566-265">Incollare i comandi usano spesso questo tipo di serializzatore.</span><span class="sxs-lookup"><span data-stu-id="25566-265">Paste commands often use this type of serializer.</span></span>  
  
 <span data-ttu-id="25566-266">È possibile modificare questa proprietà solo quando non si ha una sessione di serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-266">You can only change this property when you are not in a serialization session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25566-267">Questa proprietà è stata modificata dall'interno di una sessione di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-267">This property was changed from within a serialization session.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="public object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyProvider : obj with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25566-268">Ottiene l'oggetto che deve essere utilizzato per fornire proprietà alla proprietà <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> del gestore della serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-268">Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25566-269">Oggetto che deve essere utilizzato per fornire proprietà alla proprietà <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> del gestore della serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-269">The object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-270">Il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> proprietà fornisce un modo per fornire un set di proprietà di serializzazione che i serializzatori possono utilizzare il comportamento di Guida per il gestore della serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-270">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.</span></span>  
  
 <span data-ttu-id="25566-271">Proprietà pubbliche dell'oggetto verrà esaminata e sottoposta a wrapping in nuovi descrittori di proprietà che dispongono di un oggetto di destinazione del gestore della serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-271">This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecycleInstances">
      <MemberSignature Language="C#" Value="public bool RecycleInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecycleInstances" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property RecycleInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecycleInstances { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecycleInstances : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25566-272">Ottiene o imposta un flag che indica se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> creerà sempre una nuova istanza di un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-272">Gets or sets a flag indicating whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25566-273">
            <see langword="true" /> se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> restituirà l'istanza esistente; <see langword="false" /> se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> creerà una nuova istanza di un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-273">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will return the existing instance; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will create a new instance of a type.</span>
          </span>
          <span data-ttu-id="25566-274">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-274">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-275">Se il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> proprietà viene `false`, il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> metodo creerà sempre una nuova istanza di un tipo.</span><span class="sxs-lookup"><span data-stu-id="25566-275">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type.</span></span> <span data-ttu-id="25566-276">Se <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> viene `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> eseguirà la ricerca prima di tutto la tabella dei nomi e un contenitore per un oggetto con lo stesso nome.</span><span class="sxs-lookup"><span data-stu-id="25566-276">If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name.</span></span> <span data-ttu-id="25566-277">Se tale tipo di oggetto esiste ed è dello stesso tipo, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> restituirà l'istanza esistente.</span><span class="sxs-lookup"><span data-stu-id="25566-277">If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance.</span></span> <span data-ttu-id="25566-278">Questa seconda variante è utile per implementare un serializzatore che lo stato di serializzazione viene applicata a un set di oggetti esistente, anziché creare sempre un nuovo albero.</span><span class="sxs-lookup"><span data-stu-id="25566-278">This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.</span></span> <span data-ttu-id="25566-279">Il **annullare** comando spesso Usa questo tipo di serializzatore.</span><span class="sxs-lookup"><span data-stu-id="25566-279">The **Undo** command often uses this type of serializer.</span></span>  
  
 <span data-ttu-id="25566-280">Nel caso in cui il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> proprietà viene `true`, il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> proprietà ulteriormente modificherà il comportamento di <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> a seconda dei tipi dei due oggetti.</span><span class="sxs-lookup"><span data-stu-id="25566-280">In the case where the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property will further modify the behavior of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> depending on the types of the two objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25566-281">Il gestore della serializzazione presenta una sessione di serializzazione attiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-281">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="SessionCreated">
      <MemberSignature Language="C#" Value="public event EventHandler SessionCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionCreated : EventHandler " Usage="member this.SessionCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25566-282">Viene generato quando viene creata una sessione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-282">Occurs when a session is created.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionDisposed">
      <MemberSignature Language="C#" Value="public event EventHandler SessionDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionDisposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionDisposed;" />
      <MemberSignature Language="F#" Value="member this.SessionDisposed : EventHandler " Usage="member this.SessionDisposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25566-283">Viene generato quando viene eliminata una sessione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-283">Occurs when a session is disposed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub AddSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.AddSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::AddSerializationProvider;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="25566-284">Provider di serializzazione da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-284">The serialization provider to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-285">Aggiunge un provider di serializzazione personalizzato al gestore della serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-285">Adds a custom serialization provider to the serialization manager.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-286">Quando il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> metodo viene usato per richiedere un provider di serializzazione, il gestore della serializzazione dalle query al provider di serializzazione personalizzata prima di tutto in precedenza alla ricerca nei metadati del tipo per il serializzatore appropriato.</span><span class="sxs-lookup"><span data-stu-id="25566-286">When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Context As ContextStack Implements IDesignerSerializationManager.Context" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::Serialization::ContextStack ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25566-287">Ottiene lo stack di contesto per questa sessione di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-287">Gets the context stack for this serialization session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25566-288">Oggetto <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> che memorizza dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-288">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-289">Uno stack di contesti fornisce un'area di archiviazione definito dall'utente, implementata come uno stack.</span><span class="sxs-lookup"><span data-stu-id="25566-289">A context stack provides a user-defined storage area, implemented as a stack.</span></span> <span data-ttu-id="25566-290">Questa area di archiviazione è un modo utile per fornire la comunicazione tra i serializzatori, come la serializzazione è un processo in genere gerarchico.</span><span class="sxs-lookup"><span data-stu-id="25566-290">This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25566-291">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-291">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="25566-292">Tipo di dati da creare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-292">The data type to create.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="25566-293">Argomento da passare al costruttore per questo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-293">The arguments to pass to the constructor for this type.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="25566-294">Nome dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-294">The name of the object.</span>
          </span>
          <span data-ttu-id="25566-295">Questo nome può essere utilizzato per accedere all'oggetto in un momento successivo tramite il metodo <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-295">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span>
          </span>
          <span data-ttu-id="25566-296">Se viene passato <see langword="null" />, l'oggetto verrà comunque creato ma non sarà possibile accedervi in base al nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-296">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="25566-297">
            <see langword="true" /> per aggiungere questo oggetto al contenitore di progettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-297">
              <see langword="true" /> to add this object to the design container.</span>
          </span>
          <span data-ttu-id="25566-298">È necessario che l'oggetto implementi <see cref="T:System.ComponentModel.IComponent" /> perché abbia effetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-298">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-299">Implementa il metodo <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-299">Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25566-300">Istanza dell'oggetto appena creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-300">The newly created object instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="25566-301">Nome dell'oggetto da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-301">The name of the object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-302">Recupera un'istanza di un oggetto creato con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-302">Retrieves an instance of a created object of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25566-303">Istanza dell'oggetto con il nome specificato oppure <see langword="null" /> se non viene trovato alcun oggetto con tale nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-303">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25566-304">
            <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-304">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25566-305">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-305">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="25566-306">Oggetto per cui recuperare il nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-306">The object for which to retrieve the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-307">Recupera un nome per l'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-307">Retrieves a name for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25566-308">Nome dell'oggetto oppure <see langword="null" /> se l'oggetto non ha alcun nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-308">The name of the object, or <see langword="null" /> if the object is unnamed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-309">Se il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> metodo non viene trovato un nome corrispondente per il `value` parametro, genera le <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> evento prima che venga restituito `null`.</span><span class="sxs-lookup"><span data-stu-id="25566-309">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method cannot find a corresponding name for the `value` parameter, it raises the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event before it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25566-310">
            <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-310">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25566-311">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-311">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetSerializer (objectType As Type, serializerType As Type) As Object Implements IDesignerSerializationManager.GetSerializer" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type ^ objectType, Type ^ serializerType) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetSerializer;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="25566-312">Tipo dell'oggetto per il quale ottenere il serializzatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-312">The type of the object to get the serializer for.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="25566-313">Tipo del serializzatore da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-313">The type of the serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-314">Ottiene un serializzatore del tipo richiesto per il tipo di oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-314">Gets a serializer of the requested type for the specified object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25566-315">Istanza del serializzatore richiesto oppure <see langword="null" /> se non viene trovato un serializzatore appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-315">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType">
      <MemberSignature Language="C#" Value="Type IDesignerSerializationManager.GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetType (typeName As String) As Type Implements IDesignerSerializationManager.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System::String ^ typeName) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetType;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="25566-316">Nome completo del tipo da caricare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-316">The fully qualified name of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-317">Ottiene un tipo del nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-317">Gets a type of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25566-318">Istanza del tipo oppure <see langword="null" /> se non è possibile caricare il tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-318">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25566-319">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-319">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25566-320">Implementa la proprietà <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-320">Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25566-321">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> contenente le proprietà da serializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-321">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.RemoveSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::RemoveSerializationProvider;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="25566-322">Oggetto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-322">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-323">Rimuove un provider di serializzazione aggiunto in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-323">Removes a previously added serialization provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-324">Il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> metodo rimuove un provider di serializzazione personalizzato che è stata aggiunta in precedenza da una chiamata al <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="25566-324">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub ReportError (errorInformation As Object) Implements IDesignerSerializationManager.ReportError" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System::Object ^ errorInformation) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::ReportError;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation">
          <span data-ttu-id="25566-325">Oggetto contenente le informazioni sull'errore, in genere di tipo <see cref="T:System.String" /> o <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-325">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-326">Utilizzato per segnalare un errore risolvibile nella serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-326">Used to report a recoverable error in serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-327">I serializzatori possono essere scritti per gestire gli errori reversibili normalmente chiamando il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> metodo con le informazioni sull'errore.</span><span class="sxs-lookup"><span data-stu-id="25566-327">Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information.</span></span> <span data-ttu-id="25566-328">Il gestore della serializzazione può supportare la segnalazione di un elenco di errori dopo che viene completato oppure può generare un'eccezione da questo metodo e interrompere il processo di serializzazione.</span><span class="sxs-lookup"><span data-stu-id="25566-328">The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.</span></span> <span data-ttu-id="25566-329">Il serializzatore deve continuare dopo la chiamata a questa funzione.</span><span class="sxs-lookup"><span data-stu-id="25566-329">The serializer should continue after calling this function.</span></span>  
  
 <span data-ttu-id="25566-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> Aggiunge il `errorInformation` parametro per il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> raccolta.</span><span class="sxs-lookup"><span data-stu-id="25566-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection.</span></span> <span data-ttu-id="25566-331">Se `errorInformation` è `null`, viene eseguita alcuna azione.</span><span class="sxs-lookup"><span data-stu-id="25566-331">If `errorInformation` is `null`, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25566-332">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-332">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName" />
      <MemberSignature Language="VB.NET" Value="Custom Event ResolveName As ResolveNameEventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Custom Event SerializationComplete As EventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="25566-333">Oggetto per cui impostare il nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-333">The object to set the name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="25566-334">Classe <see cref="T:System.String" /> utilizzata come nome dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-334">A <see cref="T:System.String" /> used as the name of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-335">Imposta il nome per l'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-335">Sets the name for the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-336">Il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> metodo fornisce un modo per impostare il nome di un oggetto esistente.</span><span class="sxs-lookup"><span data-stu-id="25566-336">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object.</span></span> <span data-ttu-id="25566-337">In questo modo la creazione di un'istanza dell'oggetto tramite una chiamata ai <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> metodo, evitando il sovraccarico dovuto il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="25566-337">This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25566-338">Uno o entrambi i parametri sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-338">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="25566-339">L'oggetto specificato dall'istanza dispone già di un nome o <paramref name="name" /> è già utilizzato da un altro oggetto denominato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-339">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25566-340">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-340">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="25566-341">Oggetto che specifica il tipo di oggetto servizio da ottenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-341">An object that specifies the type of service object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25566-342">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-342">For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25566-343">Oggetto Service di tipo <paramref name="serviceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-343">A service object of type <paramref name="serviceType" />.</span>
          </span>
          <span data-ttu-id="25566-344">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-344">-or-</span>
          </span>
          <span data-ttu-id="25566-345">
            <see langword="null" />, se non è disponibile un oggetto Service di tipo <paramref name="serviceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-345">
              <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-346">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="25566-346">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="25566-347">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> a un'interfaccia <xref:System.IServiceProvider>.</span><span class="sxs-lookup"><span data-stu-id="25566-347">It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRecycledTypes">
      <MemberSignature Language="C#" Value="public bool ValidateRecycledTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateRecycledTypes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRecycledTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateRecycledTypes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRecycledTypes : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25566-348">Ottiene o imposta un flag che indica se il metodo <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verificherà che i nomi corrispondenti facciano riferimento allo stesso tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-348">Gets or sets a flag indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25566-349">
            <see langword="true" /> se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifica i tipi; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-349">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifies types; otherwise, <see langword="false" /> if it does not.</span>
          </span>
          <span data-ttu-id="25566-350">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-350">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25566-351">Il <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> proprietà modifica il comportamento del <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> metodo quando la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> proprietà è `true`, come descritto nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="25566-351">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property modifies the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, as detailed in the following table.</span></span>  
  
|`RecycleInstances`|`ValidateRecycledTypes`|<span data-ttu-id="25566-352">Comportamento di `CreateInstance`</span><span class="sxs-lookup"><span data-stu-id="25566-352">Behavior of `CreateInstance`</span></span>|  
|------------------------|-----------------------------|----------------------------------|  
|`false`|<span data-ttu-id="25566-353">`true` o `false`</span><span class="sxs-lookup"><span data-stu-id="25566-353">`true` or `false`</span></span>|<span data-ttu-id="25566-354">Creare sempre una nuova istanza del tipo specificato</span><span class="sxs-lookup"><span data-stu-id="25566-354">Always create a new instance of the specified type</span></span>|  
|`true`|`false`|<span data-ttu-id="25566-355">Se viene trovata un'istanza corrispondente, che viene restituito, indipendentemente dal tipo.</span><span class="sxs-lookup"><span data-stu-id="25566-355">If a matching instance is found it is returned, regardless of its type.</span></span>|  
|`true`|`true`|<span data-ttu-id="25566-356">Se viene trovata un'istanza corrispondente, viene restituito solo se il tipo è identico a quello specificato nella chiamata al metodo.</span><span class="sxs-lookup"><span data-stu-id="25566-356">If a matching instance is found, it is returned only if its type is the same as specified in the method call.</span></span>|  
  
 <span data-ttu-id="25566-357"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> è utile per modificare un tipo di oggetto a un altro se con proprietà simili ma non condividono alcun elemento padre comune o interfaccia.</span><span class="sxs-lookup"><span data-stu-id="25566-357"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25566-358">Il gestore della serializzazione presenta una sessione di serializzazione attiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25566-358">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      </Docs>
    </Member>
  </Members>
</Type>