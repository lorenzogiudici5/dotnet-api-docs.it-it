<Type Name="CodeDomSerializerBase" FullName="System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77ede0473e7505964c6af287c6d89583a5bfb9b7" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="it-IT" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53227660" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomSerializerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomSerializerBase abstract" />
  <TypeSignature Language="F#" Value="type CodeDomSerializerBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce una classe base per le classi <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> classe viene utilizzata come base condivisa tra il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> e <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> classi. Pubblica <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> classi derivano dal <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> classe. Ogni classe pubblica definisce la propria API pubblica. Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> classe non definisce alcuna API pubblica, ma offrono una vasta gamma di metodi di utilità che possono essere utilizzati per supportare il processo di serializzazione.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  </Docs>
  <Members>
    <Member MemberName="DeserializeExpression">
      <MemberSignature Language="C#" Value="protected object DeserializeExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object DeserializeExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Function DeserializeExpression (manager As IDesignerSerializationManager, name As String, expression As CodeExpression) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ DeserializeExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ name, System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.DeserializeExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * System.CodeDom.CodeExpression -&gt; obj" Usage="codeDomSerializerBase.DeserializeExpression (manager, name, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="name">Nome dell'oggetto risultante dall'espressione. Può essere <see langword="null" /> se non è necessario specificare il nome dell'oggetto.</param>
        <param name="expression">Classe <see cref="T:System.CodeDom.CodeExpression" /> da interpretare.</param>
        <summary>Deserializza l'espressione data in un oggetto in memoria.</summary>
        <returns>Oggetto risultante dall'interpretazione di <paramref name="expression" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta di un helper di metodo che le classi derivate può chiamare per deserializzare un'espressione. Deserializza l'istruzione interpretando ed eseguendo l'espressione CodeDOM specificato da di `expression` parametro e quindi restituisce i risultati. Se un oggetto deve essere creato come risultato di questa espressione, verrà assegnato il nome specificato da di `name` parametro. Il nome può contenere `null` se non è necessario specificare il nome dell'oggetto. Nella tabella seguente descrive le espressioni specifiche come vengono gestiti.  
  
|Espressione|Comportamento|  
|----------------|--------------|  
|<xref:System.CodeDom.CodeThisReferenceExpression>|Questa espressione rappresenta `this` o `Me`. Per individuare l'oggetto associato a questa espressione, il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> metodo avrà un aspetto nello stack di contesto per un <xref:System.ComponentModel.Design.Serialization.RootContext>. Questo oggetto contiene l'oggetto radice del grafico e l'espressione che lo rappresenta. Se l'oggetto è presente e l'espressione corrisponde, verrà restituito l'oggetto radice. Se un'istanza non viene trova, viene restituito un errore.|  
|<xref:System.CodeDom.CodeFieldReferenceExpression>|Se la destinazione del riferimento di campo restituisce l'oggetto radice, il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> metodo del parametro di gestione da utilizzare per recuperare l'istanza dell'oggetto in base al nome. In caso contrario, la reflection standard serve rispetto all'oggetto di destinazione per individuare il campo richiesto. Se il campo non viene trovato, viene restituito un errore.|  
|<xref:System.CodeDom.CodeVariableReferenceExpression>|Il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> metodo di `manager` parametro viene usato per individuare l'istanza che rappresenta il nome della variabile specificato. Se un'istanza non viene trova, viene restituito un errore.|  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> continua a interpretare le espressioni fino a quando vengono completamente risolte da un oggetto o fino a quando non è più semplifica l'espressione. In questo caso <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> restituirà un <xref:System.CodeDom.CodeExpression> che contiene l'espressione più semplice. Non sono supportate le espressioni seguenti:  
  
-   <xref:System.CodeDom.CodeEventReferenceExpression>  
  
-   <xref:System.CodeDom.CodeMethodReferenceExpression>  
  
-   <xref:System.CodeDom.CodeDelegateCreateExpression>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="DeserializeInstance">
      <MemberSignature Language="C#" Value="protected virtual object DeserializeInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type, object[] parameters, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object DeserializeInstance(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type, object[] parameters, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ DeserializeInstance(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type, cli::array &lt;System::Object ^&gt; ^ parameters, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeInstance : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type * obj[] * string * bool -&gt; obj&#xA;override this.DeserializeInstance : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type * obj[] * string * bool -&gt; obj" Usage="codeDomSerializerBase.DeserializeInstance (manager, type, parameters, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="type">Classe <see cref="T:System.Type" /> dell'istanza da restituire.</param>
        <param name="parameters">Parametri da passare al costruttore per <paramref name="type" />.</param>
        <param name="name">Nome dell'oggetto deserializzato.</param>
        <param name="addToContainer"><see langword="true" /> per aggiungere questo oggetto al contenitore di progettazione; in caso contrario, <see langword="false" />. È necessario che l'oggetto implementi <see cref="T:System.ComponentModel.IComponent" /> perché abbia effetto.</param>
        <summary>Restituisce un'istanza del tipo dato.</summary>
        <returns>Istanza di <paramref name="type" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A> metodo viene richiamato durante la deserializzazione per ottenere un'istanza di un oggetto. Quando questo viene chiamato, un'istanza del tipo richiesto deve essere restituita. L'implementazione predefinita richiama il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> metodo di `manager` parametro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> o <paramref name="type" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="DeserializePropertiesFromResources">
      <MemberSignature Language="C#" Value="protected void DeserializePropertiesFromResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializePropertiesFromResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeserializePropertiesFromResources (manager As IDesignerSerializationManager, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeserializePropertiesFromResources(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.DeserializePropertiesFromResources : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.DeserializePropertiesFromResources (manager, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="value">Oggetto da cui deserializzare le proprietà.</param>
        <param name="filter">Matrice <see cref="T:System.Attribute" /> che filtra le proprietà che verranno deserializzate.</param>
        <summary>Deserializza le proprietà dell'oggetto dato dal raggruppamento di risorse delle impostazioni cultura inglese non dipendenti da paese/area geografica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> metodo è possibile chiamare un metodo helper che le classi derivate. Cerca le proprietà dell'oggetto specificato e si tenta di caricare i valori dal bundle di risorse della lingua inglese. Ciò in genere viene utilizzato per gestire le proprietà in fase di progettazione che non vengono riportate nel codice sorgente. Consigliabile non usarla per le proprietà localizzate in quanto funziona solo per le impostazioni cultura invarianti.  
  
 Questo metodo controlla se tutte le proprietà del `value` parametro che corrispondono agli attributi specificati dal `filter` parametro e quindi cerca le proprietà in un oggetto binario di risorsa. Ciò è utile per deserializzare le proprietà che possono essere rappresentate nel codice, ad esempio le proprietà design-time.  
  
 Questo metodo richiede che un caricatore della finestra di progettazione offre un <xref:System.ComponentModel.Design.IResourceService> per leggere le risorse. Se il <xref:System.ComponentModel.Design.IResourceService> fornisce una <xref:System.Resources.ResXResourceReader> per le impostazioni cultura invariabili, quindi <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> leggerà le risorse dalla sezione di metadati del file XML (resx), che non è incluso nel codice compilato finale. Se questo servizio non è disponibile, non verrà letta alcuna risorsa.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="DeserializeStatement">
      <MemberSignature Language="C#" Value="protected void DeserializeStatement (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializeStatement(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeserializeStatement (manager As IDesignerSerializationManager, statement As CodeStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeserializeStatement(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatement ^ statement);" />
      <MemberSignature Language="F#" Value="member this.DeserializeStatement : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatement -&gt; unit" Usage="codeDomSerializerBase.DeserializeStatement (manager, statement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="statement"><see cref="T:System.CodeDom.CodeStatement" /> da deserializzare.</param>
        <summary>Deserializza un'istruzione interpretando ed eseguendo un'istruzione CodeDOM.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A> metodo è possibile chiamare un metodo helper che le classi derivate. Interpreta il `statement` parametro.  
  
 Il <xref:System.CodeDom.CodeStatement> deserializzato verrà inserito nello stack di contesto.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="GetAttributesFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributesFromTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetAttributesFromTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper (manager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager">Manager di serializzazione.</param>
        <param name="type">Tipo di destinazione.</param>
        <summary>Ottiene un insieme di attributi come definito nella versione di destinazione del progetto di .NET Framework.</summary>
        <returns>Insieme di attributi come definito nella versione di destinazione del progetto di .NET Framework.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetAttributesHelper (manager As IDesignerSerializationManager, instance As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributesHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetAttributesHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper (manager, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Manager di serializzazione.</param>
        <param name="instance">Oggetto del tipo di destinazione.</param>
        <summary>Ottiene un insieme di attributi come definito nella versione di destinazione del progetto di .NET Framework.</summary>
        <returns>Insieme di attributi come definito nella versione di destinazione del progetto di .NET Framework.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventsHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.EventDescriptorCollection GetEventsHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.EventDescriptorCollection GetEventsHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetEventsHelper (manager As IDesignerSerializationManager, instance As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEventsHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEventsHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper (manager, instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">Manager di serializzazione.</param>
        <param name="instance">Oggetto del tipo di destinazione.</param>
        <param name="attributes">Matrice di attributi da passare alla versione di destinazione di .NET Framework.</param>
        <summary>Ottiene un insieme di eventi come definito nella versione di destinazione del progetto di .NET Framework.</summary>
        <returns>Insieme di eventi come definito nella versione di destinazione del progetto di .NET Framework.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression GetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression GetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ GetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.GetExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="value">Oggetto per cui ottenere un'espressione.</param>
        <summary>Restituisce un'espressione per l'oggetto dato.</summary>
        <returns>Elemento <see cref="T:System.CodeDom.CodeExpression" /> che rappresenta <paramref name="value" /> o <see langword="null" /> se non è presente alcuna espressione per <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> metodo restituisce un'espressione che rappresenta l'oggetto specificato. Può restituire `null`, a indicare che non è stata impostata alcuna espressione che descrive l'oggetto. Le espressioni vengono acquisite in uno dei tre modi:  
  
-   L'espressione potrebbe non essere il risultato di una chiamata precedente al <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> (metodo).  
  
-   L'espressione potrebbe essere stata trovata nel <xref:System.ComponentModel.Design.Serialization.RootContext>.  
  
-   L'espressione può essere derivato tramite <xref:System.ComponentModel.Design.IReferenceService>.  
  
 Per derivare le espressioni attraverso <xref:System.ComponentModel.Design.IReferenceService>, il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> metodo esegue query sul servizio di riferimento per un nome per l'oggetto specificato. Se il servizio di espressioni restituisce un nome valido <xref:System.ComponentModel.Design.IReferenceService>, il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> metodo controlla per verificare se è presente un "." nel nome. Ciò indica che il servizio di espressione trova questo oggetto come valore restituito di una proprietà di sola lettura su un altro oggetto. Se è presente un ".", <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> verrà suddiviso il riferimento in parti. La parte più a sinistra è un nome che verrà valutato con le <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> (metodo). Per ogni parte successiva, verrà compilata come un'espressione di riferimento di proprietà. Verrà quindi restituito espressione finale.  
  
 Se non è stata impostata un'espressione o se l'oggetto non è stato trovato nel servizio di riferimento, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> restituirà `null`, che indica non è presente alcuna espressione per l'oggetto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetPropertiesHelper (manager As IDesignerSerializationManager, instance As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetPropertiesHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetPropertiesHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper (manager, instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">Manager di serializzazione.</param>
        <param name="instance">Oggetto del tipo di destinazione.</param>
        <param name="attributes">Matrice di attributi da passare alla versione di destinazione di .NET Framework.</param>
        <summary>Ottiene un insieme di proprietà come definito nella versione di destinazione del progetto di .NET Framework.</summary>
        <returns>Insieme di proprietà come definito nella versione di destinazione del progetto di .NET Framework.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Type ^ GetReflectionTypeFromTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionTypeFromTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; Type" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper (manager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager">Manager di serializzazione.</param>
        <param name="type">Tipo da cui utilizzare i metadati.</param>
        <summary>Ottiene un tipo di reflection generato dai metadati del tipo.</summary>
        <returns>Tipo di reflection generato dai metadati di <paramref name="type" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito non sarà uguale a `type` e non deve essere utilizzato per il confronto con tipi non di reflection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetReflectionTypeHelper (manager As IDesignerSerializationManager, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Type ^ GetReflectionTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; Type" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper (manager, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Manager di serializzazione.</param>
        <param name="instance">Oggetto da cui utilizzare i metadati.</param>
        <summary>Ottiene un tipo di reflection generato dai metadati dell'oggetto.</summary>
        <returns>Tipo di reflection generato dai metadati di <paramref name="object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito non sarà uguale al tipo di oggetto e non deve essere utilizzato per il confronto con tipi non di reflection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Individua un serializzatore per il tipo o valore dell'oggetto dato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSerializer (manager As IDesignerSerializationManager, value As Object) As CodeDomSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::Serialization::CodeDomSerializer ^ GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.ComponentModel.Design.Serialization.CodeDomSerializer" Usage="codeDomSerializerBase.GetSerializer (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="value">Oggetto che specifica il serializzatore da recuperare.</param>
        <summary>Individua un serializzatore per il valore dell'oggetto dato.</summary>
        <returns>Classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> appropriata per <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> metodo è un'estensione per il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> (metodo). Il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> metodo accetta un tipo di oggetto, anziché un valore di oggetto. Se una parte esterna ha eseguito l'override dei metadati per un oggetto specifico tramite <xref:System.ComponentModel.TypeDescriptor>, che eseguono l'override dei metadati non verrebbero interpretata dal <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> metodo che accetta solo un tipo. Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> metodo controlla i metadati del valore e il tipo di valore. Se i due sono diversi, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> avrà un aspetto per verificare se è presente un attributo personalizzato della finestra di progettazione del serializzatore per il valore. In questo caso, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> proverà a usarlo. In caso contrario, verrà rinviato al <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type valueType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type valueType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSerializer (manager As IDesignerSerializationManager, valueType As Type) As CodeDomSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::Serialization::CodeDomSerializer ^ GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ valueType);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; System.ComponentModel.Design.Serialization.CodeDomSerializer" Usage="codeDomSerializerBase.GetSerializer (manager, valueType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="valueType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="valueType">Classe <see cref="T:System.Type" /> che specifica il serializzatore da recuperare.</param>
        <summary>Individua un serializzatore per il tipo dato.</summary>
        <returns>Classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> appropriata per <paramref name="valueType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> metodo è un'estensione per il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> (metodo). Il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> metodo accetta un tipo di oggetto, anziché un valore di oggetto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> o <paramref name="valueType" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="GetTargetFrameworkProvider">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider (IServiceProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider(class System.IServiceProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetTargetFrameworkProvider (provider As IServiceProvider, instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetTargetFrameworkProvider(IServiceProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetTargetFrameworkProvider : IServiceProvider * obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">Servizio del provider di descrizione del tipo.</param>
        <param name="instance">Oggetto da cui può essere derivato il servizio del provider di descrizione del tipo, se <paramref name="provider" /> è <see langword="null" />.</param>
        <summary>Ottiene un oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> che riconosce la versione di destinazione di .NET Framework, per l'utilizzo nel filtro del tipo.</summary>
        <returns>Provider di descrizione del tipo che riconosce .NET Framework.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueName">
      <MemberSignature Language="C#" Value="protected string GetUniqueName (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetUniqueName(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetUniqueName (manager As IDesignerSerializationManager, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetUniqueName(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetUniqueName : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; string" Usage="codeDomSerializerBase.GetUniqueName (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="value">Oggetto per il quale verrà recuperato il nome.</param>
        <summary>Restituisce un nome univoco per l'oggetto dato.</summary>
        <returns>Nome univoco per <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> chiama il metodo <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A>. Se questo metodo non restituisce quindi un nome, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> Usa <xref:System.ComponentModel.Design.Serialization.INameCreationService> per creare un nome valido per l'oggetto. Se il servizio non è disponibile, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> creerà un nome basato sul nome del tipo short combinato con un numero di indice per renderlo univoco. Il nome risultante è associato il gestore della serializzazione tramite la chiamata di <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A> metodo prima che venga restituito il nuovo nome.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.INameCreationService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSerialized">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto dato è stato serializzato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsSerialized (manager As IDesignerSerializationManager, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsSerialized(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsSerialized : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; bool" Usage="codeDomSerializerBase.IsSerialized (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="value">Oggetto di cui verificare la precedente serializzazione.</param>
        <summary>Restituisce un valore che indica se l'oggetto dato è stato serializzato.</summary>
        <returns><see langword="true" /> se <paramref name="value" /> è stato serializzato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per il `value` parametro per essere considerato serializzato, il `manager` parametro o un altro serializzatore necessario avere chiamato il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> metodo per creare una relazione tra `value` e un'espressione di riferimento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsSerialized (manager As IDesignerSerializationManager, value As Object, honorPreset As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsSerialized(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, bool honorPreset);" />
      <MemberSignature Language="F#" Value="member this.IsSerialized : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * bool -&gt; bool" Usage="codeDomSerializerBase.IsSerialized (manager, value, honorPreset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="honorPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="value">Oggetto di cui verificare la precedente serializzazione.</param>
        <param name="honorPreset"><see langword="true" /> per includere le espressioni predefinite; in caso contrario, <see langword="false" />.</param>
        <summary>Restituisce un valore che indica se l'oggetto dato è stato serializzato, considerando eventualmente le espressioni predefinite.</summary>
        <returns><see langword="true" /> se <paramref name="value" /> è stato serializzato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per il `value` parametro per essere considerato serializzato, il `manager` parametro o un altro serializzatore necessario avere chiamato il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> metodo per creare una relazione tra `value` e un'espressione di riferimento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeCreationExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeCreationExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, out bool isComplete);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeCreationExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, [out] bool&amp; isComplete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeCreationExpression (manager As IDesignerSerializationManager, value As Object, ByRef isComplete As Boolean) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeCreationExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, [Runtime::InteropServices::Out] bool % isComplete);" />
      <MemberSignature Language="F#" Value="member this.SerializeCreationExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj *  -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeCreationExpression (manager, value, isComplete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isComplete" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="value">Oggetto da serializzare.</param>
        <param name="isComplete"><see langword="true" /> se <paramref name="value" /> è stato completamente serializzato; in caso contrario, <see langword="false" />.</param>
        <summary>Restituisce un'espressione che rappresenta la creazione dell'oggetto dato.</summary>
        <returns>Espressione che rappresenta la creazione di <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A> metodo può essere utilizzato per serializzare un'espressione che rappresenta la creazione del `value` parametro. È a conoscenza dei descrittori di istanza.  
  
 Il `isComplete` parametro è impostato su `true` se l'espressione rappresenta un oggetto completamente configurato o `false` se ulteriormente serializzazione deve essere eseguita nelle proprietà dell'oggetto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeEvent">
      <MemberSignature Language="C#" Value="protected void SerializeEvent (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.EventDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvent(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.EventDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeEvent (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, descriptor As EventDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeEvent(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, System::ComponentModel::EventDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="member this.SerializeEvent : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * System.ComponentModel.EventDescriptor -&gt; unit" Usage="codeDomSerializerBase.SerializeEvent (manager, statements, value, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="descriptor" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="statements">Oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> in cui l'evento sarà serializzato.</param>
        <param name="value">Oggetto a cui <paramref name="descriptor" /> è associato.</param>
        <param name="descriptor">Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> che specifica l'evento da serializzare.</param>
        <summary>Serializza l'evento specificato nell'insieme di istruzioni specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> metodo è possibile chiamare un metodo helper che le classi derivate per serializzare un singolo evento nel determinato <xref:System.CodeDom.CodeStatementCollection>. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> esegue una query il gestore della serializzazione per un <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> per l'evento specificato e quindi le chiede di <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> per eseguirne la serializzazione.  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> Inserisce il `statements` e `descriptor` i parametri per il <xref:System.ComponentModel.Design.Serialization.ContextStack>.  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> richiede un <xref:System.ComponentModel.Design.IEventBindingService> per individuare le associazioni degli eventi ai metodi che non vengono compilati. Se questo servizio non è presente, verranno scritto non associazioni di eventi a metodi non compilate. Binding di eventi per metodi compilati verranno serializzati ancora se gli oggetti a cui sono associati gli eventi possono essere convertiti in espressioni.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> o <paramref name="descriptor" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException"><see cref="T:System.ComponentModel.Design.IEventBindingService" /> non è disponibile.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.ComponentModel.Design.IEventBindingService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeEvents">
      <MemberSignature Language="C#" Value="protected void SerializeEvents (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, params Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvents(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeEvents (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, ParamArray filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeEvents(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, ... cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializeEvents : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializeEvents (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="statements">Oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> in cui l'evento sarà serializzato.</param>
        <param name="value">Oggetto in cui gli eventi saranno serializzati.</param>
        <param name="filter">Matrice <see cref="T:System.Attribute" /> che filtra gli eventi che saranno serializzati.</param>
        <summary>Serializza gli eventi specificati nell'insieme di istruzioni dato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> metodo è possibile chiamare un metodo helper che le classi derivate. Esamina gli eventi `value` parametro che corrispondono al `filter` parametro e quindi chiama il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> metodo per ogni evento.  
  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> metodo posizioni il <xref:System.ComponentModel.InheritanceAttribute> per `value` sul <xref:System.ComponentModel.Design.Serialization.ContextStack>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="value" /> o <paramref name="statements" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeProperties">
      <MemberSignature Language="C#" Value="protected void SerializeProperties (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperties(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeProperties (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeProperties(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializeProperties : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializeProperties (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="statements">Oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> in cui le proprietà saranno serializzate.</param>
        <param name="value">Oggetto in cui le proprietà saranno serializzate.</param>
        <param name="filter">Matrice <see cref="T:System.Attribute" /> che filtra le proprietà che saranno serializzate.</param>
        <summary>Serializza le proprietà sull'oggetto indicato nell'insieme di istruzioni specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> metodo è possibile chiamare un metodo helper che le classi derivate. Esamina le proprietà il `value` parametro che corrispondono al `filter` parametro e quindi chiama il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> metodo per ogni proprietà.  
  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> metodo posizioni il <xref:System.ComponentModel.InheritanceAttribute> per `value` sul <xref:System.ComponentModel.Design.Serialization.ContextStack>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="value" /> o <paramref name="statements" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="SerializePropertiesToResources">
      <MemberSignature Language="C#" Value="protected void SerializePropertiesToResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializePropertiesToResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializePropertiesToResources (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializePropertiesToResources(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializePropertiesToResources : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializePropertiesToResources (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="statements">Non usato.</param>
        <param name="value">Oggetto le cui proprietà saranno serializzate.</param>
        <param name="filter">Matrice <see cref="T:System.Attribute" /> che filtra le proprietà che saranno serializzate.</param>
        <summary>Serializza le proprietà sull'oggetto indicato nell'aggregazione di risorse con impostazioni cultura inglese non dipendenti da paese/area geografica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> metodo è possibile chiamare un metodo helper che le classi derivate. Esamina le proprietà il `value` parametro che corrispondono al `filter` parametro e quindi si serializza le proprietà nel bundle di risorse delle impostazioni cultura invarianti. Se il servizio di risorsa restituisce un <xref:System.Resources.ResXResourceWriter>, verranno archiviati i valori delle proprietà nella sezione dei metadati del file XML (resx). Il `statements` parametro non viene utilizzato.  
  
 Per essere serializzata come una risorsa, deve essere una proprietà semplice (non una proprietà di contenuto) e il relativo valore deve essere serializzabile. Le proprietà che non sono conformi a questo modello verranno ignorate.  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> richiede un <xref:System.ComponentModel.Design.IResourceService> per ottenere un <xref:System.Resources.ResourceWriter> per scrivere le risorse per le impostazioni cultura invarianti. Se questo servizio non è disponibile, non sono presenti risorse verranno scritto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="value" /> o <paramref name="statements" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <altmember cref="T:System.Resources.ResXResourceWriter" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeProperty">
      <MemberSignature Language="C#" Value="protected void SerializeProperty (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.PropertyDescriptor propertyToSerialize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperty(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.PropertyDescriptor propertyToSerialize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeProperty (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, propertyToSerialize As PropertyDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeProperty(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, System::ComponentModel::PropertyDescriptor ^ propertyToSerialize);" />
      <MemberSignature Language="F#" Value="member this.SerializeProperty : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * System.ComponentModel.PropertyDescriptor -&gt; unit" Usage="codeDomSerializerBase.SerializeProperty (manager, statements, value, propertyToSerialize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="propertyToSerialize" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="statements">Oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> in cui la proprietà sarà serializzata.</param>
        <param name="value">Oggetto in cui la proprietà sarà serializzata.</param>
        <param name="propertyToSerialize">Proprietà da serializzare.</param>
        <summary>Serializza una proprietà sull'oggetto specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> recuperata dal metodo un <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> per il `propertyToSerialize` parametro e i delegati a esso.  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> Inserisce il `statements` e `propertyToSerialize` i parametri per il <xref:System.ComponentModel.Design.Serialization.ContextStack>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> o <paramref name="propertyToSerialize" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeResource">
      <MemberSignature Language="C#" Value="protected void SerializeResource (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResource(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeResource (manager As IDesignerSerializationManager, resourceName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeResource(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ resourceName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeResource : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * obj -&gt; unit" Usage="codeDomSerializerBase.SerializeResource (manager, resourceName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="resourceName">Nome del raggruppamento di risorse in cui verrà serializzato <paramref name="value" />.</param>
        <param name="value">Oggetto da serializzare.</param>
        <summary>Serializza l'oggetto dato in un raggruppamento di risorse mediante il nome di risorsa dato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> è un metodo helper che consente di serializzare un valore a un bundle di risorse con il nome specificato. Le impostazioni cultura che viene scritta la risorsa viene determinata mediante la ricerca del gestore della serializzazione <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A> raccolta per una proprietà denominata `ResourceCulture`. Se questa proprietà è presente, verranno scritto le risorse di tali impostazioni cultura. In caso contrario, verranno scritte le risorse per le impostazioni cultura invarianti. Il `value` parametro deve essere serializzabile.  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> richiede un <xref:System.ComponentModel.Design.IResourceService> per ottenere un <xref:System.Resources.ResourceWriter> per scrivere le risorse per la lingua corretta. Se questo servizio non è disponibile, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> compilerà un oggetto binario di codice che rappresenta la risorsa.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>
            <see langword="ResourceCulture" /> è una proprietà di lettura / scrittura a cui si accede tramite il gestore di serializzazione <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> raccolta. Il <see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /> (metodo) non cambia mai il valore di questa proprietà; la legge semplicemente per identificare le impostazioni cultura in cui verranno scritti. La proprietà viene impostata durante la deserializzazione come risorse vengono analizzate e caricate.</para></block>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeResourceInvariant">
      <MemberSignature Language="C#" Value="protected void SerializeResourceInvariant (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResourceInvariant(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeResourceInvariant (manager As IDesignerSerializationManager, resourceName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeResourceInvariant(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ resourceName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeResourceInvariant : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * obj -&gt; unit" Usage="codeDomSerializerBase.SerializeResourceInvariant (manager, resourceName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="resourceName">Nome del raggruppamento di risorse in cui verrà serializzato <paramref name="value" />.</param>
        <param name="value">Oggetto da serializzare.</param>
        <summary>Serializza l'oggetto dato in un raggruppamento di risorse mediante il nome di risorsa dato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La risorsa viene sempre scritto per le impostazioni cultura invarianti. Il `value` parametro deve essere serializzabile.  
  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A> metodo richiede un <xref:System.ComponentModel.Design.IResourceService> per ottenere un <xref:System.Resources.ResourceWriter> per scrivere le risorse per la lingua corretta. Se questo servizio non è disponibile, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> compilerà un oggetto binario di codice che rappresenta la risorsa.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeToExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeToExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="value">Oggetto da serializzare. Può essere <see langword="null" />.</param>
        <summary>Serializza l'oggetto dato in un'espressione.</summary>
        <returns>Oggetto <see cref="T:System.CodeDom.CodeExpression" /> se <paramref name="value" /> può essere serializzato; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `value` parametro può essere `null`, nel qual caso verrà restituita un'espressione primitiva.  
  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> metodo Usa le regole seguenti per la serializzazione di tipi:  
  
1.  Viene innanzitutto chiamato il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> metodo per determinare se un'espressione è già stata creata per l'oggetto. In caso affermativo, restituisce l'espressione esistente.  
  
2.  Quindi individua serializzatore dell'oggetto e richiede da serializzare.  
  
3.  Se il valore restituito del serializzatore dell'oggetto è un <xref:System.CodeDom.CodeExpression>, viene restituita l'espressione.  
  
4.  Effettua un'ultima chiamata a <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> per vedere se il serializzatore di aggiunta di un'espressione.  
  
5.  Infine, viene restituito `null`.  
  
 Se è stato possibile creare alcuna espressione ed è stato trovato alcun serializzatore appropriato, un errore verrà segnalato tramite il gestore della serializzazione. Non verrà segnalato alcun errore se è stato trovato un serializzatore, ma non è riuscito a produrre un'espressione. In questo caso, si presuppone che il serializzatore sia già stato segnalato l'errore o non ha provato a serializzare l'oggetto.  
  
 Se il serializzatore viene restituita un'istruzione o una raccolta di istruzioni, tali istruzioni non verranno eliminate. Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> metodo innanzitutto cercherà un <xref:System.ComponentModel.Design.Serialization.StatementContext> nel contesto dello stack e aggiungere le istruzioni per l'oggetto di contesto istruzione <xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A> proprietà. Se non esiste alcun contesto di istruzione, il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> metodo avrà un aspetto nel contesto per un <xref:System.CodeDom.CodeStatementCollection> e aggiungere le istruzioni non esiste. Se non può essere trovato per aggiungere le istruzioni, verrà generato un errore.  
  
> [!NOTE]
>  Non è necessario chiamare il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> metodo all'interno di <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A> quando si serializza un oggetto. In alternativa, è necessario chiamare <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>. Se viene restituito `null`, creare espressioni e chiamata <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>. Procedere quindi con il resto della serializzazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.StatementContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SerializeToResourceExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Serializza un oggetto in un'espressione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToResourceExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToResourceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeToResourceExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToResourceExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="value">Oggetto da serializzare.</param>
        <summary>Serializza l'oggetto dato in un'espressione.</summary>
        <returns>Classe <see cref="T:System.CodeDom.CodeExpression" /> contenente <paramref name="value" /> come espressione serializzata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> è un metodo helper che consente di serializzare un valore da un'espressione di risorsa. È in contrasto con la <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> metodo, che scrive un valore a un oggetto binario di risorse. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> fa un passo avanti e restituisce un'espressione che può essere utilizzata per recuperare la risorsa. Ad esempio, il valore restituito potrebbe essere "rm. GetValue("SomeBitmap"); ". Il nome della risorsa viene ricavato la <xref:System.ComponentModel.Design.Serialization.ExpressionContext>, se è possibile trovarne nello stack di contesto.  
  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> avrà un aspetto metodo il <xref:System.ComponentModel.Design.Serialization.ContextStack> per gli oggetti seguenti:  
  
-   <xref:System.CodeDom.CodeStatementCollection> -una raccolta di istruzioni per aggiungere un gestore di risorse, se uno deve essere dichiarato.  
  
-   <xref:System.ComponentModel.Design.Serialization.RootContext> -l'espressione radice, che è necessario per creare una risorsa di gestione.  
  
-   <xref:System.ComponentModel.Design.Serialization.ExpressionContext> -usato per creare un nome per la risorsa e per decidere quale tipo di resource manager della chiamata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToResourceExpression (manager As IDesignerSerializationManager, value As Object, ensureInvariant As Boolean) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToResourceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, bool ensureInvariant);" />
      <MemberSignature Language="F#" Value="member this.SerializeToResourceExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * bool -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToResourceExpression (manager, value, ensureInvariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="ensureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="value">Oggetto da serializzare.</param>
        <param name="ensureInvariant"><see langword="true" /> per eseguire la serializzazione nelle impostazioni cultura invarianti; in caso contrario, <see langword="false" />.</param>
        <summary>Serializza l'oggetto dato in un'espressione appropriata alle impostazioni cultura invarianti.</summary>
        <returns>Classe <see cref="T:System.CodeDom.CodeExpression" /> contenente <paramref name="value" /> come espressione serializzata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il `ensureInvariant` parametro è `true`, il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> metodo scriverà anche il valore della risorsa nel file di risorse della lingua inglese se corrente `ResourceCulture` non è la lingua inglese...  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Associa un oggetto a un'espressione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetExpression (manager As IDesignerSerializationManager, value As Object, expression As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.SetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.CodeDom.CodeExpression -&gt; unit" Usage="codeDomSerializerBase.SetExpression (manager, value, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="value">Oggetto da serializzare.</param>
        <param name="expression">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> al quale associare <paramref name="value" />.</param>
        <summary>Associa un oggetto a un'espressione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> è un metodo di supporto che associa un <xref:System.CodeDom.CodeExpression> con un oggetto. Gli oggetti che sono stati associati alle espressioni in questo modo sono accessibili tramite il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> (metodo). <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> Archivia la relativa tabella di espressioni come oggetto accodato nello stack di contesto in modo che sia accessibile da qualsiasi serializzatore <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="value" /> o <paramref name="expression" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression, bool isPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression, bool isPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetExpression (manager As IDesignerSerializationManager, value As Object, expression As CodeExpression, isPreset As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, System::CodeDom::CodeExpression ^ expression, bool isPreset);" />
      <MemberSignature Language="F#" Value="member this.SetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.CodeDom.CodeExpression * bool -&gt; unit" Usage="codeDomSerializerBase.SetExpression (manager, value, expression, isPreset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="isPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
        <param name="value">Oggetto da serializzare.</param>
        <param name="expression">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> al quale associare <paramref name="value" />.</param>
        <param name="isPreset"><see langword="true" /> per specificare un'espressione predefinita; in caso contrario, <see langword="false" />.</param>
        <summary>Associa un oggetto a un'espressione, specificando facoltativamente un'espressione predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> è un metodo di supporto che associa un <xref:System.CodeDom.CodeExpression> con un oggetto. Gli oggetti che sono stati associati alle espressioni in questo modo sono accessibili tramite il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> (metodo). Il <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> archivia la relativa tabella di espressioni come oggetto accodato nello stack di contesto in modo che sia accessibile da qualsiasi serializzatore <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
  </Members>
</Type>