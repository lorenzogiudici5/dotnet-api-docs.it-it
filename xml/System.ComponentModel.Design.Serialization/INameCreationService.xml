<Type Name="INameCreationService" FullName="System.ComponentModel.Design.Serialization.INameCreationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4a03448fb36f575a67db84111bfbd4587f9f50c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameCreationService" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameCreationService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1ab70-101">Fornisce un servizio in grado di generare nomi univoci per gli oggetti.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ab70-101">Provides a service that can generate unique names for objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab70-102">Oggetto <xref:System.ComponentModel.Design.Serialization.DesignerLoader> può implementare questo servizio per fornire un modo per la finestra di progettazione creare nuovi nomi univoci per gli oggetti.</span><span class="sxs-lookup"><span data-stu-id="1ab70-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this service to provide a way for a designer to create new, unique names for objects.</span></span> <span data-ttu-id="1ab70-103">Se questo servizio non è disponibile, la finestra di progettazione utilizza un'implementazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="1ab70-103">If this service is not available, the designer uses a default implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ab70-104">Esempio di codice seguente viene fornito un esempio <xref:System.ComponentModel.Design.Serialization.INameCreationService> implementazione.</span><span class="sxs-lookup"><span data-stu-id="1ab70-104">The following example code provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService> implementation.</span></span> <span data-ttu-id="1ab70-105">Il servizio è possibile creare un nome univoco basato su un tipo che non corrisponde a tutti i nomi nel contenitore specificato.</span><span class="sxs-lookup"><span data-stu-id="1ab70-105">The service can create a unique name based on a type that does not match any names in the specified container.</span></span> <span data-ttu-id="1ab70-106">È anche possibile convalidare una stringa del nome specificato.</span><span class="sxs-lookup"><span data-stu-id="1ab70-106">It can also validate a specified name string.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#1)]
 [!code-csharp[INameCreationServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#1)]
 [!code-vb[INameCreationServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateName">
      <MemberSignature Language="C#" Value="public string CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateName (container As IContainer, dataType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateName(System::ComponentModel::IContainer ^ container, Type ^ dataType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="1ab70-107">Contenitore nel quale viene aggiunto il nuovo oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab70-107">The container where the new object is added.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="1ab70-108">Tipo di dati dell'oggetto che riceve il nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab70-108">The data type of the object that receives the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab70-109">Crea un nuovo nome univoco per tutti i componenti nel contenitore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab70-109">Creates a new name that is unique to all components in the specified container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab70-110">Nome univoco per il tipo di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab70-110">A unique name for the data type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab70-111">Questo metodo restituisce un nome per il nuovo oggetto che è univoco all'interno del contenitore specificato.</span><span class="sxs-lookup"><span data-stu-id="1ab70-111">This method returns a name for the new object that is unique within the specified container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ab70-112">Esempio di codice seguente viene fornito un esempio <xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType> implementazione del metodo.</span><span class="sxs-lookup"><span data-stu-id="1ab70-112">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType> method implementation.</span></span> <span data-ttu-id="1ab70-113">Il metodo è possibile creare un nome in base al nome di un tipo specificato che è univoco per i nomi dei componenti all'interno del contenitore specificato.</span><span class="sxs-lookup"><span data-stu-id="1ab70-113">The method can create a name based on the name of a specified type that is unique to the names of the components within the specified container.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[INameCreationServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#2)]
 [!code-vb[INameCreationServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1ab70-114">Questo tipo di servizio viene spesso implementato per creare un nome di oggetto univoco dal nome del tipo di dati, spesso viene associato un numero che consente il nome deve essere un identificatore univoco.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ab70-114">This type of service is often implemented to create a unique object name from the name of the data type, often appended with a number that allows the name to be a unique identifier.</span>
            </span>
            <span data-ttu-id="1ab70-115">Ad esempio, <see langword="ListBox1" /> per un <see langword="ListBox" /> oggetto.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ab70-115">For example, <see langword="ListBox1" /> for a <see langword="ListBox" /> object.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsValidName">
      <MemberSignature Language="C#" Value="public bool IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1ab70-116">Nome da convalidare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab70-116">The name to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab70-117">Ottiene un valore che indica se il nome specificato è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab70-117">Gets a value indicating whether the specified name is valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab70-118">
            <see langword="true" /> se il nome è valido; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab70-118">
              <see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab70-119">Un'implementazione del <xref:System.ComponentModel.Design.Serialization.INameCreationService> è possibile definire regole che definiscono i parametri per i nomi validi.</span><span class="sxs-lookup"><span data-stu-id="1ab70-119">An implementation of the <xref:System.ComponentModel.Design.Serialization.INameCreationService> can have rules that define the parameters for valid names.</span></span> <span data-ttu-id="1ab70-120">Questo metodo può essere implementato per convalidare un nome e applicare tali regole.</span><span class="sxs-lookup"><span data-stu-id="1ab70-120">This method can be implemented to validate a name and enforce those rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ab70-121">Esempio di codice seguente viene fornito un esempio <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> implementazione del metodo.</span><span class="sxs-lookup"><span data-stu-id="1ab70-121">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> method implementation.</span></span> <span data-ttu-id="1ab70-122">Il metodo viene utilizzato uno schema di convalida di stringa che esamina ogni carattere della stringa specificata per determinare se la stringa specificata è un nome valido.</span><span class="sxs-lookup"><span data-stu-id="1ab70-122">The method uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</span></span> <span data-ttu-id="1ab70-123">Il metodo restituisce `true` se la stringa è valida, o `false` in caso contrario.</span><span class="sxs-lookup"><span data-stu-id="1ab70-123">The method returns `true` if the string is valid, or `false` otherwise.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#3)]
 [!code-csharp[INameCreationServiceExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#3)]
 [!code-vb[INameCreationServiceExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateName">
      <MemberSignature Language="C#" Value="public void ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1ab70-124">Nome da convalidare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab70-124">The name to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab70-125">Ottiene un valore che indica se il nome specificato è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab70-125">Gets a value indicating whether the specified name is valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab70-126">Un'implementazione del <xref:System.ComponentModel.Design.Serialization.INameCreationService> è possibile definire regole che definiscono i parametri per i nomi validi.</span><span class="sxs-lookup"><span data-stu-id="1ab70-126">An implementation of the <xref:System.ComponentModel.Design.Serialization.INameCreationService> can have rules that define the parameters for valid names.</span></span> <span data-ttu-id="1ab70-127">Questo metodo può essere implementato per convalidare un nome e applicare tali regole.</span><span class="sxs-lookup"><span data-stu-id="1ab70-127">This method can be implemented to validate a name and enforce those rules.</span></span>  
  
 <span data-ttu-id="1ab70-128">Questo metodo è simile a <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>, ad eccezione del fatto che questo metodo genera un'eccezione se il nome è valido.</span><span class="sxs-lookup"><span data-stu-id="1ab70-128">This method is similar to <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>, except that this method throws an exception if the name is invalid.</span></span> <span data-ttu-id="1ab70-129">In questo modo agli implementatori di fornire informazioni dettagliate nel messaggio di eccezione.</span><span class="sxs-lookup"><span data-stu-id="1ab70-129">This allows implementers to provide detailed information in the exception message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ab70-130">Esempio di codice seguente viene fornito un esempio <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> implementazione del metodo che utilizza uno schema di convalida di stringa che esamina ogni carattere della stringa specificata per determinare se la stringa specificata è un nome valido.</span><span class="sxs-lookup"><span data-stu-id="1ab70-130">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> method implementation that uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</span></span> <span data-ttu-id="1ab70-131">Il metodo genera un'eccezione se la stringa non è valida.</span><span class="sxs-lookup"><span data-stu-id="1ab70-131">The method throws an exception if the string is not valid.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#4)]
 [!code-csharp[INameCreationServiceExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#4)]
 [!code-vb[INameCreationServiceExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>