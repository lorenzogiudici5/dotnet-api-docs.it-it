<Type Name="ComponentSerializationService" FullName="System.ComponentModel.Design.Serialization.ComponentSerializationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="248aaa820fcceffcae4b11a4eae174d3bf33b86f" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52222425" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ComponentSerializationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComponentSerializationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComponentSerializationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentSerializationService abstract" />
  <TypeSignature Language="F#" Value="type ComponentSerializationService = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce la classe base per la serializzazione di un insieme di componenti od oggetti serializzabili in un archivio di serializzazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> serializza un insieme di componenti od oggetti serializzabili in un archivio di serializzazione. L'archivio può essere deserializzato in un secondo momento. Il <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> classe differisce dagli altri schemi di serializzazione che il formato di serializzazione è opaco e consente una serializzazione parziale degli oggetti. Ad esempio, è possibile scegliere serializzare solo le proprietà selezionate di un oggetto.  
  
 Questa classe è `abstract`. In genere, un <xref:System.ComponentModel.Design.Serialization.DesignerLoader> verranno forniscono un'implementazione concreta di questa classe e aggiungerla come a un servizio relativo <xref:System.ComponentModel.Design.DesignSurface>. In questo modo gli oggetti da serializzare nel formato più adatto ad essi.  
  
 Il <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> classe sostituisce il <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> interfaccia da .NET Framework versione 1.0, anche se quest'ultimo viene mantenuto per compatibilità con le versioni precedenti.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Quando si eredita dal <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> (classe), è necessario eseguire l'override di tutti i metodi in questa classe. Alcuni di questi metodi sono stati progettati per generare eccezioni, come documentato negli argomenti corrispondenti; è consigliabile che le classi derivate seguano queste linee guida per mantenere la coerenza dell'operazione. Per altre informazioni, vedere la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" />.</para>
    </block>
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComponentSerializationService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComponentSerializationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
      </Docs>
    </Member>
    <Member MemberName="CreateStore">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.Design.Serialization.SerializationStore CreateStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.Serialization.SerializationStore CreateStore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateStore () As SerializationStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::Design::Serialization::SerializationStore ^ CreateStore();" />
      <MemberSignature Language="F#" Value="abstract member CreateStore : unit -&gt; System.ComponentModel.Design.Serialization.SerializationStore" Usage="componentSerializationService.CreateStore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.SerializationStore</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuovo oggetto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
        <returns>Nuovo archivio di serializzazione creato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Più oggetti possono essere serializzati in allo stesso archivio di serializzazione. Quando si è terminato con l'archivio, è possibile chiamare relativi <xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> o <xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> (metodo). Una volta chiusa, un archivio di serializzazione può essere usato per la deserializzazione, o può essere salvato in un flusso.  
  
 L'archivio di serializzazione può essere passato a uno dei diversi metodi di serializzazione per creare backup dello stato di serializzazione per un gruppo di oggetti.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deserializza l'archivio dato per produrre un insieme di oggetti.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection Deserialize(class System.ComponentModel.Design.Serialization.SerializationStore store) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Deserialize (store As SerializationStore) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ Deserialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.SerializationStore -&gt; System.Collections.ICollection" Usage="componentSerializationService.Deserialize store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da deserializzare.</param>
        <summary>Deserializza l'archivio dato per produrre un insieme di oggetti.</summary>
        <returns>Insieme di oggetti creato in base allo stato memorizzato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo deserializza `store` per produrre una raccolta di oggetti in esso contenuti. Gli oggetti sono deserializzati nello stesso ordine in cui sono stati serializzati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> non contiene dati in un formato che può essere elaborato dal contenitore di serializzazione.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection Deserialize(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Deserialize (store As SerializationStore, container As IContainer) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ Deserialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer -&gt; System.Collections.ICollection" Usage="componentSerializationService.Deserialize (store, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da deserializzare.</param>
        <param name="container">Interfaccia <see cref="T:System.ComponentModel.IContainer" /> a cui verranno aggiunti gli oggetti <see cref="T:System.ComponentModel.IComponent" />.</param>
        <summary>Deserializza l'archivio dato e compila l'interfaccia <see cref="T:System.ComponentModel.IContainer" /> data con oggetti <see cref="T:System.ComponentModel.IComponent" /> deserializzati.</summary>
        <returns>Insieme di oggetti creato in base allo stato memorizzato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo deserializza `store` per produrre una raccolta di oggetti in esso contenuti. Gli oggetti sono deserializzati nello stesso ordine in cui sono stati serializzati.  
  
 Creazione di oggetti che implementano <xref:System.ComponentModel.IComponent> vengono aggiunti alla `container`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> o <paramref name="container" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> non contiene dati in un formato che può essere elaborato dal contenitore di serializzazione.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeserializeTo">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deserializza la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> data nel contenitore dato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeTo (store As SerializationStore, container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="member this.DeserializeTo : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer -&gt; unit" Usage="componentSerializationService.DeserializeTo (store, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da deserializzare.</param>
        <param name="container">Contenitore a cui verranno aggiunti gli oggetti <see cref="T:System.ComponentModel.IComponent" />.</param>
        <summary>Deserializza la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> data nel contenitore dato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> metodo deserializza `store`, ma anziché produrre nuovi oggetti, i dati nell'archivio si applica a un set esistente di oggetti che vengono eseguiti dal contenitore specificato. Di conseguenza, il chiamante può creare in anticipo un oggetto opportuno ritiene. Se un oggetto ha uno stato di deserializzazione e l'oggetto non è denominato nel set di oggetti esistenti, verrà creato un nuovo oggetto. Se tale oggetto implementa anche <xref:System.ComponentModel.IComponent>, verrà aggiunto a `container`. Gli oggetti nel contenitore devono avere nomi e i tipi che corrispondono a oggetti dell'archivio di serializzazione in ordine per un oggetto esistente da utilizzare.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> o <paramref name="container" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> non contiene dati in un formato che può essere elaborato dal contenitore di serializzazione.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container, bool validateRecycledTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeTo (store As SerializationStore, container As IContainer, validateRecycledTypes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container, bool validateRecycledTypes);" />
      <MemberSignature Language="F#" Value="member this.DeserializeTo : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer * bool -&gt; unit" Usage="componentSerializationService.DeserializeTo (store, container, validateRecycledTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="validateRecycledTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da deserializzare.</param>
        <param name="container">Contenitore a cui verranno aggiunti gli oggetti <see cref="T:System.ComponentModel.IComponent" />.</param>
        <param name="validateRecycledTypes">
          <see langword="true" /> per garantire che la deserializzazione funzionerà solo se applicata a un oggetto dello stesso tipo.</param>
        <summary>Deserializza la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> data nel contenitore dato, convalidando eventualmente i tipi riciclati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> metodo deserializza `store`, ma anziché produrre nuovi oggetti, i dati nell'archivio si applica a un set esistente di oggetti che vengono eseguiti dal contenitore specificato. Di conseguenza, il chiamante può creare in anticipo un oggetto opportuno ritiene. Se un oggetto ha uno stato di deserializzazione e l'oggetto non è denominato nel set di oggetti esistenti, verrà creato un nuovo oggetto. Se tale oggetto implementa anche <xref:System.ComponentModel.IComponent>, verrà aggiunto a `container`. Gli oggetti nel contenitore devono avere nomi e i tipi che corrispondono a oggetti dell'archivio di serializzazione in ordine per un oggetto esistente da utilizzare.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> o <paramref name="container" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> non contiene dati in un formato che può essere elaborato dal contenitore di serializzazione.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public abstract void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub DeserializeTo (store As SerializationStore, container As IContainer, validateRecycledTypes As Boolean, applyDefaults As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container, bool validateRecycledTypes, bool applyDefaults);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeTo : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer * bool * bool -&gt; unit" Usage="componentSerializationService.DeserializeTo (store, container, validateRecycledTypes, applyDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="validateRecycledTypes" Type="System.Boolean" />
        <Parameter Name="applyDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da deserializzare.</param>
        <param name="container">Contenitore a cui verranno aggiunti gli oggetti <see cref="T:System.ComponentModel.IComponent" />.</param>
        <param name="validateRecycledTypes">
          <see langword="true" /> per garantire che la deserializzazione funzionerà solo se applicata a un oggetto dello stesso tipo.</param>
        <param name="applyDefaults">
          <see langword="true" /> per indicare che devono essere applicati i valori di proprietà predefiniti.</param>
        <summary>Deserializza la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> data nel contenitore dato, applicando eventualmente i valori di proprietà predefiniti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> metodo deserializza `store`, ma anziché produrre nuovi oggetti, i dati nell'archivio si applica a un set esistente di oggetti che vengono eseguiti dal contenitore specificato. Di conseguenza, il chiamante può creare in anticipo un oggetto opportuno ritiene. Se un oggetto ha uno stato di deserializzazione e l'oggetto non è denominato nel set di oggetti esistenti, verrà creato un nuovo oggetto. Se tale oggetto implementa anche <xref:System.ComponentModel.IComponent>, verrà aggiunto a `container`. Gli oggetti nel contenitore devono avere nomi e i tipi che corrispondono a oggetti dell'archivio di serializzazione in ordine per un oggetto esistente da utilizzare.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> o <paramref name="container" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> non contiene dati in un formato che può essere elaborato dal contenitore di serializzazione.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadStore">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.Design.Serialization.SerializationStore LoadStore (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.Serialization.SerializationStore LoadStore(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::Design::Serialization::SerializationStore ^ LoadStore(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member LoadStore : System.IO.Stream -&gt; System.ComponentModel.Design.Serialization.SerializationStore" Usage="componentSerializationService.LoadStore stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.SerializationStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Classe <see cref="T:System.IO.Stream" /> da cui verrà caricato l'archivio.</param>
        <summary>Carica una classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da un flusso.</summary>
        <returns>Nuova istanza di <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare l'archivio restituito da deserializzare oggetti da passare a uno del <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A> metodi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="stream" /> non contiene dati salvati da una precedente chiamata a <see cref="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract void Serialize (System.ComponentModel.Design.Serialization.SerializationStore store, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.ComponentModel.Design.Serialization.SerializationStore store, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Serialize (store As SerializationStore, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Serialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.SerializationStore * obj -&gt; unit" Usage="componentSerializationService.Serialize (store, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="store">Classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in cui verrà scritto lo stato di <paramref name="value" />.</param>
        <param name="value">Oggetto da serializzare.</param>
        <summary>Serializza l'oggetto dato nella classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> data.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'archivio può essere utilizzato per serializzare più di un oggetto chiamando il metodo più volte.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> o <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> viene chiuso o <paramref name="store" /> non è un tipo di archivio di serializzazione supportato. Usare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize" />
      </Docs>
    </Member>
    <Member MemberName="SerializeAbsolute">
      <MemberSignature Language="C#" Value="public abstract void SerializeAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeAbsolute(class System.ComponentModel.Design.Serialization.SerializationStore store, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeAbsolute (store As SerializationStore, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeAbsolute(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SerializeAbsolute : System.ComponentModel.Design.Serialization.SerializationStore * obj -&gt; unit" Usage="componentSerializationService.SerializeAbsolute (store, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="store">Classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in cui verrà serializzato lo stato di <paramref name="value" />.</param>
        <param name="value">Oggetto da serializzare.</param>
        <summary>Serializza l'oggetto dato, tenendo conto dei valori di proprietà predefiniti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Serializzazione standard, con l'implementazione tramite il <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> metodo serializza solo i valori che differiscono dallo stato del componente predefinita. Questo fornisce il meccanismo di serializzazione più compatto ma presuppone che un oggetto appena creato verrà utilizzato durante la deserializzazione. Se viene utilizzato un oggetto esistente, l'oggetto deserializzato risultante non è garantito per duplicare lo stato originale dell'oggetto serializzato. le proprietà che contengono i valori predefiniti durante la serializzazione non reimposterà i valori predefiniti per durante la deserializzazione.  
  
 Il <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute%2A> metodo non usa questo collegamento. Serializza tutte le proprietà dell'oggetto di origine in modo che la deserializzazione può ripristinare tutte le proprietà dell'oggetto, indipendentemente dallo stato predefinito.  
  
 Questo metodo è particolarmente utile per la serializzazione di raccolte, poiché l'ordine degli elementi costitutivi all'interno della raccolta può essere modificato. In questo caso, il processo più sicuro per ripristinare lo stato originale dell'intera raccolta consiste nel sovrascrivere tutti gli elementi con tutti i valori di proprietà originali.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> o <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> viene chiuso o <paramref name="store" /> non è un tipo di archivio di serializzazione supportato. Usare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName="SerializeMember">
      <MemberSignature Language="C#" Value="public abstract void SerializeMember (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeMember(class System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeMember (store As SerializationStore, owningObject As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeMember(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member SerializeMember : System.ComponentModel.Design.Serialization.SerializationStore * obj * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="componentSerializationService.SerializeMember (store, owningObject, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="store">Classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in cui verrà serializzato lo stato di <paramref name="member" />.</param>
        <param name="owningObject">Oggetto a cui è collegato <paramref name="member" />.</param>
        <param name="member">Classe <see cref="T:System.ComponentModel.MemberDescriptor" /> che specifica il membro da serializzare.</param>
        <summary>Serializza il membro specificato sull'oggetto indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember%2A> metodo può essere richiamato più volte per lo stesso oggetto creare un elenco di membri serializzati all'interno dell'archivio di serializzazione. In generale, il membro deve essere una proprietà o un evento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> o <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> viene chiuso o <paramref name="store" /> non è un tipo di archivio di serializzazione supportato. Usare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName="SerializeMemberAbsolute">
      <MemberSignature Language="C#" Value="public abstract void SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeMemberAbsolute(class System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeMemberAbsolute (store As SerializationStore, owningObject As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeMemberAbsolute(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member SerializeMemberAbsolute : System.ComponentModel.Design.Serialization.SerializationStore * obj * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="componentSerializationService.SerializeMemberAbsolute (store, owningObject, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="store">Classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in cui verrà serializzato lo stato di <paramref name="member" />.</param>
        <param name="owningObject">Oggetto a cui è collegato <paramref name="member" />.</param>
        <param name="member">Membro da serializzare.</param>
        <summary>Serializza il membro dato sull'oggetto dato, tenendo conto del valore di proprietà predefinito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> metodo serializza il `member` sul `owningObject`, anche se `member` contiene il valore della proprietà predefinito.  
  
 Si noti che per alcuni membri, che contiene il valore predefinito e il ripristino l'impostazione dello stesso valore al membro sono concetti diversi. Ad esempio, se una proprietà eredita il relativo valore da un oggetto padre quando è impostato alcun valore locale, l'impostazione del valore alla proprietà di potrebbe non essere quello desiderato. Il <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> metodo tiene conto e cancellava in questo caso lo stato della proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> o <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> viene chiuso o <paramref name="store" /> non è un tipo di archivio di serializzazione supportato. Usare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize" />
      </Docs>
    </Member>
  </Members>
</Type>