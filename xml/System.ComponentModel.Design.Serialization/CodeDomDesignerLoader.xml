<Type Name="CodeDomDesignerLoader" FullName="System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef51612836a91d854af5354995ebc516d5ac750d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36709009" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeDomDesignerLoader : System.ComponentModel.Design.Serialization.BasicDesignerLoader, System.ComponentModel.Design.Serialization.IDesignerSerializationService, System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomDesignerLoader extends System.ComponentModel.Design.Serialization.BasicDesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerSerializationService, class System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomDesignerLoader&#xA;Inherits BasicDesignerLoader&#xA;Implements IDesignerSerializationService, INameCreationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomDesignerLoader abstract : System::ComponentModel::Design::Serialization::BasicDesignerLoader, System::ComponentModel::Design::Serialization::IDesignerSerializationService, System::ComponentModel::Design::Serialization::INameCreationService" />
  <TypeSignature Language="F#" Value="type CodeDomDesignerLoader = class&#xA;    inherit BasicDesignerLoader&#xA;    interface INameCreationService&#xA;    interface IDesignerSerializationService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.BasicDesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.INameCreationService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce la classe base per implementare un caricatore della finestra di progettazione basato su CodeDOM.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> è una classe astratta che fornisce un caricatore della finestra di progettazione completo basata su Code Document Object Model (CodeDOM). Fornisci il parser CodeDOM e generatore e un servizio di risoluzione del tipo.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">per l'accesso completo alle risorse di sistema. Valori richiesta: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Stato associato:</permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="N:System.CodeDom" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="protected abstract System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la proprietà <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> che verrà utilizzata da questo caricatore della finestra di progettazione.</summary>
        <value>Proprietà <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> che verrà utilizzata da questo caricatore della finestra di progettazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il caricatore della finestra di progettazione non analizzare o generare codice da restituito <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>, ma usa il provider per ottenere un <xref:System.CodeDom.Compiler.ICodeGenerator> che è possibile utilizzare per convalidare gli identificatori nel servizio di creazione di nomi. Il caricatore della finestra di progettazione verrà inoltre controllato il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A> per verificare se implementa il <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> interfaccia. Per ulteriori informazioni sull'analisi o la generazione di codice, vedere la <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> e <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> metodi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="codeDomDesignerLoader.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia le risorse usate dalla classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> rimuova i servizi aggiunti dal <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> metodo.  
  
 Chiamare il metodo <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>. Il metodo <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> lascia l'oggetto <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> in una condizione di inutilizzabilità. Dopo la chiamata <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>, è necessario rilasciare tutti i riferimenti per il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> consentire al garbage collector di recuperare la memoria che il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> occupata. Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Chiamare sempre il metodo <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>. In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="codeDomDesignerLoader.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizializza i servizi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente descrive il sostituibili servizi che il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> aggiunge al contenitore del servizio.  
  
|Termine|Definizione|  
|----------|----------------|  
|<xref:System.ComponentModel.Design.Serialization.INameCreationService>|Fornisce la semantica per la creazione di nomi di oggetti. Il servizio utilizza il provider di CodeDOM <xref:System.CodeDom.Compiler.ICodeGenerator> interfaccia per creare i nomi di identificatori validi per la lingua. Inoltre, il servizio di creazione nome supporta nomi vuoti. Nomi vuoti devono essere interpretati come variabili locali temporanee durante la serializzazione.|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>|Consente ad altri oggetti per la serializzazione di un gruppo di componenti in un oggetto binario. Questo servizio viene spesso utilizzato dalle funzionalità quali la copia e Incolla o rollback e rollforward. Il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> classe fornisce un servizio di serializzazione della finestra di progettazione che si basa sulla creazione di strutture ad albero CodeDOM per gli oggetti.|  
|<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|Questo servizio sostituisce <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> come mezzo per serializzare i componenti in un oggetto binario.|  
  
 Per informazioni dettagliate sui servizi sostituibili e non sostituibili, vedere <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> non è stata inizializzata o il caricatore della finestra di progettazione non ha fornito un servizio di risoluzione del tipo, necessario per la serializzazione CodeDom.</exception>
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
        <altmember cref="T:System.ComponentModel.Design.ITypeResolutionService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.INameCreationService" />
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected override bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsReloadNeeded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsReloadNeeded();" />
      <MemberSignature Language="F#" Value="override this.IsReloadNeeded : unit -&gt; bool" Usage="codeDomDesignerLoader.IsReloadNeeded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se è necessario un ricaricamento.</summary>
        <returns>
          <see langword="true" /> se la proprietà <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> stabilisce che è necessario un ricaricamento; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded%2A> metodo controlla la presenza del <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> interfaccia il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>. Il provider di struttura ad albero CodeDOM di analisi e passare la struttura ad albero di analisi risultante per il <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner%2A> metodo. Se questo metodo restituisce `false`, la finestra di progettazione non verrà ricaricato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Il linguaggio non dispone di un parser di codice per questo file; questo tipo di file potrebbe non supportare una finestra di progettazione.</exception>
        <exception cref="T:System.InvalidOperationException">La classe può essere progettata ma non è la prima classe nel file oppure è impossibile visualizzare la finestra di progettazione per il file, perché nessuna delle classi contenute può essere progettata.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected override void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginLoad();" />
      <MemberSignature Language="F#" Value="override this.OnBeginLoad : unit -&gt; unit" Usage="codeDomDesignerLoader.OnBeginLoad " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica al caricatore della finestra di progettazione che sta per iniziare il caricamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sul <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad%2A> metodo, vedere <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected override void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginUnload ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginUnload();" />
      <MemberSignature Language="F#" Value="override this.OnBeginUnload : unit -&gt; unit" Usage="codeDomDesignerLoader.OnBeginUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica al caricatore della finestra di progettazione che sta per iniziare lo scaricamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sul <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload%2A> metodo, vedere <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComponentRename">
      <MemberSignature Language="C#" Value="protected virtual void OnComponentRename (object component, string oldName, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnComponentRename(object component, string oldName, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnComponentRename (component As Object, oldName As String, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnComponentRename(System::Object ^ component, System::String ^ oldName, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentRename : obj * string * string -&gt; unit&#xA;override this.OnComponentRename : obj * string * string -&gt; unit" Usage="codeDomDesignerLoader.OnComponentRename (component, oldName, newName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="oldName" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component">Componente da rinominare.</param>
        <param name="oldName">Nome originale del componente.</param>
        <param name="newName">Nuovo nome del componente.</param>
        <summary>Genera l'evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected override void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="override this.OnEndLoad : bool * System.Collections.ICollection -&gt; unit" Usage="codeDomDesignerLoader.OnEndLoad (successful, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <see langword="true" /> per indicare che il caricamento è stato completato; in caso contrario, <see langword="false" />.</param>
        <param name="errors">Interfaccia <see cref="T:System.Collections.ICollection" /> di oggetti, in genere eccezioni, segnalati come errori.</param>
        <summary>Notifica al caricatore della finestra di progettazione che il caricamento è stato completato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sul <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad%2A> metodo, vedere <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="protected abstract System.CodeDom.CodeCompileUnit Parse ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function Parse () As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::CodeDom::CodeCompileUnit ^ Parse();" />
      <MemberSignature Language="F#" Value="abstract member Parse : unit -&gt; System.CodeDom.CodeCompileUnit" Usage="codeDomDesignerLoader.Parse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Analizza il testo o un altro archivio permanente e restituisce una classe <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
        <returns>Classe <see cref="T:System.CodeDom.CodeCompileUnit" /> risultante da un'operazione di analisi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> metodo viene chiamato quando il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> deve analizzare il codice sorgente. Il percorso del codice sorgente e il formato deve essere specificati tramite la derivazione di classi.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected override void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformFlush (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="override this.PerformFlush : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="codeDomDesignerLoader.PerformFlush manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">Interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da cui richiedere il serializzatore.</param>
        <summary>Richiede la serializzazione del componente di primo livello della finestra di progettazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> metodo ottiene la radice <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> per il componente principale della finestra di progettazione e richiama il serializzatore per serializzare il componente. Se il risultato di questa operazione è un <xref:System.CodeDom.CodeTypeDeclaration>, quindi <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> si integra il <xref:System.CodeDom.CodeTypeDeclaration> con CodeDOM esistente ad albero. Il risultato è la struttura ad albero CodeDOM originale con i membri e le istruzioni sostituite corrispondenti. Infine <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> chiama il metodo <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> per salvare questa struttura ad albero CodeDOM.  
  
 Se la serializzazione del componente della finestra di progettazione radice non produce un <xref:System.CodeDom.CodeTypeDeclaration>, quindi <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> non esegue altre operazioni.  
  
> [!IMPORTANT]
>  È responsabilità del chiamante per garantire che un elemento CodeDOM provengano da una fonte attendibile. Che accetta un oggetto CodeDOM da terze parti non attendibili potrebbe consentire tale entità eseguire il codice dannoso. Quando lo scaricamento di un elemento CodeDOM in un file, il framework viene eseguito codice rappresentato dall'oggetto CodeDOM e il contenuto serializzato dell'oggetto fornito.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Il linguaggio non dispone di un parser di codice per questo file; questo tipo di file potrebbe non supportare una finestra di progettazione.</exception>
        <exception cref="T:System.InvalidOperationException">La classe può essere progettata ma non è la prima classe nel file oppure è impossibile visualizzare la finestra di progettazione per il file, perché nessuna delle classi contenute può essere progettata.</exception>
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected override void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformLoad (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="override this.PerformLoad : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="codeDomDesignerLoader.PerformLoad manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">Interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da cui richiedere il serializzatore.</param>
        <summary>Analizza il codice di un provider CodeDOM.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> metodo ottiene un <xref:System.CodeDom.Compiler.ICodeParser> dal provider CodeDOM e analizza il codice. <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> individua la prima classe nel file, ottiene una radice <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> per il tipo di dati e quindi richiama il serializzatore per deserializzare il tipo di dati. <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> si presuppone che questo processo creerà tutti i componenti necessari di <xref:System.ComponentModel.IContainer> del <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> proprietà. Infine <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> chiama il <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> metodo con il nome completo del tipo passato al serializzatore CodeDOM.  
  
> [!IMPORTANT]
>  È responsabilità del chiamante per garantire che un elemento CodeDOM provengano da una fonte attendibile. Che accetta un oggetto CodeDOM da terze parti non attendibili potrebbe consentire tale entità eseguire il codice dannoso. Durante il caricamento di un elemento CodeDOM nell'area di progettazione, il framework verrà eseguito codice rappresentato dall'oggetto CodeDOM e il contenuto serializzato dell'oggetto fornito.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Il linguaggio non dispone di un parser di codice per questo file; questo tipo di file potrebbe non supportare una finestra di progettazione.</exception>
        <exception cref="T:System.InvalidOperationException">La classe può essere progettata ma non è la prima classe nel file oppure è impossibile visualizzare la finestra di progettazione per il file, perché nessuna delle classi contenute può essere progettata.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDesignerSerializationService.Deserialize (object serializationData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(object serializationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Deserialize (serializationData As Object) As ICollection Implements IDesignerSerializationService.Deserialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System::Object ^ serializationData) = System::ComponentModel::Design::Serialization::IDesignerSerializationService::Deserialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationData">Oggetto costituito da dati serializzati.</param>
        <summary>Deserializza l'oggetto dati di serializzazione specificato e restituisce un insieme di oggetti rappresentato da tali dati.</summary>
        <returns>Insieme di oggetti rappresentati da <paramref name="serializationData" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="serializationData" /> non è un oggetto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize">
      <MemberSignature Language="C#" Value="object IDesignerSerializationService.Serialize (System.Collections.ICollection objects);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(class System.Collections.ICollection objects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Function Serialize (objects As ICollection) As Object Implements IDesignerSerializationService.Serialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System::Collections::ICollection ^ objects) = System::ComponentModel::Design::Serialization::IDesignerSerializationService::Serialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objects" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="objects">Insieme di oggetti da serializzare.</param>
        <summary>Serializza l'insieme specificato di oggetti e li memorizza in un oggetto dati di serializzazione.</summary>
        <returns>Oggetto che contiene lo stato serializzato dell'insieme specificato di oggetti.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> non trovato.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.CreateName">
      <MemberSignature Language="C#" Value="string INameCreationService.CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.INameCreationService.CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function CreateName (container As IContainer, dataType As Type) As String Implements INameCreationService.CreateName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System::ComponentModel::IContainer ^ container, Type ^ dataType) = System::ComponentModel::Design::Serialization::INameCreationService::CreateName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container">Contenitore nel quale viene aggiunto il nuovo oggetto.</param>
        <param name="dataType">Tipo di dati dell'oggetto che riceve il nome.</param>
        <summary>Crea un nuovo nome univoco per tutti i componenti nel contenitore specificato.</summary>
        <returns>Nome univoco per il tipo di dati.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataType" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.IsValidName">
      <MemberSignature Language="C#" Value="bool INameCreationService.IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsValidName (name As String) As Boolean Implements INameCreationService.IsValidName" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System::String ^ name) = System::ComponentModel::Design::Serialization::INameCreationService::IsValidName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome da convalidare.</param>
        <summary>Ottiene un valore che indica se il nome specificato è valido.</summary>
        <returns>
          <see langword="true" /> se il nome è valido; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.ValidateName">
      <MemberSignature Language="C#" Value="void INameCreationService.ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub ValidateName (name As String) Implements INameCreationService.ValidateName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System::String ^ name) = System::ComponentModel::Design::Serialization::INameCreationService::ValidateName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome da convalidare.</param>
        <summary>Ottiene un valore che indica se il nome specificato è valido.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> non è un identificatore valido o esiste già un componente con lo stesso nome.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeResolutionService">
      <MemberSignature Language="C#" Value="protected abstract System.ComponentModel.Design.ITypeResolutionService TypeResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ITypeResolutionService TypeResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property TypeResolutionService As ITypeResolutionService" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::ComponentModel::Design::ITypeResolutionService ^ TypeResolutionService { System::ComponentModel::Design::ITypeResolutionService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeResolutionService : System.ComponentModel.Design.ITypeResolutionService" Usage="System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ITypeResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il servizio di risoluzione del tipo da utilizzare con questo caricatore della finestra di progettazione.</summary>
        <value>Interfaccia <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> che i serializzatori CodeDOM utilizzeranno durante la risoluzione dei tipi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> lo aggiunge automaticamente <xref:System.ComponentModel.Design.ITypeResolutionService> al contenitore del servizio quando il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> metodo viene richiamato. Anche se il servizio di risoluzione del tipo è facoltativo in molti scenari, è necessario per l'interpretazione di codice perché il codice sorgente contiene tipo nomi, ma nessun riferimento ad assembly.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.ITypeResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="protected abstract void Write (System.CodeDom.CodeCompileUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Write(class System.CodeDom.CodeCompileUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Write (unit As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Write(System::CodeDom::CodeCompileUnit ^ unit);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.CodeDom.CodeCompileUnit -&gt; unit" Usage="codeDomDesignerLoader.Write unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="unit">Classe <see cref="T:System.CodeDom.CodeCompileUnit" /> da mantenere.</param>
        <summary>Scrive le modifiche dell'unità di compilazione in un archivio permanente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> metodo salva un <xref:System.CodeDom.CodeCompileUnit> nell'archivio permanente. La classe di derivazione è responsabile del richiamo il <xref:System.CodeDom.Compiler.ICodeGenerator> nel writer di testo appropriato per salvare il codice. Il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> garantisce che gli oggetti CodeDOM che vengono passati al <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> sono le stesse istanze degli oggetti che sono stati recuperati dal <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A>, ad eccezione dei casi in cui il processo di serializzazione era necessario apportare modifiche al codice. In questo modo un caricatore della finestra di progettazione ottimizzato archiviare i dati aggiuntivi nel <xref:System.CodeDom.CodeObject.UserData%2A> proprietà degli elementi di codice. Questi dati saranno disponibili durante il <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> metodo per tutti gli elementi che non sono state sostituite dal processo di serializzazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
  </Members>
</Type>