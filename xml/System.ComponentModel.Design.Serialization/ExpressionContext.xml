<Type Name="ExpressionContext" FullName="System.ComponentModel.Design.Serialization.ExpressionContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b43ece75e54589dff9cf246ce425cfe2775514ac" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExpressionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ExpressionContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7e102-101">Fornisce un sistema per passare lo stato del contesto tra i serializzatori.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7e102-101">Provides a means of passing context state among serializers.</span>
      </span>
      <span data-ttu-id="7e102-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7e102-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e102-103">Un <xref:System.ComponentModel.Design.Serialization.ExpressionContext> viene inserito nello stack di contesto e contiene l'espressione più importante durante la serializzazione.</span><span class="sxs-lookup"><span data-stu-id="7e102-103">An <xref:System.ComponentModel.Design.Serialization.ExpressionContext> is placed on the context stack and contains the most relevant expression during serialization.</span></span> <span data-ttu-id="7e102-104">Il codice c# seguente illustra un'assegnazione.</span><span class="sxs-lookup"><span data-stu-id="7e102-104">The following C# code demonstrates an assignment.</span></span>  
  
```csharp  
button1.Text = "Hello";  
```  
  
 <span data-ttu-id="7e102-105">Durante la serializzazione, diversi serializzatori sono responsabili per la creazione di questa singola istruzione.</span><span class="sxs-lookup"><span data-stu-id="7e102-105">During serialization, several serializers are responsible for creating this single statement.</span></span> <span data-ttu-id="7e102-106">Uno di questi serializzatori è responsabile per la creazione di "Hello".</span><span class="sxs-lookup"><span data-stu-id="7e102-106">One of those serializers is responsible for creating "Hello".</span></span> <span data-ttu-id="7e102-107">Vi sono casi quando potrebbe essere necessario che il serializzatore di conoscere il contesto in cui viene creata la relativa espressione.</span><span class="sxs-lookup"><span data-stu-id="7e102-107">There are times when that serializer may need to know the context in which it is creating its expression.</span></span> <span data-ttu-id="7e102-108">Nell'esempio precedente, questo contesto non è necessaria.</span><span class="sxs-lookup"><span data-stu-id="7e102-108">In the previous example, this context is not needed.</span></span> <span data-ttu-id="7e102-109">Il codice c# seguente viene illustrata una situazione in cui è necessaria la conoscenza del contesto.</span><span class="sxs-lookup"><span data-stu-id="7e102-109">The following C# code shows a situation in which knowledge of the context is necessary.</span></span>  
  
```csharp  
button1.Text = rm.GetString("button1_Text");  
```  
  
 <span data-ttu-id="7e102-110">In questo caso, il serializzatore responsabile della creazione dell'espressione di risorsa deve essere informato dei nomi degli oggetti di destinazione.</span><span class="sxs-lookup"><span data-stu-id="7e102-110">In this case, the serializer responsible for creating the resource expression needs to be informed of the names of the target objects.</span></span> <span data-ttu-id="7e102-111">La <xref:System.ComponentModel.Design.Serialization.ExpressionContext> classe può essere utilizzata per questo oggetto.</span><span class="sxs-lookup"><span data-stu-id="7e102-111">The <xref:System.ComponentModel.Design.Serialization.ExpressionContext> class can be used for this.</span></span> <span data-ttu-id="7e102-112">Poiché ciascun serializzatore crea un'espressione e richiama un serializzatore per gestire una parte ridotta dell'istruzione nel suo complesso, contesto di un'espressione il serializzatore inserisce nello stack di contesto.</span><span class="sxs-lookup"><span data-stu-id="7e102-112">As each serializer creates an expression and invokes a serializer to handle a smaller part of the statement as a whole, the serializer pushes an expression context on the context stack.</span></span> <span data-ttu-id="7e102-113">Ogni contesto di espressione è una proprietà padre che individua il contesto successivo nello stack.</span><span class="sxs-lookup"><span data-stu-id="7e102-113">Each expression context has a parent property that locates the next expression context on the stack.</span></span> <span data-ttu-id="7e102-114">Ciò fornisce un'efficace funzionalità di scorrimento.</span><span class="sxs-lookup"><span data-stu-id="7e102-114">This provides a convenient traversal capability.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.CodeDom.CodeExpression" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7e102-115">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="7e102-116">Espressione codice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-116">The given code expression.</span>
          </span>
        </param>
        <param name="expressionType">
          <span data-ttu-id="7e102-117">Tipo di espressione codice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-117">The given code expression type.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="7e102-118">Proprietario espressione codice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-118">The given code expression owner.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e102-119">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> con l'espressione e il proprietario specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with the given expression and owner.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7e102-120">
            <paramref name="expression" />, <paramref name="expressionType" /> o <paramref name="owner" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-120">
              <paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner, object presetValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner, object presetValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object, presetValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner, System::Object ^ presetValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
        <Parameter Name="presetValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="7e102-121">Espressione codice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-121">The given code expression.</span>
          </span>
        </param>
        <param name="expressionType">
          <span data-ttu-id="7e102-122">Tipo di espressione codice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-122">The given code expression type.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="7e102-123">Proprietario dell'espressione codice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-123">The given code expression owner.</span>
          </span>
        </param>
        <param name="presetValue">
          <span data-ttu-id="7e102-124">Valore del set di impostazioni dell'espressione codice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-124">The given code expression preset value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e102-125">Inizializza un'istanza nuova della classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> con un valore corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-125">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with a current value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7e102-126">
            <paramref name="expression" />, <paramref name="expressionType" /> o <paramref name="owner" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-126">
              <paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Expression" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Expression { System::CodeDom::CodeExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e102-127">Ottiene l'espressione rappresentata da questo contesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-127">Gets the expression this context represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e102-128">Espressione rappresentata da questo contesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-128">The expression this context represents.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e102-129">Ottiene la classe <see cref="T:System.Type" /> dell'espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-129">Gets the <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e102-130">Classe <see cref="T:System.Type" /> dell'espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-130">The <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e102-131">È possibile utilizzare <xref:System.ComponentModel.Design.Serialization.ExpressionContext> per determinare se è necessario un cast durante l'assegnazione all'espressione.</span><span class="sxs-lookup"><span data-stu-id="7e102-131">You can use <xref:System.ComponentModel.Design.Serialization.ExpressionContext> to determine if a cast is needed when assigning to the expression.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public object Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Owner { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e102-132">Ottiene l'oggetto proprietario di questa espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-132">Gets the object owning this expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e102-133">Oggetto proprietario di questa espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-133">The object owning this expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e102-134">Se l'espressione è un riferimento alla proprietà di <xref:System.Windows.Forms.Control.Text%2A> proprietà di un'istanza di <xref:System.Windows.Forms.Button> chiamato `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> restituisce `button1`.</span><span class="sxs-lookup"><span data-stu-id="7e102-134">If the expression is a property reference to the <xref:System.Windows.Forms.Control.Text%2A> property of an instance of <xref:System.Windows.Forms.Button> called `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> returns `button1`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="PresetValue">
      <MemberSignature Language="C#" Value="public object PresetValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PresetValue" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PresetValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PresetValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e102-135">Ottiene il valore predefinito di un'espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-135">Gets the preset value of an expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e102-136">Valore predefinito dell'espressione o <see langword="null" /> se non assegnato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e102-136">The preset value of this expression, or <see langword="null" /> if not assigned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e102-137">Contiene il valore predefinito di un'espressione, se ne esiste uno.</span><span class="sxs-lookup"><span data-stu-id="7e102-137">Contains the preset value of an expression, should one exist.</span></span> <span data-ttu-id="7e102-138">Ad esempio, se l'espressione è un'espressione di riferimento di proprietà che fa riferimento al <xref:System.Windows.Forms.Control.Controls%2A> proprietà di un <xref:System.Windows.Forms.Button>, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> proprietà contiene l'istanza del <xref:System.Windows.Forms.Control.Controls%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="7e102-138">For example, if the expression is a property reference expression referring to the <xref:System.Windows.Forms.Control.Controls%2A> property of a <xref:System.Windows.Forms.Button>, the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property contains the instance of the <xref:System.Windows.Forms.Control.Controls%2A> property.</span></span> <span data-ttu-id="7e102-139">In questo modo la proprietà è di sola lettura e set di impostazioni per l'oggetto contenga un valore.</span><span class="sxs-lookup"><span data-stu-id="7e102-139">This is because the property is read-only and preset by the object to contain a value.</span></span> <span data-ttu-id="7e102-140">D'altra parte, una proprietà, ad esempio <xref:System.Windows.Forms.Control.Text%2A> o <xref:System.Windows.Forms.Control.Visible%2A> non presenta un valore predefinito e pertanto il <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> restituisce proprietà `null`.</span><span class="sxs-lookup"><span data-stu-id="7e102-140">On the other hand, a property such as <xref:System.Windows.Forms.Control.Text%2A> or <xref:System.Windows.Forms.Control.Visible%2A> does not have a preset value and therefore the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property returns `null`.</span></span>  
  
 <span data-ttu-id="7e102-141">Il codice c# seguente viene illustrato come i serializzatori possono utilizzare queste informazioni per la serializzazione.</span><span class="sxs-lookup"><span data-stu-id="7e102-141">The following C# code shows how serializers can use this information to guide serialization.</span></span>  
  
```csharp  
Padding p = new Padding();  
p.Left = 5;  
button1.Padding = p;  
  
button1.Padding.Left = 5;  
```  
  
 <span data-ttu-id="7e102-142">Il serializzatore del <xref:System.Windows.Forms.Padding> struttura deve essere informato se deve generare il primo o secondo form.</span><span class="sxs-lookup"><span data-stu-id="7e102-142">The serializer of the <xref:System.Windows.Forms.Padding> structure needs to be informed if it should generate the first or second form.</span></span> <span data-ttu-id="7e102-143">Per impostazione predefinita, viene generato il primo form.</span><span class="sxs-lookup"><span data-stu-id="7e102-143">The first form is generated by default.</span></span> <span data-ttu-id="7e102-144">La seconda forma viene generata solo se è presente un <xref:System.ComponentModel.Design.Serialization.ExpressionContext> nello stack di contesto che contiene un <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> uguale al valore del <xref:System.Windows.Forms.Padding> in corso la serializzazione.</span><span class="sxs-lookup"><span data-stu-id="7e102-144">The second form is only generated if there is an <xref:System.ComponentModel.Design.Serialization.ExpressionContext> on the context stack that contains a <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> equal to the value of the <xref:System.Windows.Forms.Padding> currently being serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
  </Members>
</Type>