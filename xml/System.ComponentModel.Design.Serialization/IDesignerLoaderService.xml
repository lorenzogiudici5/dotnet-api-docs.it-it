<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="101efbeb4f9297253c7d86ddfb36bb534a207280" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36708551" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type IDesignerLoaderService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="01055-101">Fornisce un'interfaccia in grado di estendere un caricatore della finestra di progettazione in modo da supportare il caricamento asincrono di componenti esterni.</span>
      <span class="sxs-lookup">
        <span data-stu-id="01055-101">Provides an interface that can extend a designer loader to support asynchronous loading of external components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01055-102">Oggetto <xref:System.ComponentModel.Design.Serialization.DesignerLoader> può implementare questa interfaccia per gestire il caricamento della finestra di progettazione che coinvolge componenti esterni.</span><span class="sxs-lookup"><span data-stu-id="01055-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this interface to manage designer loading that involves external components.</span></span> <span data-ttu-id="01055-103">Questa interfaccia consente inoltre ai componenti esterni avviare un ricaricamento dell'area di progettazione chiamando <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</span><span class="sxs-lookup"><span data-stu-id="01055-103">This interface also allows external components to initiate a reload of the design surface by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</span></span> <span data-ttu-id="01055-104">Un caricatore della finestra di progettazione non è necessario implementare questa interfaccia se non richiede il supporto per il caricamento asincrono.</span><span class="sxs-lookup"><span data-stu-id="01055-104">A designer loader does not have to implement this interface if it does not require support for asynchronous loading.</span></span>  
  
 <span data-ttu-id="01055-105">Finestra di progettazione il caricamento tramite un'implementazione personalizzata del <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> può verificarsi in diversi modi.</span><span class="sxs-lookup"><span data-stu-id="01055-105">Designer loading using a custom implementation of the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> can occur in a variety of ways.</span></span> <span data-ttu-id="01055-106">Componenti esterni a volte sono coinvolti nel processo di caricamento.</span><span class="sxs-lookup"><span data-stu-id="01055-106">Sometimes external components are involved in the loading process.</span></span> <span data-ttu-id="01055-107">Per facilitare il caricamento con dipendenze esterne, l'interfaccia del servizio del caricatore della finestra di progettazione fornisce un meccanismo che determina quando il caricamento è completo e consente a ogni parte del caricamento per segnalare che è stata completata.</span><span class="sxs-lookup"><span data-stu-id="01055-107">To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed.</span></span> <span data-ttu-id="01055-108">Il <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> determina in genere quando il caricamento è completo eseguendo i test su un contatore che tiene traccia del numero di dipendenze del caricamento rimanenti.</span><span class="sxs-lookup"><span data-stu-id="01055-108">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining.</span></span> <span data-ttu-id="01055-109">Al termine di ogni parte del carico, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> viene chiamato e il servizio decrementa il contatore.</span><span class="sxs-lookup"><span data-stu-id="01055-109">When each portion of the load completes, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called, and the service decrements the counter.</span></span> <span data-ttu-id="01055-110">Per impostare il numero di processi di caricamento dipendenti, chiamare <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> una volta per ogni processo di caricamento che chiama <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> quando il caricamento è stato completato.</span><span class="sxs-lookup"><span data-stu-id="01055-110">To set the number of dependent load processes, call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each load process that calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> when its loading is complete.</span></span> <span data-ttu-id="01055-111">Al termine del caricamento finale, le chiamate al servizio <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> sull'host del caricatore.</span><span class="sxs-lookup"><span data-stu-id="01055-111">When the final loading is complete, the service calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> on the loader host.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberSignature Language="F#" Value="abstract member AddLoadDependency : unit -&gt; unit" Usage="iDesignerLoaderService.AddLoadDependency " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01055-112">Registra un componente esterno come parte del processo di caricamento gestito da questa interfaccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01055-112">Registers an external component as part of the load process managed by this interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01055-113">Chiamare <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> una volta per ogni oggetto esterno che partecipano al processo di caricamento.</span><span class="sxs-lookup"><span data-stu-id="01055-113">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each external object participating in the load process.</span></span> <span data-ttu-id="01055-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> viene chiamato al completamento del processo di caricamento.</span><span class="sxs-lookup"><span data-stu-id="01055-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called when the work of the load process is done.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberSignature Language="F#" Value="abstract member DependentLoadComplete : bool * System.Collections.ICollection -&gt; unit" Usage="iDesignerLoaderService.DependentLoadComplete (successful, errorCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <span data-ttu-id="01055-115">
            <see langword="true" /> se il caricamento della finestra di progettazione è riuscito; <see langword="false" /> se si sono verificati errori che hanno impedito il completamento del caricamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01055-115">
              <see langword="true" /> if the load of the designer is successful; <see langword="false" /> if errors prevented the load from finishing.</span>
          </span>
        </param>
        <param name="errorCollection">
          <span data-ttu-id="01055-116">Insieme di errori riscontrati durante il caricamento, se ne esistono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01055-116">A collection of errors that occurred during the load, if any.</span>
          </span>
          <span data-ttu-id="01055-117">Se non stati riscontrati errori, passare un insieme vuoto o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01055-117">If no errors occurred, pass either an empty collection or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01055-118">Segnala che un caricamento dipendente è terminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01055-118">Signals that a dependent load has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01055-119">Questo metodo viene chiamato per segnalare che un'operazione di caricamento dipendente è stata completata.</span><span class="sxs-lookup"><span data-stu-id="01055-119">This method is called to signal that a dependent loading operation has completed.</span></span> <span data-ttu-id="01055-120">Chiamare <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> una volta per ogni processo che è stato registrato tramite la chiamata <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, che è già stata completata.</span><span class="sxs-lookup"><span data-stu-id="01055-120">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> once for every process that was registered by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, which has already completed.</span></span>  
  
 <span data-ttu-id="01055-121">Se il carico dipendenti ha esito positivo, il chiamante imposta il `successful` parametro a `true` e passa un insieme vuoto o `null` per il `errorCollection` parametro.</span><span class="sxs-lookup"><span data-stu-id="01055-121">If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter.</span></span> <span data-ttu-id="01055-122">Se si riscontrano errori durante il caricamento dipendente, il chiamante imposta il `successful` parametro a `false` e passa una raccolta di eccezioni che indicano il motivo dell'errore di `errorCollection` parametro.</span><span class="sxs-lookup"><span data-stu-id="01055-122">If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; bool" Usage="iDesignerLoaderService.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01055-123">Ricarica il documento di progettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01055-123">Reloads the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01055-124">
            <see langword="true" /> se la richiesta di caricamento viene accettata oppure <see langword="false" /> se il caricatore non consente il ricaricamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01055-124">
              <see langword="true" /> if the reload request is accepted, or <see langword="false" /> if the loader does not allow the reload.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01055-125">Qualsiasi oggetto può chiamare questo metodo per richiedere che il caricatore ricarichi il documento di progettazione.</span><span class="sxs-lookup"><span data-stu-id="01055-125">Any object can call this method to request that the loader reload the design document.</span></span> <span data-ttu-id="01055-126">Se il caricatore supporta ed esegue il ricaricamento, il caricatore della finestra di progettazione può restituire `true`.</span><span class="sxs-lookup"><span data-stu-id="01055-126">If the loader supports reloading and complies with the reload, the designer loader can return `true`.</span></span> <span data-ttu-id="01055-127">In caso contrario, restituirà `false`, che indica che non si verificherà il ricaricamento.</span><span class="sxs-lookup"><span data-stu-id="01055-127">Otherwise, it returns `false`, indicating that the reload will not occur.</span></span> <span data-ttu-id="01055-128">I chiamanti non si ricarica il problema immediatamente. il caricatore della finestra di progettazione può pianificare per un secondo momento oppure è possibile provare a ricaricare in una sola volta.</span><span class="sxs-lookup"><span data-stu-id="01055-128">Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.</span></span>  
  
 <span data-ttu-id="01055-129">Il chiamante può visualizzare un messaggio all'utente se la finestra di progettazione non può essere ricaricato.</span><span class="sxs-lookup"><span data-stu-id="01055-129">The caller can display a message to the user if the designer cannot be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>