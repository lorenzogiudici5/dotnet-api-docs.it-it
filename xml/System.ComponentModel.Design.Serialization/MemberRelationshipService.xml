<Type Name="MemberRelationshipService" FullName="System.ComponentModel.Design.Serialization.MemberRelationshipService">
  <TypeSignature Language="C#" Value="public abstract class MemberRelationshipService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MemberRelationshipService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MemberRelationshipService" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberRelationshipService abstract" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bd166-101">Fornisce la classe base per mettere in relazione un membro con un altro.</span><span class="sxs-lookup"><span data-stu-id="bd166-101">Provides the base class for relating one member to another.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd166-102">Finestre di progettazione serializzarsi in codice attraverso un motore di ricerca i valori delle proprietà in tempo reale di oggetti che genera tali valori come codice.</span><span class="sxs-lookup"><span data-stu-id="bd166-102">Designers serialize themselves to code through an engine that searches through the live property values of objects and generates those values as code.</span></span> <span data-ttu-id="bd166-103">In tal caso, ad esempio, il testo di un pulsante viene generato nel formato seguente.</span><span class="sxs-lookup"><span data-stu-id="bd166-103">So, for example, the text of a button is generated in the following format.</span></span>  
  
```csharp  
this.okButton.Text = "OK";  
```  
  
 <span data-ttu-id="bd166-104">Uno dei limiti di questo schema è che è difficile recuperare una proprietà da un altro percorso.</span><span class="sxs-lookup"><span data-stu-id="bd166-104">One of the limitations of this scheme is that it is difficult to retrieve a property from another location.</span></span> <span data-ttu-id="bd166-105">Ad esempio, è molto difficile generare il codice nel formato seguente, poiché l'unico elemento il generatore di codice può basarsi su è il valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="bd166-105">For example, it is very difficult to emit code in the following format, because the only thing the code generator can rely on is the value in the property.</span></span>  
  
```csharp  
this.titleLabel.Text = this.Text;  
```  
  
   
  
## Examples  
 <span data-ttu-id="bd166-106">Il <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService> semplifica il recupero del valore della proprietà da un altro percorso.</span><span class="sxs-lookup"><span data-stu-id="bd166-106">The <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService> simplifies retrieval of a property value from another location.</span></span> <span data-ttu-id="bd166-107">Questo servizio per imporre che un membro viene assegnato il valore di un altro può accedere a una finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="bd166-107">A designer can access this service to dictate that one member is assigned the value of another.</span></span> <span data-ttu-id="bd166-108">Il generatore di codice cerca tali relazioni durante la generazione di codice e, se una relazione tra due membri viene trovata il generatore di codice, genera codice per la relazione anziché cercare il valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="bd166-108">The code generator searches for such relationships when generating code, and if a relationship between two members is found the code generator, it emits code for the relationship rather than searching for the property value.</span></span> <span data-ttu-id="bd166-109">Utilizzando l'assegnazione di testo precedente come esempio, il codice riportato di seguito viene illustrato Progettazione codice ora utilizzato per stabilire una relazione.</span><span class="sxs-lookup"><span data-stu-id="bd166-109">Using the previous text assignment as an example, the following code example shows design time code used to establish a relationship.</span></span>  
  
```csharp  
object titleLabel, form;  
PropertyDescriptor titleLabelText = TypeDescriptor.GetProperties(titleLabel)["Text"];  
PropertyDescriptor formText = TypeDescriptor.GetProperties(form)["Text"];  
MemberRelationshipService ms = GetService(typeof(MemberRelationshipService);  
ms[titleLabel, titleLabelText] = new MemberRelationship(form, formText);  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="bd166-110">Il <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /> classe <see langword="abstract" />.</span><span class="sxs-lookup"><span data-stu-id="bd166-110">The <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /> class is <see langword="abstract" />.</span></span> <span data-ttu-id="bd166-111">Implementazione di una versione concreta varia a seconda dei tipi di membri che sono supportati.</span><span class="sxs-lookup"><span data-stu-id="bd166-111">Implementing a concrete version varies depending on the types of members that are supported.</span></span> <span data-ttu-id="bd166-112">Riguardanti un evento, ad esempio, potrebbero richiedere un'implementazione diversa rispetto a una proprietà di relativa a un altro.</span><span class="sxs-lookup"><span data-stu-id="bd166-112">For example, relating one event to another might require a different implementation than relating one property to another.</span></span> <span data-ttu-id="bd166-113">Implementazione del servizio richiede i passaggi seguenti:</span><span class="sxs-lookup"><span data-stu-id="bd166-113">Implementing the service requires the following steps:</span></span>  
  
-   <span data-ttu-id="bd166-114">Implementare <see cref="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" /> per restituire <see langword="true" /> per le relazioni supportate.</span><span class="sxs-lookup"><span data-stu-id="bd166-114">Implement <see cref="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" /> to return <see langword="true" /> for relationships that you support.</span></span>  
  
-   <span data-ttu-id="bd166-115">Tenere traccia delle modifiche per le modifiche di valore origine relazione e assegnare alla relazione di destinazione.</span><span class="sxs-lookup"><span data-stu-id="bd166-115">Track changes to the source relationship and assign value changes into the target relationship.</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MemberRelationshipService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MemberRelationshipService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bd166-116">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" />.</span><span class="sxs-lookup"><span data-stu-id="bd166-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRelationship (source As MemberRelationship) As MemberRelationship" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::Serialization::MemberRelationship GetRelationship(System::ComponentModel::Design::Serialization::MemberRelationship source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.MemberRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bd166-117">Relazione di origine.</span><span class="sxs-lookup"><span data-stu-id="bd166-117">The source relationship.</span></span></param>
        <summary><span data-ttu-id="bd166-118">Ottiene una relazione con la relazione di origine data.</span><span class="sxs-lookup"><span data-stu-id="bd166-118">Gets a relationship to the given source relationship.</span></span></summary>
        <returns><span data-ttu-id="bd166-119">Relazione con <paramref name="source" /> o <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> se non è presente alcuna relazione.</span><span class="sxs-lookup"><span data-stu-id="bd166-119">A relationship to <paramref name="source" />, or <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> if no relationship exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd166-120">L'implementazione predefinita archivia le relazioni in un dizionario mediante riferimenti deboli, pertanto la tabella delle relazioni non conserva gli oggetti.</span><span class="sxs-lookup"><span data-stu-id="bd166-120">The default implementation stores relationships in a dictionary using weak references, so the relationship table does not keep objects alive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bd166-121">Stabilisce una relazione tra un oggetto di origine e uno di destinazione.</span><span class="sxs-lookup"><span data-stu-id="bd166-121">Establishes a relationship between a source and target object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.MemberRelationship this[System.ComponentModel.Design.Serialization.MemberRelationship source] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship Item(valuetype System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(source As MemberRelationship) As MemberRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::MemberRelationship default[System::ComponentModel::Design::Serialization::MemberRelationship] { System::ComponentModel::Design::Serialization::MemberRelationship get(System::ComponentModel::Design::Serialization::MemberRelationship source); void set(System::ComponentModel::Design::Serialization::MemberRelationship source, System::ComponentModel::Design::Serialization::MemberRelationship value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.MemberRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bd166-122">Relazione di origine.</span><span class="sxs-lookup"><span data-stu-id="bd166-122">The source relationship.</span></span> <span data-ttu-id="bd166-123">Si tratta della parte sinistra dell'assegnazione di una relazione.</span><span class="sxs-lookup"><span data-stu-id="bd166-123">This is the left-hand side of a relationship assignment.</span></span></param>
        <summary><span data-ttu-id="bd166-124">Stabilisce una relazione tra un oggetto di origine e uno di destinazione.</span><span class="sxs-lookup"><span data-stu-id="bd166-124">Establishes a relationship between a source and target object.</span></span></summary>
        <value><span data-ttu-id="bd166-125">Relazione corrente associata a <paramref name="source" /> o <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> se non è presente alcuna relazione.</span><span class="sxs-lookup"><span data-stu-id="bd166-125">The current relationship associated with <paramref name="source" />, or <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> if there is no relationship.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd166-126">Se <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty> viene assegnato all'origine, viene rimosso tutte le relazioni esistenti.</span><span class="sxs-lookup"><span data-stu-id="bd166-126">If <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty> is assigned to the source, any existing relationship is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bd166-127"><paramref name="source" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bd166-127"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bd166-128"><paramref name="source" /> è vuoto o la relazione non è supportata dal servizio.</span><span class="sxs-lookup"><span data-stu-id="bd166-128"><paramref name="source" /> is empty, or the relationship is not supported by the service.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.MemberRelationship this[object sourceOwner, System.ComponentModel.MemberDescriptor sourceMember] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship Item(object, class System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(sourceOwner As Object, sourceMember As MemberDescriptor) As MemberRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::MemberRelationship default[System::Object ^, System::ComponentModel::MemberDescriptor ^] { System::ComponentModel::Design::Serialization::MemberRelationship get(System::Object ^ sourceOwner, System::ComponentModel::MemberDescriptor ^ sourceMember); void set(System::Object ^ sourceOwner, System::ComponentModel::MemberDescriptor ^ sourceMember, System::ComponentModel::Design::Serialization::MemberRelationship value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.MemberRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOwner" Type="System.Object" />
        <Parameter Name="sourceMember" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="sourceOwner"><span data-ttu-id="bd166-129">Proprietario di una relazione di origine.</span><span class="sxs-lookup"><span data-stu-id="bd166-129">The owner of a source relationship.</span></span></param>
        <param name="sourceMember"><span data-ttu-id="bd166-130">Membro di una relazione di origine.</span><span class="sxs-lookup"><span data-stu-id="bd166-130">The member of a source relationship.</span></span></param>
        <summary><span data-ttu-id="bd166-131">Stabilisce una relazione tra un oggetto di origine e uno di destinazione.</span><span class="sxs-lookup"><span data-stu-id="bd166-131">Establishes a relationship between a source and target object.</span></span></summary>
        <value><span data-ttu-id="bd166-132">Struttura <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> che incapsula la relazione tra un oggetto di origine e uno di destinazione o <see langword="null" /> se non è presente alcuna relazione.</span><span class="sxs-lookup"><span data-stu-id="bd166-132">A <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> structure encapsulating the relationship between a source and target object, or <see langword="null" /> if there is no relationship.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bd166-133"><paramref name="sourceOwner" /> o <paramref name="sourceMember" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bd166-133"><paramref name="sourceOwner" /> or <paramref name="sourceMember" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bd166-134"><paramref name="sourceOwner" /> o <paramref name="sourceMember" /> è vuoto o la relazione non è supportata dal servizio.</span><span class="sxs-lookup"><span data-stu-id="bd166-134"><paramref name="sourceOwner" /> or <paramref name="sourceMember" /> is empty, or the relationship is not supported by the service.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetRelationship">
      <MemberSignature Language="C#" Value="protected virtual void SetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source, valuetype System.ComponentModel.Design.Serialization.MemberRelationship relationship) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetRelationship (source As MemberRelationship, relationship As MemberRelationship)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetRelationship(System::ComponentModel::Design::Serialization::MemberRelationship source, System::ComponentModel::Design::Serialization::MemberRelationship relationship);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
        <Parameter Name="relationship" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bd166-135">Relazione di origine.</span><span class="sxs-lookup"><span data-stu-id="bd166-135">The source relationship.</span></span></param>
        <param name="relationship"><span data-ttu-id="bd166-136">Relazione da impostare nell'origine.</span><span class="sxs-lookup"><span data-stu-id="bd166-136">The relationship to set into the source.</span></span></param>
        <summary><span data-ttu-id="bd166-137">Crea una relazione tra l'oggetto di origine e la relazione di destinazione.</span><span class="sxs-lookup"><span data-stu-id="bd166-137">Creates a relationship between the source object and target relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd166-138">Il <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A> metodo cancella tutte le relazioni esistenti se il parametro di relazione è <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty>.</span><span class="sxs-lookup"><span data-stu-id="bd166-138">The <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A> method clears any existing relationship if the relationship parameter is <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty>.</span></span> <span data-ttu-id="bd166-139">L'implementazione predefinita archivia le relazioni in un dizionario mediante riferimenti deboli, pertanto la tabella delle relazioni non conserva gli oggetti.</span><span class="sxs-lookup"><span data-stu-id="bd166-139">The default implementation stores relationships in a dictionary using weak references so the relationship table does not keep objects alive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bd166-140">La relazione non è supportata dal servizio.</span><span class="sxs-lookup"><span data-stu-id="bd166-140">The relationship is not supported by the service.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsRelationship">
      <MemberSignature Language="C#" Value="public abstract bool SupportsRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source, valuetype System.ComponentModel.Design.Serialization.MemberRelationship relationship) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SupportsRelationship (source As MemberRelationship, relationship As MemberRelationship) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SupportsRelationship(System::ComponentModel::Design::Serialization::MemberRelationship source, System::ComponentModel::Design::Serialization::MemberRelationship relationship);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
        <Parameter Name="relationship" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bd166-141">Relazione di origine.</span><span class="sxs-lookup"><span data-stu-id="bd166-141">The source relationship.</span></span></param>
        <param name="relationship"><span data-ttu-id="bd166-142">Relazione da impostare nell'origine.</span><span class="sxs-lookup"><span data-stu-id="bd166-142">The relationship to set into the source.</span></span></param>
        <summary><span data-ttu-id="bd166-143">Ottiene un valore che indica se la relazione data è supportata.</span><span class="sxs-lookup"><span data-stu-id="bd166-143">Gets a value indicating whether the given relationship is supported.</span></span></summary>
        <returns>
          <span data-ttu-id="bd166-144"><see langword="true" /> se è supportata una relazione tra questi due oggetti; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bd166-144"><see langword="true" /> if a relationship between the given two objects is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>