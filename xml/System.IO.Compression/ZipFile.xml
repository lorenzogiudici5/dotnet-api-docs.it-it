<Type Name="ZipFile" FullName="System.IO.Compression.ZipFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88034d68d75d40c45b81e7a4eacf96ea28478340" />
    <Meta Name="ms.sourcegitcommit" Value="29c771f79cf4eac4f49e5fae5f1aa8b457acf146" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/21/2018" />
    <Meta Name="ms.locfileid" Value="36298804" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ZipFile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ZipFile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipFile" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipFile" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipFile abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce metodi statici per la creazione, l'estrazione e l'apertura di archivi ZIP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Utilizzare il <xref:System.IO.Compression.ZipFile> (classe), è necessario aggiungere un riferimento al `System.IO.Compression.FileSystem` assembly nel progetto; in caso contrario, si otterrà il seguente messaggio di errore durante il tentativo di compilazione: **il nome 'ZipFile' non esiste nel contesto corrente**. Per ulteriori informazioni su come aggiungere un riferimento al progetto in Visual Studio, vedere [procedura: aggiungere o rimuovere riferimenti mediante Gestione riferimenti](http://msdn.microsoft.com/library/1aabb520-99b0-46c6-9368-21b4d84793eb).  
  
 I metodi per la modifica di archivi zip e i file sono suddivisi in tre classi: <xref:System.IO.Compression.ZipFile>, <xref:System.IO.Compression.ZipArchive> e <xref:System.IO.Compression.ZipArchiveEntry>.  
  
|A...|Usare...|  
|---------|----------|  
|Creare un archivio zip da una directory|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|Estrarre il contenuto di un archivio zip in una directory|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|Aggiungere nuovi file in un archivio zip esistente|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|Recuperare un file in un archivio zip|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|Recuperare tutti i file in un archivio zip|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|Per aprire un flusso a un singolo file contenuti in un archivio zip|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|Eliminare un file da un archivio zip|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 Non è possibile utilizzare il <xref:System.IO.Compression.ZipFile> o <xref:System.IO.Compression.ZipFileExtensions> classi [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app. In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] App, è necessario usare le classi seguenti per utilizzare i file compressi.  
  
-   <xref:System.IO.Compression.ZipArchive>  
  
-   <xref:System.IO.Compression.ZipArchiveEntry>  
  
-   <xref:System.IO.Compression.DeflateStream>  
  
-   <xref:System.IO.Compression.GZipStream>  
  
   
  
## Examples  
 In questo esempio viene illustrato come creare e utilizzare per estrarre un archivio zip di <xref:System.IO.Compression.ZipFile> classe. Comprime il contenuto di una cartella in un archivio zip e quindi estrae il contenuto in una nuova cartella.  
  
> [!TIP]
>  Per usare la classe <xref:System.IO.Compression.ZipFile>, è necessario referenziare l'assembly `System.IO.Compression.FileSystem` nel progetto.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateFromDirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un archivio ZIP che contiene i file e le directory della directory specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateFromDirectory (sourceDirectoryName As String, destinationArchiveFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">Percorso della directory da archiviare, specificato come percorso relativo o assoluto. Un percorso relativo è interpretato rispetto alla directory di lavoro corrente.</param>
        <param name="destinationArchiveFileName">Percorso dell'archivio da creare, specificato come percorso relativo o assoluto. Un percorso relativo è interpretato rispetto alla directory di lavoro corrente.</param>
        <summary>Crea un archivio ZIP che contiene i file e le directory della directory specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La struttura di directory dal file system viene mantenuta nell'archivio. Se la directory è vuota, viene creato un archivio vuoto. Questo overload del metodo non include la directory di base nell'archivio e non consente di specificare un livello di compressione. Se si desidera includere la directory di base o specificare una chiamata di livello, la compressione di <xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29> overload del metodo.  
  
 Se l'archivio esiste già, un <xref:System.IO.IOException> viene generata un'eccezione. Se una voce con il nome specificato esiste già nell'archivio, una seconda voce viene creata con lo stesso nome.  
  
 Se non è possibile aggiungere un file nella directory dell'archivio, l'archivio è incompleta e non valido e il metodo genera un <xref:System.IO.IOException> eccezione.  
  
   
  
## Examples  
 In questo esempio viene illustrato come creare e utilizzare per estrarre un archivio zip di <xref:System.IO.Compression.ZipFile> classe. Comprime il contenuto di una cartella in un archivio zip e quindi estrae il contenuto in una nuova cartella. Per usare la classe <xref:System.IO.Compression.ZipFile>, è necessario referenziare l'assembly `System.IO.Compression.FileSystem` nel progetto.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> è <see cref="F:System.String.Empty" />, contiene solo spazi vuoti oppure almeno un carattere non valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">In <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" />, il percorso, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="sourceDirectoryName" /> non è valido o non esiste, poiché, ad esempio, si trova su un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="destinationArchiveFileName" /> esiste già.  - oppure - Impossibile aprire un file nella directory specificata.</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="destinationArchiveFileName" /> specifica una directory.  - oppure - Il chiamante non dispone dell'autorizzazione richiesta per accedere alla directory specificata in <paramref name="sourceDirectoryName" /> o al file specificato in <paramref name="destinationArchiveFileName" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> contiene un formato non valido.  - oppure - L'archivio ZIP non supporta la scrittura.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName, System::IO::Compression::CompressionLevel compressionLevel, bool includeBaseDirectory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
        <Parameter Name="includeBaseDirectory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">Percorso della directory da archiviare, specificato come percorso relativo o assoluto. Un percorso relativo è interpretato rispetto alla directory di lavoro corrente.</param>
        <param name="destinationArchiveFileName">Percorso dell'archivio da creare, specificato come percorso relativo o assoluto. Un percorso relativo è interpretato rispetto alla directory di lavoro corrente.</param>
        <param name="compressionLevel">Uno dei valori di enumerazione che indica se privilegiare la velocità o l'efficacia di compressione quando si crea la voce.</param>
        <param name="includeBaseDirectory">
          <see langword="true" /> per includere il nome della directory da <c>sourceDirectoryName</c> nella directory radice dell'archivio; <see langword="false" /> per includere solo il contenuto della directory.</param>
        <summary>Crea un archivio ZIP che contiene i file e le directory della directory specificata, usa il livello di compressione specificato e facoltativamente include la directory di base.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La struttura di directory dal file system viene mantenuta nell'archivio. Se la directory è vuota, viene creato un archivio vuoto. Utilizzare questo overload del metodo per specificare il livello di compressione e se includere la directory di base nell'archivio.  
  
 Se l'archivio esiste già, un <xref:System.IO.IOException> viene generata un'eccezione. Se una voce con il nome specificato esiste già nell'archivio, una seconda voce viene creata con lo stesso nome.  
  
 Se non è possibile aggiungere un file nella directory dell'archivio, l'archivio è incompleta e non valido e il metodo genera un <xref:System.IO.IOException> eccezione.  
  
   
  
## Examples  
 In questo esempio viene illustrato come creare e utilizzare per estrarre un archivio zip di <xref:System.IO.Compression.ZipFile> classe. Comprime il contenuto di una cartella in un archivio zip e quindi estrae il contenuto in una nuova cartella. Quando si comprime l'archivio, la directory di base è inclusa e il livello di compressione è impostato su privilegiare la velocità dell'operazione rispetto l'efficienza. Per usare la classe <xref:System.IO.Compression.ZipFile>, è necessario referenziare l'assembly `System.IO.Compression.FileSystem` nel progetto.  
  
 [!code-csharp[System.IO.Compression.ZipFile#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipFile#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> è <see cref="F:System.String.Empty" />, contiene solo spazi vuoti oppure almeno un carattere non valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">In <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" />, il percorso, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="sourceDirectoryName" /> non è valido o non esiste, poiché, ad esempio, si trova su un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="destinationArchiveFileName" /> esiste già.  - oppure - Impossibile aprire un file nella directory specificata.</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="destinationArchiveFileName" /> specifica una directory.  - oppure - Il chiamante non dispone dell'autorizzazione richiesta per accedere alla directory specificata in <paramref name="sourceDirectoryName" /> o al file specificato in <paramref name="destinationArchiveFileName" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> contiene un formato non valido.  - oppure - L'archivio ZIP non supporta la scrittura.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName, System::IO::Compression::CompressionLevel compressionLevel, bool includeBaseDirectory, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
        <Parameter Name="includeBaseDirectory" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">Percorso della directory da archiviare, specificato come percorso relativo o assoluto. Un percorso relativo è interpretato rispetto alla directory di lavoro corrente.</param>
        <param name="destinationArchiveFileName">Percorso dell'archivio da creare, specificato come percorso relativo o assoluto. Un percorso relativo è interpretato rispetto alla directory di lavoro corrente.</param>
        <param name="compressionLevel">Uno dei valori di enumerazione che indica se privilegiare la velocità o l'efficacia di compressione quando si crea la voce.</param>
        <param name="includeBaseDirectory">
          <see langword="true" /> per includere il nome della directory da <c>sourceDirectoryName</c> nella directory radice dell'archivio; <see langword="false" /> per includere solo il contenuto della directory.</param>
        <param name="entryNameEncoding">La codifica da usate durante la lettura o la scrittura dei nomi delle voci in questo archivio. Specificare un valore per il parametro solo quando una codifica è obbligatoria per l'interoperabilità con gli strumenti e le librerie dell'archivio ZIP che non supportano la codifica UTF-8 per i nomi di voce.</param>
        <summary>Crea un archivio ZIP che contiene i file e le directory della directory specificata, usa il livello di compressione e la codifica caratteri specificati per i nomi di voce e facoltativamente include la directory di base.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La struttura di directory dal file system viene mantenuta nell'archivio. Se la directory è vuota, viene creato un archivio vuoto. Utilizzare questo overload del metodo per specificare il livello di compressione e la codifica dei caratteri e se includere la directory di base nell'archivio.  
  
 Se l'archivio esiste già, un <xref:System.IO.IOException> viene generata un'eccezione. Se una voce con il nome specificato esiste già nell'archivio, una seconda voce viene creata con lo stesso nome.  
  
 Se non è possibile aggiungere un file nella directory dell'archivio, l'archivio è incompleta e non valido e il metodo genera un <xref:System.IO.IOException> eccezione.  
  
 Se `entryNameEncoding` è impostata su un valore diverso da `null`, i nomi delle voci vengono codificati utilizzando la codifica specificata. Se la codifica specificata è un UTF-8, la codifica flag (nel flag di bit di uso generale dell'intestazione del file locale) della lingua è impostata per ogni voce,  
  
 Se `entryNameEncoding` è impostato su `null`, i nomi delle voci codificate secondo le regole seguenti:  
  
-   Per i nomi di voci che contengono caratteri di fuori dell'intervallo ASCII, viene impostato il flag di codifica di lingua e UTF-8 viene utilizzato per codificare il nome della voce.  
  
-   Per i nomi di voci che contengono solo caratteri ASCII, viene impostato il flag di codifica di lingua e la tabella codici predefinita del sistema corrente viene utilizzata per codificare i nomi delle voci.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> è <see cref="F:System.String.Empty" />, contiene solo spazi vuoti oppure almeno un carattere non valido.  - oppure - <paramref name="entryNameEncoding" /> è impostato su una codifica Unicode diversa da UTF-8.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">In <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" />, il percorso, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="sourceDirectoryName" /> non è valido o non esiste, poiché, ad esempio, si trova su un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="destinationArchiveFileName" /> esiste già.  - oppure - Impossibile aprire un file nella directory specificata.</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="destinationArchiveFileName" /> specifica una directory.  - oppure - Il chiamante non dispone dell'autorizzazione richiesta per accedere alla directory specificata in <paramref name="sourceDirectoryName" /> o al file specificato in <paramref name="destinationArchiveFileName" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> contiene un formato non valido.  - oppure - L'archivio ZIP non supporta la scrittura.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExtractToDirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Estrae tutti i file nell'archivio ZIP specificato in una directory del file system.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">Percorso dell'archivio da estrarre.</param>
        <param name="destinationDirectoryName">Percorso della directory in cui inserire i file estratti, specificato come percorso relativo o assoluto. Un percorso relativo è interpretato rispetto alla directory di lavoro corrente.</param>
        <summary>Estrae tutti i file nell'archivio ZIP specificato in una directory del file system.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea la directory specificata e tutte le sottodirectory. La directory di destinazione non può già esistere. Le eccezioni correlate alla convalida dei percorsi nella `destinationDirectoryName` o `sourceArchiveFileName` i parametri vengono generati prima dell'estrazione. In caso contrario, se si verifica un errore durante l'estrazione, l'archivio resta parzialmente estratto. Ogni file estratto con lo stesso percorso relativo della directory specificata da `destinationDirectoryName` come origine della voce di è alla radice dell'archivio.  
  
   
  
## Examples  
 In questo esempio viene illustrato come creare e utilizzare per estrarre un archivio zip di <xref:System.IO.Compression.ZipFile> classe. Comprime il contenuto di una cartella in un archivio zip ed estrae il contenuto in una nuova cartella. Per usare la classe <xref:System.IO.Compression.ZipFile>, è necessario referenziare l'assembly `System.IO.Compression.FileSystem` nel progetto.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> è <see cref="F:System.String.Empty" />, contiene solo spazi vuoti oppure almeno un carattere non valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso specificata in <paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> supera la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">La directory specificata da <paramref name="destinationDirectoryName" /> esiste già.  - oppure - Il nome di una voce nell'archivio è <see cref="F:System.String.Empty" />, contiene solo spazi vuoti oppure contiene almeno un carattere non valido.  - oppure - L'estrazione di una voce dell'archivio crea un file esterno alla directory specificata da <paramref name="destinationDirectoryName" />. (Ad esempio, ciò potrebbe verificarsi se il nome della voce contiene funzioni di accesso alla directory padre.) - oppure - una voce dell'archivio da estrarre ha lo stesso nome di una voce che è già stata estratta dallo stesso archivio.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione necessaria per accedere all'archivio o alla directory di destinazione.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> contiene un formato non valido.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="sourceArchiveFileName" /> non è stato trovato.</exception>
        <exception cref="T:System.IO.InvalidDataException">L'archivio specificato nel parametro <paramref name="sourceArchiveFileName" /> non è un archivio ZIP valido.  - oppure - È stato impossibile trovare una voce dell'archivio o era danneggiata.  - oppure - Una voce dell'archivio è stata compressa con un metodo di compressione non supportato.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, bool overwriteFiles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">To be added.</param>
        <param name="destinationDirectoryName">To be added.</param>
        <param name="overwriteFiles">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, entryNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">Percorso dell'archivio da estrarre.</param>
        <param name="destinationDirectoryName">Percorso della directory in cui inserire i file estratti, specificato come percorso relativo o assoluto. Un percorso relativo è interpretato rispetto alla directory di lavoro corrente.</param>
        <param name="entryNameEncoding">La codifica da usate durante la lettura o la scrittura dei nomi delle voci in questo archivio. Specificare un valore per il parametro solo quando una codifica è obbligatoria per l'interoperabilità con gli strumenti e le librerie dell'archivio ZIP che non supportano la codifica UTF-8 per i nomi di voce.</param>
        <summary>Estrae tutti i file nell'archivio ZIP specificato in una directory del file system e usa la codifica caratteri specificata per i nomi di voci.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea la directory specificata e tutte le sottodirectory. La directory di destinazione non può già esistere. Le eccezioni correlate alla convalida dei percorsi nella `destinationDirectoryName` o `sourceArchiveFileName` i parametri vengono generati prima dell'estrazione. In caso contrario, se si verifica un errore durante l'estrazione, l'archivio resta parzialmente estratto. Ogni file estratto con lo stesso percorso relativo della directory specificata da `destinationDirectoryName` come origine della voce di è alla radice dell'archivio.  
  
 Se `entryNameEncoding` è impostata su un valore diverso da `null`, i nomi delle voci vengono decodificati secondo le regole seguenti:  
  
-   Per i nomi delle voci in cui non è impostato il flag (nel flag di bit di uso generale dell'intestazione del file locale) di codifica, i nomi delle voci vengono decodificati utilizzando la codifica specificata.  
  
-   Per le voci in cui è impostato il flag di codifica della lingua, i nomi delle voci vengono decodificati utilizzando UTF-8.  
  
 Se `entryNameEncoding` è impostato su `null`, i nomi delle voci vengono decodificati secondo le regole seguenti:  
  
-   Per le voci in cui non è impostato il flag (nel flag di bit di uso generale dell'intestazione del file locale) di codifica, i nomi delle voci vengono decodificati utilizzando la tabella codici predefinita del sistema corrente.  
  
-   Per le voci in cui è impostato il flag di codifica della lingua, i nomi delle voci vengono decodificati utilizzando UTF-8.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> è <see cref="F:System.String.Empty" />, contiene solo spazi vuoti oppure almeno un carattere non valido.  - oppure - <paramref name="entryNameEncoding" /> è impostato su una codifica Unicode diversa da UTF-8.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso specificata in <paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> supera la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">La directory specificata da <paramref name="destinationDirectoryName" /> esiste già.  - oppure - Il nome di una voce nell'archivio è <see cref="F:System.String.Empty" />, contiene solo spazi vuoti oppure contiene almeno un carattere non valido.  - oppure - L'estrazione di una voce dell'archivio crea un file esterno alla directory specificata da <paramref name="destinationDirectoryName" />. (Ad esempio, ciò potrebbe verificarsi se il nome della voce contiene funzioni di accesso alla directory padre.) - oppure - una voce dell'archivio da estrarre ha lo stesso nome di una voce che è già stata estratta dallo stesso archivio.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione necessaria per accedere all'archivio o alla directory di destinazione.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> contiene un formato non valido.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="sourceArchiveFileName" /> non è stato trovato.</exception>
        <exception cref="T:System.IO.InvalidDataException">L'archivio specificato nel parametro <paramref name="sourceArchiveFileName" /> non è un archivio ZIP valido.  - oppure - È stato impossibile trovare una voce dell'archivio o era danneggiata.  - oppure - Una voce dell'archivio è stata compressa con un metodo di compressione non supportato.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, class System.Text.Encoding entryNameEncoding, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, entryNameEncoding As Encoding, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, System::Text::Encoding ^ entryNameEncoding, bool overwriteFiles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">To be added.</param>
        <param name="destinationDirectoryName">To be added.</param>
        <param name="entryNameEncoding">To be added.</param>
        <param name="overwriteFiles">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Apre un archivio ZIP in corrispondenza del percorso specificato e nella modalità specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive Open(string archiveFileName, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (archiveFileName As String, mode As ZipArchiveMode) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ Open(System::String ^ archiveFileName, System::IO::Compression::ZipArchiveMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">Percorso dell'archivio da aprire, specificato come percorso relativo o assoluto. Un percorso relativo è interpretato rispetto alla directory di lavoro corrente.</param>
        <param name="mode">Uno dei valori di enumerazione che specifica le azioni consentite sulle voci nell'archivio aperto.</param>
        <summary>Apre un archivio ZIP in corrispondenza del percorso specificato e nella modalità specificata.</summary>
        <returns>Archivio ZIP aperto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si imposta la `mode` parametro <xref:System.IO.Compression.ZipArchiveMode.Read>, l'archivio viene aperto con <xref:System.IO.FileMode.Open> dal <xref:System.IO.FileMode> enumerazione come il valore della modalità file. Se l'archivio non esiste, un <xref:System.IO.FileNotFoundException> viene generata un'eccezione. Impostazione di `mode` parametro <xref:System.IO.Compression.ZipArchiveMode.Read> è equivalente alla chiamata di <xref:System.IO.Compression.ZipFile.OpenRead%2A> (metodo).  
  
 Quando si imposta la `mode` parametro <xref:System.IO.Compression.ZipArchiveMode.Create>, l'archivio viene aperto con <xref:System.IO.FileMode.CreateNew?displayProperty=nameWithType> come il valore della modalità file. Se l'archivio esiste già, un <xref:System.IO.IOException> viene generata un'eccezione.  
  
 Quando si imposta la `mode` parametro <xref:System.IO.Compression.ZipArchiveMode.Update>, l'archivio viene aperto con <xref:System.IO.FileMode.OpenOrCreate?displayProperty=nameWithType> come il valore della modalità file. Se non esiste, l'archivio viene aperto. È possibile modificare le voci esistenti ed è possibile creare nuove voci. Se l'archivio non esiste, verrà creato un nuovo archivio. Tuttavia, la creazione di un archivio zip in <xref:System.IO.Compression.ZipArchiveMode.Update> modalità non è diversa da quella di creazione in <xref:System.IO.Compression.ZipArchiveMode.Create> modalità.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come aprire un archivio zip in modalità di aggiornamento e aggiungere una voce nell'archivio.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="archiveFileName" /> è <see cref="F:System.String.Empty" />, contiene solo spazi vuoti oppure contiene almeno un carattere non valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="archiveFileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">In <paramref name="archiveFileName" />, il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="archiveFileName" /> non è valido o non esiste, poiché, ad esempio, si trova su un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">Impossibile aprire <paramref name="archiveFileName" />.  - oppure - <paramref name="mode" /> è impostato su <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />, ma il file specificato in <paramref name="archiveFileName" /> esiste già.</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="archiveFileName" /> specifica una directory.  - oppure - Il chiamante non dispone dell'autorizzazione richiesta per accedere al file specificato in <paramref name="archiveFileName" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" /> specifica un valore non valido.</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="mode" /> è impostato su <see cref="F:System.IO.Compression.ZipArchiveMode.Read" />, ma il file specificato in <paramref name="archiveFileName" /> non è stato trovato.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="archiveFileName" /> contiene un formato non valido.</exception>
        <exception cref="T:System.IO.InvalidDataException">
          <paramref name="archiveFileName" /> potrebbe non essere interpretato come un archivio ZIP.  - oppure - <paramref name="mode" /> è <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, ma una voce è assente o danneggiata e non può essere letta.  - oppure - <paramref name="mode" /> è <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, ma una voce è troppo grande per essere contenuta nella memoria.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive Open(string archiveFileName, valuetype System.IO.Compression.ZipArchiveMode mode, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (archiveFileName As String, mode As ZipArchiveMode, entryNameEncoding As Encoding) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ Open(System::String ^ archiveFileName, System::IO::Compression::ZipArchiveMode mode, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">Percorso dell'archivio da aprire, specificato come percorso relativo o assoluto. Un percorso relativo è interpretato rispetto alla directory di lavoro corrente.</param>
        <param name="mode">Uno dei valori di enumerazione che specifica le azioni consentite sulle voci nell'archivio aperto.</param>
        <param name="entryNameEncoding">La codifica da usate durante la lettura o la scrittura dei nomi delle voci in questo archivio. Specificare un valore per il parametro solo quando una codifica è obbligatoria per l'interoperabilità con gli strumenti e le librerie dell'archivio ZIP che non supportano la codifica UTF-8 per i nomi di voce.</param>
        <summary>Apre un archivio ZIP nel percorso specificato, nella modalità specificata e usando la codifica caratteri specificata per i nomi delle voci.</summary>
        <returns>Archivio ZIP aperto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si imposta la `mode` parametro <xref:System.IO.Compression.ZipArchiveMode.Read>, l'archivio viene aperto con <xref:System.IO.FileMode.Open?displayProperty=nameWithType> come il valore della modalità file. Se l'archivio non esiste, un <xref:System.IO.FileNotFoundException> viene generata un'eccezione. Impostazione di `mode` parametro <xref:System.IO.Compression.ZipArchiveMode.Read> è equivalente alla chiamata di <xref:System.IO.Compression.ZipFile.OpenRead%2A> (metodo).  
  
 Quando si imposta la `mode` parametro <xref:System.IO.Compression.ZipArchiveMode.Create>, l'archivio viene aperto con <xref:System.IO.FileMode.CreateNew?displayProperty=nameWithType> come il valore della modalità file. Se l'archivio esiste già, un <xref:System.IO.IOException> viene generata un'eccezione.  
  
 Quando si imposta la `mode` parametro <xref:System.IO.Compression.ZipArchiveMode.Update>, l'archivio viene aperto con <xref:System.IO.FileMode.OpenOrCreate?displayProperty=nameWithType> come il valore della modalità file. Se non esiste, l'archivio viene aperto. È possibile modificare le voci esistenti ed è possibile creare nuove voci. Se l'archivio non esiste, verrà creato un nuovo archivio. Tuttavia, la creazione di un archivio zip in <xref:System.IO.Compression.ZipArchiveMode.Update> modalità non è diversa da quella di creazione in <xref:System.IO.Compression.ZipArchiveMode.Create> modalità.  
  
 Quando si apre un file di archivio di zip per la lettura e `entryNameEncoding` è impostato su `null`, i nomi delle voci vengono decodificati secondo le regole seguenti:  
  
-   Quando il linguaggio di codifica flag (nel flag di bit di uso generale dell'intestazione del file locale) non è impostato, la tabella codici predefinita del sistema corrente viene usata per decodificare il nome della voce.  
  
-   Quando il flag di codifica della lingua è impostato, viene utilizzato UTF-8 per decodificare il nome della voce.  
  
 Quando si apre un file di archivio di zip per la lettura e `entryNameEncoding` è impostata su un valore diverso da `null`, i nomi delle voci vengono decodificati secondo le regole seguenti:  
  
-   Quando il flag di codifica non è impostata, l'oggetto specificato `entryNameEncoding` viene usata per decodificare il nome della voce.  
  
-   Quando il flag di codifica della lingua è impostato, viene utilizzato UTF-8 per decodificare il nome della voce.  
  
 Quando si scrive archiviare i file e `entryNameEncoding` è impostato su `null`, i nomi delle voci codificate secondo le regole seguenti:  
  
-   Per i nomi di voci che contengono caratteri di fuori dell'intervallo ASCII, viene impostato il flag di codifica di lingua e i nomi delle voci vengono codificati utilizzando UTF-8.  
  
-   Per i nomi di voci che contengono solo caratteri ASCII, non è impostato il flag di codifica della lingua e i nomi delle voci vengono codificati utilizzando la tabella codici predefinita del sistema corrente.  
  
 Quando si scrive archiviare i file e `entryNameEncoding` è impostata su un valore diverso da `null`, specificato `entryNameEncoding` viene utilizzato per codificare i nomi delle voci in byte. Il linguaggio di codifica flag (nel flag di bit di uso generale dell'intestazione del file locale) viene impostato solo quando la codifica specificata è una codifica UTF-8.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="archiveFileName" /> è <see cref="F:System.String.Empty" />, contiene solo spazi vuoti oppure contiene almeno un carattere non valido.  - oppure - <paramref name="entryNameEncoding" /> è impostato su una codifica Unicode diversa da UTF-8.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="archiveFileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">In <paramref name="archiveFileName" />, il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="archiveFileName" /> non è valido o non esiste, poiché, ad esempio, si trova su un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">Impossibile aprire <paramref name="archiveFileName" />.  - oppure - <paramref name="mode" /> è impostato su <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />, ma il file specificato in <paramref name="archiveFileName" /> esiste già.</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="archiveFileName" /> specifica una directory.  - oppure - Il chiamante non dispone dell'autorizzazione richiesta per accedere al file specificato in <paramref name="archiveFileName" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" /> specifica un valore non valido.</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="mode" /> è impostato su <see cref="F:System.IO.Compression.ZipArchiveMode.Read" />, ma il file specificato in <paramref name="archiveFileName" /> non è stato trovato.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="archiveFileName" /> contiene un formato non valido.</exception>
        <exception cref="T:System.IO.InvalidDataException">
          <paramref name="archiveFileName" /> potrebbe non essere interpretato come un archivio ZIP.  - oppure - <paramref name="mode" /> è <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, ma una voce è assente o danneggiata e non può essere letta.  - oppure - <paramref name="mode" /> è <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, ma una voce è troppo grande per essere contenuta nella memoria.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive OpenRead (string archiveFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive OpenRead(string archiveFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.OpenRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRead (archiveFileName As String) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ OpenRead(System::String ^ archiveFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">Percorso dell'archivio da aprire, specificato come percorso relativo o assoluto. Un percorso relativo è interpretato rispetto alla directory di lavoro corrente.</param>
        <summary>Apre un archivio ZIP per la lettura nel percorso specificato.</summary>
        <returns>Archivio ZIP aperto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è equivalente alla chiamata di <xref:System.IO.Compression.ZipFile.Open%2A> e all'impostazione di `mode` parametro <xref:System.IO.Compression.ZipArchiveMode.Read>. L'archivio viene aperto con <xref:System.IO.FileMode.Open?displayProperty=nameWithType> come il valore della modalità file. Se l'archivio non esiste, un <xref:System.IO.FileNotFoundException> viene generata un'eccezione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come aprire un archivio zip per la lettura.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="archiveFileName" /> è <see cref="F:System.String.Empty" />, contiene solo spazi vuoti oppure contiene almeno un carattere non valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="archiveFileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">In <paramref name="archiveFileName" />, il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="archiveFileName" /> non è valido o non esiste, poiché, ad esempio, si trova su un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">Impossibile aprire <paramref name="archiveFileName" />.</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="archiveFileName" /> specifica una directory.  - oppure - Il chiamante non dispone dell'autorizzazione richiesta per accedere al file specificato in <paramref name="archiveFileName" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Il file specificato in <paramref name="archiveFileName" /> non è stato trovato.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="archiveFileName" /> contiene un formato non valido.</exception>
        <exception cref="T:System.IO.InvalidDataException">
          <paramref name="archiveFileName" /> potrebbe non essere interpretato come un archivio ZIP.</exception>
      </Docs>
    </Member>
  </Members>
</Type>