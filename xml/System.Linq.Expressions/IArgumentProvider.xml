<Type Name="IArgumentProvider" FullName="System.Linq.Expressions.IArgumentProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1987bffe3d2cba01471534c9b3fac3e0c152c07" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36555648" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IArgumentProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IArgumentProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IArgumentProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IArgumentProvider" />
  <TypeSignature Language="F#" Value="type IArgumentProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fornisce un'interfaccia interna per l’accesso agli argomenti di più nodi dell'albero (DynamicExpression, ElementInit, MethodCallExpression, InvocationExpression, NewExpression e InexExpression).  Non usare questa API.  È pubblica solo per via del refactoring DLL ed esiste solo per le ottimizzazioni delle prestazioni interne.  
  
Consente due ottimizzazioni che riducono le dimensioni degli alberi delle espressioni.  La prima consente ai nodi dell'albero di contenere un oggetto IList&lt;T&gt; anziché un oggetto ReadOnlyCollection.  L’elemento IList &lt;T&gt; consente di risparmiare il costo di allocazione dell’oggetto ReadOnlyCollection per ogni nodo.  La seconda ottimizzazione consente di creare sottoclassi specializzate che contengono un numero specifico di argomenti (ad esempio, Block2, Block3, Block4).  Questi nodi, quindi, evitano l’allocazione di un oggetto ReadOnlyCollection e di una matrice per l'archiviazione dei relativi elementi, consentendo di risparmiare 32 byte per ogni nodo.  
  
I nodi della struttura ad albero dell’espressione continuano a esporre le proprietà LINQ originali degli oggetti ReadOnlyCollection.  A tale scopo, i nodi riutilizzano un campo per archiviare sia la matrice che un elemento che verrebbe normalmente archiviato nella matrice.  
  
Nel caso della matrice, la raccolta è tipizzata in IList&lt;T&gt; anziché in ReadOnlyCollection&lt;T&gt;.  Quando il nodo viene inizialmente costruito è una matrice.  Quando il compilatore accede ai membri usa tale interfaccia.  L’accesso agli elementi della matrice alza di livello la matrice a un oggetto ReadOnlyCollection.  
  
Nel caso dell’oggetto, viene memorizzato il primo argomento in un campo tipizzato all'oggetto.  Quando il nodo viene inizialmente costruito, il campo contiene l'oggetto Expression.  Il compilatore accede agli argomenti tramite questa interfaccia e la funzione di accesso per il primo argomento usa Expression.ReturnObject per restituire l'oggetto che gestisce il caso Expression o ReadOnlyCollection.  Quando l'utente accede a ReadOnlyCollection, il campo dell’oggetto viene aggiornato per contenere direttamente l’oggetto ReadOnlyCollection.  
  
È importante che le espressioni restituiscano in modo coerente lo stesso oggetto ReadOnlyCollection.  In caso contrario, verrà interrotto il processo di scrittura del treewalker.  Si tratta di una modifica sostanziale rispetto a LINQ v1, che ha il fine di restituire oggetti ReadOnlyCollections diversi che formano lo stesso nodo Expression.  Attualmente, gli utenti possono usare l’identità dell'oggetto per sapere se il nodo è stato modificato.  L’archiviazione di ReadOnlyCollection in un campo di overload consente di ridurre l'uso della memoria e garantire la compatibilità per l'API pubblica.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgumentCount">
      <MemberSignature Language="C#" Value="public int ArgumentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArgumentCount" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArgumentCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentCount : int" Usage="System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce il numero di argomenti per il nodo dell'albero delle espressioni.  Non usare questo tipo.  Essendo solo di tipo pubblico a causa del refactoring di assembly si usa internamente per le ottimizzazioni delle prestazioni.</summary>
        <value>Il numero di argomenti per il nodo dell'albero dell'espressione come <see cref="T:System.Int32" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgument">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetArgument (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetArgument(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgument (index As Integer) As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ GetArgument(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetArgument : int -&gt; System.Linq.Expressions.Expression" Usage="iArgumentProvider.GetArgument index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice dell’argomento.</param>
        <summary>Restituisce l'argomento in corrispondenza dell'indice, generando un'eccezione se l'indice non è compreso nell'intervallo.  Non usare questo tipo.  Essendo solo di tipo pubblico a causa del refactoring di assembly si usa internamente per le ottimizzazioni delle prestazioni.</summary>
        <returns>Argomento in corrispondenza dell'indice, che genera un'eccezione se l'indice non è compreso nell'intervallo <see cref="T:System.Linq.Expressions.Expression" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>