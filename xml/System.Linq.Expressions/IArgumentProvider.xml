<Type Name="IArgumentProvider" FullName="System.Linq.Expressions.IArgumentProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb1b0a12225c49cd06302a4822210d08cda2957f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IArgumentProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IArgumentProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IArgumentProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IArgumentProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2c8ff-101">Fornisce un'interfaccia interna per l’accesso agli argomenti di più nodi dell'albero (DynamicExpression, ElementInit, MethodCallExpression, InvocationExpression, NewExpression e InexExpression).</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-101">Provides an internal interface for accessing the arguments of multiple tree nodes (DynamicExpression, ElementInit, MethodCallExpression, InvocationExpression, NewExpression, and InexExpression).</span>
      </span>
      <span data-ttu-id="2c8ff-102">Non usare questa API.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-102">You should not use this API.</span>
      </span>
      <span data-ttu-id="2c8ff-103">È pubblica solo per via del refactoring DLL ed esiste solo per le ottimizzazioni delle prestazioni interne.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-103">It is only public due to DLL refactoring and exists only for internal performance optimizations.</span>
      </span>
      <span data-ttu-id="2c8ff-104">Consente due ottimizzazioni che riducono le dimensioni degli alberi delle espressioni.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-104">This enables two optimizations which reduce the size of expression trees.</span>
      </span>
      <span data-ttu-id="2c8ff-105">La prima consente ai nodi dell'albero di contenere un oggetto IList&lt;T&gt; anziché un oggetto ReadOnlyCollection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-105">The first enables the tree nodes to hold onto an IList&lt;T&gt; instead of a ReadOnlyCollection.</span>
      </span>
      <span data-ttu-id="2c8ff-106">L’elemento IList &lt;T&gt; consente di risparmiare il costo di allocazione dell’oggetto ReadOnlyCollection per ogni nodo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-106">IList&lt;T&gt; saves the cost of allocating the ReadOnlyCollection for each node.</span>
      </span>
      <span data-ttu-id="2c8ff-107">La seconda ottimizzazione consente di creare sottoclassi specializzate che contengono un numero specifico di argomenti (ad esempio, Block2, Block3, Block4).</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-107">The second enables creating specialized subclasses that hold onto a specific number of arguments (for example, Block2, Block3, Block4).</span>
      </span>
      <span data-ttu-id="2c8ff-108">Questi nodi, quindi, evitano l’allocazione di un oggetto ReadOnlyCollection e di una matrice per l'archiviazione dei relativi elementi, consentendo di risparmiare 32 byte per ogni nodo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-108">Therefore, these nodes avoid allocating both a ReadOnlyCollection and an array for storing their elements, saving 32 bytes per node.</span>
      </span>
      <span data-ttu-id="2c8ff-109">I nodi della struttura ad albero dell’espressione continuano a esporre le proprietà LINQ originali degli oggetti ReadOnlyCollection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-109">The expression tree nodes continue to expose the original LINQ properties of ReadOnlyCollections.</span>
      </span>
      <span data-ttu-id="2c8ff-110">A tale scopo, i nodi riutilizzano un campo per archiviare sia la matrice che un elemento che verrebbe normalmente archiviato nella matrice.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-110">The nodes do this by re-using a field for storing both the array or an element that would normally be stored in the array.</span>
      </span>
      <span data-ttu-id="2c8ff-111">Nel caso della matrice, la raccolta è tipizzata in IList&lt;T&gt; anziché in ReadOnlyCollection&lt;T&gt;.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-111">For the array case, the collection is typed to IList&lt;T&gt; instead of ReadOnlyCollection&lt;T&gt;.</span>
      </span>
      <span data-ttu-id="2c8ff-112">Quando il nodo viene inizialmente costruito è una matrice.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-112">When the node is initially constructed it is an array.</span>
      </span>
      <span data-ttu-id="2c8ff-113">Quando il compilatore accede ai membri usa tale interfaccia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-113">When the compiler accesses the members it uses this interface.</span>
      </span>
      <span data-ttu-id="2c8ff-114">L’accesso agli elementi della matrice alza di livello la matrice a un oggetto ReadOnlyCollection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-114">Accessing array elements promotes the array to a ReadOnlyCollection.</span>
      </span>
      <span data-ttu-id="2c8ff-115">Nel caso dell’oggetto, viene memorizzato il primo argomento in un campo tipizzato all'oggetto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-115">For the object case we store the first argument in a field typed to object.</span>
      </span>
      <span data-ttu-id="2c8ff-116">Quando il nodo viene inizialmente costruito, il campo contiene l'oggetto Expression.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-116">When the node is initially constructed, the field holds the Expression.</span>
      </span>
      <span data-ttu-id="2c8ff-117">Il compilatore accede agli argomenti tramite questa interfaccia e la funzione di accesso per il primo argomento usa Expression.ReturnObject per restituire l'oggetto che gestisce il caso Expression o ReadOnlyCollection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-117">The compiler accesses arguments through this interface, and the accessor for the first argument uses Expression.ReturnObject to return the object that handles the Expression or ReadOnlyCollection case.</span>
      </span>
      <span data-ttu-id="2c8ff-118">Quando l'utente accede a ReadOnlyCollection, il campo dell’oggetto viene aggiornato per contenere direttamente l’oggetto ReadOnlyCollection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-118">When the user accesses the ReadOnlyCollection, then the object field is updated to hold directly onto the ReadOnlyCollection.</span>
      </span>
      <span data-ttu-id="2c8ff-119">È importante che le espressioni restituiscano in modo coerente lo stesso oggetto ReadOnlyCollection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-119">It is important that the Expressions consistently return the same ReadOnlyCollection.</span>
      </span>
      <span data-ttu-id="2c8ff-120">In caso contrario, verrà interrotto il processo di scrittura del treewalker.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-120">Otherwise, the re-writer tree walker will break.</span>
      </span>
      <span data-ttu-id="2c8ff-121">Si tratta di una modifica sostanziale rispetto a LINQ v1, che ha il fine di restituire oggetti ReadOnlyCollections diversi che formano lo stesso nodo Expression.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-121">It is a breaking change from LINQ v1 to return different ReadOnlyCollections form the same Expression node.</span>
      </span>
      <span data-ttu-id="2c8ff-122">Attualmente, gli utenti possono usare l’identità dell'oggetto per sapere se il nodo è stato modificato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-122">Currently users can rely on object identity to tell if the node has changed.</span>
      </span>
      <span data-ttu-id="2c8ff-123">L’archiviazione di ReadOnlyCollection in un campo di overload consente di ridurre l'uso della memoria e garantire la compatibilità per l'API pubblica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8ff-123">Storing the ReadOnlyCollection in an overloaded field both reduces memory usage and maintains compatibility for the public API.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgumentCount">
      <MemberSignature Language="C#" Value="public int ArgumentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArgumentCount" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArgumentCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c8ff-124">Restituisce il numero di argomenti per il nodo dell'albero delle espressioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c8ff-124">Returns the number of arguments to the expression tree node.</span>
          </span>
          <span data-ttu-id="2c8ff-125">Non usare questo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c8ff-125">You should not use this type.</span>
          </span>
          <span data-ttu-id="2c8ff-126">Essendo solo di tipo pubblico a causa del refactoring di assembly si usa internamente per le ottimizzazioni delle prestazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c8ff-126">It is only public due to assembly refactoring, and it is used internally for performance optimizations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c8ff-127">Il numero di argomenti per il nodo dell'albero dell'espressione come <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c8ff-127">The number of arguments to the expression tree node as <see cref="T:System.Int32" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgument">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetArgument (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetArgument(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgument (index As Integer) As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ GetArgument(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2c8ff-128">Indice dell’argomento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c8ff-128">The index of the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c8ff-129">Restituisce l'argomento in corrispondenza dell'indice, generando un'eccezione se l'indice non è compreso nell'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c8ff-129">Returns the argument at index, throwing if index is out of bounds.</span>
          </span>
          <span data-ttu-id="2c8ff-130">Non usare questo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c8ff-130">You should not use this type.</span>
          </span>
          <span data-ttu-id="2c8ff-131">Essendo solo di tipo pubblico a causa del refactoring di assembly si usa internamente per le ottimizzazioni delle prestazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c8ff-131">It is only public due to assembly refactoring, and it is used internally for performance optimizations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c8ff-132">Argomento in corrispondenza dell'indice, che genera un'eccezione se l'indice non è compreso nell'intervallo <see cref="T:System.Linq.Expressions.Expression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c8ff-132">The argument at index, throwing if index is out of bounds as <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>