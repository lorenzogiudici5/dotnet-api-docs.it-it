<Type Name="NewArrayExpression" FullName="System.Linq.Expressions.NewArrayExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91bbd245cb5e3c9701d050c004d99c2b4899cb4f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36555388" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NewArrayExpression : System.Linq.Expressions.Expression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NewArrayExpression extends System.Linq.Expressions.Expression" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.NewArrayExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class NewArrayExpression&#xA;Inherits Expression" />
  <TypeSignature Language="C++ CLI" Value="public ref class NewArrayExpression : System::Linq::Expressions::Expression" />
  <TypeSignature Language="F#" Value="type NewArrayExpression = class&#xA;    inherit Expression" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.Expression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Linq.Expressions.Expression/NewArrayExpressionProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4a708-101">Rappresenta la creazione di una nuova matrice ed eventualmente l'inizializzazione degli elementi della nuova matrice.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a708-101">Represents creating a new array and possibly initializing the elements of the new array.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a708-102">La tabella seguente illustra i metodi factory diversi che è possibile utilizzare per creare una <xref:System.Linq.Expressions.NewArrayExpression> in base il <xref:System.Linq.Expressions.Expression.NodeType%2A> desiderate.</span><span class="sxs-lookup"><span data-stu-id="4a708-102">The following table shows the different factory methods that you can use to create a <xref:System.Linq.Expressions.NewArrayExpression> depending on the <xref:System.Linq.Expressions.Expression.NodeType%2A> you require.</span></span>  
  
|<xref:System.Linq.Expressions.Expression.NodeType%2A>|<span data-ttu-id="4a708-103">Metodi factory</span><span class="sxs-lookup"><span data-stu-id="4a708-103">Factory Methods</span></span>|  
|----------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------|  
|<xref:System.Linq.Expressions.ExpressionType.NewArrayBounds>|<xref:System.Linq.Expressions.Expression.NewArrayBounds%2A>|  
|<xref:System.Linq.Expressions.ExpressionType.NewArrayInit>|<xref:System.Linq.Expressions.Expression.NewArrayInit%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="4a708-104">Nell'esempio seguente viene creato un <xref:System.Linq.Expressions.NewArrayExpression> oggetto che rappresenta la creazione e inizializzazione di una matrice unidimensionale di stringhe.</span><span class="sxs-lookup"><span data-stu-id="4a708-104">The following example creates a <xref:System.Linq.Expressions.NewArrayExpression> object that represents creating and initializing a one-dimensional array of strings.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#1)]
 [!code-vb[System.Linq.Expressions.Expression#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#1)]  
  
 <span data-ttu-id="4a708-105">Nell'esempio successivo viene creato un <xref:System.Linq.Expressions.NewArrayExpression> oggetto che rappresenta la creazione di una matrice bidimensionale di stringhe.</span><span class="sxs-lookup"><span data-stu-id="4a708-105">The next example creates a <xref:System.Linq.Expressions.NewArrayExpression> object that represents creating a two-dimensional array of strings.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#2)]
 [!code-vb[System.Linq.Expressions.Expression#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="protected internal override System.Linq.Expressions.Expression Accept (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Linq.Expressions.Expression Accept(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Accept (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Linq::Expressions::Expression ^ Accept(System::Linq::Expressions::ExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="newArrayExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <span data-ttu-id="4a708-106">Visitatore con cui visitare questo nodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a708-106">The visitor to visit this node with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a708-107">Invia al metodo Visit specifico per questo tipo di nodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a708-107">Dispatches to the specific visit method for this node type.</span>
          </span>
          <span data-ttu-id="4a708-108">Ad esempio, <see cref="T:System.Linq.Expressions.MethodCallExpression" /> chiama <see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a708-108">For example, <see cref="T:System.Linq.Expressions.MethodCallExpression" /> calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a708-109">Risultato della visita di questo nodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a708-109">The result of visiting this node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a708-110">Questa implementazione predefinita per <xref:System.Linq.Expressions.ExpressionType.Extension> chiamate nodi <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a708-110">This default implementation for <xref:System.Linq.Expressions.ExpressionType.Extension> nodes calls <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span></span> <span data-ttu-id="4a708-111">Eseguire l'override di questo metodo per chiamare un metodo più specifico in una classe derivata visitatore della <xref:System.Linq.Expressions.ExpressionVisitor> classe.</span><span class="sxs-lookup"><span data-stu-id="4a708-111">Override this method to call into a more specific method on a derived visitor class of the <xref:System.Linq.Expressions.ExpressionVisitor> class.</span></span> <span data-ttu-id="4a708-112">Tuttavia, deve sempre supportare visitatori sconosciuti chiamando <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a708-112">However, it should still support unknown visitors by calling <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt; Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Linq.Expressions.Expression&gt; Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.NewArrayExpression.Expressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expressions As ReadOnlyCollection(Of Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Linq::Expressions::Expression ^&gt; ^ Expressions { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Linq::Expressions::Expression ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expressions : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;" Usage="System.Linq.Expressions.NewArrayExpression.Expressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a708-113">Ottiene i limiti della matrice se il valore della proprietà <see cref="P:System.Linq.Expressions.Expression.NodeType" /> è <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /> o i valori per inizializzare gli elementi della nuova matrice se il valore della proprietà <see cref="P:System.Linq.Expressions.Expression.NodeType" /> è <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a708-113">Gets the bounds of the array if the value of the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property is <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" />, or the values to initialize the elements of the new array if the value of the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property is <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a708-114">
            <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> di oggetti <see cref="T:System.Linq.Expressions.Expression" /> che rappresentano i limiti della matrice o i valori di inizializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a708-114">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Linq.Expressions.Expression" /> objects which represent either the bounds of the array or the initialization values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override sealed Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.NewArrayExpression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Linq.Expressions.NewArrayExpression.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a708-115">Ottiene il tipo statico dell'espressione rappresentata da <see cref="T:System.Linq.Expressions.Expression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a708-115">Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a708-116">
            <see cref="P:System.Linq.Expressions.NewArrayExpression.Type" /> che rappresenta il tipo statico dell'espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a708-116">The <see cref="P:System.Linq.Expressions.NewArrayExpression.Type" /> that represents the static type of the expression.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.NewArrayExpression Update (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.NewArrayExpression Update(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (expressions As IEnumerable(Of Expression)) As NewArrayExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::NewArrayExpression ^ Update(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberSignature Language="F#" Value="member this.Update : seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.NewArrayExpression" Usage="newArrayExpression.Update expressions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="expressions">
          <span data-ttu-id="4a708-117">Proprietà <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> del risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a708-117">The <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property of the result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a708-118">Crea una nuova espressione simile a questa, ma che usa gli elementi figlio specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a708-118">Creates a new expression that is like this one, but using the supplied children.</span>
          </span>
          <span data-ttu-id="4a708-119">Se tutti gli elementi figlio sono uguali, verrà restituita questa espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a708-119">If all of the children are the same, it will return this expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a708-120">Questa espressione se nessun elemento figlio viene modificato o un'espressione con gli elementi figlio aggiornati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a708-120">This expression if no children are changed or an expression with the updated children.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>