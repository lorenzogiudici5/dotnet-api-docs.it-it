<Type Name="MultiTargetingSupportService" FullName="System.Activities.Presentation.Hosting.MultiTargetingSupportService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ecfb5f866399d4e33112eded985175b18b69b02a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30348445" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MultiTargetingSupportService : System.Activities.Presentation.Hosting.IMultiTargetingSupportService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MultiTargetingSupportService extends System.Object implements class System.Activities.Presentation.Hosting.IMultiTargetingSupportService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Hosting.MultiTargetingSupportService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MultiTargetingSupportService&#xA;Implements IMultiTargetingSupportService" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiTargetingSupportService abstract : System::Activities::Presentation::Hosting::IMultiTargetingSupportService" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.Hosting.IMultiTargetingSupportService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="5ea36-101">Rappresenta una classe astratta per il servizio di supporto multitargeting.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ea36-101">Represents an abstract class for multi-targeting support service.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MultiTargetingSupportService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.MultiTargetingSupportService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MultiTargetingSupportService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ea36-102">Inizializza una nuova istanza della classe <see cref="T:System.Activities.Presentation.Hosting.MultiTargetingSupportService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-102">Initializes a new instance of the <see cref="T:System.Activities.Presentation.Hosting.MultiTargetingSupportService" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionAssembly">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.Assembly GetReflectionAssembly (System.Reflection.AssemblyName targetAssemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetReflectionAssembly(class System.Reflection.AssemblyName targetAssemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetReflectionAssembly (targetAssemblyName As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::Assembly ^ GetReflectionAssembly(System::Reflection::AssemblyName ^ targetAssemblyName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetAssemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="targetAssemblyName">
          <span data-ttu-id="5ea36-103">Nome dell'assembly di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-103">The target assembly name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ea36-104">Ottiene l'assembly della reflection, dato un nome di assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-104">Gets the reflection assembly given an assembly name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ea36-105">Assembly della reflection se il nome dell'assembly di destinazione non pu√≤ essere risolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-105">The reflection assembly if target assembly name could be resolved.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public abstract Type GetReflectionType (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReflectionType(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetReflectionType (objectType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ GetReflectionType(Type ^ objectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="5ea36-106">Tipo di oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-106">The object type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ea36-107">Ottiene il tipo di reflection, dato un tipo di oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-107">Gets the reflection type give an object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ea36-108">Tipo di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-108">The reflection type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public abstract Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="reflectionType">
          <span data-ttu-id="5ea36-109">Tipo di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-109">The reflection type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ea36-110">Ottiene il tipo di runtime, dato un tipo di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-110">Gets the runtime type given a reflection type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ea36-111">Tipo di runtime associato al tipo di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-111">The runtime type associated with the reflection type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public abstract bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSupportedType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ea36-112">Tipo da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-112">The type to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ea36-113">Verifica se un tipo specificato √® supportato dal framework di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-113">Checks if a given type is supported by target framework.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ea36-114">Il tipo specificato che √® supportato dal framework di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ea36-114">The given type that is supported by target framework.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>