<Type Name="IMultiTargetingSupportService" FullName="System.Activities.Presentation.Hosting.IMultiTargetingSupportService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b12eb6687768cbaf8cf1257245a6655d5f196f04" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36653717" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMultiTargetingSupportService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiTargetingSupportService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Hosting.IMultiTargetingSupportService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMultiTargetingSupportService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMultiTargetingSupportService" />
  <TypeSignature Language="F#" Value="type IMultiTargetingSupportService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Offre il multitargeting per gli host di Progettazione flussi di lavoro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *Funzionalità di multitargeting* consiste nella possibilità di trovare la versione dell'assembly caricato che corrisponde alla destinazione corretta [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] versione del progetto flusso di lavoro corrente in [!INCLUDE[vs2010](~/includes/vs2010-md.md)].  
  
 Questa interfaccia viene implementata e utilizzata internamente dai componenti della finestra di progettazione di [!INCLUDE[wf1](~/includes/wf1-md.md)] per risolvere gli assembly [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] con una procedura compatibile con il multitargeting nell'applicazione host [!INCLUDE[vs2010](~/includes/vs2010-md.md)]. Il [!INCLUDE[wf1](~/includes/wf1-md.md)] componenti dell'ActivityDesigner usano l'implementazione di questa interfaccia solo quando necessario da caricare in modo dinamico la modifica di assembly aggiuntivi `AppDomain`.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetReflectionAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetReflectionAssembly (System.Reflection.AssemblyName targetAssemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetReflectionAssembly(class System.Reflection.AssemblyName targetAssemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionAssembly (targetAssemblyName As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetReflectionAssembly(System::Reflection::AssemblyName ^ targetAssemblyName);" />
      <MemberSignature Language="F#" Value="abstract member GetReflectionAssembly : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="iMultiTargetingSupportService.GetReflectionAssembly targetAssemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetAssemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="targetAssemblyName">Nome dell'assembly.</param>
        <summary>Restituisce l'assembly attualmente caricato dato il nome dell'assembly.</summary>
        <returns>Assembly attualmente caricato dato il nome dell'assembly.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeType : Type -&gt; Type" Usage="iMultiTargetingSupportService.GetRuntimeType reflectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="reflectionType">Tipo di cui ottenere il tipo di runtime.</param>
        <summary>Ottiene il tipo di runtime che corrisponde al tipo specificato.</summary>
        <returns>Tipo di runtime che corrisponde al tipo specificato.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSupportedType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedType : Type -&gt; bool" Usage="iMultiTargetingSupportService.IsSupportedType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo da controllare.</param>
        <summary>Restituisce un valore che indica se il tipo specificato è supportato.</summary>
        <returns>
          <see langword="true" /> se il tipo specificato è supportato; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>