<Type Name="CommandInfo" FullName="System.Activities.Presentation.Hosting.CommandInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="64aa9eab406d45b5b7529bc936bb7302dca0e972" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36653736" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CommandInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CommandInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Hosting.CommandInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommandInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandInfo sealed" />
  <TypeSignature Language="F#" Value="type CommandInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="16b52-101">Descrive un comando della finestra di progettazione, ad esempio Copia o Incolla.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16b52-101">Describes a command on the designer, such as copy or paste.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Hosting.CommandInfo.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.Hosting.CommandInfo.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16b52-102">Identificatore univoco che rappresenta un comportamento o un'azione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16b52-102">A unique identifier that represents some behavior or action.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16b52-103">Restituisce <see cref="T:System.Windows.Input.ICommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16b52-103">Returns <see cref="T:System.Windows.Input.ICommand" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16b52-104">Alcuni esempi di comandi sono Copia, Incolla e Annulla.</span><span class="sxs-lookup"><span data-stu-id="16b52-104">A few examples of commands are copy, paste, and undo.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingEnabledInDesigner">
      <MemberSignature Language="C#" Value="public bool IsBindingEnabledInDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingEnabledInDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Hosting.CommandInfo.IsBindingEnabledInDesigner" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBindingEnabledInDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingEnabledInDesigner { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBindingEnabledInDesigner : bool with get, set" Usage="System.Activities.Presentation.Hosting.CommandInfo.IsBindingEnabledInDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16b52-105">Determina se l'associazione è abilitata nella finestra di progettazione per il comando specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16b52-105">Determines whether binding is enabled in the designer for the specified command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16b52-106">
            <see langword="true" /> se l'associazione è abilitata nella finestra di progettazione per il comando specificato. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16b52-106">
              <see langword="true" /> if binding is enabled in the designer for the specified command; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>