<Type Name="ProfileBase" FullName="System.Web.Profile.ProfileBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22d95658de48ddc5b87e057e44efe4033884a8c3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36598311" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProfileBase : System.Configuration.SettingsBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProfileBase extends System.Configuration.SettingsBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileBase&#xA;Inherits SettingsBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileBase : System::Configuration::SettingsBase" />
  <TypeSignature Language="F#" Value="type ProfileBase = class&#xA;    inherit SettingsBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides untyped access to profile property values and information.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET usa il <xref:System.Web.Profile.ProfileBase> classe per creare la classe usata per il profilo utente. Quando viene avviata un'applicazione che ha attivato il profilo utente, ASP.NET crea una nuova classe di tipo `ProfileCommon`, che eredita dalla classe di <xref:System.Web.Profile.ProfileBase> classe. Funzioni di accesso fortemente tipizzate vengono aggiunti per la `ProfileCommon` classe per ogni proprietà definita nella sezione di configurazione. Funzioni di accesso fortemente tipizzate del `ProfileCommon` classe chiamata il <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> e <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> metodi il <xref:System.Web.Profile.ProfileBase> classe di base per recuperare e impostare rispettivamente i valori delle proprietà del profilo. Un'istanza del `ProfileCommon` è impostata come valore della classe di <xref:System.Web.HttpContext.Profile%2A> proprietà per l'applicazione ASP.NET.  
  
 Per creare un'istanza di un profilo utente in un'applicazione ASP.NET, è consigliabile utilizzare il <xref:System.Web.Profile.ProfileBase.Create%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un file Web. config che specifica un profilo utente che contiene un `ZipCode` proprietà di tipo `string` e una `RecentSearchList` proprietà di tipo <xref:System.Collections.Specialized.StringCollection>. Generato <xref:System.Web.HttpContext.Profile%2A> proprietà dell'oggetto corrente <xref:System.Web.HttpContext> disporrà fortemente tipizzate funzioni di accesso per ognuna delle proprietà specificate.  
  
```  
<configuration>  
  <system.web>  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="SqlProvider" >  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="RecentSearchList"  
          type="System.Collections.Specialized.StringCollection"  
          serializeAs="Xml"  
          allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Esempio di codice seguente mostra una pagina ASP.NET che legge e imposta il `ZipCode` proprietà specificata per il profilo utente. Prima di provare a eseguire questo codice, impostare il provider per il valore predefinito `AspNetSqlProvider` nelle impostazioni di configurazione ASP.NET per il sito Web.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 Esempio di codice seguente definisce una classe che eredita il <xref:System.Web.Profile.ProfileBase> classe per creare un profilo personalizzato. Il tipo di profilo personalizzato è specificato nella `inherits` attributo dell'elemento di configurazione nel file Web. config per un'applicazione.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[System.Web.Profile.ProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/CS/employeeprofile.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/VB/employeeprofile.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>È possibile creare un'implementazione di profilo personalizzato che eredita il <see cref="T:System.Web.Profile.ProfileBase" /> classe astratta e definisce le proprietà per il profilo utente che non sono specificate nell'elemento di configurazione. È possibile specificare un tipo di utente personalizzato per il profilo nel file Web. config con il <see langword="inherits" /> attributo dell'elemento di configurazione, come illustrato nell'esempio seguente. Il codice per il <c>EmployeeProfile</c> classe è inclusa nella sezione esempio di questo argomento.  ' ' &lt;profilo inherits="Samples.AspNet.Profile.EmployeeProfile" defaultProvider = "SqlProvider"&gt; &lt;provider&gt; &lt;cancellare /&gt; &lt;aggiungere name = " ConnectionStringName type="System.Web.Profile.SqlProfileProvider SqlProvider" "="SqlServices"description ="Provider di profili SQL per esempio"/&gt; &lt;aggiungere name ="EmployeeInfoProvider"type =" ConnectionStringName System.Web.Profile.SqlProfileProvider"="SqlServices"description ="Provider di profili SQL per Employee Info"/&gt; &lt;/providers&gt;&lt;proprietà&gt; &lt;aggiungere name = "GarmentSize" /&gt; &lt;/properties&gt;  &lt; /profilo  &gt;  
```</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an instance of the <see cref="T:System.Web.Profile.ProfileBase" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET usa il <xref:System.Web.Profile.ProfileBase> classe per creare la classe usata per il profilo utente. Quando viene avviata un'applicazione che ha attivato il profilo utente, ASP.NET crea una nuova classe di tipo `ProfileCommon`, che eredita dalla classe di <xref:System.Web.Profile.ProfileBase> classe. Funzioni di accesso fortemente tipizzate vengono aggiunti per la `ProfileCommon` classe per ogni proprietà definita nella sezione di configurazione. Funzioni di accesso fortemente tipizzate del `ProfileCommon` classe chiamata il <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> e <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> metodi il <xref:System.Web.Profile.ProfileBase> classe di base per recuperare e impostare rispettivamente i valori delle proprietà del profilo. Un'istanza del `ProfileCommon` è impostata come valore della classe di <xref:System.Web.HttpContext.Profile%2A> proprietà per l'applicazione ASP.NET.  
  
> [!NOTE]
>  La classe base utilizzata per generare la classe archiviata nel <xref:System.Web.HttpContext.Profile%2A> proprietà può essere sottoposto a override utilizzando il `inherits` attributo della sezione del file di configurazione. In questo caso si specificherà una classe personalizzata che eredita il <xref:System.Web.Profile.ProfileBase> classe di base.  
  
 Questo costruttore non può essere utilizzato dal codice dell'applicazione. Per creare un'istanza di un profilo utente, usare il <xref:System.Web.Profile.ProfileBase.Create%2A> metodo.  
  
   
  
## Examples  
 Il file Web. config seguente viene specificato un profilo utente che contiene un `ZipCode` proprietà di tipo `string` e una `RecentSearchList` proprietà di tipo <xref:System.Collections.Specialized.StringCollection>. Generato <xref:System.Web.HttpContext.Profile%2A> proprietà dell'oggetto corrente <xref:System.Web.HttpContext> disporrà fortemente tipizzate funzioni di accesso per ognuna delle proprietà specificate.  
  
```  
<configuration>  
   <connectionStrings>  
       <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
   </connectionStrings>  
  
  <system.web>  
   <anonymousIdentification enabled="true" />  
  
   <profile defaultProvider="SqlProvider" >  
     <providers>  
       <add  
         name="SqlProvider"  
         connectionStringName="SqlServices"  
         applicationName="ProfileBaseApplication"  
         type="System.Web.Profile.SqlProfileProvider" />  
     </providers>  
  
     <properties>  
       <add name="ZipCode" allowAnonymous="true" />  
       <add name="RecentSearchList"  
            type="System.Collections.Specialized.StringCollection"  
            serializeAs="Xml"  
            allowAnonymous="true" />  
      </properties>  
    </profile>  
   </system.web>  
</configuration>  
```  
  
 La pagina ASP.NET seguente legge e imposta il `ZipCode` proprietà specificata per il profilo utente.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="enabled" /> attribute of the  section of the Web.config file is <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A property type specified in the  section of the Web.config file could not be created.  -or-  The <see langword="allowAnonymous" /> attribute for a property in the  section of the Web.config file is set to <see langword="true" /> and the <see langword="enabled" /> attribute of the  element is set to <see langword="false" />.  -or-  The <see langword="serializeAs" /> attribute for a property in the  section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified <see langword="type" /> returns <see langword="false" />.  -or-  The name of a provider specified using the <see langword="provider" /> attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.  -or-  The <see langword="type" /> specified for a profile property could not be found.  -or-  A profile property was specified with a name that matches a property name on the base class specified in the <see langword="inherits" /> attribute of the  section.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates an instance of a user profile.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Web.Profile.ProfileBase" Usage="System.Web.Profile.ProfileBase.Create username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to create a profile for.</param>
        <summary>Used by ASP.NET to create an instance of a profile for the specified user name.</summary>
        <returns>An <see cref="T:System.Web.Profile.ProfileBase" /> that represents the profile for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Profile.ProfileBase.Create%2A> metodo crea e Inizializza una nuova istanza di profilo e risulta utile per le applicazioni che utilizzano un profilo personalizzato dell'oggetto o gestiscono i profili utente in un ambiente non ASP.NET.  
  
 Questo overload del metodo di <xref:System.Web.Profile.ProfileBase.Create%2A> metodo presuppone che il nome utente specificato sia un utente autenticato.  
  
   
  
## Examples  
 Esempio di codice seguente crea un'istanza di un oggetto profilo personalizzato, imposta una proprietà e consente di salvare il profilo per l'origine dati.  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="enabled" /> attribute of the  section of the Web.config file is <see langword="false" />.</exception>
        <exception cref="T:System.Web.HttpException">The current hosting permission level is less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A property type specified in the  section of the Web.config file could not be created.  -or-  The <see langword="allowAnonymous" /> attribute for a property in the  section of the Web.config file is set to <see langword="true" /> and the <see langword="enabled" /> attribute of the  element is set to <see langword="false" />.  -or-  The <see langword="serializeAs" /> attribute for a property in the  section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified <see langword="type" /> returns <see langword="false" />.  -or-  The name of a provider specified using the <see langword="provider" /> attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.  -or-  The <see langword="type" /> specified for a profile property could not be found.  -or-  A profile property was specified with a name that matches a property name on the base class specified in the <see langword="inherits" /> attribute of the  section.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String, isAuthenticated As Boolean) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="static member Create : string * bool -&gt; System.Web.Profile.ProfileBase" Usage="System.Web.Profile.ProfileBase.Create (username, isAuthenticated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to create a profile for.</param>
        <param name="isAuthenticated">
          <see langword="true" /> to indicate the user is authenticated; <see langword="false" /> to indicate the user is anonymous.</param>
        <summary>Used by ASP.NET to create an instance of a profile for the specified user name. Takes a parameter indicating whether the user is authenticated or anonymous.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileBase" /> object that represents the profile for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Profile.ProfileBase.Create%2A> metodo crea e Inizializza una nuova istanza di profilo e risulta utile per le applicazioni che utilizzano un profilo personalizzato dell'oggetto o gestiscono i profili utente in un ambiente non ASP.NET.  
  
 Questo overload del metodo di <xref:System.Web.Profile.ProfileBase.Create%2A> metodo può essere utilizzato per creare un profilo per un utente autenticato o un utente anonimo.  
  
   
  
## Examples  
 Esempio di codice seguente crea un'istanza di un oggetto profilo personalizzato, imposta una proprietà e consente di salvare il profilo per l'origine dati.  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#2)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="enabled" /> attribute of the  section of the Web.config file is <see langword="false" />.</exception>
        <exception cref="T:System.Web.HttpException">The current hosting permission level is less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A property type specified in the  section of the Web.config file could not be created.  -or-  The <see langword="allowAnonymous" /> attribute for a property in the  section of the Web.config file is set to <see langword="true" /> and the <see langword="enabled" /> attribute of the  element is set to <see langword="false" />.  -or-  The <see langword="serializeAs" /> attribute for a property in the  section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified <see langword="type" /> returns <see langword="false" />.  -or-  The name of a provider specified using the <see langword="provider" /> attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.  -or-  The <see langword="type" /> specified for a profile property could not be found.  -or-  A profile property was specified with a name that matches a property name on the base class specified in the <see langword="inherits" /> attribute of the  section.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProfileGroup">
      <MemberSignature Language="C#" Value="public System.Web.Profile.ProfileGroupBase GetProfileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Profile.ProfileGroupBase GetProfileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetProfileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProfileGroup (groupName As String) As ProfileGroupBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Profile::ProfileGroupBase ^ GetProfileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.GetProfileGroup : string -&gt; System.Web.Profile.ProfileGroupBase" Usage="profileBase.GetProfileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileGroupBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">The name of the group of properties.</param>
        <summary>Gets a group of properties identified by a group name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileGroupBase" /> object for a group of properties configured with the specified group name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proprietà del profilo possono essere suddivisa in gruppi per semplificare l'organizzazione. Il <xref:System.Web.Profile.ProfileBase.GetProfileGroup%2A> proprietà può essere utilizzata per recuperare un gruppo di proprietà per il nome del gruppo. È inoltre possibile accedere una proprietà del profilo in un gruppo specificando il nome del gruppo come membro della `Profile` proprietà disponibile in ogni pagina. Ad esempio, il `ZipCode` proprietà del membro del profilo il `Address` gruppo di profili è possibile accedervi utilizzando `Profile.Address.ZipCode`.  
  
   
  
## Examples  
 Il file Web. config seguente viene specificato un profilo utente che contiene il gruppo di proprietà con il nome di un gruppo di `Address`. Le proprietà raggruppate generate per i <xref:System.Web.HttpContext.Profile%2A> proprietà dell'oggetto corrente <xref:System.Web.HttpContext> sarà preceduto dal nome del gruppo. Ad esempio `Profile.Address.Street`.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <authorization>  
      <deny users="?" />  
    </authorization>  
  
    <membership defaultProvider="SqlProvider"   
      userIsOnlineTimeWindow="15">  
      <providers>  
        <clear />  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"   
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          applicationName="MyApplication" />  
      </providers>  
    </membership>  
  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <add  
          name="SqlProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          type="System.Web.Profile.SqlProfileProvider" />  
  
      </providers>  
  
      <properties>  
        <add name="ZipCode" />  
        <group name="Address">  
          <add name="Street" />  
          <add name="City" />  
          <add name="State" />  
          <add name="CountryOrRegion" />  
        </group>  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 La pagina ASP.NET seguente legge e imposta le proprietà raggruppate specificate per il profilo utente.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The specified profile property group name was not found in the  configuration section.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyValue(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; obj" Usage="profileBase.GetPropertyValue propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the profile property.</param>
        <summary>Gets the value of a profile property.</summary>
        <returns>The value of the specified profile property, typed as <see langword="object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET usa il <xref:System.Web.Profile.ProfileBase> classe per creare la classe usata per il profilo utente. Quando viene avviata un'applicazione che ha attivato il profilo utente, ASP.NET crea una nuova classe di tipo `ProfileCommon`, che eredita dalla classe di <xref:System.Web.Profile.ProfileBase> classe. Funzioni di accesso fortemente tipizzate vengono aggiunti per la `ProfileCommon` classe per ogni proprietà definita nella sezione di configurazione. Funzioni di accesso fortemente tipizzate del `ProfileCommon` classe chiamata il <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> metodo per recuperare i valori non tipizzati dal <xref:System.Web.Profile.ProfileProvider> che la funzione di accesso generati, quindi esegue il cast del tipo specificato e restituisce come valore della proprietà.  
  
 È possibile utilizzare il <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> metodo per recuperare i valori delle proprietà del profilo utente per l'applicazione in base al nome. I valori restituiti sono non tipizzati e devono essere eseguito il cast come il tipo di oggetto specifico quando vengono recuperati. Per l'accesso fortemente tipizzato ai valori delle proprietà del profilo, è possibile accedere alla proprietà in base al nome come membro della proprietà del profilo disponibile in ogni pagina, ad esempio, `Profile.CustomerAddress`.  
  
   
  
## Examples  
 Esempio di codice seguente mostra una pagina ASP.NET che legge e imposta il `ZipCode` proprietà specificata per il profilo utente. Per un esempio di un file Web. config che specifica le proprietà per il profilo utente, vedere l'esempio fornito per il <xref:System.Web.Profile.ProfileBase> classe.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set a property value on an anonymous profile where the property's <see langword="allowAnonymous" /> attribute is <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">There are no properties defined for the current profile.  -or-  The specified profile property name does not exist in the current profile.  -or-  The provider for the specified profile property did not recognize the specified property.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (username As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::String ^ username, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="member this.Initialize : string * bool -&gt; unit" Usage="profileBase.Initialize (username, isAuthenticated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to initialize the profile for.</param>
        <param name="isAuthenticated">
          <see langword="true" /> to indicate the user is authenticated; <see langword="false" /> to indicate the user is anonymous.</param>
        <summary>Initializes the profile property values and information for the current user.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non è destinato a essere utilizzato dal codice. Utilizzare uno del <xref:System.Web.Profile.ProfileBase.Create%2A> overload per creare un'istanza del profilo utente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user profile is for an anonymous user.</summary>
        <value>
          <see langword="true" /> Se il profilo utente è per un utente anonimo. in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Accesso anonimo al profilo utente è abilitato utilizzando la sezione di configurazione e il `allowAnonymous` attributo dell'elemento di configurazione utilizzato per specificare le proprietà del profilo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.Profile.ProfileBase.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether any of the profile properties have been modified.</summary>
        <value>
          <see langword="true" /> Se sono state modificate le proprietà di profilo. in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Profile.ProfileBase.IsDirty%2A> proprietà può essere utilizzata da un provider di profili durante il <xref:System.Configuration.SettingsBase.Save%2A> metodo per determinare se le proprietà che sono costituita da tipi primitivi, stringhe o <xref:System.DateTime> gli oggetti sono stati modificati. Le proprietà modificate vengono quindi aggiornate da provider di profili di <xref:System.Configuration.SettingsBase.Save%2A> metodo. Il <xref:System.Configuration.SettingsBase.Save%2A> metodo viene chiamato automaticamente alla fine dell'esecuzione della pagina, se il <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> proprietà `true`  
  
 Chiamato un provider di profili di <xref:System.Configuration.SettingsBase.Save%2A> metodo in modo esplicito non può determinare se una proprietà del profilo con un tipo di classe personalizzata o un tipo complesso, ad esempio una raccolta, è stato modificato. È possibile utilizzare il <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> dell'evento per determinare se un oggetto personalizzato è stato modificato e continuare con il salvataggio automatico per gli oggetti modificati o annullare il salvataggio automatico se non è stato modificato alcun oggetto. Il comportamento predefinito del <xref:System.Web.Profile.ProfileBase> classe consiste nell'impostare il <xref:System.Web.Profile.ProfileBase.IsDirty%2A> proprietà `true` per le proprietà di un tipo personalizzato o complesso la prima volta che la proprietà è accessibile.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Profile.ProfileBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the profile property.</param>
        <summary>Gets or sets a profile property value indexed by the property name.</summary>
        <value>Il valore della proprietà del profilo specificato, tipizzata come <see langword="object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questa proprietà da recuperare o impostare i valori delle proprietà del profilo utente per l'applicazione in base al nome. I valori restituiti sono tipizzati come `object` e deve essere eseguito il cast come il tipo di oggetto specifico quando vengono recuperati. Per un accesso fortemente tipizzato ai valori delle proprietà del profilo, è possibile accedere alla proprietà in base al nome come membro del `Profile` proprietà disponibili in ogni pagina, ad esempio, `Profile.CustomerAddress`.  
  
   
  
## Examples  
 Esempio di codice seguente sono elencati i nomi delle proprietà nel profilo utente associando il <xref:System.Configuration.SettingsProperty.Name%2A> proprietà statica <xref:System.Web.Profile.ProfileBase.Properties%2A> raccolta di <xref:System.Configuration.SettingsProperty> oggetti per un <xref:System.Web.UI.WebControls.GridView> controllo. Il valore della proprietà selezionata viene recuperato utilizzando nome il <xref:System.Web.Profile.ProfileBase.Item%2A> insieme. Per un esempio di un file Web. config che specifica le proprietà per il profilo utente, vedere l'esempio fornito per il <xref:System.Web.Profile.ProfileBase> classe.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set a property value on an anonymous profile where the property's <see langword="allowAnonymous" /> attribute is <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">There are no properties defined for the current profile.  -or-  The specified profile property name does not exist in the current profile.  -or-  The provider for the specified profile property did not recognize the specified property.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">An attempt was made to set a property value that was marked as read-only.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">An attempt was made to assign a value to a property using an incompatible type.</exception>
      </Docs>
    </Member>
    <Member MemberName="LastActivityDate">
      <MemberSignature Language="C#" Value="public DateTime LastActivityDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastActivityDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastActivityDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastActivityDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastActivityDate : DateTime" Usage="System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the most recent date and time that the profile was read or modified.</summary>
        <value>Più recente di data e ora che il profilo è stato lette o modificato dal provider predefinito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valore di questa proprietà viene modificato solo mediante il provider predefinito dei profili. Le modifiche apportate alle proprietà del profilo da un provider diverso dal provider di profili predefiniti non influisce sul valore della <xref:System.Web.Profile.ProfileBase.LastActivityDate%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedDate">
      <MemberSignature Language="C#" Value="public DateTime LastUpdatedDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastUpdatedDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastUpdatedDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastUpdatedDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastUpdatedDate : DateTime" Usage="System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the most recent date and time that the profile was modified.</summary>
        <value>Più recente di data e ora che il profilo è stato modificato dal provider predefinito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valore di questa proprietà viene modificato solo mediante il provider predefinito dei profili. Le modifiche apportate alle proprietà del profilo da un provider diverso dal provider di profili predefiniti non influisce sul valore della <xref:System.Web.Profile.ProfileBase.LastUpdatedDate%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Web.Profile.ProfileBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of <see cref="T:System.Configuration.SettingsProperty" /> objects for each property in the profile.</summary>
        <value>Un <see cref="T:System.Configuration.SettingsPropertyCollection" /> di <see cref="T:System.Configuration.SettingsProperty" /> oggetti per ogni proprietà nel profilo per l'applicazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questa proprietà per ottenere informazioni sulle proprietà del profilo configurato per un'applicazione, inclusi i tipi e i nomi delle proprietà. È anche possibile fare riferimento il <xref:System.Web.Profile.ProfileProvider> di ciascuna proprietà. Oggetto <xref:System.Web.Profile.ProfileProvider> gestisce l'archiviazione e recupero dei valori delle proprietà da e verso l'origine dati.  
  
   
  
## Examples  
 Esempio di codice seguente sono elencati i nomi delle proprietà nel profilo utente associando il <xref:System.Configuration.SettingsProperty.Name%2A> proprietà statica <xref:System.Web.Profile.ProfileBase.Properties%2A> raccolta di <xref:System.Configuration.SettingsProperty> oggetti per un <xref:System.Web.UI.WebControls.GridView> controllo. Il valore della proprietà selezionata viene recuperato utilizzando nome il <xref:System.Web.Profile.ProfileBase.Item%2A> insieme. Per un esempio di un file Web. config che specifica le proprietà per il profilo utente, vedere l'esempio fornito per il <xref:System.Web.Profile.ProfileBase> classe.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A property type specified in the  section of the Web.config file could not be created.  -or-  The <see langword="allowAnonymous" /> attribute for a property in the  section of the Web.config file is set to <see langword="true" /> and the <see langword="enabled" /> attribute of the  element is set to <see langword="false" />.  -or-  The <see langword="serializeAs" /> attribute for a property in the  section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified <see langword="type" /> returns <see langword="false" />.  -or-  The name of a provider specified using the <see langword="provider" /> attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.  -or-  The <see langword="type" /> specified for a profile property could not be found.  -or-  A profile property was specified with a name that matches a property name on the base class specified in the <see langword="inherits" /> attribute of the  section.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="abstract member Save : unit -&gt; unit&#xA;override this.Save : unit -&gt; unit" Usage="profileBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Updates the profile data source with changed profile property values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Profile.ProfileBase.Save%2A> metodo scrive del profilo modificati i valori delle proprietà per l'origine dati. Il provider di profili è possibile ridurre la quantità di attività nell'origine dati eseguendo gli aggiornamenti solo quando il <xref:System.Web.Profile.ProfileBase.IsDirty%2A> è impostata su `true`. Questo vale per il valore predefinito <xref:System.Web.Profile.SqlProfileProvider>. Dopo il <xref:System.Web.Profile.ProfileBase.Save%2A> metodo ha salvato i valori delle proprietà dell'origine dati, <xref:System.Web.Profile.ProfileBase.IsDirty%2A> è impostata su `false`.  
  
 È possibile usare il <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> evento per implementare una logica personalizzata che determina se è stata modificata una proprietà del profilo con un tipo personalizzato o un tipo complesso e continuare con il salvataggio automatico per gli oggetti modificati o se nessun oggetto sia di annullare il salvataggio automatico stato modificato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (string propertyName, object propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(string propertyName, object propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPropertyValue (propertyName As String, propertyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyValue(System::String ^ propertyName, System::Object ^ propertyValue);" />
      <MemberSignature Language="F#" Value="member this.SetPropertyValue : string * obj -&gt; unit" Usage="profileBase.SetPropertyValue (propertyName, propertyValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property to set.</param>
        <param name="propertyValue">The value to assign to the property.</param>
        <summary>Sets the value of a profile property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET usa il <xref:System.Web.Profile.ProfileBase> classe per creare la classe usata per il profilo utente. Quando viene avviata un'applicazione che ha attivato il profilo utente, ASP.NET crea una nuova classe di tipo `ProfileCommon`, che eredita dalla classe di <xref:System.Web.Profile.ProfileBase> classe. Funzioni di accesso fortemente tipizzate vengono aggiunti per la `ProfileCommon` classe per ogni proprietà definita nella sezione di configurazione. Funzioni di accesso fortemente tipizzate del `ProfileCommon` classe chiamata il <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> metodo passa la proprietà valori per il <xref:System.Web.Profile.ProfileProvider> da archiviare nell'origine dati.  
  
 È possibile utilizzare il <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> metodo a cui assegnare i valori delle proprietà nel profilo utente per l'applicazione in base al nome. I valori sono non tipizzati e controllo dei tipi avviene in fase di esecuzione, non in fase di compilazione. Per un accesso fortemente tipizzato ai valori delle proprietà del profilo, è possibile accedere alla proprietà in base al nome come membro del `Profile` proprietà disponibile in ogni pagina, ad esempio, `Profile.CustomerAddress`.  
  
   
  
## Examples  
 Esempio di codice seguente mostra una pagina ASP.NET che legge e imposta il `ZipCode` proprietà specificata per il profilo utente. Per un esempio di un file Web. config che specifica le proprietà per il profilo utente, vedere l'esempio fornito per il <xref:System.Web.Profile.ProfileBase> classe.  
  
> [!IMPORTANT]
>  In questo esempio contiene una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set a property value on an anonymous profile where the property's <see langword="allowAnonymous" /> attribute is <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">There are no properties defined for the current profile.  -or-  The specified profile property name does not exist in the current profile.  -or-  The provider for the specified profile property did not recognize the specified property.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">An attempt was made to set a value value on a property that was marked as read-only.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">An attempt was made to assign a value to a property using an incompatible type.</exception>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.Web.Profile.ProfileBase.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the user name for the profile.</summary>
        <value>Il nome utente per il profilo o l'identificatore utente anonimo assegnati al profilo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Profile.ProfileBase.UserName%2A> proprietà restituisce il nome dell'utente autenticato che è associato il profilo o l'identificatore utente anonimo assegnati al profilo se il <xref:System.Web.Profile.ProfileBase.IsAnonymous%2A> è di proprietà `true`.  
  
 Accesso anonimo al profilo utente è abilitato utilizzando la sezione di configurazione e il `allowAnonymous` attributo dell'elemento di configurazione utilizzato per specificare le proprietà del profilo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>