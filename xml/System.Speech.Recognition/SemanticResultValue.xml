<Type Name="SemanticResultValue" FullName="System.Speech.Recognition.SemanticResultValue">
  <TypeSignature Language="C#" Value="public class SemanticResultValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultValue" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultValue" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1bb27-101">Rappresenta un valore semantico e facoltativamente associa il valore a un componente di una grammatica di riconoscimento vocale.</span><span class="sxs-lookup"><span data-stu-id="1bb27-101">Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bb27-102">Utilizzo di <xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> oggetti, in combinazione con <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices>, il modo più semplice per progettare una struttura semantica per un <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-102">Use of <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="1bb27-103">Accedere a informazioni semantiche per una frase, ottenere un'istanza di <xref:System.Speech.Recognition.SemanticValue>, tramite il <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> proprietà <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-103">Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bb27-104">I valori gestiti dal <xref:System.Speech.Recognition.SemanticResultValue> gli oggetti sono definiti da <xref:System.Object> istanze passati ai relativi costruttori.</span><span class="sxs-lookup"><span data-stu-id="1bb27-104">Values managed by <xref:System.Speech.Recognition.SemanticResultValue> objects are defined by <xref:System.Object> instances passed to their constructors.</span></span> <span data-ttu-id="1bb27-105">Il tipo sottostante di questo <xref:System.Object> deve essere `bool`, `int`, `float`, o `string`.</span><span class="sxs-lookup"><span data-stu-id="1bb27-105">The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`.</span></span> <span data-ttu-id="1bb27-106">Qualsiasi altro tipo impedirà la costruzione di un <xref:System.Speech.Recognition.Grammar> istanza con il <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-106">Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="1bb27-107">L'utilizzo tipico di un <xref:System.Speech.Recognition.SemanticResultValue> istanza associa l'istanza con un componente di riconoscere un <xref:System.Speech.Recognition.Grammar>, ad esempio una frase, una regola, o un <xref:System.Speech.Recognition.Choices> oggetto.</span><span class="sxs-lookup"><span data-stu-id="1bb27-107">The typical use of a <xref:System.Speech.Recognition.SemanticResultValue> instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object.</span></span> <span data-ttu-id="1bb27-108">Se il componente associato viene utilizzato come parte di un'operazione di riconoscimento, di <xref:System.Speech.Recognition.SemanticResultValue> viene utilizzato per definire un valore nella semantica della frase restituita.</span><span class="sxs-lookup"><span data-stu-id="1bb27-108">If the associated component is used as part of a recognition operation, the <xref:System.Speech.Recognition.SemanticResultValue> is used to define a value in the semantics of the returned phrase.</span></span>  
  
 <span data-ttu-id="1bb27-109">Esistono due metodi di base per l'associazione di un <xref:System.Speech.Recognition.SemanticResultValue> istanza con un elemento di grammatica, a seconda del costruttore utilizzato per creare il <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-109">There are two basic methods for associating a <xref:System.Speech.Recognition.SemanticResultValue> instance with a grammar element, depending on the constructor used to create the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
-   <span data-ttu-id="1bb27-110">Se solo il valore (specificato da un'istanza di <xref:System.Object>) viene utilizzato per costruire un <xref:System.Speech.Recognition.SemanticResultValue> oggetto, il <xref:System.Speech.Recognition.SemanticResultValue> è associato al componente di grammatica che hanno preceduto, oltre a un <xref:System.Speech.Recognition.GrammarBuilder> oggetto.</span><span class="sxs-lookup"><span data-stu-id="1bb27-110">If only the value (specified by an instance of <xref:System.Object>) is used to construct a <xref:System.Speech.Recognition.SemanticResultValue> object, the <xref:System.Speech.Recognition.SemanticResultValue> is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
     <span data-ttu-id="1bb27-111">Ad esempio, nel frammento di codice seguente, se un <xref:System.Speech.Recognition.Grammar> costruito usando questa <xref:System.Speech.Recognition.GrammarBuilder> istanza riconosce la parola "background", il valore `true` è impostato nella semantica frase riconosciuta.</span><span class="sxs-lookup"><span data-stu-id="1bb27-111">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
    ```csharp  
    GrammarBuilder backgroundGB=new GrammarBuilder("background");  
    backgroundGB.Append(new SemanticResultValue(true));  
    ```  
  
     <span data-ttu-id="1bb27-112">Per altre informazioni, vedere la descrizione dell'oggetto <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-112">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="1bb27-113">Se una frase di valore di stringa o una specifica <xref:System.Speech.Recognition.GrammarBuilder> istanza viene utilizzato, insieme a un <xref:System.Object> che specifica un <xref:System.Speech.Recognition.SemanticResultValue> valore, che valore viene automaticamente associato con la frase di valore di stringa o <xref:System.Speech.Recognition.GrammarBuilder> istanza.</span><span class="sxs-lookup"><span data-stu-id="1bb27-113">If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a <xref:System.Speech.Recognition.SemanticResultValue> value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.</span></span>  <span data-ttu-id="1bb27-114">Se la frase o <xref:System.Speech.Recognition.GrammarBuilder> oggetto viene utilizzato nel processo di riconoscimento, verrà assegnato il valore per la semantica della frase riconosciuta.</span><span class="sxs-lookup"><span data-stu-id="1bb27-114">If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.</span></span>  
  
     <span data-ttu-id="1bb27-115">Nell'esempio seguente viene illustrata questa situazione ed è funzionalmente equivalente all'esempio precedente, utilizzato chiamate esplicite a <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> e <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-115">The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span> <span data-ttu-id="1bb27-116">Se la logica di riconoscimento utilizza la parola "background", il valore `true` verrà aggiunto alla semantica riconosciuta.</span><span class="sxs-lookup"><span data-stu-id="1bb27-116">If the recognition logic uses the word "background", the value `true` will be added to the recognized semantics.</span></span>  
  
    ```csharp  
    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background", true));  
    ```  
  
     <span data-ttu-id="1bb27-117">Per ulteriori informazioni, vedere la descrizione di <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> e <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-117">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="1bb27-118">Utilizzabile da un <xref:System.Speech.Recognition.Grammar> nel riconoscimento, tutti <xref:System.Speech.Recognition.SemanticResultValue> istanze devono essere associate a uno del <xref:System.Speech.Recognition.SemanticValue> oggetti utilizzati da tale <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-118">To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all <xref:System.Speech.Recognition.SemanticResultValue> instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="1bb27-119">Questa operazione viene eseguita mediante l'associazione di una chiave con semantica di <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-119">This is done by associating a semantic key with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="1bb27-120">Semantica delle chiavi possono essere collegate in modo esplicito a un <xref:System.Speech.Recognition.SemanticResultValue>, usando un <xref:System.Speech.Recognition.SemanticResultKey> oggetto.</span><span class="sxs-lookup"><span data-stu-id="1bb27-120">Semantic keys can be explicitly attached to a <xref:System.Speech.Recognition.SemanticResultValue>, using a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  <span data-ttu-id="1bb27-121"><xref:System.Speech.Recognition.SemanticResultValue> le istanze in modo non esplicito associate a una chiave associate alla chiave radice del valore predefinito <xref:System.Speech.Recognition.SemanticValue>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-121"><xref:System.Speech.Recognition.SemanticResultValue> instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.</span></span>  
  
 <span data-ttu-id="1bb27-122">Dopo un <xref:System.Speech.Recognition.SemanticResultValue> è stato utilizzato per impostare il <xref:System.Speech.Recognition.SemanticValue.Value%2A>, se viene contrassegnato con la chiave radice predefinito oppure qualsiasi particolare <xref:System.Speech.Recognition.SemanticResultKey>, tale valore non deve essere modificato o viene generata un'eccezione durante le operazioni di riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="1bb27-122">After a <xref:System.Speech.Recognition.SemanticResultValue> has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.</span></span>  
  
 <span data-ttu-id="1bb27-123">Nell'esempio seguente genera un'eccezione in quanto imposta e quindi modifica la radice <xref:System.Speech.Recognition.SemanticValue.Value%2A> di un <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-123">The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
```csharp  
GrammarBuilder gb=new GrammarBuilder();  
gb.Append(new SemanticResultValue("One"));  
gb.Append(new SemanticResultValue("Two"));  
```  
  
 <span data-ttu-id="1bb27-124">D'altra parte, il codice nell'esempio seguente è consentito.</span><span class="sxs-lookup"><span data-stu-id="1bb27-124">On the other hand, the code in the following example is permitted.</span></span> <span data-ttu-id="1bb27-125">Anche se definisce più istanze di <xref:System.Speech.Recognition.SemanticResultValue>, sono inclusi in un <xref:System.Speech.Recognition.Choices> oggetto e un solo verrà sempre utilizzata per impostare il valore della chiave `bgOrfgText`.</span><span class="sxs-lookup"><span data-stu-id="1bb27-125">Although it defines multiple instances of <xref:System.Speech.Recognition.SemanticResultValue>, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.</span></span>  
  
```csharp  
Choices fgOrbgChoice = new Choices();  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background"));  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground"));  
SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgText", fgOrbgChoice);  
```  
  
 <span data-ttu-id="1bb27-126">Per ulteriori informazioni sull'utilizzo <xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> degli oggetti, vedere [SemanticResultValue comprensione e gli oggetti SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) e [utilizzando un SemanticResultKey per estrarre un SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) nel [Guida per programmatori vocale sistema per .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span><span class="sxs-lookup"><span data-stu-id="1bb27-126">For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bb27-127">Nell'esempio seguente viene restituito un <xref:System.Speech.Recognition.Grammar> che riconosce il comando "Set/modifica/Alter in primo piano/sfondo...</span><span class="sxs-lookup"><span data-stu-id="1bb27-127">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="1bb27-128">[elenco colore] ".</span><span class="sxs-lookup"><span data-stu-id="1bb27-128">[color list]".</span></span>  <span data-ttu-id="1bb27-129"><xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> istanze (in combinazione con <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> oggetti) vengono utilizzati per definire semantica che può essere analizzata nel riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="1bb27-129"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="1bb27-130">La semantica analizzata determina il colore è stato richiesto e sia di primo piano o in background da modificare.</span><span class="sxs-lookup"><span data-stu-id="1bb27-130">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(new SemanticResultValue(introGB, String.Format("Command: {0}", introString)));  
  }    
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                       cmdIntro,  
                       new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1bb27-131">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="1bb27-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bb27-132">Il `SemanticResultValue` costruttori supportano la specifica di un <xref:System.Object> istanza con un tipo di dati sottostante `bool`, `int`, `float`, o `string`.</span><span class="sxs-lookup"><span data-stu-id="1bb27-132">The `SemanticResultValue` constructors support specifying an <xref:System.Object> instance with an underlying data type of `bool`, `int`, `float`, or `string`.</span></span>  
  
 <span data-ttu-id="1bb27-133">Un costruttore è possibile creare un `SemanticResultValue` istanza in uno dei due casi:</span><span class="sxs-lookup"><span data-stu-id="1bb27-133">A constructor can create a `SemanticResultValue` instance in either of two circumstances:</span></span>  
  
-   <span data-ttu-id="1bb27-134">Il `SemanticResultValue` istanza deve essere associata in modo esplicito a un elemento di grammatica quando si utilizza un <xref:System.Speech.Recognition.GrammarBuilder> per costruire un <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-134">The `SemanticResultValue` instance must be explicitly associated with a grammar element when using a <xref:System.Speech.Recognition.GrammarBuilder> to construct a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
-   <span data-ttu-id="1bb27-135">Il `SemanticResultValue` è già associata a un'espressione di valore di stringa o un <xref:System.Speech.Recognition.GrammarBuilder> oggetto.</span><span class="sxs-lookup"><span data-stu-id="1bb27-135">The `SemanticResultValue` is already associated with a string value phrase or a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1bb27-136">Valore gestito da <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="1bb27-136">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="1bb27-137">Deve essere di tipo <see langword="bool" />, <see langword="int" />, <see langword="float" /> o <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="1bb27-137">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="1bb27-138">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.SemanticResultValue" /> e specifica un valore semantico.</span><span class="sxs-lookup"><span data-stu-id="1bb27-138">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and specifies a semantic value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bb27-139">Oggetto `SemanticResultValue` restituito da questo costruttore non è associato ad alcun elemento particolare grammatica.</span><span class="sxs-lookup"><span data-stu-id="1bb27-139">A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element.</span></span> <span data-ttu-id="1bb27-140">L'associazione deve essere resa esplicita utilizzando l'istanza di `SemanticResultValue` in combinazione con <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="1bb27-140">The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="1bb27-141">Ad esempio, nel frammento di codice seguente, se un <xref:System.Speech.Recognition.Grammar> costruito usando questa <xref:System.Speech.Recognition.GrammarBuilder> istanza riconosce la parola "background", il valore `true` è impostato nella semantica frase riconosciuta.</span><span class="sxs-lookup"><span data-stu-id="1bb27-141">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
```csharp  
GrammarBuilder backgroundGB=new GrammarBuilder("background");  
backgroundGB.Append(new SemanticResultValue(true));  
```  
  
   
  
## Examples  
 <span data-ttu-id="1bb27-142">Nell'esempio seguente viene restituito un <xref:System.Speech.Recognition.Grammar> che riconosce il comando "Set/modifica/Alter in primo piano/sfondo...</span><span class="sxs-lookup"><span data-stu-id="1bb27-142">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="1bb27-143">[elenco colore] ".</span><span class="sxs-lookup"><span data-stu-id="1bb27-143">[color list]".</span></span> <span data-ttu-id="1bb27-144"><xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> istanze (in combinazione con <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> oggetti) vengono utilizzati per definire semantica che può essere analizzata nel riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="1bb27-144"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="1bb27-145">La semantica analizzata determina il colore è stato richiesto e sia di primo piano o in background da modificare.</span><span class="sxs-lookup"><span data-stu-id="1bb27-145">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
        cmdIntro,   
        new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Speech::Recognition::GrammarBuilder ^ builder, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="1bb27-146">Componente di grammatica da utilizzare nel riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="1bb27-146">A grammar component to be used in recognition.</span></span></param>
        <param name="value"><span data-ttu-id="1bb27-147">Valore gestito da <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="1bb27-147">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="1bb27-148">Deve essere di tipo <see langword="bool" />, <see langword="int" />, <see langword="float" /> o <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="1bb27-148">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="1bb27-149">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.SemanticResultValue" /> e associa un valore semantico a un oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="1bb27-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bb27-150">Se l'elemento di grammatica specificato da <xref:System.Speech.Recognition.GrammarBuilder> viene usato nella logica di riconoscimento, `value` verrà impostato nella semantica dell'output riconosciuto.</span><span class="sxs-lookup"><span data-stu-id="1bb27-150">If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="1bb27-151">Nel frammento di codice seguente, se la logica di riconoscimento è costruito con la <xref:System.Speech.Recognition.GrammarBuilder> istanza (`myGb`) utilizza il <xref:System.Speech.Recognition.Choices> oggetto (`myChoice`) per identificare input, il valore `true` viene aggiunto alla semantica riconosciuta.</span><span class="sxs-lookup"><span data-stu-id="1bb27-151">In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue(myChoice, true);  
```  
  
 <span data-ttu-id="1bb27-152">Come <xref:System.Speech.Recognition.GrammarBuilder> supporta la conversione implicita per <xref:System.Speech.Recognition.Choices>, `SemanticResultValue`, e <xref:System.Speech.Recognition.SemanticResultKey>, questo costruttore può utilizzare anche tali oggetti.</span><span class="sxs-lookup"><span data-stu-id="1bb27-152">As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bb27-153">Nell'esempio seguente viene restituito un <xref:System.Speech.Recognition.Grammar> che riconosce il comando "Set/modifica/Alter in primo piano/sfondo...</span><span class="sxs-lookup"><span data-stu-id="1bb27-153">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="1bb27-154">[elenco colore] ".</span><span class="sxs-lookup"><span data-stu-id="1bb27-154">[color list]".</span></span> <span data-ttu-id="1bb27-155"><xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> istanze (in combinazione con <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> oggetti) vengono utilizzati per definire semantica che può essere analizzata nel riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="1bb27-155"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="1bb27-156">La semantica analizzata determina il colore è stato richiesto e sia di primo piano o in background da modificare.</span><span class="sxs-lookup"><span data-stu-id="1bb27-156">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
    }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                      cmdIntro,  
                      new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (string phrase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::String ^ phrase, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="1bb27-157">Frase da utilizzare nel riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="1bb27-157">A phrase to be used in recognition.</span></span></param>
        <param name="value"><span data-ttu-id="1bb27-158">Valore gestito da <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="1bb27-158">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="1bb27-159">Deve essere di tipo <see langword="bool" />, <see langword="int" />, <see langword="float" /> o <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="1bb27-159">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="1bb27-160">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.SemanticResultValue" /> e associa un valore semantico a un oggetto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="1bb27-160">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.String" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bb27-161">Se la stringa specificata da `phrase` viene usato nella logica di riconoscimento, `value` verrà impostato nella semantica dell'output riconosciuto.</span><span class="sxs-lookup"><span data-stu-id="1bb27-161">If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="1bb27-162">Nel frammento di codice seguente, se la logica di riconoscimento è costruito con la <xref:System.Speech.Recognition.GrammarBuilder> istanza (`myGb`) viene utilizzata la stringa "my mortgage" per identificare input, il valore `true` verrà aggiunto alla semantica riconosciuta.</span><span class="sxs-lookup"><span data-stu-id="1bb27-162">In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string "my mortgage" to identify input, the value `true` will be added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue("my mortgage", true);  
```  
  
   
  
## Examples  
 <span data-ttu-id="1bb27-163">Nell'esempio seguente viene restituito un <xref:System.Speech.Recognition.Grammar> che riconosce il comando "Set/modifica/Alter in primo piano/sfondo...</span><span class="sxs-lookup"><span data-stu-id="1bb27-163">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="1bb27-164">[elenco colore] ".</span><span class="sxs-lookup"><span data-stu-id="1bb27-164">[color list]".</span></span> <span data-ttu-id="1bb27-165"><xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> istanze (in combinazione con <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> oggetti) vengono utilizzati per definire semantica che può essere analizzata nel riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="1bb27-165"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="1bb27-166">La semantica analizzata determina il colore è stato richiesto e sia di primo piano o in background da modificare.</span><span class="sxs-lookup"><span data-stu-id="1bb27-166">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }  
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(cmdIntro,  
                         new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1bb27-167">Restituisce un'istanza di <see cref="T:System.Speech.Recognition.GrammarBuilder" /> costruita dall'istanza <see cref="T:System.Speech.Recognition.SemanticResultValue" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="1bb27-167">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1bb27-168">Restituisce un'istanza di <see cref="T:System.Speech.Recognition.GrammarBuilder" /> costruita dall'istanza <see cref="T:System.Speech.Recognition.SemanticResultValue" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="1bb27-168">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bb27-169">L'utilizzo di <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> equivale all'utilizzo di <xref:System.Speech.Recognition.GrammarBuilder> costruttore che accetta un <xref:System.Speech.Recognition.SemanticResultValue> come argomento (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span><span class="sxs-lookup"><span data-stu-id="1bb27-169">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bb27-170">L'esempio seguente crea <xref:System.Speech.Recognition.Grammar> gli oggetti che supportano i comandi per modificare il colore di sfondo.</span><span class="sxs-lookup"><span data-stu-id="1bb27-170">The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.</span></span>  
  
 <span data-ttu-id="1bb27-171">A <xref:System.Speech.Recognition.Choices> oggetto (`colorChoice`) contenente l'elenco di opzioni per i colori di sfondo viene riempito con il <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> metodo con <xref:System.Speech.Recognition.GrammarBuilder> istanze che vengono ottenute dal <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> metodo il `SemanticResultValue` gli oggetti creati da stringhe a colori.</span><span class="sxs-lookup"><span data-stu-id="1bb27-171">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.</span></span>  
  
 <span data-ttu-id="1bb27-172">A <xref:System.Speech.Recognition.GrammarBuilder> viene quindi ottenuto chiamando <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> su un <xref:System.Speech.Recognition.SemanticResultKey> istanza, che verrà utilizzato per le opzioni della semantiche della chiave di `colorChoice` istanza.</span><span class="sxs-lookup"><span data-stu-id="1bb27-172">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RBG.  
  // Choices constructors do not take a SemanticResultValue parameter, so  
  // cast SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    SemanticResultValue colorValue =   
        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
    colorChoice.Add(colorValue.ToGrammarBuilder());  
  }  
  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with an introductory phrase and the  
  // color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the final grammar, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  
  grammar.Name = "Set Background Color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>