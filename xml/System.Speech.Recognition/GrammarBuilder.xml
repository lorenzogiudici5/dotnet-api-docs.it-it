<Type Name="GrammarBuilder" FullName="System.Speech.Recognition.GrammarBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="70f79d60f9d4d676b5deb4b136ef506f6566bd49" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37611366" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GrammarBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GrammarBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.GrammarBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class GrammarBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class GrammarBuilder" />
  <TypeSignature Language="F#" Value="type GrammarBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a4f18-101">Fornisce un meccanismo per la compilazione a livello di codice di vincoli per una grammatica di riconoscimento vocale.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4f18-101">Provides a mechanism for programmatically building the constraints for a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-102">Grammatiche di riconoscimento vocale in genere vengono create in formato XML definito dal [riconoscimento Grammatica SRGS (Speech Specification) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201761).</span><span class="sxs-lookup"><span data-stu-id="a4f18-102">Speech recognition grammars are commonly authored in the XML format defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761).</span></span> <span data-ttu-id="a4f18-103">Se si ha familiarità con SRGS ma si vogliono generare le grammatiche a livello di codice, è possibile usare il <xref:System.Speech.Recognition.SrgsGrammar> dello spazio dei nomi, i cui membri corrispondono agli elementi e attributi definiti da SRGS.</span><span class="sxs-lookup"><span data-stu-id="a4f18-103">If you are familiar with SRGS but want to generate the grammars programmatically, you can use the <xref:System.Speech.Recognition.SrgsGrammar> namespace, whose members correspond closely to the elements and attributes defined by SRGS.</span></span> <span data-ttu-id="a4f18-104">Se non si ha familiarità con SRGS o si vuole un approccio a livello di codice leggero per la creazione con cui è possibile eseguire in modo efficace molti scenari comuni e le grammatiche è possibile usare la <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> classi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-104">If you are unfamiliar with SRGS, or you want a lightweight, programmatic approach to authoring grammars with which you can efficiently accomplish many common scenarios; you can use the <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> classes.</span></span>  
  
 <span data-ttu-id="a4f18-105">Uso <xref:System.Speech.Recognition.GrammarBuilder> composto da oggetti per compilare un albero gerarchico <xref:System.Speech.Recognition.Choices> verso gli oggetti che contengono frasi alternative, intercalata preambolo e post-amble frasi in ogni nodo e il seeding con semantici valori che trasmettono il significato di applicazione.</span><span class="sxs-lookup"><span data-stu-id="a4f18-105">Use <xref:System.Speech.Recognition.GrammarBuilder> objects to build a hierarchical tree composed of <xref:System.Speech.Recognition.Choices> objects that contain alternate phrases, interspersed with preamble and post-amble phrases at each node, and seeded with semantic values that convey  meaning back to the application.</span></span>  
  
 <span data-ttu-id="a4f18-106">Usare un <xref:System.Speech.Recognition.GrammarBuilder> per creare un <xref:System.Speech.Recognition.Grammar> oggetto, usare la procedura seguente.</span><span class="sxs-lookup"><span data-stu-id="a4f18-106">To use a <xref:System.Speech.Recognition.GrammarBuilder> to create a <xref:System.Speech.Recognition.Grammar> object, use the following steps.</span></span>  
  
1.  <span data-ttu-id="a4f18-107">Creare un oggetto <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-107">Create a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
2.  <span data-ttu-id="a4f18-108">Aggiungere vincoli per il <xref:System.Speech.Recognition.GrammarBuilder>, come <xref:System.String> oggetti, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>e altri <xref:System.Speech.Recognition.GrammarBuilder> oggetti che definiscono i vincoli per la grammatica.</span><span class="sxs-lookup"><span data-stu-id="a4f18-108">Append constraints to the <xref:System.Speech.Recognition.GrammarBuilder>, such as <xref:System.String> objects, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, and other <xref:System.Speech.Recognition.GrammarBuilder> objects that define the constraints for the grammar.</span></span>  
  
3.  <span data-ttu-id="a4f18-109">Usare uno dei <xref:System.Speech.Recognition.Grammar.%23ctor%2A> costruttori per creare un <xref:System.Speech.Recognition.Grammar> oggetto dal completato <xref:System.Speech.Recognition.GrammarBuilder> grammatica.</span><span class="sxs-lookup"><span data-stu-id="a4f18-109">Use one of the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructors to create a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder> grammar.</span></span>  
  
 <span data-ttu-id="a4f18-110">Creazione e modifica con <xref:System.Speech.Recognition.GrammarBuilder> è più adatto per le grammatiche di avere una sola regola contenente gli elenchi, o forse gli elenchi degli elenchi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-110">Authoring with <xref:System.Speech.Recognition.GrammarBuilder> is best suited to grammars that have a single rule containing lists, or perhaps lists of lists.</span></span> <span data-ttu-id="a4f18-111">Per compilare a livello di codice le grammatiche di che avere più regole o che devono fare riferimento a regola interna, usare le classi del <xref:System.Speech.Recognition.SrgsGrammar> dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-111">To programmatically build grammars that have multiple rules, or that need to make internal rule references, use the classes of the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="a4f18-112">Le istanze di <xref:System.Speech.Recognition.GrammarBuilder> può anche essere ottenuto da conversioni implicite da altre classi o combinando un <xref:System.Speech.Recognition.GrammarBuilder> con un secondo oggetto che contiene i vincoli per una grammatica di...</span><span class="sxs-lookup"><span data-stu-id="a4f18-112">Instances of <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained by implicit conversions from certain other classes or by combining a  <xref:System.Speech.Recognition.GrammarBuilder> with a second object that contains constraints for a grammar..</span></span> <span data-ttu-id="a4f18-113">Per altre informazioni, vedere la <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatori e <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-113">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators and the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="a4f18-114">Per aggiungere regole a un oggetto esistente <xref:System.Speech.Recognition.GrammarBuilder>, usare il <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, e <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-114">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-115">Il riconoscimento vocale può generare un'eccezione quando si usa una grammatica di riconoscimento vocale che contiene gli elementi semantici duplicati con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il valore dello stesso elemento semantico.</span><span class="sxs-lookup"><span data-stu-id="a4f18-115">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="a4f18-116">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey usando e oggetti SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-116">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="a4f18-117">Per facilitare il debug, il <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> proprietà restituisce lo stato corrente del <xref:System.Speech.Recognition.GrammarBuilder> sotto forma di stringa.</span><span class="sxs-lookup"><span data-stu-id="a4f18-117">To help with debugging, the <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> property returns the current status of the <xref:System.Speech.Recognition.GrammarBuilder> as a string.</span></span>  
  
 <span data-ttu-id="a4f18-118">Per altre informazioni sulla creazione e uso grammatiche di riconoscimento vocale, vedere [riconoscimento vocale](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) e [creare grammatiche GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="a4f18-118">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-119">L'esempio seguente usa <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> gli oggetti per costruire una grammatica che può riconoscere una delle due frasi, "sfondo *colorChoice*" o "impostato in background su *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="a4f18-119">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="a4f18-120">L'esempio Usa un' <xref:System.Speech.Recognition.Choices> oggetto per creare un elenco di valori accettabili per *colorChoice* da una matrice di <xref:System.String> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-120">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="a4f18-121">Oggetto <xref:System.Speech.Recognition.Choices> è analogo all'oggetto di `one-of` elemento nella specifica di SRGS e contiene un set di frasi alternative, ognuna delle quali possono essere riconosciuti pronuncia.</span><span class="sxs-lookup"><span data-stu-id="a4f18-121">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="a4f18-122">L'esempio Usa anche un <xref:System.Speech.Recognition.Choices> oggetto per raggruppare un array di due <xref:System.Speech.Recognition.GrammarBuilder> gli oggetti in una coppia di frasi alternative in grado di riconoscere la grammatica risultante.</span><span class="sxs-lookup"><span data-stu-id="a4f18-122">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="a4f18-123">Le frasi o le parole alternative sono un componente della maggior parte delle grammatiche e il <xref:System.Speech.Recognition.Choices> oggetto fornisce questa funzionalità per le grammatiche costruiti con <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-123">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="a4f18-124">Nell'esempio viene infine creato un <xref:System.Speech.Recognition.Grammar> dell'oggetto da un <xref:System.Speech.Recognition.GrammarBuilder> costruito da un <xref:System.Speech.Recognition.Choices> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-124">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Choices" />
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a4f18-125">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-125">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-126">Istanze di questa classe possono anche essere ottenute da conversioni implicite da altre classi o combinando un <xref:System.Speech.Recognition.GrammarBuilder> con un oggetto al secondo da un nuovo <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-126">Instances of this class can also be obtained by implicit conversions from other classes or by combining a <xref:System.Speech.Recognition.GrammarBuilder> object with a second object to from a new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="a4f18-127">Per altre informazioni, vedere la <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-127">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods.</span></span>  
  
 <span data-ttu-id="a4f18-128">Per aggiungere vincoli a un oggetto esistente <xref:System.Speech.Recognition.GrammarBuilder>, usare il <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, e <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> metodi e il <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatore.</span><span class="sxs-lookup"><span data-stu-id="a4f18-128">To add constraints to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-129">Il riconoscimento vocale può generare un'eccezione quando si usa una grammatica di riconoscimento vocale che contiene gli elementi semantici duplicati con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il valore dello stesso elemento semantico.</span><span class="sxs-lookup"><span data-stu-id="a4f18-129">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="a4f18-130">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey usando e oggetti SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-130">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="a4f18-131">Per altre informazioni sulla creazione e uso grammatiche di riconoscimento vocale, vedere [riconoscimento vocale](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) e [creare grammatiche GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="a4f18-131">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4f18-132">Inizializza una nuova istanza vuota della classe <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-132">Initializes a new, empty instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-133">Per aggiungere regole a un oggetto esistente <xref:System.Speech.Recognition.GrammarBuilder> dell'oggetto, usare il <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, e <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> metodi e il <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatore.</span><span class="sxs-lookup"><span data-stu-id="a4f18-133">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder> object, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-134">Il riconoscimento vocale può generare un'eccezione quando si usa una grammatica di riconoscimento vocale che contiene gli elementi semantici duplicati con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il valore dello stesso elemento semantico.</span><span class="sxs-lookup"><span data-stu-id="a4f18-134">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="a4f18-135">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey usando e oggetti SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-135">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-136">L'esempio seguente usa <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> gli oggetti per costruire una grammatica che può riconoscere una delle due frasi, "sfondo *colorChoice*" o "impostato in background su *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="a4f18-136">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="a4f18-137">L'esempio Usa un' <xref:System.Speech.Recognition.Choices> oggetto per creare un elenco di valori accettabili per *colorChoice* da una matrice di <xref:System.String> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-137">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="a4f18-138">Oggetto <xref:System.Speech.Recognition.Choices> è analogo all'oggetto di `one-of` elemento nella specifica di SRGS e contiene un set di frasi alternative, ciascuno dei quali può essere riconosciuto pronuncia.</span><span class="sxs-lookup"><span data-stu-id="a4f18-138">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any one of which can be recognized when spoken.</span></span> <span data-ttu-id="a4f18-139">L'esempio Usa anche un <xref:System.Speech.Recognition.Choices> oggetto per raggruppare un array di due <xref:System.Speech.Recognition.GrammarBuilder> gli oggetti in una coppia di frasi alternative in grado di riconoscere la grammatica risultante.</span><span class="sxs-lookup"><span data-stu-id="a4f18-139">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="a4f18-140">Le frasi o le parole alternative sono un componente della maggior parte delle grammatiche e il <xref:System.Speech.Recognition.Choices> oggetto fornisce questa funzionalità per le grammatiche costruiti con <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-140">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="a4f18-141">Nell'esempio viene infine creato un <xref:System.Speech.Recognition.Grammar> dell'oggetto da un <xref:System.Speech.Recognition.GrammarBuilder> costruito da un <xref:System.Speech.Recognition.Choices> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-141">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  GrammarBuilder bothPhrases = new GrammarBuilder();  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  bothPhrases.Append(bothChoices);  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="a4f18-142">Set di alternative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-142">The set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-143">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> da un set di alternative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-143">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a set of alternatives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-144">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene alternative, vedere [usando le opzioni per creare una grammatica GrammarBuilder](http://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span><span class="sxs-lookup"><span data-stu-id="a4f18-144">For more information about building a speech recognition grammar that contains alternatives, see [Using Choices to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-145">L'esempio seguente usa <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> gli oggetti per costruire una grammatica che può riconoscere una delle due frasi, "sfondo *colorChoice*" o "impostato in background su *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="a4f18-145">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="a4f18-146">L'esempio Usa un' <xref:System.Speech.Recognition.Choices> oggetto per creare un elenco di valori accettabili per *colorChoice* da una matrice di <xref:System.String> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-146">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="a4f18-147">Oggetto <xref:System.Speech.Recognition.Choices> è analogo all'oggetto di `one-of` elemento nella specifica di SRGS e contiene un set di frasi alternative, ognuna delle quali possono essere riconosciuti pronuncia.</span><span class="sxs-lookup"><span data-stu-id="a4f18-147">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="a4f18-148">L'esempio Usa anche un <xref:System.Speech.Recognition.Choices> oggetto per raggruppare un array di due <xref:System.Speech.Recognition.GrammarBuilder> gli oggetti in una coppia di frasi alternative in grado di riconoscere la grammatica risultante.</span><span class="sxs-lookup"><span data-stu-id="a4f18-148">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="a4f18-149">Le frasi o le parole alternative sono un componente della maggior parte delle grammatiche e il <xref:System.Speech.Recognition.Choices> oggetto fornisce questa funzionalità per le grammatiche costruiti con <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-149">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="a4f18-150">Nell'esempio viene infine creato un <xref:System.Speech.Recognition.Grammar> dell'oggetto da un <xref:System.Speech.Recognition.GrammarBuilder> costruito da un <xref:System.Speech.Recognition.Choices> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-150">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a4f18-151">La chiave semantica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-151">The semantic key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-152">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> a partire da una chiave semantica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-152">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-153">Quando si crea una <xref:System.Speech.Recognition.GrammarBuilder> dell'istanza da un <xref:System.Speech.Recognition.SemanticResultValue> dell'oggetto, aggiungere informazioni semantiche per la grammatica che può essere restituita nel risultato del riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="a4f18-153">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="a4f18-154">È possibile accedere alle informazioni semantiche nel risultato il riconoscimento utilizzando il <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> proprietà di <xref:System.Speech.Recognition.RecognizedPhrase>, disponibile nel gestore per il `SpeechRecognized` evento.</span><span class="sxs-lookup"><span data-stu-id="a4f18-154">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="a4f18-155">Se il <xref:System.Speech.Recognition.GrammarBuilder> definisce un <xref:System.Speech.Recognition.SemanticResultKey>, può essere utilizzato per recuperare le informazioni semantiche in un risultato del riconoscimento che viene associato alla chiave.</span><span class="sxs-lookup"><span data-stu-id="a4f18-155">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="a4f18-156">Vedere l'esempio relativo <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>e vedere anche <xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-156">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-157">Quando si costruisce <xref:System.Speech.Recognition.GrammarBuilder> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> oppure <xref:System.Speech.Recognition.SemanticResultKey> istanze, verificare che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-157">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-158">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-158">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-159">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey usando e oggetti SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-159">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-160">L'esempio seguente crea una grammatica di riconoscimento vocale in grado di riconoscere le due frasi, "rendere lo sfondo *colorChoice*" e "impostata in background *colorChoice*", dove * colorChoice* viene selezionato da un set di colori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-160">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="a4f18-161">La grammatica consente a un utente di pronunciare diversi nomi di colore e restituisce informazioni semantiche sul nome del colore riconosciuto per l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="a4f18-161">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="a4f18-162">L'esempio Usa un unico <xref:System.Speech.Recognition.SemanticResultKey> con cui è possibile recuperare il <xref:System.Speech.Recognition.SemanticValue> che è associato con il colore parlato dall'utente.</span><span class="sxs-lookup"><span data-stu-id="a4f18-162">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="a4f18-163">Ad esempio, se l'input contiene la frase "Set di background su red", il risultato del riconoscimento contiene il valore semantico del "#ff0000", che è possibile recuperare usando un gestore per il `SpeechRecognized` evento.</span><span class="sxs-lookup"><span data-stu-id="a4f18-163">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="a4f18-164">Nell'esempio viene usato <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, e <xref:System.Speech.Recognition.GrammarBuilder> oggetti per compilare i vincoli che sono tutte contenuti nell'ultimo <xref:System.Speech.Recognition.GrammarBuilder> oggetto `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="a4f18-164">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="a4f18-165">Infine, nell'esempio si costruisce una <xref:System.Speech.Recognition.Grammar> oggetto dal completato <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-165">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices object for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the Grammar object from the GrammarBuilder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a4f18-166">Il valore semantico o la coppia nome/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-166">The semantic value or name/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-167">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> a partire da un valore semantico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-167">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-168">Quando si crea una <xref:System.Speech.Recognition.GrammarBuilder> dell'istanza da un <xref:System.Speech.Recognition.SemanticResultValue> dell'oggetto, aggiungere informazioni semantiche per la grammatica che può essere restituita nel risultato del riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="a4f18-168">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="a4f18-169">È possibile accedere alle informazioni semantiche nel risultato il riconoscimento utilizzando il <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> proprietà di <xref:System.Speech.Recognition.RecognizedPhrase>, disponibile nel gestore per il `SpeechRecognized` evento.</span><span class="sxs-lookup"><span data-stu-id="a4f18-169">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="a4f18-170">Se il <xref:System.Speech.Recognition.GrammarBuilder> definisce un <xref:System.Speech.Recognition.SemanticResultKey>, può essere utilizzato per recuperare le informazioni semantiche in un risultato del riconoscimento che viene associato alla chiave.</span><span class="sxs-lookup"><span data-stu-id="a4f18-170">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="a4f18-171">Vedere l'esempio relativo <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>e vedere anche <xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-171">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-172">Quando si costruisce <xref:System.Speech.Recognition.GrammarBuilder> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> oppure <xref:System.Speech.Recognition.SemanticResultKey> istanze, verificare che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-172">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-173">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-173">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-174">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey usando e oggetti SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-174">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-175">L'esempio seguente crea una grammatica di riconoscimento vocale in grado di riconoscere le due frasi, "rendere lo sfondo *colorChoice*" e "impostata in background *colorChoice*", dove * colorChoice* viene selezionato da un set di colori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-175">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="a4f18-176">La grammatica consente a un utente di pronunciare diversi nomi di colore e restituisce informazioni semantiche sul nome del colore riconosciuto per l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="a4f18-176">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="a4f18-177">L'esempio Usa un unico <xref:System.Speech.Recognition.SemanticResultKey> con cui è possibile recuperare il <xref:System.Speech.Recognition.SemanticValue> che è associato con il colore parlato dall'utente.</span><span class="sxs-lookup"><span data-stu-id="a4f18-177">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="a4f18-178">Ad esempio, se l'input contiene la frase "Set di background su red", il risultato del riconoscimento contiene il valore semantico del "#ff0000", che è possibile recuperare usando un gestore per il `SpeechRecognized` evento.</span><span class="sxs-lookup"><span data-stu-id="a4f18-178">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="a4f18-179">Nell'esempio viene usato <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, e <xref:System.Speech.Recognition.GrammarBuilder> oggetti per compilare i vincoli che sono tutte contenuti nell'ultimo <xref:System.Speech.Recognition.GrammarBuilder> oggetto `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="a4f18-179">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="a4f18-180">Infine, nell'esempio si costruisce una <xref:System.Speech.Recognition.Grammar> oggetto dal completato <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-180">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the grammar from the grammar builder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder phrase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="a4f18-181">La sequenza di parole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-181">The sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-182">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> da una sequenza di parole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-182">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-183">La frase rappresenta una frase pronunciata esatta in grado di riconoscere la grammatica di riconoscimento vocale.</span><span class="sxs-lookup"><span data-stu-id="a4f18-183">The phrase represents an exact spoken phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="a4f18-184">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene le stringhe, vedere [uso di stringhe per creare una grammatica GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="a4f18-184">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-185">L'esempio seguente usa <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> gli oggetti per costruire una grammatica che può riconoscere una delle due frasi, "sfondo *colorChoice*" o "impostato in background su *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="a4f18-185">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="a4f18-186">Dopo aver creato un elenco di valori accettabili per *colorChoice* usando un <xref:System.Speech.Recognition.Choices> dell'oggetto, nell'esempio viene inizializzato due <xref:System.Speech.Recognition.GrammarBuilder> oggetti `makePhrase` e `setPhrase`, usando una stringa come argomento.</span><span class="sxs-lookup"><span data-stu-id="a4f18-186">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using a string as an argument.</span></span>  
  
 <span data-ttu-id="a4f18-187">Nell'esempio viene infine creato un <xref:System.Speech.Recognition.Grammar> dell'oggetto da un <xref:System.Speech.Recognition.Choices> cast dell'oggetto a un <xref:System.Speech.Recognition.GrammarBuilder> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-187">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * System.Speech.Recognition.SubsetMatchingMode -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, subsetMatchingCriteria)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="a4f18-188">La sequenza di parole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-188">The sequence of words.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="a4f18-189">La modalità di corrispondenza che la grammatica di riconoscimento vocale utilizza per riconoscere la frase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-189">The matching mode the speech recognition grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-190">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> per un subset di una sequenza di parole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-190">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class for a subset of a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-191">Il `phrase` parametro rappresenta la posizione in cui è in grado di riconoscere la grammatica di riconoscimento vocale.</span><span class="sxs-lookup"><span data-stu-id="a4f18-191">The `phrase` parameter represents the phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="a4f18-192">Il `subsetMatchingMode` parametro specifica un subset della frase di cui può essere presentato per ottenere il riconoscimento ha esito positivo dell'intera frase.</span><span class="sxs-lookup"><span data-stu-id="a4f18-192">The `subsetMatchingMode` parameter specifies a subset of the phrase that can be spoken to achieve successful recognition of the entire phrase.</span></span> <span data-ttu-id="a4f18-193">È possibile utilizzare questo per creare una grammatica contenente un elenco di voci con nomi lunghi, senza richiedere agli utenti di pronunciare un intero nome venga trovata una corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="a4f18-193">You can use this to create a grammar with a list of entries that have long names, without requiring users to speak an entire name to match an item.</span></span>  
  
 <span data-ttu-id="a4f18-194">Per altre informazioni sulle modalità di corrispondenza, vedere <xref:System.Speech.Recognition.SubsetMatchingMode>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-194">For more information about the matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode>.</span></span> <span data-ttu-id="a4f18-195">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene le stringhe, vedere [uso di stringhe per creare una grammatica GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="a4f18-195">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-196">L'esempio seguente crea una grammatica di riconoscimento vocale per ogni <xref:System.Speech.Recognition.SubsetMatchingMode> valore e una grammatica per la scelta tra le grammatiche di modalità di corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="a4f18-196">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value and a grammar for choosing between the matching mode grammars.</span></span> <span data-ttu-id="a4f18-197">Se il valore di `phrase` è "uno due tre quattro cinque sei sette", quindi la grammatica sottosequenza riconosce l'input "due tre quattro", ma non l'input "uno tre cinque".</span><span class="sxs-lookup"><span data-stu-id="a4f18-197">If the value of `phrase` is "one two three four five six seven", then the Subsequence grammar recognizes the input "two three four", but not the input "one three five".</span></span> <span data-ttu-id="a4f18-198">La grammatica ordinati Subset riconosce tuttavia entrambi i dati di input.</span><span class="sxs-lookup"><span data-stu-id="a4f18-198">However, the Ordered Subset grammar recognizes both of these inputs.</span></span>  
  
```csharp  
  
private static IEnumerable<Grammar>  
  CreateMatchingModeGrammars(string phrase)  
{  
  List<Grammar> grammars = new List<Grammar>(5);  
  
  Choices modeChoice = new Choices();  
  Type enumType = typeof(SubsetMatchingMode);  
  foreach (SubsetMatchingMode mode in Enum.GetValues(enumType))  
  {  
    string modeName = Enum.GetName(enumType, mode);  
    modeName = BreakAtCaps(modeName);  
  
    GrammarBuilder builder = new GrammarBuilder(phrase, mode);  
    Grammar modeGrammar = new Grammar(builder);  
    modeGrammar.Name = modeName;  
    modeGrammar.Enabled = false;  
    grammars.Add(modeGrammar);  
  
    modeChoice.Add(modeName);  
  }  
  
  Grammar choiceGrammar = new Grammar(modeChoice);  
  choiceGrammar.Name = "choice";  
  grammars.Add(choiceGrammar);  
  
  return grammars;  
}  
  
// Insert spaces preceding each uppercase letter in a string.   
private static string BreakAtCaps(string item)  
{  
  if (item == null || item.Length == 0)  
  {  
    return item;  
  }  
  
  StringBuilder sb = new StringBuilder(item[0].ToString());  
  for (int i = 1; i < item.Length; i++)  
  {  
    char c = item[i];  
    if (char.IsUpper(c))  
    {  
      sb.Append(" ");  
    }  
    sb.Append(c);  
  }  
  
  return sb.ToString();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SubsetMatchingMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.GrammarBuilder * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (builder, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="a4f18-199">Elemento ripetuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-199">The repeated element.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="a4f18-200">Numero minimo di volte in cui un input che corrisponde all'elemento definito da <c>builder</c> deve verificarsi per costituire una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-200">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="a4f18-201">Numero massimo di volte in cui un input che corrisponde all'elemento definito da <c>builder</c> può verificarsi per costituire una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-201">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-202">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> da un elemento ripetuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-202">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a repeated element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-203">Se il valore di `minRepeat` è 0, il nuovo <xref:System.Speech.Recognition.GrammarBuilder> rappresenta un elemento facoltativo.</span><span class="sxs-lookup"><span data-stu-id="a4f18-203">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="a4f18-204">Il valore di `minRepeat` deve essere maggiore o uguale a 0 e minore o uguale al valore di `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="a4f18-204">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-205">Quando si specifica deve essere ripetuto per <xref:System.Speech.Recognition.GrammarBuilder> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> o <xref:System.Speech.Recognition.SemanticResultKey> istanze, verificare che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-205">When you specify repeats for <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-206">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-206">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-207">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey usando e oggetti SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-207">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-208">L'esempio seguente crea una grammatica di riconoscimento vocale per ordinare una pizza.</span><span class="sxs-lookup"><span data-stu-id="a4f18-208">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="a4f18-209">Inizia con una frase facoltativa, aprire, seguita da una a quattro condimenti e si chiude con la parola "pizza".</span><span class="sxs-lookup"><span data-stu-id="a4f18-209">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object from a string array of alternative toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="a4f18-210">La sequenza ripetuta di parole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-210">The repeated sequence of words.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="a4f18-211">Il numero minimo di volte in cui deve verificarsi l'input che corrisponde alla frase per costituire una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-211">The minimum number of times that input matching the phrase must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="a4f18-212">Il numero massimo di volte in cui può verificarsi un input che corrisponde alla frase per costituire una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-212">The maximum number of times that input matching the phrase can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-213">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> dalla sequenza di parole in un oggetto <see cref="T:System.String" /> e specifica quante volte può essere ripetuto l'oggetto <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-213">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from the sequence of words in a <see cref="T:System.String" /> and specifies how many times the <see cref="T:System.String" /> can be repeated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-214">Se il valore di `minRepeat` è 0, il nuovo <xref:System.Speech.Recognition.GrammarBuilder> rappresenta un elemento facoltativo.</span><span class="sxs-lookup"><span data-stu-id="a4f18-214">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="a4f18-215">Il valore di `minRepeat` deve essere maggiore o uguale a 0 e minore o uguale al valore di `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="a4f18-215">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span> <span data-ttu-id="a4f18-216">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene le stringhe, vedere [uso di stringhe per creare una grammatica GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="a4f18-216">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-217">L'esempio seguente crea una grammatica di riconoscimento vocale per ordinare una pizza.</span><span class="sxs-lookup"><span data-stu-id="a4f18-217">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="a4f18-218">Inizia con una frase facoltativa, aprire, seguita da una a quattro condimenti e si chiude con la parola "pizza".</span><span class="sxs-lookup"><span data-stu-id="a4f18-218">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a4f18-219">Crea un nuovo oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> contenente una sequenza di due elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-219">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-220">Il metodo statico <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metodi forniscono un altro meccanismo mediante il quale è possibile combinare tipi diversi per creare ambienti eterogenei e flessibilità per le grammatiche compilati con <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-220">The static <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods provide another mechanism by which you can combine various types to create diversity and flexibility in grammars built with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="a4f18-221">Questi metodi corrispondono alla proprietà statica <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> metodi, che sono definiti anche nel <xref:System.Speech.Recognition.GrammarBuilder> classe.</span><span class="sxs-lookup"><span data-stu-id="a4f18-221">These methods correspond to the static <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods, which are also defined on the <xref:System.Speech.Recognition.GrammarBuilder> class.</span></span> <span data-ttu-id="a4f18-222">L'ordine dei parametri determina l'ordine degli elementi nel nuovo <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-222">The order of the parameters determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="a4f18-223">Oggetto <xref:System.Speech.Recognition.GrammarBuilder> può anche essere ottenuto da <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, e [stringa](http://go.microsoft.com/fwlink/?LinkId=159733) oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-223">A <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and [String](http://go.microsoft.com/fwlink/?LinkId=159733) objects.</span></span> <span data-ttu-id="a4f18-224">Per altre informazioni, vedere la <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-224">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-225">Il riconoscimento vocale può generare un'eccezione quando si usa una grammatica di riconoscimento vocale che contiene gli elementi semantici duplicati con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il valore dello stesso elemento semantico.</span><span class="sxs-lookup"><span data-stu-id="a4f18-225">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="a4f18-226">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey usando e oggetti SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-226">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="a4f18-227">Per altre informazioni sulla creazione e uso grammatiche di riconoscimento vocale, vedere [riconoscimento vocale](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) e [creare grammatiche GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="a4f18-227">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (choices, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="a4f18-228">Primo elemento di grammatica, che rappresenta un set di alternative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-228">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="a4f18-229">Secondo elemento di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-229">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-230">Crea un nuovo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> che contiene un oggetto <see cref="T:System.Speech.Recognition.Choices" /> seguito da un oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-230">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-231">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> per la sequenza dell'elemento <paramref name="choices" /> seguito dall'elemento <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-231">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-232"><xref:System.Speech.Recognition.GrammarBuilder> supporta le conversioni implicite dalle classi seguenti:</span><span class="sxs-lookup"><span data-stu-id="a4f18-232"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="a4f18-233">Questo metodo accetta gli oggetti elencati in precedenza per il `builder` parametro.</span><span class="sxs-lookup"><span data-stu-id="a4f18-233">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="a4f18-234">Per altre informazioni, vedere la <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-234">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-235">Quando si combinano <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> o <xref:System.Speech.Recognition.SemanticResultKey> istanze, verificare che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-235">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-236">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-236">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-237">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [semantica di aggiunta a una grammatica GrammarBuilder](https://msdn.microsoft.com/library/hh361581.aspx).</span><span class="sxs-lookup"><span data-stu-id="a4f18-237">For more information about building a speech recognition grammar that contains semantic information, see [Add Semantics to a GrammarBuilder Grammar](https://msdn.microsoft.com/library/hh361581.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, choices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="a4f18-238">Primo elemento di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-238">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="a4f18-239">Il secondo elemento di grammatica, che rappresenta un set di alternative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-239">The second grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-240">Crea un nuovo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> che contiene un oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> seguito da un oggetto <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-240">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-241">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> per la sequenza dell'elemento <paramref name="builder" /> seguito dall'elemento <paramref name="choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-241">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="choices" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-242"><xref:System.Speech.Recognition.GrammarBuilder> supporta le conversioni implicite dalle classi seguenti:</span><span class="sxs-lookup"><span data-stu-id="a4f18-242"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="a4f18-243">Questo metodo accetta gli oggetti elencati in precedenza per il `builder` parametro.</span><span class="sxs-lookup"><span data-stu-id="a4f18-243">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="a4f18-244">Per altre informazioni, vedere la <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-244">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-245">Quando si combinano <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> o <xref:System.Speech.Recognition.SemanticResultKey> istanze con altri elementi di grammatica, assicurarsi che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici è stato possibile modificare ripetutamente le <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-245">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-246">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-246">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-247">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey usando e oggetti SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-247">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-248">L'esempio seguente crea una grammatica di riconoscimento vocale in grado di riconoscere le due frasi, "sfondo *colore*" e "impostata in background *colore*", dove *colore* viene selezionato da un set di colori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-248">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="a4f18-249">Diversi tipi utilizzati per compilare la grammatica finale, ad esempio [stringa](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, e <xref:System.Speech.Recognition.GrammarBuilder> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-249">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="a4f18-250">Gli operatori di cast espliciti nelle chiamate al <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metodi sono facoltativi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-250">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder1, builder2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="a4f18-251">Primo elemento di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-251">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="a4f18-252">Secondo elemento di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-252">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-253">Crea un nuovo oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> contenente una sequenza di due oggetti <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-253">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-254">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> per la sequenza dell'elemento <paramref name="builder1" /> seguito dall'elemento <paramref name="builder2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-254">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> element followed by the <paramref name="builder2" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-255"><xref:System.Speech.Recognition.GrammarBuilder> supporta le conversioni implicite dalle classi seguenti:</span><span class="sxs-lookup"><span data-stu-id="a4f18-255"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="a4f18-256">Questo metodo accetta gli oggetti elencati in precedenza per il `builder1` o `builder2` parametro.</span><span class="sxs-lookup"><span data-stu-id="a4f18-256">This method accepts the objects listed above for the `builder1` or `builder2` parameter.</span></span>  
  
 <span data-ttu-id="a4f18-257">Per altre informazioni, vedere la <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-257">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-258">Quando si combinano <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> o <xref:System.Speech.Recognition.SemanticResultKey> istanze con altri elementi di grammatica, assicurarsi che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici è stato possibile modificare ripetutamente le <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-258">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-259">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-259">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-260">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey usando e oggetti SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-260">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-261">L'esempio seguente crea una grammatica di riconoscimento vocale in grado di riconoscere le due frasi, "sfondo *colore*" e "impostata in background *colore*", dove *colore* viene selezionato da un set di colori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-261">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="a4f18-262">Diversi tipi utilizzati per compilare la grammatica finale, ad esempio [stringa](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, e <xref:System.Speech.Recognition.GrammarBuilder> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-262">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="a4f18-263">Gli operatori di cast espliciti nelle chiamate al <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metodi sono facoltativi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-263">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, phrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="a4f18-264">Primo elemento di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-264">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="a4f18-265">Il secondo elemento di grammatica, che rappresenta una sequenza di parole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-265">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-266">Crea un nuovo oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> contenente un oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> seguito da una frase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-266">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-267">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> per la sequenza dell'elemento <paramref name="builder" /> seguito dall'elemento <paramref name="phrase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-267">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="phrase" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-268"><xref:System.Speech.Recognition.GrammarBuilder> supporta le conversioni implicite dalle classi seguenti:</span><span class="sxs-lookup"><span data-stu-id="a4f18-268"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="a4f18-269">Questo metodo accetta gli oggetti elencati in precedenza per il `builder` parametro.</span><span class="sxs-lookup"><span data-stu-id="a4f18-269">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="a4f18-270">Per altre informazioni, vedere la <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-270">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-271">L'esempio seguente crea una grammatica di riconoscimento vocale in grado di riconoscere le due frasi, "sfondo *colore*" e "impostata in background *colore*", dove *colore* viene selezionato da un set di colori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-271">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="a4f18-272">Diversi tipi utilizzati per compilare la grammatica finale, ad esempio [stringa](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, e <xref:System.Speech.Recognition.GrammarBuilder> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-272">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="a4f18-273">Gli operatori di cast espliciti nelle chiamate al <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metodi sono facoltativi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-273">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (phrase, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="a4f18-274">Il primo elemento di grammatica, che rappresenta una sequenza di parole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-274">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="a4f18-275">Secondo elemento di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-275">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-276">Crea un nuovo oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> contenente una frase seguita da un oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-276">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-277">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> per la sequenza dell'elemento <paramref name="phrase" /> seguito dall'elemento <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-277">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-278"><xref:System.Speech.Recognition.GrammarBuilder> supporta le conversioni implicite dalle classi seguenti:</span><span class="sxs-lookup"><span data-stu-id="a4f18-278"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="a4f18-279">Questo metodo accetta gli oggetti elencati in precedenza per il `builder` parametro.</span><span class="sxs-lookup"><span data-stu-id="a4f18-279">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="a4f18-280">Per altre informazioni, vedere la <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-280">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-281">L'esempio seguente crea una grammatica di riconoscimento vocale in grado di riconoscere le due frasi, "sfondo *colore*" e "impostata in background *colore*", dove *colore* viene selezionato da un set di colori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-281">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="a4f18-282">Diversi tipi utilizzati per compilare la grammatica finale, ad esempio [stringa](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, e <xref:System.Speech.Recognition.GrammarBuilder> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-282">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="a4f18-283">Gli operatori di cast espliciti nelle chiamate al <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metodi sono facoltativi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-283">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a4f18-284">Aggiunge un elemento di grammatica alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-284">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-285">Utilizzare questi metodi per aggiungere elementi di grammatica esistente <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-285">Use these methods to append grammar elements to an existing <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="a4f18-286">Quando si creano elementi di grammatica, è possibile aggiungere il generatore esistente per sviluppare progressivamente i vincoli per una grammatica di riconoscimento vocale.</span><span class="sxs-lookup"><span data-stu-id="a4f18-286">As you create grammar elements, you can append them to the existing builder to progressively develop the constraints for a speech recognition grammar.</span></span> <span data-ttu-id="a4f18-287">Ogni elemento viene aggiunto alla fine della sequenza corrente di elementi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-287">Each element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="a4f18-288">Questo metodo dispone di overload per l'accodamento <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, e <xref:System.Speech.Recognition.SemanticResultValue> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-288">This method has overloads for appending <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-289">Il riconoscimento vocale può generare un'eccezione quando si usa una grammatica di riconoscimento vocale che contiene gli elementi semantici duplicati con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il valore dello stesso elemento semantico.</span><span class="sxs-lookup"><span data-stu-id="a4f18-289">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="a4f18-290">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey usando e oggetti SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-290">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="a4f18-291">Per altre informazioni sulla creazione e uso grammatiche di riconoscimento vocale, vedere [riconoscimento vocale](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) e [creare grammatiche GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="a4f18-291">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.Choices -&gt; unit" Usage="grammarBuilder.Append alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="a4f18-292">Il set di alternative da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-292">The set of alternatives to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-293">Aggiunge un set di alternative alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-293">Appends a set of alternatives to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-294">`alternateChoices` viene aggiunto alla fine della sequenza corrente di elementi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-294">`alternateChoices` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-295">Quando accodare <xref:System.Speech.Recognition.Choices> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> o <xref:System.Speech.Recognition.SemanticResultKey> alle istanze un <xref:System.Speech.Recognition.GrammarBuilder> oggetto, assicurarsi che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici che potrebbero ripetutamente modificare il <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-295">When you append <xref:System.Speech.Recognition.Choices> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-296">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-296">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-297">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey oggetti e comprensione SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-297">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-298">L'esempio seguente crea una grammatica di riconoscimento vocale per ottenere frasi, ad esempio "Teresa chiamata al lavoro" e "Chiamata Anne sul proprio telefono cellulare", in cui la parola "phone" è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="a4f18-298">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="a4f18-299">L'esempio evidenzia l'uso del <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="a4f18-299">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder -&gt; unit" Usage="grammarBuilder.Append builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="a4f18-300">L'elemento di grammatica da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-300">The grammar element to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-301">Aggiunge un elemento di grammatica alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-301">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-302">`builder` viene aggiunto alla fine della sequenza corrente di elementi di grammatica.</span><span class="sxs-lookup"><span data-stu-id="a4f18-302">`builder` is added to the end of the current sequence of grammar elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a4f18-303">Quando accodare <xref:System.Speech.Recognition.GrammarBuilder> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> o <xref:System.Speech.Recognition.SemanticResultKey> alle istanze un <xref:System.Speech.Recognition.GrammarBuilder> oggetto, assicurarsi che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici che potrebbero ripetutamente modificare il <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-303">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-304">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-304">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-305">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey usando e oggetti SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-305">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-306">L'esempio seguente crea una grammatica di riconoscimento vocale per ottenere frasi, ad esempio "Teresa chiamata al lavoro" e "Chiamata Anne sul proprio telefono cellulare", in cui la parola "phone" è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="a4f18-306">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="a4f18-307"><xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> oggetti vengono utilizzati per costruire la grammatica.</span><span class="sxs-lookup"><span data-stu-id="a4f18-307"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="a4f18-308">L'esempio evidenzia l'uso del <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="a4f18-308">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultKey -&gt; unit" Usage="grammarBuilder.Append key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a4f18-309">La chiave semantica da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-309">The semantic key to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-310">Aggiunge una chiave semantica alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-310">Appends a semantic key to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-311">`key` viene aggiunto alla fine della sequenza corrente di elementi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-311">`key` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-312">Quando si aggiunge <xref:System.Speech.Recognition.SemanticResultValue> o <xref:System.Speech.Recognition.SemanticResultKey> istanze di un <xref:System.Speech.Recognition.GrammarBuilder> dell'oggetto, assicurarsi che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-312">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-313">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-313">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-314">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey oggetti e comprensione SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-314">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-315">Nell'esempio seguente fa parte di un'applicazione console per la scelta di origine e destinazione città per un volo.</span><span class="sxs-lookup"><span data-stu-id="a4f18-315">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="a4f18-316">L'applicazione riconosca le frasi, ad esempio "Voglio entrata da Miami a Chicago."</span><span class="sxs-lookup"><span data-stu-id="a4f18-316">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="a4f18-317">Il gestore per il <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> evento utilizza i <xref:System.Speech.Recognition.SemanticResultKey> per estrarre il codice dell'aeroporto specificato nella <xref:System.Speech.Recognition.SemanticResultValue> per le città di origine e destinazione.</span><span class="sxs-lookup"><span data-stu-id="a4f18-317">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create a Choices object and add  cities and airport codes  
        // using SemanticResultValue objects.  
        Choices cities = new Choices();  
        cities.Add(new SemanticResultValue("Chicago", "ORD"));  
        cities.Add(new SemanticResultValue("Boston", "BOS"));  
        cities.Add(new SemanticResultValue("Miami", "MIA"));  
        cities.Add(new SemanticResultValue("Dallas", "DFW"));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultValue -&gt; unit" Usage="grammarBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a4f18-318">Valore semantico da accodare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-318">The semantic value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-319">Aggiunge un valore semantico alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-319">Appends a semantic value to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-320">`value` viene aggiunto alla fine della sequenza corrente di elementi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-320">`value` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-321">Quando si aggiunge <xref:System.Speech.Recognition.SemanticResultValue> o <xref:System.Speech.Recognition.SemanticResultKey> istanze di un <xref:System.Speech.Recognition.GrammarBuilder> dell'oggetto, assicurarsi che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-321">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-322">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-322">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-323">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey oggetti e comprensione SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-323">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-324">Nell'esempio seguente fa parte di un'applicazione console per la scelta di origine e destinazione città per un volo.</span><span class="sxs-lookup"><span data-stu-id="a4f18-324">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="a4f18-325">L'applicazione riconosca le frasi, ad esempio "Voglio entrata da Miami a Chicago."</span><span class="sxs-lookup"><span data-stu-id="a4f18-325">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="a4f18-326">Il gestore per il <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> evento utilizza i <xref:System.Speech.Recognition.SemanticResultKey> per estrarre il codice dell'aeroporto specificato nella <xref:System.Speech.Recognition.SemanticResultValue> per le città di origine e destinazione.</span><span class="sxs-lookup"><span data-stu-id="a4f18-326">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create GrammarBuilder objects and append SemanticResultValue objects   
        // that contain cities and airport codes.  
  
        GrammarBuilder chicago = new GrammarBuilder();  
        chicago.Append(new SemanticResultValue("Chicago", "ORD"));  
  
        GrammarBuilder boston = new GrammarBuilder();  
        boston.Append(new SemanticResultValue("Boston", "BOS"));  
  
        GrammarBuilder miami = new GrammarBuilder();  
        miami.Append(new SemanticResultValue("Miami", "MIA"));  
  
        GrammarBuilder dallas = new GrammarBuilder();  
        dallas.Append(new SemanticResultValue("Dallas", "DFW"));  
  
        // Create a Choices object and add the cities using implicit conversion from   
        // SemanticResultValue to GrammarBuilder.  
        Choices cities = new Choices();  
        cities.Add(new Choices(new GrammarBuilder[] { chicago, boston, miami, dallas }));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; unit" Usage="grammarBuilder.Append phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="a4f18-327">La sequenza di parole da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-327">The sequence of words to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-328">Aggiunge una frase alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-328">Appends a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-329">`phrase` viene aggiunto alla fine della sequenza corrente di elementi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-329">`phrase` is added to the end of the current sequence of elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="member this.Append : string * System.Speech.Recognition.SubsetMatchingMode -&gt; unit" Usage="grammarBuilder.Append (phrase, subsetMatchingCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="a4f18-330">La sequenza di parole da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-330">The sequence of words to append.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="a4f18-331">La modalità di corrispondenza che la grammatica utilizza per riconoscere la frase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-331">The matching mode the grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-332">Aggiunge un elemento per un subset di una frase alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-332">Appends an element for a subset of a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-333">L'elemento del subset viene aggiunto alla fine della sequenza corrente di elementi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-333">The subset element is added to the end of the current sequence of elements.</span></span> <span data-ttu-id="a4f18-334">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale tramite le stringhe, vedere [uso di stringhe per creare una grammatica GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="a4f18-334">For more information about building a speech recognition grammar using strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
 <span data-ttu-id="a4f18-335">Per informazioni dettagliate sull'uso della modalità di corrispondenza del subset, vedere <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-335">For detailed information on the use of subset matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-336">L'esempio seguente crea una grammatica di riconoscimento vocale per ogni <xref:System.Speech.Recognition.SubsetMatchingMode> valore.</span><span class="sxs-lookup"><span data-stu-id="a4f18-336">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value.</span></span> <span data-ttu-id="a4f18-337">Ad esempio, la grammatica generata `OrderedSubset` riconosce le frasi "tre quattro cinque" e "uno tre cinque" e la grammatica `Subsequence` riconosce la frase "tre quattro cinque", ma non la frase "uno tre cinque".</span><span class="sxs-lookup"><span data-stu-id="a4f18-337">For example, the generated grammar `OrderedSubset` recognizes the phrases, "three four five" and "one three five", and the grammar `Subsequence` recognizes the phrase "three four five", but not the phrase, "one three five".</span></span>  
  
```csharp  
  
private Grammar[] CreateSubsetMatchTest()  
{  
  List<Grammar> grammars = new List<Grammar>(4);  
  
  string phrase = "one two three four five six";  
  foreach (SubsetMatchingMode mode in  
    Enum.GetValues(typeof(SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder();  
    gb.Append(phrase, mode);  
  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammars.Add(grammar);  
  }  
  
  return grammars.ToArray();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder * int * int -&gt; unit" Usage="grammarBuilder.Append (builder, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="a4f18-338">L'elemento della grammatica ripetuta da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-338">The repeated grammar element to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="a4f18-339">Numero minimo di volte in cui un input che corrisponde all'elemento definito da <c>builder</c> deve verificarsi per costituire una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-339">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="a4f18-340">Numero massimo di volte in cui un input che corrisponde all'elemento definito da <c>builder</c> può verificarsi per costituire una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-340">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-341">Aggiunge un elemento di grammatica ripetuto alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-341">Appends a repeated grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-342">Il valore di `minRepeat` deve essere maggiore o uguale a 0 e minore o uguale al valore di `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="a4f18-342">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-343">Quando accodare <xref:System.Speech.Recognition.GrammarBuilder> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> o <xref:System.Speech.Recognition.SemanticResultKey> alle istanze un <xref:System.Speech.Recognition.GrammarBuilder> oggetto, assicurarsi che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici che potrebbero ripetutamente modificare il <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-343">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-344">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-344">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-345">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey oggetti e comprensione SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-345">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-346">L'esempio seguente crea una grammatica di riconoscimento vocale per ottenere frasi, ad esempio "Teresa chiamata al lavoro" e "Chiamata Anne sul proprio telefono cellulare", in cui la parola "phone" è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="a4f18-346">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="a4f18-347"><xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> oggetti vengono utilizzati per costruire la grammatica.</span><span class="sxs-lookup"><span data-stu-id="a4f18-347"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="a4f18-348">L'esempio evidenzia l'uso del <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="a4f18-348">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; unit" Usage="grammarBuilder.Append (phrase, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="a4f18-349">La sequenza ripetuta di parole da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-349">The repeated sequence of words to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="a4f18-350">Numero minimo di volte in cui un input che corrisponde all'elemento <c>phrase</c> deve verificarsi per costituire una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-350">The minimum number of times that input matching <c>phrase</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="a4f18-351">Numero massimo di volte in cui un input che corrisponde all'elemento <c>phrase</c> può verificarsi per costituire una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-351">The maximum number of times that input matching <c>phrase</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-352">Aggiunge una frase ripetuta alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-352">Appends a repeated phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-353">Il valore di `minRepeat` deve essere maggiore o uguale a 0 e minore o uguale al valore di `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="a4f18-353">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-354">L'esempio seguente crea una grammatica di riconoscimento vocale per ottenere frasi, ad esempio "Teresa chiamata al lavoro" e "Chiamata Anne sul proprio telefono cellulare", in cui la parola "phone" è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="a4f18-354">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="a4f18-355"><xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> oggetti vengono utilizzati per costruire la grammatica.</span><span class="sxs-lookup"><span data-stu-id="a4f18-355"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="a4f18-356">L'esempio evidenzia l'uso del <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="a4f18-356">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendDictation">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a4f18-357">Aggiunge una grammatica di dettatura alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-357">Appends a dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-358">Il <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> metodi consentono di accodare una grammatica di dettatura come una regola per un <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-358">The <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> methods allow you to append a dictation grammar as a rule to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="a4f18-359">Per ulteriori informazioni sulla grammatica di dettatura, vedere <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-359">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation();" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : unit -&gt; unit" Usage="grammarBuilder.AppendDictation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4f18-360">Aggiunge la grammatica di dettatura predefinita alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-360">Appends the default dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-361">Per ulteriori informazioni sulla grammatica di dettatura, vedere <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-361">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-362">L'esempio seguente crea una grammatica di riconoscimento vocale che incorpora la dettatura.</span><span class="sxs-lookup"><span data-stu-id="a4f18-362">The following example creates a speech recognition grammar that incorporates dictation.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation();  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation (category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation(System::String ^ category);" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : string -&gt; unit" Usage="grammarBuilder.AppendDictation category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">
          <span data-ttu-id="a4f18-363">La categoria della grammatica di dettatura da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-363">The category of the dictation grammar to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-364">Aggiunge la grammatica di dettatura specificata alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-364">Appends the specified dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-365">Per usare la grammatica di dettatura ortografia, impostare `category` a `spelling`.</span><span class="sxs-lookup"><span data-stu-id="a4f18-365">To use the spelling dictation grammar, set `category` to `spelling`.</span></span>  
  
 <span data-ttu-id="a4f18-366">Per ulteriori informazioni sulla grammatica di dettatura, vedere <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-366">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-367">L'esempio seguente crea una grammatica di riconoscimento vocale che incorpora le regole di grammatica di dettatura di ortografia.</span><span class="sxs-lookup"><span data-stu-id="a4f18-367">The following example creates a speech recognition grammar that incorporates the spelling dictation grammar rules.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation("spelling");  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendRuleReference">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a4f18-368">Aggiunge un file o una regola di grammatica alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-368">Appends a grammar file or a grammar rule to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-369">Il <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> metodi è possono aggiungere un file o una regola di grammatica da un file.</span><span class="sxs-lookup"><span data-stu-id="a4f18-369">The <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> methods can append a grammar file or a grammar rule from a file.</span></span> <span data-ttu-id="a4f18-370">Questi metodi consentono alle applicazioni di rendere utilizzo delle regole di grammatica pre-distribuito o disponibile pubblicamente.</span><span class="sxs-lookup"><span data-stu-id="a4f18-370">These methods allow applications to make use of pre-deployed or publicly available grammar rules.</span></span> <span data-ttu-id="a4f18-371">L'applicazione deve avere accesso in lettura al percorso del file di grammatica specificata.</span><span class="sxs-lookup"><span data-stu-id="a4f18-371">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="a4f18-372">Questi metodi possono leggere una grammatica di riconoscimento vocale dai formati seguenti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-372">These methods can read a speech recognition grammar from the following formats.</span></span>  
  
-   <span data-ttu-id="a4f18-373">I file di formato XML conforme per la W3C [riconoscimento Grammatica SRGS (Speech Specification) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)</span><span class="sxs-lookup"><span data-stu-id="a4f18-373">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="a4f18-374">File binari che sono conformi al Microsoft Speech Recognition grammatica formato binario (con estensione cfg)</span><span class="sxs-lookup"><span data-stu-id="a4f18-374">Binary files that conform to the Microsoft Speech Recognition Grammar Binary Format (.cfg file extension)</span></span>  
  
 <span data-ttu-id="a4f18-375">La compilazione di un SRGS XML in formato file di grammatica in un file di grammatica binaria con estensione cfg può ridurre il tempo impiegato nelle ricerche per trovare una corrispondenza, soprattutto se la grammatica di riconoscimento di un numero elevato di parole o frasi è necessario.</span><span class="sxs-lookup"><span data-stu-id="a4f18-375">Compiling an XML-format SRGS grammar file to a binary grammar file with the .cfg extension can reduce the time consumed by searches for a match, especially if the grammar requires recognition of a large number of words and phrases.</span></span> <span data-ttu-id="a4f18-376">Per informazioni sulla compilazione grammatiche SRGS in formato binario di Guard flusso di controllo, vedere <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-376">For information about compiling SRGS grammars to the CFG binary format, see <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string -&gt; unit" Usage="grammarBuilder.AppendRuleReference path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a4f18-377">Il percorso o l'URI (Universal Resource Identifier) del file che descrive una grammatica di riconoscimento vocale in un formato supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-377">The path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-378">Aggiunge un file di definizione della grammatica alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-378">Appends a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-379">L'URI fornito dal `path` argomento può essere locale o remoto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-379">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="a4f18-380">L'applicazione deve avere accesso in lettura al percorso del file di grammatica specificata.</span><span class="sxs-lookup"><span data-stu-id="a4f18-380">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="a4f18-381">Una rappresentazione di W3C SRGS Speech Recognition Grammar Specification () è possibile definire una regola radice.</span><span class="sxs-lookup"><span data-stu-id="a4f18-381">A W3C Speech Recognition Grammar Specification (SRGS) representation can define a root rule.</span></span> <span data-ttu-id="a4f18-382">Questo metodo aggiunge la grammatica, che iniziano con la regola radice, alla sequenza corrente di elementi di grammatica.</span><span class="sxs-lookup"><span data-stu-id="a4f18-382">This method appends the grammar, beginning with its root rule, to the current sequence of grammar elements.</span></span> <span data-ttu-id="a4f18-383">Per aggiungere una regola di grammatica specifico, usare il <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="a4f18-383">To append a specific grammar rule, use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-384">L'esempio c# seguente crea una grammatica di riconoscimento vocale che usa la regola denominata `Cities` in un file locale SRGS cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="a4f18-384">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="a4f18-385">Il contenuto del file cities.grxml viene visualizzato sotto l'esempio di codice c#.</span><span class="sxs-lookup"><span data-stu-id="a4f18-385">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar1()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.AppendRuleReference("file://c:/temp/cities.grxml");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 1";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-16" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String, rule As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path, System::String ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string * string -&gt; unit" Usage="grammarBuilder.AppendRuleReference (path, rule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a4f18-386">Il percorso o l'URI (Universal Resource Identifier) del file che descrive una grammatica di riconoscimento vocale in un formato supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-386">The file path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <param name="rule">
          <span data-ttu-id="a4f18-387">L'identificatore della regola da aggiungere o <see langword="null" /> per aggiungere la regola radice predefinita del file di sintassi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-387">The identifier of the rule to append, or <see langword="null" /> to append the default root rule of the grammar file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-388">Aggiunge la regola specificata di un file di definizione della grammatica alla sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-388">Appends the specified rule of a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-389">L'URI fornito dal `path` argomento può essere locale o remoto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-389">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="a4f18-390">L'applicazione deve avere accesso in lettura al percorso del file di grammatica specificata.</span><span class="sxs-lookup"><span data-stu-id="a4f18-390">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="a4f18-391">È possibile usare l'utilizzo di <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> metodo per aggiungere una grammatica file che inizia con la regola radice.</span><span class="sxs-lookup"><span data-stu-id="a4f18-391">You can use the use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method to append a grammar file beginning with its root rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-392">L'esempio c# seguente crea una grammatica di riconoscimento vocale che usa la regola denominata `Cities` in un file locale SRGS cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="a4f18-392">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="a4f18-393">Il contenuto del file cities.grxml viene visualizzato sotto l'esempio di codice c#.</span><span class="sxs-lookup"><span data-stu-id="a4f18-393">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar2()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.Append("Does");  
  builder.AppendRuleReference(@"c:\temp\cities.grxml", "Cities");  
  builder.Append("have a shuttle");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendWildcard">
      <MemberSignature Language="C#" Value="public void AppendWildcard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendWildcard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendWildcard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendWildcard();" />
      <MemberSignature Language="F#" Value="member this.AppendWildcard : unit -&gt; unit" Usage="grammarBuilder.AppendWildcard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4f18-394">Aggiunge un elemento della grammatica di riconoscimento che corrisponde a qualsiasi input nella sequenza corrente di elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-394">Appends a recognition grammar element that matches any input to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-395">Elemento jolly viene aggiunto alla fine della sequenza corrente di elementi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-395">The wildcard element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="a4f18-396">Elemento jolly corrisponde a qualsiasi parola pronunciata.</span><span class="sxs-lookup"><span data-stu-id="a4f18-396">The wildcard element matches any spoken word.</span></span> <span data-ttu-id="a4f18-397">Non corrisponde radiazione di fondo o inattività.</span><span class="sxs-lookup"><span data-stu-id="a4f18-397">It does not match background noise or silence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-398">L'esempio seguente crea una grammatica che accetta l'input di password come carattere jolly.</span><span class="sxs-lookup"><span data-stu-id="a4f18-398">The following example creates a grammar that accepts password input as a wildcard.</span></span> <span data-ttu-id="a4f18-399">Nell'esempio viene collegato un <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> gestore dell'evento della grammatica che convalida l'input di password.</span><span class="sxs-lookup"><span data-stu-id="a4f18-399">The example attaches a <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event handler to the grammar that validates the password input.</span></span>  
  
```csharp  
private Grammar CreatePasswordGrammar()  
{  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey passwordKey =  
    new SemanticResultKey("Password", wildcardBuilder);  
  
  GrammarBuilder passwordBuilder =  
    new GrammarBuilder("My Password is");  
  passwordBuilder.Append(passwordKey);  
  
  Grammar passwordGrammar = new Grammar(passwordBuilder);  
  passwordGrammar.Name = "Password input";  
  
  passwordGrammar.SpeechRecognized +=  
    new EventHandler<SpeechRecognizedEventArgs>(  
      PasswordInputHandler);  
  
  return passwordGrammar;  
}  
  
// Handle the SpeechRecognized event for the password grammar.  
private void PasswordInputHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  RecognitionResult result = e.Result;  
  SemanticValue semantics = e.Result.Semantics;  
  
  if (semantics.ContainsKey("Password"))  
  {  
    RecognizedAudio passwordAudio =  
      result.GetAudioForWordRange(  
        result.Words[3], result.Words[result.Words.Count - 1]);  
  
    if (IsValidPassword(passwordAudio))  
    {  
      Console.WriteLine("Password accepted.");  
  
      // Add code to handle a valid password here.  
    }  
    else  
    {  
      Console.WriteLine("Invalid password.");  
  
      // Add code to handle an invalid password here.  
    }  
  }  
}  
  
// Validate the password input.   
private bool IsValidPassword(RecognizedAudio passwordAudio)  
{  
  Console.WriteLine("Validating password.");  
  
  // Add password validation code here.  
  
  return false;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4f18-400">Ottiene o imposta le impostazioni cultura della grammatica di riconoscimento vocale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-400">Gets or sets the culture of the speech recognition grammar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4f18-401">Impostazioni cultura di <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-401">The culture of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
          <span data-ttu-id="a4f18-402">L'impostazione predefinita è la proprietà <see cref="P:System.Threading.Thread.CurrentUICulture" /> del thread in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-402">The default is the executing thread's <see cref="P:System.Threading.Thread.CurrentUICulture" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-403">Il <xref:System.Speech.Recognition.Grammar.%23ctor%2A> costruttore crea un <xref:System.Speech.Recognition.Grammar> oggetto che può essere utilizzato da un riconoscimento vocale delle impostazioni cultura corrispondenti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-403">The <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor creates a <xref:System.Speech.Recognition.Grammar> object that can be used by a speech recognizer of the corresponding culture.</span></span> <span data-ttu-id="a4f18-404">Solo le <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> proprietà del <xref:System.Speech.Recognition.GrammarBuilder> che viene fornito come parametro al costruttore grammatica viene utilizzato per configurare le impostazioni cultura della grammatica di riconoscimento vocale risultante.</span><span class="sxs-lookup"><span data-stu-id="a4f18-404">Only the <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> property of the <xref:System.Speech.Recognition.GrammarBuilder> that is provided as the parameter to the Grammar constructor is used to set the culture of the resulting speech recognition grammar.</span></span>  
  
 <span data-ttu-id="a4f18-405">Microsoft Windows e l'API System. Speech accettare tutti i codici dei paesi di lingua validi.</span><span class="sxs-lookup"><span data-stu-id="a4f18-405">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="a4f18-406">Per eseguire il riconoscimento vocale usando la lingua specificata nel `Culture` proprietà, un motore di riconoscimento vocale che supporta che codice paese di linguaggio deve essere installato.</span><span class="sxs-lookup"><span data-stu-id="a4f18-406">To perform speech recognition using the language specified in the `Culture` property, a speech recognition engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="a4f18-407">I motori di riconoscimento vocale fornita con Microsoft Windows 7 funzionano con i seguenti codici di lingua paese.</span><span class="sxs-lookup"><span data-stu-id="a4f18-407">The speech recognition engines that shipped with Microsoft Windows 7 work with the following language-country codes.</span></span>  
  
-   <span data-ttu-id="a4f18-408">en-GB.</span><span class="sxs-lookup"><span data-stu-id="a4f18-408">en-GB.</span></span> <span data-ttu-id="a4f18-409">Inglese (Regno Unito)</span><span class="sxs-lookup"><span data-stu-id="a4f18-409">English (United Kingdom)</span></span>  
  
-   <span data-ttu-id="a4f18-410">en-US.</span><span class="sxs-lookup"><span data-stu-id="a4f18-410">en-US.</span></span> <span data-ttu-id="a4f18-411">Inglese (Stati Uniti)</span><span class="sxs-lookup"><span data-stu-id="a4f18-411">English (United States)</span></span>  
  
-   <span data-ttu-id="a4f18-412">de-DE.</span><span class="sxs-lookup"><span data-stu-id="a4f18-412">de-DE.</span></span> <span data-ttu-id="a4f18-413">Tedesco (Germania)</span><span class="sxs-lookup"><span data-stu-id="a4f18-413">German (Germany)</span></span>  
  
-   <span data-ttu-id="a4f18-414">es-ES.</span><span class="sxs-lookup"><span data-stu-id="a4f18-414">es-ES.</span></span> <span data-ttu-id="a4f18-415">Spagnolo (Spagna)</span><span class="sxs-lookup"><span data-stu-id="a4f18-415">Spanish (Spain)</span></span>  
  
-   <span data-ttu-id="a4f18-416">fr-FR.</span><span class="sxs-lookup"><span data-stu-id="a4f18-416">fr-FR.</span></span> <span data-ttu-id="a4f18-417">Francese (Francia)</span><span class="sxs-lookup"><span data-stu-id="a4f18-417">French (France)</span></span>  
  
-   <span data-ttu-id="a4f18-418">ja-JP.</span><span class="sxs-lookup"><span data-stu-id="a4f18-418">ja-JP.</span></span> <span data-ttu-id="a4f18-419">Giapponese (Giappone)</span><span class="sxs-lookup"><span data-stu-id="a4f18-419">Japanese (Japan)</span></span>  
  
-   <span data-ttu-id="a4f18-420">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="a4f18-420">zh-CN.</span></span> <span data-ttu-id="a4f18-421">Cinese (Cina)</span><span class="sxs-lookup"><span data-stu-id="a4f18-421">Chinese (China)</span></span>  
  
-   <span data-ttu-id="a4f18-422">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="a4f18-422">zh-TW.</span></span> <span data-ttu-id="a4f18-423">Cinese (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="a4f18-423">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="a4f18-424">Codici di lingua di due lettere, ad esempio "en", "fr", o "es" sono inoltre consentiti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-424">Two-letter language codes such as "en", "fr", or "es" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f18-425">L'esempio seguente crea una grammatica di riconoscimento vocale per ordinare una pizza con condimenti fino a quattro.</span><span class="sxs-lookup"><span data-stu-id="a4f18-425">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="a4f18-426">Imposta in modo specifico il <xref:System.Speech.Recognition.GrammarBuilder> delle impostazioni cultura dell'oggetto su inglese (Stati Uniti).</span><span class="sxs-lookup"><span data-stu-id="a4f18-426">It specifically sets the <xref:System.Speech.Recognition.GrammarBuilder> object's culture to English (United States).</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="DebugShowPhrases">
      <MemberSignature Language="C#" Value="public string DebugShowPhrases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugShowPhrases" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugShowPhrases As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DebugShowPhrases { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DebugShowPhrases : string" Usage="System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4f18-427">Ottiene una stringa che mostra il contenuto e la struttura della sintassi contenuta da <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-427">Gets a string that shows the contents and structure of the grammar contained by the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4f18-428">La struttura e il contenuto correnti dell'oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-428">The current content and structure of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4f18-429">L'esempio seguente crea una grammatica di riconoscimento vocale per ordinare una pizza con condimenti fino a quattro.</span><span class="sxs-lookup"><span data-stu-id="a4f18-429">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="a4f18-430">Scrive lo stato del <xref:System.Speech.Recognition.GrammarBuilder> alla console prima di creare la grammatica.</span><span class="sxs-lookup"><span data-stu-id="a4f18-430">It writes the status of the <xref:System.Speech.Recognition.GrammarBuilder> to the console before creating the grammar.</span></span> <span data-ttu-id="a4f18-431">Questo metodo genera l'output seguente:</span><span class="sxs-lookup"><span data-stu-id="a4f18-431">This method generates the following output:</span></span>  
  
-   `GrammarBuilder status: I would like a [cheese,mushroom,tomato,onion,anchovy,chic ken,pepperoni] and [cheese,mushroom,tomato,onion,anchovy,chicken,pepperoni] pizza`  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Write the contents and structure of the GrammarBuilder to the console.  
  Console.WriteLine("Grammar content and structure: {0}", gb.DebugShowPhrases);  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a4f18-432">Crea un nuovo oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> corrispondente a una sequenza di due elementi di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-432">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that corresponds to a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-433">L'ordine degli operandi determina l'ordine degli elementi nel nuovo <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-433">The order of the operands determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-434">È consigliabile attenzione quando si combinano <xref:System.Speech.Recognition.Choices> oppure <xref:System.Speech.Recognition.GrammarBuilder> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> o <xref:System.Speech.Recognition.SemanticResultKey> istanze con gli altri elementi di grammatica.</span><span class="sxs-lookup"><span data-stu-id="a4f18-434">Caution is recommended when combining <xref:System.Speech.Recognition.Choices> or <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements.</span></span> <span data-ttu-id="a4f18-435">Il riconoscimento vocale può generare un'eccezione quando si usa una grammatica di riconoscimento vocale che contiene gli elementi semantici duplicati con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il valore dello stesso elemento semantico.</span><span class="sxs-lookup"><span data-stu-id="a4f18-435">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="a4f18-436">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey usando e oggetti SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-436">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="a4f18-437">Per altre informazioni sulla creazione e uso grammatiche di riconoscimento vocale, vedere [riconoscimento vocale](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) e [creare grammatiche GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="a4f18-437">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="a4f18-438">Primo elemento di grammatica, che rappresenta un set di alternative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-438">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="a4f18-439">Secondo elemento di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-439">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-440">Crea un nuovo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> che contiene un oggetto <see cref="T:System.Speech.Recognition.Choices" /> seguito da un oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-440">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-441">Restituisce <see cref="T:System.Speech.Recognition.GrammarBuilder" /> per la sequenza del parametro <paramref name="choices" /> seguito dal parametro <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-441">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-442"><xref:System.Speech.Recognition.GrammarBuilder> supporta le conversioni dalle classi seguenti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-442"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="a4f18-443">Questo metodo accetta gli oggetti elencati in precedenza per il `builder` parametro.</span><span class="sxs-lookup"><span data-stu-id="a4f18-443">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="a4f18-444">Per altre informazioni, vedere il <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-444">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-445">Quando si combinano <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> o <xref:System.Speech.Recognition.SemanticResultKey> istanze, verificare che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-445">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-446">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-446">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-447">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey oggetti e comprensione SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-447">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="a4f18-448">È il metodo equivalente per l'operatore <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a4f18-448">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="a4f18-449">Primo elemento di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-449">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="a4f18-450">Il secondo elemento di grammatica, che rappresenta un set di elementi alternativi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-450">The second grammar element, which represents a set of alternative elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-451">Crea un nuovo oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> contenente un oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> seguito da <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-451">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a <see cref="T:System.Speech.Recognition.Choices" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-452">Restituisce <see cref="T:System.Speech.Recognition.GrammarBuilder" /> per la sequenza del parametro <paramref name="builder" /> seguito dal parametro <paramref name="choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-452">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="choices" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-453"><xref:System.Speech.Recognition.GrammarBuilder> supporta le conversioni dalle classi seguenti:</span><span class="sxs-lookup"><span data-stu-id="a4f18-453"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="a4f18-454">Questo metodo accetta gli oggetti elencati in precedenza per il `builder` parametro.</span><span class="sxs-lookup"><span data-stu-id="a4f18-454">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="a4f18-455">Per altre informazioni, vedere il <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-455">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-456">Quando si combinano <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> o <xref:System.Speech.Recognition.SemanticResultKey> istanze, verificare che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-456">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-457">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-457">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-458">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey oggetti e comprensione SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-458">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="a4f18-459">È il metodo equivalente per l'operatore <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a4f18-459">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="a4f18-460">L'esempio seguente crea una grammatica di riconoscimento vocale in grado di riconoscere le due frasi, "sfondo *colore*" e "impostata in background *colore*", dove *colore* viene selezionato da un set di colori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-460">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="a4f18-461">Diversi tipi utilizzati per compilare la grammatica finale, ad esempio [stringa](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, e <xref:System.Speech.Recognition.GrammarBuilder> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-461">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder1 + builder2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="a4f18-462">Primo elemento di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-462">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="a4f18-463">Secondo elemento di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-463">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-464">Crea un nuovo oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> contenente una sequenza di due oggetti <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-464">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-465">Restituisce <see cref="T:System.Speech.Recognition.GrammarBuilder" /> per la sequenza del parametro <paramref name="builder1" /> seguito dal parametro <paramref name="builder2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-465">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> parameter followed by the <paramref name="builder2" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-466"><xref:System.Speech.Recognition.GrammarBuilder> supporta le conversioni dalle classi seguenti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-466"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="a4f18-467">Questo metodo accetta gli oggetti elencati in precedenza per il `builder1` e `builder2` parametri.</span><span class="sxs-lookup"><span data-stu-id="a4f18-467">This method accepts the objects listed above for the `builder1` and `builder2` parameters.</span></span> <span data-ttu-id="a4f18-468">Per altre informazioni, vedere il <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-468">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a4f18-469">Quando si combinano <xref:System.Speech.Recognition.GrammarBuilder> oggetti che contengono <xref:System.Speech.Recognition.SemanticResultValue> oppure <xref:System.Speech.Recognition.SemanticResultKey> istanze, verificare che si evita la creazione di duplicati semantici elementi con lo stesso nome di chiave o più elementi semantici che è stato possibile modificare ripetutamente il <xref:System.Speech.Recognition.SemanticValue.Value%2A> proprietà di un <xref:System.Speech.Recognition.SemanticValue> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-469">When you combine <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="a4f18-470">Il riconoscimento vocale può generare un'eccezione se si verificano queste situazioni.</span><span class="sxs-lookup"><span data-stu-id="a4f18-470">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="a4f18-471">Per altre informazioni sulla creazione di una grammatica di riconoscimento vocale che contiene informazioni semantiche, vedere [SemanticResultKey oggetti e comprensione SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="a4f18-471">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="a4f18-472">È il metodo equivalente per l'operatore <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a4f18-472">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="a4f18-473">Primo elemento di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-473">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="a4f18-474">Il secondo elemento di grammatica, che rappresenta una sequenza di parole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-474">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-475">Crea un nuovo oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> contenente un oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> seguito da una frase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-475">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-476">Restituisce <see cref="T:System.Speech.Recognition.GrammarBuilder" /> per la sequenza del parametro <paramref name="builder" /> seguito dal parametro <paramref name="phrase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-476">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="phrase" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-477"><xref:System.Speech.Recognition.GrammarBuilder> supporta le conversioni dalle classi seguenti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-477"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="a4f18-478">Questo metodo accetta gli oggetti elencati in precedenza per il `builder` parametro.</span><span class="sxs-lookup"><span data-stu-id="a4f18-478">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="a4f18-479">Per altre informazioni, vedere il <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-479">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="a4f18-480">È il metodo equivalente per l'operatore <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a4f18-480">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="phrase + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="a4f18-481">Il primo elemento di grammatica, che rappresenta una sequenza di parole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-481">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="a4f18-482">Secondo elemento di grammatica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-482">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-483">Crea un nuovo oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> contenente una frase seguita da <see cref="T:System.Speech.Recognition.GrammarBuilder" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-483">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-484">Restituisce <see cref="T:System.Speech.Recognition.GrammarBuilder" /> per la sequenza del parametro <paramref name="phrase" /> seguito dal parametro <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-484">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-485"><xref:System.Speech.Recognition.GrammarBuilder> supporta le conversioni dalle classi seguenti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-485"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="a4f18-486">Questo metodo accetta gli oggetti elencati in precedenza per il `builder` parametro.</span><span class="sxs-lookup"><span data-stu-id="a4f18-486">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="a4f18-487">Per altre informazioni, vedere il <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-487">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="a4f18-488">È il metodo equivalente per l'operatore <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a4f18-488">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="a4f18-489">L'esempio seguente crea una grammatica di riconoscimento vocale in grado di riconoscere le due frasi, "sfondo *colore*" e "impostata in background *colore*", dove *colore* viene selezionato da un set di colori.</span><span class="sxs-lookup"><span data-stu-id="a4f18-489">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="a4f18-490">Diversi tipi utilizzati per compilare la grammatica finale, ad esempio [stringa](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, e <xref:System.Speech.Recognition.GrammarBuilder> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-490">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a4f18-491">Converte un altro tipo in un <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-491">Converts another type to a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-492">La conversione implicita viene creata una nuova istanza della <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-492">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="a4f18-493">È possibile eseguire il cast di ognuna delle classi seguenti per un <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-493">You can cast each of the following classes to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="a4f18-494">Ogni i cast impliciti è equivalente alla chiamata al costruttore.</span><span class="sxs-lookup"><span data-stu-id="a4f18-494">Each of the implicit casts is equivalent to calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="a4f18-495">Il set di alternative da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-495">The set of alternatives to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-496">Converte un oggetto <see cref="T:System.Speech.Recognition.Choices" /> in un oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-496">Converts a <see cref="T:System.Speech.Recognition.Choices" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-497">Oggetto <see cref="T:System.Speech.Recognition.Choices" /> convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-497">The converted <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-498">La conversione implicita viene creata una nuova istanza della <xref:System.Speech.Recognition.GrammarBuilder>. Questo operatore di conversione è equivalente alla chiamata <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> e specificando `choices` per il `alternateChoices`.</span><span class="sxs-lookup"><span data-stu-id="a4f18-498">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `choices` for the `alternateChoices`.</span></span>  
  
 <span data-ttu-id="a4f18-499">È il metodo equivalente per l'operatore <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a4f18-499">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="a4f18-500">L'esempio seguente crea una grammatica di riconoscimento vocale in grado di riconoscere una risposta a una "yes" o "no" domanda.</span><span class="sxs-lookup"><span data-stu-id="a4f18-500">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="a4f18-501">L'operatore di conversione implicita viene utilizzata nella costruzione di un <xref:System.Speech.Recognition.SemanticResultValue> dell'oggetto da un <xref:System.Speech.Recognition.Choices> oggetto, nella costruzione di un <xref:System.Speech.Recognition.Choices> oggetto da due <xref:System.Speech.Recognition.SemanticResultValue> oggetti e nella costruzione di un <xref:System.Speech.Recognition.Grammar> oggetto da un <xref:System.Speech.Recognition.SemanticResultKey> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-501">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultKey semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultKey semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticKey As SemanticResultKey) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultKey ^ semanticKey);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticKey" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="semanticKey">
          <span data-ttu-id="a4f18-502">La chiave semantica da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-502">The semantic key to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-503">Converte un oggetto <see cref="T:System.Speech.Recognition.SemanticResultKey" /> in un oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-503">Converts a <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-504">Oggetto <see cref="T:System.Speech.Recognition.SemanticResultKey" /> convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-504">The converted <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-505">La conversione implicita viene creata una nuova istanza della <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-505">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="a4f18-506">Questo operatore di conversione è equivalente alla chiamata <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> e specificando `semanticKey` per il `key`.</span><span class="sxs-lookup"><span data-stu-id="a4f18-506">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticKey` for the `key`.</span></span>  
  
 <span data-ttu-id="a4f18-507">È il metodo equivalente per l'operatore <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a4f18-507">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="a4f18-508">L'esempio seguente crea una grammatica di riconoscimento vocale in grado di riconoscere una risposta a una "yes" o "no" domanda.</span><span class="sxs-lookup"><span data-stu-id="a4f18-508">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="a4f18-509">L'operatore di conversione implicita viene utilizzata nella costruzione di un <xref:System.Speech.Recognition.SemanticResultValue> dell'oggetto da un <xref:System.Speech.Recognition.Choices> oggetto, nella costruzione di un <xref:System.Speech.Recognition.Choices> oggetto da due <xref:System.Speech.Recognition.SemanticResultValue> oggetti e nella costruzione di un <xref:System.Speech.Recognition.Grammar> oggetto da un <xref:System.Speech.Recognition.SemanticResultKey> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-509">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultValue semanticValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultValue semanticValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticValue As SemanticResultValue) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultValue ^ semanticValue);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticValue" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="semanticValue">
          <span data-ttu-id="a4f18-510">Oggetto <see cref="T:System.Speech.Recognition.SemanticResultValue" /> da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-510">The <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-511">Converte un oggetto <see cref="T:System.Speech.Recognition.SemanticResultValue" /> in un oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-511">Converts a <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-512">Oggetto <see cref="T:System.Speech.Recognition.SemanticResultValue" /> convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-512">The converted <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-513">La conversione implicita viene creata una nuova istanza della <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-513">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="a4f18-514">Questo operatore di conversione è equivalente alla chiamata <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> e specificando `semanticValue` per il `value`.</span><span class="sxs-lookup"><span data-stu-id="a4f18-514">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticValue` for the `value`.</span></span>  
  
 <span data-ttu-id="a4f18-515">È il metodo equivalente per l'operatore <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a4f18-515">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="a4f18-516">L'esempio seguente crea una grammatica di riconoscimento vocale in grado di riconoscere una risposta a una "yes" o "no" domanda.</span><span class="sxs-lookup"><span data-stu-id="a4f18-516">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="a4f18-517">L'operatore di conversione implicita viene utilizzata nella costruzione di un <xref:System.Speech.Recognition.SemanticResultValue> dell'oggetto da un <xref:System.Speech.Recognition.Choices>oggetto, nella costruzione di un <xref:System.Speech.Recognition.Choices> oggetto da due <xref:System.Speech.Recognition.SemanticResultValue> oggetti e nella costruzione di un <xref:System.Speech.Recognition.Grammar> oggetto da un <xref:System.Speech.Recognition.SemanticResultKey> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-517">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices>object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="a4f18-518">Stringa da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-518">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4f18-519">Converte una stringa in un oggetto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-519">Converts a string to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4f18-520">Stringa convertita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4f18-520">The converted string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f18-521">La conversione implicita viene creata una nuova istanza della <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a4f18-521">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="a4f18-522">Questo operatore di conversione è equivalente alla chiamata <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> e specificando le stesse `phrase`.</span><span class="sxs-lookup"><span data-stu-id="a4f18-522">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying the same `phrase`.</span></span>  
  
 <span data-ttu-id="a4f18-523">È il metodo equivalente per l'operatore <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a4f18-523">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="a4f18-524">L'esempio seguente usa <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> gli oggetti per costruire una grammatica che può riconoscere una delle due frasi, "sfondo *colorChoice*" o "impostato in background su *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="a4f18-524">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="a4f18-525">Dopo aver creato un elenco di valori accettabili per *colorChoice* usando un <xref:System.Speech.Recognition.Choices> dell'oggetto, l'esempio Inizializza due <xref:System.Speech.Recognition.GrammarBuilder> oggetti `makePhrase` e `setPhrase`, mediante la conversione implicita da stringa oggetti.</span><span class="sxs-lookup"><span data-stu-id="a4f18-525">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using implicit conversion from string objects.</span></span>  
  
 <span data-ttu-id="a4f18-526">Nell'esempio viene infine creato un <xref:System.Speech.Recognition.Grammar> dell'oggetto da un <xref:System.Speech.Recognition.Choices> cast dell'oggetto a un <xref:System.Speech.Recognition.GrammarBuilder> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a4f18-526">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
  </Members>
</Type>