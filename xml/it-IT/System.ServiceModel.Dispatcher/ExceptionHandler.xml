<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExceptionHandler.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72d5542b8db2be95a211477297f4b5bb3a5f284100.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5542b8db2be95a211477297f4b5bb3a5f284100</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.ExceptionHandler">
          <source>Extend the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> class to create an exception handler for unhandled exceptions that occur within the Windows Communication Foundation (WCF) runtime.</source>
          <target state="translated">Estendere la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> per creare un gestore di eccezioni per le eccezioni non gestite che si verificano nel runtime di Windows Communication Foundation (WCF).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ExceptionHandler">
          <source>Extend the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> class and override the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> method to determine whether an exception should terminate the application.</source>
          <target state="translated">Estendere la classe <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> ed eseguire l'override del metodo <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> per determinare se un'eccezione deve determinare la chiusura dell'applicazione.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ExceptionHandler">
          <source>Then create a new instance of your custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> class and assign it to the static <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A&gt;</ph> property prior to creating WCF clients or services.</source>
          <target state="translated">Quindi creare una nuova istanza della personalizzato <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> classe e assegnarla alla proprietà statica <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A&gt;</ph> proprietà prima di creare il client WCF o servizi.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ExceptionHandler">
          <source>The following code example shows an implementation of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> abstract class that overrides the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrata un'implementazione della classe <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> astratta che esegue l'override del metodo <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ExceptionHandler">
          <source>The following code example shows how to enable the custom <ph id="ph1">`MyExceptionHandler`</ph> for unhandled exceptions that occur within the WCF runtime.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come abilitare l'oggetto personalizzato <ph id="ph1">`MyExceptionHandler`</ph> per le eccezioni non gestite che si verificano all'interno del runtime WCF.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle">
          <source>Gets an instance of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> that handles all exceptions.</source>
          <target state="translated">Ottiene un'istanza di <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> che gestisce tutte le eccezioni.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> object that returns <ph id="ph2">&lt;see langword="true" /&gt;</ph> for all exceptions.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> che restituisce <ph id="ph2">&lt;see langword="true" /&gt;</ph> per tutte le eccezioni.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
          <source>Gets or sets the current <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> implementation for the application domain.</source>
          <target state="translated">Ottiene o imposta l'implementazione di <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> corrente per il dominio dell'applicazione.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
          <source>Assign a custom <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> object that receives unhandled exceptions that occur on asynchronous <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> threads.</source>
          <target state="translated">Assegnare un oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> personalizzato che riceve le eccezioni non gestite che si verificano sui thread <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> asincroni.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
          <source>By default, the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, and unhandled exceptions on asynchronous WCF threads terminate the application.</source>
          <target state="translated">Per impostazione predefinita, il <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A&gt;</ph> proprietà <ph id="ph2">`null`</ph>, e le eccezioni non gestite sui thread WCF asincrono terminare l'applicazione.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
          <source>Set this property to an <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> object to receive and react to these exceptions.</source>
          <target state="translated">Impostare questa proprietà su un oggetto <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> per ricevere e reagire a queste eccezioni.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
          <source>If an unhandled exception occurs on an asynchronous WCF thread and reaches this handler, the state of the application domain may be compromised.</source>
          <target state="translated">Se un'eccezione non gestita si verifica in un thread WCF asincrono e raggiunge il gestore, lo stato del dominio dell'applicazione potrebbe risultare compromessa.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> should not return <ph id="ph2">`true`</ph> for these exceptions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> non deve restituire <ph id="ph2">`true`</ph> per le eccezioni.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source>The exception the occurred within the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> runtime and which may terminate the application.</source>
          <target state="translated">L'eccezione che si è verificata all'interno della fase di esecuzione di <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> e che può determinare la chiusura dell'applicazione.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source>When overridden in a derived class, returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the exception has been handled, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the exception should be rethrown and the application terminated.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'eccezione è stata gestita o <ph id="ph2">&lt;see langword="false" /&gt;</ph> se l'eccezione deve essere rigenerata e l'applicazione terminata.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the exception has been handled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'eccezione è stata gestita; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the exception has been handled.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> restituisce <ph id="ph2">`true`</ph> se l'eccezione è stata gestita.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source>If it returns <ph id="ph1">`false`</ph> or throws a different exception, the original exception is rethrown.</source>
          <target state="translated">Se restituisce <ph id="ph1">`false`</ph> o genera un'eccezione diversa, l'eccezione originale viene rigenerata.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source>The following code example shows an implementation of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> abstract class that overrides the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrata un'implementazione della classe <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> astratta che esegue l'override del metodo <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source>The following code example shows how to enable the custom <ph id="ph1">`MyExceptionHandler`</ph> for unhandled exceptions that occur within the WCF runtime.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come abilitare l'oggetto personalizzato <ph id="ph1">`MyExceptionHandler`</ph> per le eccezioni non gestite che si verificano all'interno del runtime WCF.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
          <source>Gets or sets the current transport <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> implementation for the application domain.</source>
          <target state="translated">Ottiene o imposta il trasporto di <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> corrente per il dominio dell'applicazione.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
          <source>A custom <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> object that receives unhandled exceptions that occur within the global <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> transports.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> personalizzato che riceve le eccezioni non gestite che si verificano all'interno dei trasporti <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> globali.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
          <source>By default, the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A&gt;</ph> property is set to the value of <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A&gt;</ph>, causing unhandled exceptions within WCF transports to be ignored.</source>
          <target state="translated">Per impostazione predefinita, il <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A&gt;</ph> proprietà è impostata sul valore di <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A&gt;</ph>, provocando eccezioni non gestite all'interno di trasporti WCF che verranno ignorati.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
          <source>Set this property to an instance of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> to receive and react to these exceptions.</source>
          <target state="translated">Impostare questa proprietà su un'istanza di <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> per ricevere e reagire a queste eccezioni.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
          <source>If an unhandled exception occurs within a global WCF transport and reaches this handler, there is a possibility that the state of the application domain is compromised.</source>
          <target state="translated">Se un'eccezione non gestita si verifica all'interno di un trasporto WCF globale e raggiunge il gestore, è possibile che lo stato del dominio applicazione è compromessa.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> can return <ph id="ph2">`false`</ph> for these exceptions to cause the application to be terminated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> può restituire <ph id="ph2">`false`</ph> per le eccezioni per l'applicazione verrà terminata.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>