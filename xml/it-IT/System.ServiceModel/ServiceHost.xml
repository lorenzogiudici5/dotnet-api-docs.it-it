<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceHost.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b721b30cd3d99351db0b76e3d69b70ac74a0894f6f9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b30cd3d99351db0b76e3d69b70ac74a0894f6f9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHost">
          <source>Provides a host for services.</source>
          <target state="translated">Fornisce un host di servizi.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Implements the host used by the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service model programming model.</source>
          <target state="translated">Implementa l'host utilizzato dal modello di programmazione del modello di servizi del sistema <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service.</source>
          <target state="translated">Utilizzare la classe <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> per configurare ed esporre un servizio in modo che possa essere utilizzato dalle applicazioni client quando non si utilizzano i servizi IIS (Information Services) o WAS (Windows Activation Services) per esporre un servizio.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Both IIS and WAS interact with a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object on your behalf.</source>
          <target state="translated">Sia IIS sia WAS interagiscono automaticamente con un oggetto <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>To expose a service for use by callers, WCF requires a complete service description (represented by the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> class).</source>
          <target state="translated">Per esporre un servizio per l'utilizzo da parte dei chiamanti, WCF richiede una descrizione completa del servizio (rappresentati il <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> classe).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class creates a <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> from the service type and configuration information and then uses that description to create <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects for each endpoint in the description.</source>
          <target state="translated">La classe <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> crea una descrizione <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> a partire dal tipo e dalle informazioni di configurazione del servizio e quindi utilizza tale descrizione per creare oggetti<ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> per ogni endpoint riportato nella descrizione.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Use a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> consente di caricare un servizio, configurare gli endpoint, applicare impostazioni di sicurezza e avviare i listener di gestione delle richieste in ingresso.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHost">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>There are two constructors used to create an instance of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class.</source>
          <target state="translated">Sono disponibili due costruttori per creare un'istanza della classe <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29&gt;</ph> constructor which takes the service type as an input parameter, most of the time.</source>
          <target state="translated">Utilizzare il costruttore <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29&gt;</ph> che in genere accetta il tipo di servizio come parametro di input.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>The host can use this to create new services as needed.</source>
          <target state="translated">L'host può utilizzare questo costruttore per creare nuovi servizi nel modo desiderato.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> constructor instead only when you want the service host to use a specific singleton instance of the service.</source>
          <target state="translated">Se invece si desidera che l'host del servizio utilizzi un'istanza singleton specifica del servizio è necessario utilizzare il costruttore <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>The instance of the hosted service.</source>
          <target state="translated">Istanza del servizio ospitato.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> di tipo <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> contenente gli indirizzi di base del servizio ospitato.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> class with the instance of the service and its base addresses specified.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> con l'istanza del servizio e i relativi indirizzi di base specificati.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Use this constructor as an alternative to implementing a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType&gt;</ph> when you want to provide a specific object instance for use by a singleton service.</source>
          <target state="translated">Utilizzare questo costruttore come alternativa all'implementazione di un'interfaccia <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType&gt;</ph> personalizzata quando si desidera fornire un'istanza specifica dell'oggetto utilizzabile da un servizio singleton.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).</source>
          <target state="translated">Questo overload può risultare utile quando il tipo di implementazione del servizio è difficile da costruire, ad esempio se non implementa alcun costruttore pubblico predefinito privo di parametri.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Note that when an object is provided to this overload, some features related to the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> instancing behavior work differently.</source>
          <target state="translated">Si noti che quando un oggetto viene fornito a questo overload, alcune funzionalità relative al comportamento di creazione delle istanze del sistema <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> possono operare in modo diverso.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>For example, calling <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType&gt;</ph> have no effect when a well-known object instance is provided using this constructor overload.</source>
          <target state="translated">Ad esempio, quando si utilizza questo overload di costruttore per fornire un'istanza di un oggetto noto, una chiamata al metodo <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType&gt;</ph> non produce alcun effetto.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Similarly, any other instance release mechanism is ignored.</source>
          <target state="translated">Analogamente, qualsiasi altro meccanismo di rilascio delle istanze viene ignorato.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> always behaves as if the <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType&gt;</ph> for all operations.</source>
          <target state="translated">L'host <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> si comporta sempre come se la proprietà <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType&gt;</ph> fosse impostata su <ph id="ph3">&lt;xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType&gt;</ph> per tutte le operazioni.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source><ph id="ph1">&lt;paramref name="singletonInstance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="singletonInstance" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>The type of hosted service.</source>
          <target state="translated">Tipo di servizio ospitato.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> contenente gli indirizzi di base del servizio ospitato.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> class with the type of service and its base addresses specified.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> con il tipo di servizio e i relativi indirizzi di base specificati.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance.</source>
          <target state="translated">Utilizzare questo costruttore quando si dispone del tipo di servizio e si è in grado di crearne nuove istanze ogni volta che sia necessario, anche nel caso in cui occorra creare un'istanza singleton.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> constructor instead only when you want the service host to use a specific singleton instance of the service.</source>
          <target state="translated">Se invece si desidera che l'host del servizio utilizzi un'istanza singleton specifica del servizio è necessario utilizzare il costruttore <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>This sample illustrates how to use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class to host a Windows Communication Foundation service:</source>
          <target state="translated">Questo esempio illustra come utilizzare la classe <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> per ospitare un servizio Windows Communication Foundation:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHost">
          <source>Adds a service endpoint to the hosted service.</source>
          <target state="translated">Consente di aggiungere un endpoint di servizio al servizio ospitato.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of contract for the endpoint added.</source>
          <target state="translated">Tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del contratto relativo all'endpoint aggiunto.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">Associazione <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> dell'endpoint aggiunto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The address for the endpoint added.</source>
          <target state="translated">Indirizzo dell'endpoint aggiunto.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</source>
          <target state="translated">Consente di aggiungere al servizio ospitato un endpoint di servizio con il contratto, l'associazione e l'indirizzo endpoint specificati.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">Endpoint <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> aggiunto al servizio ospitato.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>, il parametro <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> o il parametro <ph id="ph3">&lt;paramref name="address" /&gt;</ph> è <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of contract for the endpoint added.</source>
          <target state="translated">Tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del contratto relativo all'endpoint aggiunto.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">Associazione <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> dell'endpoint aggiunto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the address for the endpoint added.</source>
          <target state="translated">URI <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> contenente l'indirizzo dell'endpoint aggiunto.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.</source>
          <target state="translated">Consente di aggiungere al servizio ospitato un endpoint di servizio con il contratto, l'associazione e l'URI contenente l'indirizzo endpoint specificati.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">Endpoint <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> aggiunto al servizio ospitato.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>, il parametro <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> o il parametro <ph id="ph3">&lt;paramref name="address" /&gt;</ph> è <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of contract for the endpoint added.</source>
          <target state="translated">Tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del contratto relativo all'endpoint aggiunto.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">Associazione <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> dell'endpoint aggiunto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The endpoint address for the service.</source>
          <target state="translated">Indirizzo endpoint del servizio.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> on which the service endpoints can listen.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> su cui gli endpoint di servizio possono essere in ascolto.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.</source>
          <target state="translated">Consente di aggiungere al servizio ospitato un endpoint di servizio con il contratto, l'associazione e l'indirizzo endpoint specificati nonché l'URI su cui il servizio è in ascolto.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">Endpoint <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> aggiunto al servizio ospitato.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</source>
          <target state="translated">Utilizzare questa versione del metodo quando più endpoint devono essere in ascolto sullo stesso URI specificato.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>, il parametro <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> o il parametro <ph id="ph3">&lt;paramref name="address" /&gt;</ph> è <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of contract for the endpoint added.</source>
          <target state="translated">Tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del contratto relativo all'endpoint aggiunto.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">Associazione <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> dell'endpoint aggiunto.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the address for the endpoint added.</source>
          <target state="translated">URI <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> contenente l'indirizzo dell'endpoint aggiunto.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> on which the service endpoints can listen.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> su cui gli endpoint di servizio possono essere in ascolto.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.</source>
          <target state="translated">Consente di aggiungere al servizio ospitato un endpoint di servizio con il contratto, l'associazione e l'URI contenente l'indirizzo endpoint specificati nonché l'URI su cui il servizio è in ascolto.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">Endpoint <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> aggiunto al servizio ospitato.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</source>
          <target state="translated">Utilizzare questa versione del metodo quando più endpoint devono essere in ascolto sullo stesso URI specificato.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>, il parametro <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> o il parametro <ph id="ph3">&lt;paramref name="address" /&gt;</ph> è <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The contracts are not initialized or the contract keys cannot be found.</source>
          <target state="translated">I contratti non sono stati inizializzati oppure risulta impossibile trovare le chiavi di contratto.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.ApplyConfiguration">
          <source>Loads the service description from the configuration file and applies it to the runtime being constructed.</source>
          <target state="translated">Carica la descrizione del servizio dal file di configurazione e la applica al runtime che viene creato.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> with key pairs of type (<ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ContractDescription" /&gt;</ph>) that contains the keyed-contracts of the hosted service that have been implemented.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> contenente coppie di chiavi di tipo <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>/<ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ContractDescription" /&gt;</ph> contenente i contratti con chiave del servizio ospitato che sono stati implementati.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>Creates a description of the service hosted.</source>
          <target state="translated">Consente di creare una descrizione del servizio ospitato.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> of the hosted service.</source>
          <target state="translated">Descrizione <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> del servizio ospitato.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>This method is used to construct contract descriptions from customized programming models.</source>
          <target state="translated">Questo metodo viene utilizzato per costruire descrizioni di contratto a partire da modelli di programmazione personalizzati.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>Override the corresponding base class method, <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29&gt;</ph>, to implement the customized model.</source>
          <target state="translated">Per implementare il modello personalizzato, eseguire l'override del metodo della classe di base corrispondente, ovvero <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>The type of service hosted is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il tipo di servizio ospitato è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHost">
          <source>Initializes a description of the service hosted based on its type or instance.</source>
          <target state="translated">Consente di inizializzare una descrizione del servizio ospitato in base al tipo o all'istanza.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>This method removes the requirement for passing base addresses as part of <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo consente di eliminare il requisito relativo al passaggio degli indirizzi di base come parte del costruttore <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> can call <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph> and then can call one of the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost.InitializeDescription%2A&gt;</ph> when a base address is available.</source>
          <target state="translated">Le classi che ereditano dalla classe <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> possono chiamare il metodo <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph> e quindi uno dei metodi <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost.InitializeDescription%2A&gt;</ph> quando un indirizzo di base diventa disponibile.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>This is how the Service Model Metadata Utility Tool (Svcutil.exe) is implemented.</source>
          <target state="translated">Lo strumento Service Model Metadata Utility Tool (Svcutil.exe) è implementato in questo modo.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>The instance of the hosted service.</source>
          <target state="translated">Istanza del servizio ospitato.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">Raccolta <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph> contenente gli indirizzi di base del servizio ospitato.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>Initializes a description of the service hosted based on its instance and specified base addresses.</source>
          <target state="translated">Consente di inizializzare una descrizione del servizio ospitato in base all'istanza e agli indirizzi di base specificati.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
          <source><ph id="ph1">&lt;paramref name="singletonInstance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="singletonInstance" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of service hosted.</source>
          <target state="translated">Tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del servizio ospitato.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">Raccolta <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph> contenente gli indirizzi di base del servizio ospitato.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>Initializes a description of the service hosted based on its type and specified base addresses.</source>
          <target state="translated">Consente di inizializzare una descrizione del servizio ospitato in base al tipo e agli indirizzi di base specificati.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.OnClosed">
          <source>Disposes of disposable services that are being hosted when the service host is closed.</source>
          <target state="translated">Consente di eliminare i servizi eliminabili ospitati quando l'host del servizio viene chiuso.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.OnClosed">
          <source>When overriding the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.OnClosed%2A&gt;</ph> method you must ensure the base.OnClosed method is called, even if an exception occurs.</source>
          <target state="translated">Quando si esegue l'override di <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.OnClosed%2A&gt;</ph> metodo è necessario assicurarsi di base. OnClosed viene chiamato, anche se si verifica un'eccezione.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.OnClosed">
          <source>The following code illustrates how to do this.</source>
          <target state="translated">Il codice seguente viene illustrato come eseguire questa operazione.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHost.SingletonInstance">
          <source>Gets the singleton instance of the hosted service.</source>
          <target state="translated">Consente di ottenere l'istanza singleton del servizio ospitato.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHost.SingletonInstance">
          <source>The hosted service object.</source>
          <target state="translated">Oggetto che rappresenta il servizio ospitato.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHost.SingletonInstance">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.</source>
          <target state="translated">Utilizzare il costruttore <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> per inizializzare un'istanza singleton del servizio da ospitare quando si desidera controllare l'istanza del servizio utilizzato.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>