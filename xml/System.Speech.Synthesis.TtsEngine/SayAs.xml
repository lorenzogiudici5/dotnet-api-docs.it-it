<Type Name="SayAs" FullName="System.Speech.Synthesis.TtsEngine.SayAs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4a42e4105c7182a6a8bee7f31dbc651bf24c007" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30526515" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SayAs" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit SayAs extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.SayAs" />
  <TypeSignature Language="VB.NET" Value="Public Class SayAs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SayAs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contiene informazioni sul tipo di contenuto (ad esempio valuta, data o indirizzo) o il costrutto di linguaggio che determina come pronunciare il testo.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SayAs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SayAs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SayAs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea una nuova istanza della classe <c>SayAs</c>.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le proprietà del <xref:System.Speech.Synthesis.TtsEngine.SayAs> classe consentono di ottenere o impostare i valori per gli attributi del `say-as` elemento nel markup SSML. Il <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A> proprietà utilizza un <xref:System.Speech.Synthesis.TtsEngine.SayAs> istanza per informare il <xref:System.Speech.Synthesis.SpeechSynthesizer> come leggere il testo contenuto nel <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> proprietà di un <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public string Detail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Detail" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Detail" />
      <MemberSignature Language="VB.NET" Value="Public Property Detail As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Detail { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore dell'attributo <c>detail</c> per l'elemento <c>say-as</c> nel linguaggio di markup SSML di una richiesta.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> proprietà ottiene o imposta il valore per il <xref:System.Speech.Synthesis.TtsEngine.SayAs.Detail%2A> proprietà in un <xref:System.Speech.Synthesis.TtsEngine.SayAs> istanza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Format { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore dell'attributo <c>format</c> per l'elemento <c>say-as</c> nel linguaggio di markup SSML di una richiesta.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> proprietà ottiene o imposta il valore per il <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A> proprietà in un <xref:System.Speech.Synthesis.TtsEngine.SayAs> istanza.  
  
 Ad esempio, un prompt dei comandi può contenere la frase "l'ora è `<say-as interpret-as="time"> 05:00 </say-as>`".  In questo esempio, `05:00` può essere pronunciata come "cinque ore" o "cinque AM" o "oh cinquecento". Il <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A> consente un valore della proprietà di `interpret-as` attributo possono essere estesi per specificare il formato di ora a parlare. Se il valore per il `interpret-as` attributo è "ora: 24 ore", il <xref:System.Speech.Synthesis.SpeechSynthesizer> parla "oh cinquecento". Se il valore per il `interpret-as` attributo è "ora di tempo: 12", il <xref:System.Speech.Synthesis.SpeechSynthesizer> parla "cinque A M".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpretAs">
      <MemberSignature Language="C#" Value="public string InterpretAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InterpretAs" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpretAs As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InterpretAs { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore dell'attributo <c>interpret-as</c> per l'elemento <c>say-as</c> nel linguaggio di markup SSML di una richiesta.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> proprietà ottiene o imposta il valore per il <xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A> proprietà in un <xref:System.Speech.Synthesis.TtsEngine.SayAs> istanza.  
  
 Il <xref:System.Speech.Synthesis.SpeechSynthesizer> utilizza il tipo di contenuto indicato dal <xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A> proprietà per determinare come eseguire il rendering di testo specificato.  
  
 Ad esempio, il nome Edgar può essere pronunciato come un nome: "il mio nome è Edgar". O potrebbe essere digitata con una lettera, come specificato con il `interpret-as` attributo in questa frase: "il mio nome è `<say-as interpret-as="spell-out"> Edgar </say-as>`." In questo caso, il <xref:System.Speech.Synthesis.SpeechSynthesizer> pronuncia Edgar come "E D G R A".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>