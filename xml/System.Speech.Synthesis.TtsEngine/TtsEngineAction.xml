<Type Name="TtsEngineAction" FullName="System.Speech.Synthesis.TtsEngine.TtsEngineAction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="688e7dad0b3255cc712e1825a403b618b1b4dcad" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30528035" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum TtsEngineAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TtsEngineAction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" />
  <TypeSignature Language="VB.NET" Value="Public Enum TtsEngineAction" />
  <TypeSignature Language="C++ CLI" Value="public enum class TtsEngineAction" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifica l'azione del linguaggio di markup sintesi della voce (SSML) da intraprendere durante il rendering di un dato oggetto <see langword="TextFragment" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> rappresenta le richieste per la manutenzione di un <xref:System.Speech.Synthesis.TtsEngine.TextFragment>. Le azioni corrispondono agli elementi nella specifica SSML e sono implementate nel testo restituito dal <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> proprietà in un <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.  
  
 Il <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valore associato a un <xref:System.Speech.Synthesis.TtsEngine.TextFragment> restituito dal <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> proprietà.  
  
 L'elaborazione del <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valore restituito dal <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> proprietà viene gestita da un riconoscimento vocale sintetizza l'implementazione del <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> metodo in una classe derivata da <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.  
  
   
  
## Examples  
 Nell'esempio seguente fa parte di un'implementazione di sintesi vocale personalizzato che eredita da <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>e tramite l'utilizzo di <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, e <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  
  
 L'implementazione di <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  
  
1.  Riceve una matrice di <xref:System.Speech.Synthesis.TtsEngine.TextFragment> istanze e crea una nuova matrice di <xref:System.Speech.Synthesis.TtsEngine.TextFragment> istanze deve essere passato il `Speak` metodo su un motore di sintesi sottostante.  
  
2.  Se il <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valore di enumerazione da trovato dal <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> proprietà il <xref:System.Speech.Synthesis.TtsEngine.FragmentState> restituito dal <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> proprietà di ogni <xref:System.Speech.Synthesis.TtsEngine.TextFragment> istanza è Speak, l'implementazione  
  
    -   Traduce Americanism a Britishisms nel testo da leggere.  
  
    -   Se il <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> proprietà il <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> interfacce fornite per il supporto di implementazione di <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> il tipo di evento, che viene creato un evento per guidare un indicatore di avanzamento sintetizzatore.  
  
3.  Viene quindi chiamato il motore di rendering vocale con modificato <xref:System.Speech.Synthesis.TtsEngine.TextFragment> matrice.  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Bookmark">
      <MemberSignature Language="C#" Value="Bookmark" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction Bookmark = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Bookmark" />
      <MemberSignature Language="VB.NET" Value="Bookmark" />
      <MemberSignature Language="C++ CLI" Value="Bookmark" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Indica che l'oggetto <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> deve essere utilizzato come contenuto di un segnalibro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corrisponde al tag XML `<mark>` nella specifica SSML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseUnknownTag">
      <MemberSignature Language="C#" Value="ParseUnknownTag" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction ParseUnknownTag = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.ParseUnknownTag" />
      <MemberSignature Language="VB.NET" Value="ParseUnknownTag" />
      <MemberSignature Language="C++ CLI" Value="ParseUnknownTag" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>Indica che non è stata determinata alcuna azione dall'input di SSML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto associato <xref:System.Speech.Synthesis.TtsEngine.TextFragment> è un tag XML sconosciuto non fa parte dello standard SSML.  
  
 L'input che può essere interpretato o ignorato a discrezione del motore di sintesi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pronounce">
      <MemberSignature Language="C#" Value="Pronounce" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction Pronounce = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Pronounce" />
      <MemberSignature Language="VB.NET" Value="Pronounce" />
      <MemberSignature Language="C++ CLI" Value="Pronounce" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Richiede che il testo <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> di input venga interpretato come fonemi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pronuncia esatto specificata da di <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A> membro del <xref:System.Speech.Synthesis.TtsEngine.FragmentState> oggetto restituito dal <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> proprietà <xref:System.Speech.Synthesis.TtsEngine.TextFragment> istanze.  
  
 Corrisponde al tag XML `<Phoneme>` nella specifica SSML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Silence">
      <MemberSignature Language="C#" Value="Silence" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction Silence = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence" />
      <MemberSignature Language="VB.NET" Value="Silence" />
      <MemberSignature Language="C++ CLI" Value="Silence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Indica che un oggetto <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> non contiene alcun testo di cui eseguire il rendering come input vocale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durata di inattività specificata da di <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Duration%2A> membro di he <xref:System.Speech.Synthesis.TtsEngine.FragmentState> oggetto restituito dal <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> proprietà <xref:System.Speech.Synthesis.TtsEngine.TextFragment> istanze.  
  
 Corrisponde al tag XML `<Silence>` nella specifica SSML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="Speak" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction Speak = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak" />
      <MemberSignature Language="VB.NET" Value="Speak" />
      <MemberSignature Language="C++ CLI" Value="Speak" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Richiede che l'oggetto <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> associato venga elaborato e pronunciato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo è il valore predefinito di <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> per un <xref:System.Speech.Synthesis.TtsEngine.TextFragment>,  
  
 Corrisponde al tag XML `<speak>` nella specifica SSML  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellOut">
      <MemberSignature Language="C#" Value="SpellOut" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction SpellOut = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.SpellOut" />
      <MemberSignature Language="VB.NET" Value="SpellOut" />
      <MemberSignature Language="C++ CLI" Value="SpellOut" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Indica che i valori di testo forniti da un oggetto <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> tramite la relativa proprietà <see cref="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak" /> devono essere sintetizzati come singoli caratteri.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il rendering include segni di punteggiatura, diversi da spazi vuoti, come testo alfanumerici.  
  
 Ad esempio tre associato un frammento di testo "word"! deve essere synthsized in "w o r punto esclamativo d".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="StartParagraph" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction StartParagraph = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartParagraph" />
      <MemberSignature Language="VB.NET" Value="StartParagraph" />
      <MemberSignature Language="C++ CLI" Value="StartParagraph" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Indica lo stato del paragrafo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corrisponde al tag XML `<p>` nella specifica SSML  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="StartSentence" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction StartSentence = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartSentence" />
      <MemberSignature Language="VB.NET" Value="StartSentence" />
      <MemberSignature Language="C++ CLI" Value="StartSentence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Indica l'inizio della frase.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corrisponde al tag XML `<s>` nella specifica SSML  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>