<Type Name="StateActivity" FullName="System.Workflow.Activities.StateActivity">
  <TypeSignature Language="C#" Value="public class StateActivity : System.Workflow.ComponentModel.CompositeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StateActivity extends System.Workflow.ComponentModel.CompositeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.StateActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class StateActivity&#xA;Inherits CompositeActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class StateActivity : System::Workflow::ComponentModel::CompositeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.CompositeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.StateDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.StateActivity), "Resources.StateActivity.png")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.StateActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="79d46-101">Rappresenta uno stato in una <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.</span><span class="sxs-lookup"><span data-stu-id="79d46-101">Represents a state in a <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="79d46-102"><xref:System.Workflow.Activities.StateActivity> rappresenta uno stato in una <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.</span><span class="sxs-lookup"><span data-stu-id="79d46-102">The <xref:System.Workflow.Activities.StateActivity> represents a State in a <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.</span></span> <span data-ttu-id="79d46-103">Le attività State possono contenere una o più classi <xref:System.Workflow.Activities.EventDrivenActivity> o <xref:System.Workflow.Activities.StateActivity>, una classe <xref:System.Workflow.Activities.StateInitializationActivity> e una classe <xref:System.Workflow.Activities.StateFinalizationActivity>.</span><span class="sxs-lookup"><span data-stu-id="79d46-103">State activities could contain one or more <xref:System.Workflow.Activities.EventDrivenActivity>, or <xref:System.Workflow.Activities.StateActivity> classes, one <xref:System.Workflow.Activities.StateInitializationActivity> class, and one <xref:System.Workflow.Activities.StateFinalizationActivity> class.</span></span>  <span data-ttu-id="79d46-104">Le attività SetState sono utilizzate in un <xref:System.Workflow.Activities.EventHandlersActivity> e <xref:System.Workflow.Activities.StateInitializationActivity> per spostare lo stato del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="79d46-104">SetState activities are used inside an <xref:System.Workflow.Activities.EventHandlersActivity> and <xref:System.Workflow.Activities.StateInitializationActivity> to move the state of the workflow.</span></span>  
  
 <span data-ttu-id="79d46-105">Quando un <xref:System.Workflow.Activities.StateActivity> è in esecuzione, gli unici eventi che è possibile ricevere sono gli eventi che possono essere gestiti dalle attività <xref:System.Workflow.Activities.EventDrivenActivity> in <xref:System.Workflow.Activities.StateActivity> e anche le attività <xref:System.Workflow.Activities.EventDrivenActivity> associate alle attività contenitore  <xref:System.Workflow.Activities.StateActivity> e alla radice <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="79d46-105">When a <xref:System.Workflow.Activities.StateActivity> is executing, the only events that can be received are the events that can be handled by the <xref:System.Workflow.Activities.EventDrivenActivity> activities in the <xref:System.Workflow.Activities.StateActivity> and also the <xref:System.Workflow.Activities.EventDrivenActivity> activities attached to the enclosing <xref:System.Workflow.Activities.StateActivity> activities and the root <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 <span data-ttu-id="79d46-106">Quando <xref:System.Workflow.Activities.StateActivity> inizia l'esecuzione, <xref:System.Workflow.Activities.StateActivity> controllerà se è presente o meno un'attività <xref:System.Workflow.Activities.StateInitializationActivity>.</span><span class="sxs-lookup"><span data-stu-id="79d46-106">When the <xref:System.Workflow.Activities.StateActivity> starts running, the <xref:System.Workflow.Activities.StateActivity> will check to see whether a <xref:System.Workflow.Activities.StateInitializationActivity> activity is present or not.</span></span> <span data-ttu-id="79d46-107"><xref:System.Workflow.Activities.StateActivity> può essere priva di attività o avere un'attività <xref:System.Workflow.Activities.StateInitializationActivity>.</span><span class="sxs-lookup"><span data-stu-id="79d46-107">The <xref:System.Workflow.Activities.StateActivity> can have zero or one <xref:System.Workflow.Activities.StateInitializationActivity> activity.</span></span> <span data-ttu-id="79d46-108">Se è presente un'attività <xref:System.Workflow.Activities.StateInitializationActivity>, <xref:System.Workflow.Activities.StateInitializationActivity> verrà eseguita.</span><span class="sxs-lookup"><span data-stu-id="79d46-108">If a <xref:System.Workflow.Activities.StateInitializationActivity> activity is present the <xref:System.Workflow.Activities.StateInitializationActivity> will be executed.</span></span> <span data-ttu-id="79d46-109">Non appena l'attività <xref:System.Workflow.Activities.StateInitializationActivity> finisce, <xref:System.Workflow.Activities.StateActivity> blocca gli eventi in modo che <xref:System.Workflow.Activities.StateActivity> riceva solo quelli che possono essere gestiti dalle proprie attività <xref:System.Workflow.Activities.EventDrivenActivity>.</span><span class="sxs-lookup"><span data-stu-id="79d46-109">As soon as the <xref:System.Workflow.Activities.StateInitializationActivity> activity finishes, the <xref:System.Workflow.Activities.StateActivity> blocks events so that the <xref:System.Workflow.Activities.StateActivity> only receives events that can be handled by its <xref:System.Workflow.Activities.EventDrivenActivity> activities.</span></span>  
  
 <span data-ttu-id="79d46-110"><xref:System.Workflow.Activities.StateActivity> è un’attività <xref:System.Workflow.ComponentModel.CompositeActivity>, ovvero <xref:System.Workflow.Activities.StateActivity> può contenere altre attività.</span><span class="sxs-lookup"><span data-stu-id="79d46-110">The <xref:System.Workflow.Activities.StateActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the <xref:System.Workflow.Activities.StateActivity> activity can contain other activities.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d46-111">Nell'esempio di codice seguente è illustrato come creare una nuova istanza della classe <xref:System.Workflow.Activities.StateActivity> e utilizzarla per implementare una semplice macchina a stati per effettuare una transizione tra 3 stati.</span><span class="sxs-lookup"><span data-stu-id="79d46-111">The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.StateActivity> class and use it implement a simple state machine to transition between 3 states.</span></span> <span data-ttu-id="79d46-112">Questo esempio di codice è parte dell'esempio SDK SimpleStateMachineWorkflow nel file StateMachineWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="79d46-112">This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file.</span></span> <span data-ttu-id="79d46-113">Per ulteriori informazioni, vedere [semplice macchina a stati](http://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).</span><span class="sxs-lookup"><span data-stu-id="79d46-113">For more information, see [Simple State Machine](http://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).</span></span>  
  
 [!code-csharp[wf_samples#181](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#181)]
 [!code-vb[wf_samples#181](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#181)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79d46-114">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.StateActivity" />.</span><span class="sxs-lookup"><span data-stu-id="79d46-114">Initializes a new instance of the <see cref="T:System.Workflow.Activities.StateActivity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StateActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.StateActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StateActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d46-115">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.StateActivity" />.</span><span class="sxs-lookup"><span data-stu-id="79d46-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.StateActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="79d46-116">Nell'esempio di codice seguente viene illustrato come creare una nuova istanza della classe <xref:System.Workflow.Activities.StateActivity>.</span><span class="sxs-lookup"><span data-stu-id="79d46-116">The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.StateActivity> class.</span></span>  <span data-ttu-id="79d46-117">Questo esempio di codice è parte dell'esempio SDK SimpleStateMachineWorkflow nel file StateMachineWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="79d46-117">This code example is part of the SimpleStateMachineWorkflow SDK Sample from the StateMachineWorkflow.cs file.</span></span> <span data-ttu-id="79d46-118">Per ulteriori informazioni, vedere [semplice macchina a stati](http://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).</span><span class="sxs-lookup"><span data-stu-id="79d46-118">For more information, see [Simple State Machine](http://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).</span></span>  
  
 [!code-csharp[WF_Samples#188](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#188)]
 [!code-vb[WF_Samples#188](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#188)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StateActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.StateActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StateActivity(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="79d46-119">Nome dell'attività definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="79d46-119">The user-defined name of the activity.</span></span></param>
        <summary><span data-ttu-id="79d46-120">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.StateActivity" /> mediante il nome dell'attività.</span><span class="sxs-lookup"><span data-stu-id="79d46-120">Initializes a new instance of the <see cref="T:System.Workflow.Activities.StateActivity" /> class using the name of the activity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="79d46-121">Il contesto di esecuzione per l'attività.</span><span class="sxs-lookup"><span data-stu-id="79d46-121">The execution context for the activity.</span></span></param>
        <summary><span data-ttu-id="79d46-122">Annulla l'esecuzione di <see cref="T:System.Workflow.Activities.StateActivity" />.</span><span class="sxs-lookup"><span data-stu-id="79d46-122">Cancels the execution of the <see cref="T:System.Workflow.Activities.StateActivity" />.</span></span></summary>
        <returns><span data-ttu-id="79d46-123">Lo stato corrente di <see cref="T:System.Workflow.ComponentModel.Activity" /> nell'istanza del flusso di lavoro in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="79d46-123">The current status of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the running workflow instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="79d46-124">Il contesto di esecuzione per l'attività.</span><span class="sxs-lookup"><span data-stu-id="79d46-124">The execution context for the activity.</span></span></param>
        <summary><span data-ttu-id="79d46-125">Esegue <see cref="T:System.Workflow.Activities.StateActivity" />.</span><span class="sxs-lookup"><span data-stu-id="79d46-125">Executes the <see cref="T:System.Workflow.Activities.StateActivity" />.</span></span></summary>
        <returns><span data-ttu-id="79d46-126">Lo stato corrente di <see cref="T:System.Workflow.ComponentModel.Activity" /> nell'istanza del flusso di lavoro in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="79d46-126">The current status of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the running workflow instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicActivity">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity GetDynamicActivity (string childActivityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity GetDynamicActivity(string childActivityName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDynamicActivity (childActivityName As String) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ GetDynamicActivity(System::String ^ childActivityName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childActivityName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childActivityName"><span data-ttu-id="79d46-127">L'attività figlio.</span><span class="sxs-lookup"><span data-stu-id="79d46-127">The child activity.</span></span></param>
        <summary><span data-ttu-id="79d46-128">Ottiene l'istanza di esecuzione di <see cref="T:System.Workflow.ComponentModel.Activity" /> che corrisponde al nome dell'attività figlio specificato.</span><span class="sxs-lookup"><span data-stu-id="79d46-128">Gets the executing instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> that corresponds to the specified child activity name.</span></span></summary>
        <returns><span data-ttu-id="79d46-129">Le attività figlio dinamiche.</span><span class="sxs-lookup"><span data-stu-id="79d46-129">The dynamic child activities.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="79d46-130">Le attività eseguibili non contengono il <paramref name="childActivityName" />.</span><span class="sxs-lookup"><span data-stu-id="79d46-130">The executable activities do not contain the <paramref name="childActivityName" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="79d46-131">Il provider di servizi dal quale ottenere il servizio.</span><span class="sxs-lookup"><span data-stu-id="79d46-131">The service provider from which to obtain services.</span></span></param>
        <summary><span data-ttu-id="79d46-132">Inizializza <see cref="T:System.Workflow.Activities.StateActivity" /> utilizzando il provider di servizi.</span><span class="sxs-lookup"><span data-stu-id="79d46-132">Initializes the <see cref="T:System.Workflow.Activities.StateActivity" /> using the service provider.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityChangeAdd">
      <MemberSignature Language="C#" Value="protected override void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnActivityChangeAdd(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Workflow.ComponentModel.Activity addedActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnActivityChangeAdd (executionContext As ActivityExecutionContext, addedActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnActivityChangeAdd(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, System::Workflow::ComponentModel::Activity ^ addedActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="addedActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="79d46-133">Il contesto di esecuzione per l'attività.</span><span class="sxs-lookup"><span data-stu-id="79d46-133">The execution context for the activity.</span></span></param>
        <param name="addedActivity"><span data-ttu-id="79d46-134">L'attività aggiunta a <see cref="T:System.Workflow.Activities.StateActivity" />.</span><span class="sxs-lookup"><span data-stu-id="79d46-134">The activity added to the <see cref="T:System.Workflow.Activities.StateActivity" />.</span></span></param>
        <summary><span data-ttu-id="79d46-135">Determina se l'attività da aggiungere è <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> e in tal caso, verifica se la nuova aggiunta basata sugli eventi deve essere sottoscritta.</span><span class="sxs-lookup"><span data-stu-id="79d46-135">Determines if the activity being added is an <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> and if so, verifies whether the newly added event driven needs to be subscribed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d46-136">Questo metodo viene chiamato ogni volta che un utente aggiunge un figlio a una <xref:System.Workflow.ComponentModel.CompositeActivity> tramite modifiche del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="79d46-136">This is method is called whenever a user adds a child to a <xref:System.Workflow.ComponentModel.CompositeActivity> through workflow changes.</span></span> <span data-ttu-id="79d46-137">Notare che questo metodo è definito in CompositeActivity e StateActivity ne esegue l'override per controllare se l'attività aggiunta è una <xref:System.Workflow.Activities.EventDrivenActivity> e in tal caso, verifica se la nuova aggiunta basata sugli eventi deve essere sottoscritta.</span><span class="sxs-lookup"><span data-stu-id="79d46-137">Note that this method is defined in CompositeActivity and overridden by the StateActivity, where it checks whether the activity being added is an <xref:System.Workflow.Activities.EventDrivenActivity> and if so, verifies if the newly added event driven needs to be subscribed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="79d46-138">Il provider di servizi dal quale ottenere il servizio.</span><span class="sxs-lookup"><span data-stu-id="79d46-138">The service provider from which to obtain services.</span></span></param>
        <summary><span data-ttu-id="79d46-139">Chiamato dal motore di runtime del flusso di lavoro come parte della transizione dell'attività allo stato <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="79d46-139">Called by the workflow runtime engine as part of the activity's transition to the <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" /> state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChangeTrackingDataKey">
      <MemberSignature Language="C#" Value="public const string StateChangeTrackingDataKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string StateChangeTrackingDataKey" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey" />
      <MemberSignature Language="VB.NET" Value="Public Const StateChangeTrackingDataKey As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ StateChangeTrackingDataKey;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d46-140">Contiene il valore della stringa della chiave dati della ricerca delle modifiche; "StateActivity.StateChange."</span><span class="sxs-lookup"><span data-stu-id="79d46-140">Holds the string value of the change tracking data key; "StateActivity.StateChange".</span></span> <span data-ttu-id="79d46-141">Il campo è una costante.</span><span class="sxs-lookup"><span data-stu-id="79d46-141">This field is a constant.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>