<Type Name="HandleExternalEventActivity" FullName="System.Workflow.Activities.HandleExternalEventActivity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="570bda243498b649480b63904177ff1683cc5a4e" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HandleExternalEventActivity : System.Workflow.ComponentModel.Activity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HandleExternalEventActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.Activities.IEventActivity, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt;, class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.HandleExternalEventActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class HandleExternalEventActivity&#xA;Inherits Activity&#xA;Implements IActivityEventListener(Of QueueEventArgs), IDynamicPropertyTypeProvider, IEventActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class HandleExternalEventActivity : System::Workflow::ComponentModel::Activity, System::Workflow::Activities::IEventActivity, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Activities.IEventActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Invoked")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.HandleExternalEventActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.HandleExternalEventActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e54e6-101">Definisce un'attività della comunicazione del flusso di lavoro che viene utilizzata per gestire un evento generato da un servizio locale.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e54e6-101">Defines a workflow communication activity that is used to handle an event that is raised by a local service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="e54e6-102">Un servizio locale è una classe che implementa un'interfaccia di servizio locale (un'interfaccia contrassegnata con <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) e che viene aggiunta a <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span><span class="sxs-lookup"><span data-stu-id="e54e6-102">A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span></span>  
  
 <span data-ttu-id="e54e6-103"><xref:System.Workflow.Activities.HandleExternalEventActivity> riceve i dati quando <xref:System.Workflow.Activities.ExternalDataExchangeService> il servizio genera un evento tramite i dati degli eventi derivati da <xref:System.Workflow.Activities.ExternalDataEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="e54e6-103">The <xref:System.Workflow.Activities.HandleExternalEventActivity> receives data when the <xref:System.Workflow.Activities.ExternalDataExchangeService> service raises an event with event data derived from <xref:System.Workflow.Activities.ExternalDataEventArgs>.</span></span>  
  
 <span data-ttu-id="e54e6-104"><xref:System.Workflow.Activities.HandleExternalEventActivity> è un'attività di blocco.</span><span class="sxs-lookup"><span data-stu-id="e54e6-104">The <xref:System.Workflow.Activities.HandleExternalEventActivity> is a blocking activity.</span></span>  
  
 <span data-ttu-id="e54e6-105">Le classi che derivano da <xref:System.Workflow.Activities.HandleExternalEventActivity> non devono implementare l'interfaccia <xref:System.Workflow.ComponentModel.IActivityEventListener%601>. In caso contrario, la classe derivata non verrà eseguita correttamente.</span><span class="sxs-lookup"><span data-stu-id="e54e6-105">Classes that derive from <xref:System.Workflow.Activities.HandleExternalEventActivity> should not implement the <xref:System.Workflow.ComponentModel.IActivityEventListener%601> interface because the derived class does not execute correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e54e6-106">Nell'esempio di codice seguente viene illustrato come creare e impostare valori per la classe <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="e54e6-106">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="e54e6-107">Questo esempio di codice è parte dell'esempio SDK RaiseEventToLoadWorkflow nel file DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="e54e6-107">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="e54e6-108">Per altre informazioni, vedere [generare eventi di flusso di lavoro carico](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="e54e6-108">For more information, see [Raise Event To Load Workflow](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-109">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-109">Initializes a new instance of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleExternalEventActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleExternalEventActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-110">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-110">Initializes a new instance of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e54e6-111">Nell'esempio di codice seguente viene illustrato come creare e impostare valori per la classe <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="e54e6-111">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span> <span data-ttu-id="e54e6-112">Questo esempio di codice è parte dell'esempio SDK RaiseEventToLoadWorkflow nel file DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="e54e6-112">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="e54e6-113">Per altre informazioni, vedere [generare eventi di flusso di lavoro carico](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="e54e6-113">For more information, see [Raise Event To Load Workflow](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleExternalEventActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleExternalEventActivity(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e54e6-114">Nome dell'attività definito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-114">The user-defined name of the activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e54e6-115">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> mediante il nome dell'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> class using the name of the activity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">
          <span data-ttu-id="e54e6-116">Elemento <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> che rappresenta l’ambiente di esecuzione dell’elemento <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-116">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e54e6-117">Annulla la gestione dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-117">Cancels the handling of the event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e54e6-118">
            <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> di <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> al termine dell'operazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-118">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> at the end of the requested operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationToken">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.CorrelationToken CorrelationToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CorrelationToken As CorrelationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Workflow::Runtime::CorrelationToken ^ CorrelationToken { System::Workflow::Runtime::CorrelationToken ^ get(); void set(System::Workflow::Runtime::CorrelationToken ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.CorrelationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-119">Ottiene o imposta l'associazione a un <see cref="T:System.Workflow.Runtime.CorrelationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-119">Gets or sets the binding to a <see cref="T:System.Workflow.Runtime.CorrelationToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e54e6-120">Questa proprietà viene utilizzata per correlare un evento con la corretta attività <see cref="T:System.Workflow.Activities.IEventActivity" /> ereditata in base al payload dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-120">This property is used to correlate an event to the correct <see cref="T:System.Workflow.Activities.IEventActivity" />-inherited activity based on the payload of the event.</span>
          </span>
          <span data-ttu-id="e54e6-121">Ad esempio, quando una singola istanza del flusso di lavoro è in ascolto di più istanze dello stesso evento contemporaneamente, la proprietà <see langword="CorrelationToken" /> viene utilizzata per indirizzare l'evento all'attività appropriata in quell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-121">For example, when a single workflow instance is listening for multiple instances of the same event at the same time, the <see langword="CorrelationToken" /> property is used to route the event to the proper activity in that workflow instance.</span>
          </span>
          <span data-ttu-id="e54e6-122">Questa correlazione non deve essere confusa con la correlazione di un evento all'istanza del flusso di lavoro corretta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-122">This correlation should not be confused with correlating an event to the correct workflow instance.</span>
          </span>
          <span data-ttu-id="e54e6-123">La correlazione all'istanza del flusso di lavoro corretta viene eseguita inviando l'evento a un'istanza del flusso di lavoro esplicita e utilizzando la proprietà <see cref="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" /> per identificare correttamente l'istanza del flusso di lavoro corretta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-123">The correlation to the correct workflow instance is done by sending the event to an explicit workflow instance and using the <see cref="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" /> property to properly identify the correct workflow instance.</span>
          </span>
          <span data-ttu-id="e54e6-124">Per un esempio di correlazione, vedere la [correlato di esempio di servizio locale](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-124">For an example of correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e54e6-125">Nell'esempio seguente viene illustrato come accedere alla proprietà `CorrelationToken` di un oggetto `HandleExternalEventActivity`.</span><span class="sxs-lookup"><span data-stu-id="e54e6-125">The following example shows how to access the `CorrelationToken` property of a `HandleExternalEventActivity`.</span></span> <span data-ttu-id="e54e6-126">Questo esempio è tratto dall'esempio dall'esempio SDK Correlated Local Service, nel file CorrelatedLocalServiceWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="e54e6-126">This example is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="e54e6-127">Per ulteriori informazioni, vedere [correlato di esempio di servizio locale](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="e54e6-127">For more information, see [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[Wf_samples#198](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#198)]
 [!code-vb[Wf_samples#198](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#198)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationTokenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CorrelationTokenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CorrelationTokenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-128">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che fa riferimento alla proprietà <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-128">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public virtual string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.EventName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EventName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EventName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-129">Ottiene il nome dell'evento generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-129">Gets the name of the raised event.</span>
          </span>
          <span data-ttu-id="e54e6-130">Questa proprietà deve essere impostata prima che si verifichi la comunicazione locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-130">This property must be set before local communication can occur.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e54e6-131">Il nome dell'evento generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-131">The name of the raised event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e54e6-132">Nell'esempio di codice seguente viene illustrato come creare e impostare valori per la classe <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="e54e6-132">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="e54e6-133">Questo esempio di codice è parte dell'esempio SDK RaiseEventToLoadWorkflow nel file DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="e54e6-133">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="e54e6-134">Per altre informazioni, vedere [generare eventi di flusso di lavoro carico](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="e54e6-134">For more information, see [Raise Event To Load Workflow](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty EventNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty EventNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EventNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ EventNameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-135">Corrisponde al nome di un evento definito in un'interfaccia contrassegnata con l'oggetto <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-135">Corresponds to the name of an event that is defined in an interface that was marked with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">
          <span data-ttu-id="e54e6-136">Oggetto <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> associato all'oggetto <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-136">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> associated with the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e54e6-137">Tenta di eseguire la classe <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> associata a <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-137">Tries to run the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> associated with the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e54e6-138">
            <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> di <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> al termine dell'operazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-138">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> at the end of the requested operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext">
          <span data-ttu-id="e54e6-139">
            <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> per questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-139">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this instance.</span>
          </span>
        </param>
        <param name="exception">
          <span data-ttu-id="e54e6-140">Eccezione <see cref="T:System.Exception" /> che ha generato l’errore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-140">The <see cref="T:System.Exception" /> that caused this fault.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e54e6-141">Chiamato quando all'interno del contesto di esecuzione di questa istanza viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-141">Called when an exception is raised within the context of the execution of this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e54e6-142">Oggetto <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> risultante dal tentativo di annullamento di questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-142">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> that results from an attempt to cancel this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e54e6-143">
            <paramref name="exception" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-143">
              <paramref name="exception" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override sealed void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e54e6-144">
            <see cref="T:System.IServiceProvider" /> che fornisce supporto personalizzato alla classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-144">The <see cref="T:System.IServiceProvider" /> that provides custom support to the class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e54e6-145">Inizializza l'evento con il provider di servizi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-145">Initializes the event with the service provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e54e6-146">
            <paramref name="provider" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic), il tipo del provider di servizi è un riferimento null (<see langword="Nothing" />) o il proxy per il provider di servizi è un riferimento null (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-146">
              <paramref name="provider" /> is a null reference (<see langword="Nothing" /> in Visual Basic), the type of the service provider is a null reference (<see langword="Nothing" />), or the proxy for the service provider is a null reference (<see langword="Nothing" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-147">Esegue l'inizializzazione nelle proprietà della dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-147">Performs initialization on dependency properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e54e6-148">Questo metodo inizializza la proprietà <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A>, verifica che le proprietà <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> e <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> siano impostate e verifica che l'evento a cui viene fatto riferimento nella proprietà <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> possa essere trovato nell'interfaccia di riferimento nella proprietà <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A>.</span><span class="sxs-lookup"><span data-stu-id="e54e6-148">This method initializes the <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public virtual Type InterfaceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ InterfaceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-149">Ottiene o imposta il tipo di interfaccia attribuito tramite <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> del servizio locale di cui viene gestito l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-149">Gets or sets the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> attributed interface type of the local service whose event is handled.</span>
          </span>
          <span data-ttu-id="e54e6-150">Questa proprietà deve essere impostata prima che si verifichi la comunicazione locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-150">This property must be set before local communication can occur.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e54e6-151">Tipo di interfaccia del servizio locale di cui viene gestito l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-151">The interface type of the local service whose event is handled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e54e6-152">Nell'esempio di codice seguente viene illustrato come creare e impostare valori per la classe <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="e54e6-152">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="e54e6-153">Questo esempio di codice è parte dell'esempio SDK RaiseEventToLoadWorkflow nel file DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="e54e6-153">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="e54e6-154">Per altre informazioni, vedere [generare eventi di flusso di lavoro carico](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="e54e6-154">For more information, see [Raise Event To Load Workflow](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InterfaceTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InterfaceTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-155">Corrisponde al nome dell'interfaccia contrassegnata con l'oggetto <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-155">Corresponds to the name of the interface that was marked with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoked">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.ExternalDataEventArgs&gt; Invoked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.ExternalDataEventArgs&gt; Invoked" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.HandleExternalEventActivity.Invoked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Invoked As EventHandler(Of ExternalDataEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::ExternalDataEventArgs ^&gt; ^ Invoked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.ExternalDataEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-156">Si verifica quando viene ricevuto l'evento esterno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-156">Occurs when the external event is received.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e54e6-157">Nell'esempio di codice seguente viene illustrato come creare e impostare valori per la classe <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="e54e6-157">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="e54e6-158">Questo esempio di codice è parte dell'esempio SDK RaiseEventToLoadWorkflow nel file DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="e54e6-158">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="e54e6-159">Per altre informazioni, vedere [generare eventi di flusso di lavoro carico](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="e54e6-159">For more information, see [Raise Event To Load Workflow](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InvokedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InvokedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvokedEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InvokedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-160">Definisce il delegato di un evento che viene eseguito dopo che l'attività riceve l'evento previsto dal servizio locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-160">Defines an event delegate that is executed after the activity receives the expected event from the local service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="e54e6-161">Oggetto <see cref="T:System.IServiceProvider" /> che fornisce il servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-161">The <see cref="T:System.IServiceProvider" /> that provides the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e54e6-162">Chiamato dal runtime del flusso di lavoro come parte della transizione dell'attività allo stato <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-162">Called by the workflow runtime as part of the activity's transition to the <see langword="Closed" /> state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e54e6-163">Questo metodo offre all'attività la possibilità di eseguire la pulizia delle risorse utilizzate durante l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="e54e6-163">This method provides the activity with an opportunity to clean up resources utilized during its execution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInvoked">
      <MemberSignature Language="C#" Value="protected virtual void OnInvoked (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInvoked(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInvoked (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInvoked(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e54e6-164">
            <see cref="T:System.EventArgs" /> che vengono ricevute dall'evento esterno che è stato appena ricevuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-164">The <see cref="T:System.EventArgs" /> that are received from the external event that was just received.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e54e6-165">Metodo chiamato solo dopo la ricezione dell'evento esterno per consentire alle classi derivate di elaborare la classe <see cref="T:System.EventArgs" /> in entrata prima della chiusura dell'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-165">Called just after the external event is received to allow derived classes to process the inbound <see cref="T:System.EventArgs" /> before the activity closes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e54e6-166">L'utilizzo più comune del metodo <xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A> nelle classi derivate consiste nell'estrarre membri dall'oggetto <xref:System.EventArgs> ricevuto per impostare i valori delle proprietà pubbliche dell'attività di classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e54e6-166">The most common use of the <xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A> method in derived classes is to extract members from the received <xref:System.EventArgs> to set the values of the derived-classed activity's public properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e54e6-167">Nel codice seguente viene illustrata un'implementazione del metodo `OnInvoked`.</span><span class="sxs-lookup"><span data-stu-id="e54e6-167">The following example shows an implementation of the `OnInvoked` method.</span></span> <span data-ttu-id="e54e6-168">Questo esempio è tratto dall'esempio SDK Correlated Local Service, nel file TaskCompleted.cs.</span><span class="sxs-lookup"><span data-stu-id="e54e6-168">This example is from the Correlated Local Service SDK sample, from the TaskCompleted.cs file.</span></span> <span data-ttu-id="e54e6-169">Per ulteriori informazioni, vedere [correlato di esempio di servizio locale](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="e54e6-169">For more information, see [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[Wf_samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[Wf_samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-170">Ottiene la raccolta di associazioni dei parametri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-170">Gets the collection of parameter bindings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e54e6-171">Raccolta di associazioni dei parametri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-171">The collection of parameter bindings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e54e6-172">Nell'esempio seguente viene illustrato come accedere alla proprietà `ParameterBindings`.</span><span class="sxs-lookup"><span data-stu-id="e54e6-172">The following example shows how to access the `ParameterBindings` property.</span></span> <span data-ttu-id="e54e6-173">Questo esempio di codice fa parte dell'esempio SDK Ordering State Machine nel file SampleWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="e54e6-173">This example is from the Ordering State Machine SDK sample, from the SampleWorkflow.designer.cs file.</span></span>  <span data-ttu-id="e54e6-174">Per ulteriori informazioni, vedere [ordinamento stato macchina esempio](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="e54e6-174">For more information, see [Ordering State Machine Sample](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[wf_samples#125](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#125)]
 [!code-vb[wf_samples#125](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#125)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindingsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterBindingsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ParameterBindingsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-175">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che fa riferimento alla proprietà <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-175">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" /> property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Roles">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.WorkflowRoleCollection Roles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.WorkflowRoleCollection Roles" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.Roles" />
      <MemberSignature Language="VB.NET" Value="Public Property Roles As WorkflowRoleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::WorkflowRoleCollection ^ Roles { System::Workflow::Activities::WorkflowRoleCollection ^ get(); void set(System::Workflow::Activities::WorkflowRoleCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.BindUITypeEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.WorkflowRoleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-176">Ottiene o imposta un riferimento a una raccolta del ruolo di flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-176">Gets or sets a reference to a workflow role collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e54e6-177">Raccolta di un ruolo del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-177">A collection of a workflow role.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e54e6-178"><xref:System.Workflow.Activities.WorkflowRoleCollection> limita il set degli utenti che possono inviare messaggi all'istanza di un flusso di lavoro tramite un'attività <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="e54e6-178">The <xref:System.Workflow.Activities.WorkflowRoleCollection> limits the set of users who can send messages to a workflow instance through a <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e54e6-179">Nell'esempio di codice seguente viene illustrato come creare e impostare valori per la classe <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="e54e6-179">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="e54e6-180">Questo esempio di codice è parte dell'esempio SDK RaiseEventToLoadWorkflow nel file DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="e54e6-180">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="e54e6-181">Per altre informazioni, vedere [generare eventi di flusso di lavoro carico](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="e54e6-181">For more information, see [Raise Event To Load Workflow](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RolesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty RolesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty RolesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RolesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ RolesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-182">Identifica i ruoli utente validi che sono autorizzati all'invio di messaggi dall'host a questa attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-182">Identifies the valid user roles that are allowed to send messages from the host to this activity.</span>
          </span>
          <span data-ttu-id="e54e6-183">I due tipi di ruoli supportati sono Active Directory e ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-183">The two types of supported roles are Active Directory and ASP.NET.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.QueueName">
      <MemberSignature Language="C#" Value="IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property QueueName As IComparable Implements IEventActivity.QueueName" />
      <MemberSignature Language="C++ CLI" Value="property IComparable ^ System.Workflow.Activities.IEventActivity.QueueName { IComparable ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.Activities.IEventActivity.QueueName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e54e6-184">Ottiene il nome della coda <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> in cui l'attività è in attesa di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-184">Gets the name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> on which the activity is waiting for data to arrive.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e54e6-185">Nome della coda <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> in cui l'attività è in attesa di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-185">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> on which the activity is waiting for data to arrive.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Subscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Subscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Subscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Subscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Subscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Subscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext">
          <span data-ttu-id="e54e6-186">Elemento <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> che rappresenta l’ambiente di esecuzione dell’elemento <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-186">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </param>
        <param name="parentEventHandler">
          <span data-ttu-id="e54e6-187">Elemento <see cref="T:System.EventHandler" /> dell’evento padre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-187">The <see cref="T:System.EventHandler" /> for the parent event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e54e6-188">Crea la sottoscrizione dell'attività <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> a un evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-188">Creates the subscription of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> activity to an event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Unsubscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Unsubscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Unsubscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Unsubscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Unsubscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Unsubscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext">
          <span data-ttu-id="e54e6-189">Oggetto <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> che rappresenta l'ambiente di esecuzione dell'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-189">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the activity.</span>
          </span>
        </param>
        <param name="parentEventHandler">
          <span data-ttu-id="e54e6-190">Elemento <see cref="T:System.EventHandler" /> dell’evento padre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-190">The <see cref="T:System.EventHandler" /> for the parent event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e54e6-191">Annulla la sottoscrizione dell'attività <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> a un evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-191">Cancels the subscription of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> activity to an event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent">
      <MemberSignature Language="C#" Value="void IActivityEventListener&lt;QueueEventArgs&gt;.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(object sender, class System.Workflow.ComponentModel.QueueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener&lt;System#Workflow#ComponentModel#QueueEventArgs&gt;#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnEvent (sender As Object, e As QueueEventArgs) Implements IActivityEventListener(Of QueueEventArgs).OnEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(System::Object ^ sender, System::Workflow::ComponentModel::QueueEventArgs ^ e) = System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;::OnEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Workflow.ComponentModel.QueueEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="e54e6-192">Oggetto che ha generato l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-192">The object that raised the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="e54e6-193">Gli argomenti dell'evento tipizzati in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-193">The previously typed event arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e54e6-194">Definisce la procedura di elaborazione quando si verifica l'evento di sottoscrizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-194">Defines the processing procedure when the subscribed-to event occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="e54e6-195">Oggetto che implementa <see cref="T:System.IServiceProvider" /> per fornire accesso ai servizi in fase di progettazione eventualmente necessari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-195">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="e54e6-196">Nome della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-196">The name of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e54e6-197">Restituisce il tipo di accesso per la proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-197">Returns the access type for the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e54e6-198">Valore di enumerazione di <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> che indica il livello di accesso della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-198">An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denote the access level of the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e54e6-199">Questo oggetto viene utilizzato in fase di compilazione per convalidare la corretta associazione reciproca delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="e54e6-199">Used at compile time to validate whether the properties are correctly bound to one other.</span></span> <span data-ttu-id="e54e6-200">Senza questa interfaccia, queste informazioni vengono derivate direttamente dai metodi di richiamo e impostazione delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="e54e6-200">Without this interface, this information is inferred directly from property getter/setters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="e54e6-201">Oggetto che implementa <see cref="T:System.IServiceProvider" /> per fornire accesso ai servizi in fase di progettazione eventualmente necessari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-201">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="e54e6-202">Nome della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-202">The name of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e54e6-203">Restituisce l'oggetto <see cref="T:System.Type" /> della proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-203">Returns the <see cref="T:System.Type" /> of the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e54e6-204">Oggetto <see cref="T:System.Type" /> della proprietà il cui nome è passato come parametro <paramref name="propertyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e54e6-204">The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e54e6-205">Questo oggetto viene utilizzato in fase di compilazione per convalidare la corretta associazione reciproca delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="e54e6-205">Used at compile time to validate whether the properties are correctly bound to one other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>