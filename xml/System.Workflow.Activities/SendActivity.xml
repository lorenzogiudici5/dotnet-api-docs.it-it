<Type Name="SendActivity" FullName="System.Workflow.Activities.SendActivity">
  <TypeSignature Language="C#" Value="public sealed class SendActivity : System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SendActivity extends System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.SendActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SendActivity&#xA;Inherits Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendActivity sealed : System::Workflow::ComponentModel::Activity" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.SendActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.SendActivity), "Design.Resources.SendActivity.png")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.SendActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0358d-101">Attività del client che modella la chiamata sincrona di un'operazione del servizio Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="0358d-101">Client activity that models the synchronous invocation of a Windows Communication Foundation (WCF) service operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="0358d-102">Il <xref:System.Workflow.Activities.SendActivity> attività consente di partecipare a una conversazione con un servizio WCF mediante un modello di scambio di messaggi predefinito.</span><span class="sxs-lookup"><span data-stu-id="0358d-102">The <xref:System.Workflow.Activities.SendActivity> activity enables you to participate in a conversation with a WCF service using a predefined message exchange pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0358d-103">L'attività <xref:System.Workflow.Activities.SendActivity> è un'attività di blocco, vale a dire che l'esecuzione del flusso di lavoro risulta bloccata fino al completamento dell'esecuzione dell'attività.</span><span class="sxs-lookup"><span data-stu-id="0358d-103">The <xref:System.Workflow.Activities.SendActivity> activity is a blocking activity, meaning that workflow execution is blocked until the activity completes execution.</span></span>  
  
 <span data-ttu-id="0358d-104">I modelli di scambio di messaggi supportati dall'attività di <xref:System.Workflow.Activities.SendActivity> includono:</span><span class="sxs-lookup"><span data-stu-id="0358d-104">The message exchange patterns supported by the <xref:System.Workflow.Activities.SendActivity> activity include:</span></span>  
  
-   <span data-ttu-id="0358d-105">Invio messaggio unidirezionale</span><span class="sxs-lookup"><span data-stu-id="0358d-105">One-way Send Message</span></span>  
  
     <span data-ttu-id="0358d-106">L'attività di <xref:System.Workflow.Activities.SendActivity> invia un messaggio ma non prevede una risposta dal servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-106">The <xref:System.Workflow.Activities.SendActivity> activity sends a message but does not expect a response from the service.</span></span>  
  
-   <span data-ttu-id="0358d-107">Invio richiesta – Ricezione risposta</span><span class="sxs-lookup"><span data-stu-id="0358d-107">Send Request - Receive Reply</span></span>  
  
     <span data-ttu-id="0358d-108">L'attività di <xref:System.Workflow.Activities.SendActivity> invia un messaggio e attende fino alla ricezione di una risposta dal servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-108">The <xref:System.Workflow.Activities.SendActivity> activity sends a message and waits until a response is received from the service.</span></span>  
  
-   <span data-ttu-id="0358d-109">Invio richiesta – Ricezione errore</span><span class="sxs-lookup"><span data-stu-id="0358d-109">Send Request - Receive Fault</span></span>  
  
     <span data-ttu-id="0358d-110">L'attività di <xref:System.Workflow.Activities.SendActivity> invia un messaggio e attende fino alla ricezione di una risposta o di un errore dal servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-110">The <xref:System.Workflow.Activities.SendActivity> activity sends a message and waits until a response or a fault is received from the service.</span></span> <span data-ttu-id="0358d-111">Durante l'esecuzione, l'attività di invio genera tutti gli errori ricevuti dal server.</span><span class="sxs-lookup"><span data-stu-id="0358d-111">During execution, the send activity throws all of the faults that were received from the server.</span></span> <span data-ttu-id="0358d-112">Le attività <xref:System.Workflow.ComponentModel.FaultHandlerActivity> possono essere utilizzate per gestire gli errori nel flusso di lavoro client.</span><span class="sxs-lookup"><span data-stu-id="0358d-112"><xref:System.Workflow.ComponentModel.FaultHandlerActivity> activities can be used to handle the faults in the client workflow.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0358d-113">Questa attività sia parte di [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="0358d-113">This activity is part of [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span> <span data-ttu-id="0358d-114">Per l'attività equivalente in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], vedere <xref:System.ServiceModel.Activities.Send>.</span><span class="sxs-lookup"><span data-stu-id="0358d-114">For the equivalent activity in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], see <xref:System.ServiceModel.Activities.Send>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Workflow.Activities.ReceiveActivity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0358d-115">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.SendActivity" />.</span><span class="sxs-lookup"><span data-stu-id="0358d-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-116">Il costruttore <xref:System.Workflow.Activities.SendActivity> in genere viene richiamato nel file code-beside creato dalla finestra di progettazione del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="0358d-116">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0358d-117">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.SendActivity" />.</span><span class="sxs-lookup"><span data-stu-id="0358d-117">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-118">Il costruttore <xref:System.Workflow.Activities.SendActivity> in genere viene richiamato nel file code-beside creato dalla finestra di progettazione del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="0358d-118">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-119">Nell'esempio riportato di seguito viene illustrato come creare una nuova istanza della classe <xref:System.Workflow.Activities.SendActivity>.</span><span class="sxs-lookup"><span data-stu-id="0358d-119">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.</span></span>  <span data-ttu-id="0358d-120">Questo esempio è stato adattato dall'esempio SDK `Conversations`.</span><span class="sxs-lookup"><span data-stu-id="0358d-120">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#16](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendActivity(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0358d-121">Il valore assegnato a <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> quando l'attività viene inizializzata.</span><span class="sxs-lookup"><span data-stu-id="0358d-121">The value assigned to <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> when the activity is initialized.</span></span></param>
        <summary><span data-ttu-id="0358d-122">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.SendActivity" /> con la proprietà <see langword="name" /> specificata.</span><span class="sxs-lookup"><span data-stu-id="0358d-122">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class with the specified <see langword="name" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-123">Il costruttore <xref:System.Workflow.Activities.SendActivity> in genere viene richiamato nel file code-beside creato dalla finestra di progettazione del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="0358d-123">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-124">Nell'esempio riportato di seguito viene illustrato come creare una nuova istanza della classe <xref:System.Workflow.Activities.SendActivity>.</span><span class="sxs-lookup"><span data-stu-id="0358d-124">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.</span></span>  
  
 [!code-csharp[SendActivity#17](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterResponse">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; AfterResponse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.SendActivityEventArgs&gt; AfterResponse" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.SendActivity.AfterResponse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterResponse As EventHandler(Of SendActivityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::SendActivityEventArgs ^&gt; ^ AfterResponse;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0358d-125">Si verifica dopo che la risposta è stata ricevuta dal servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-125">Occurs after the response has been received from the service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-126">Questo gestore eventi associato a questo evento può essere utilizzato per leggere il valore restituito dall'operazione del servizio richiamata.</span><span class="sxs-lookup"><span data-stu-id="0358d-126">This event handler associated with this event can be used to read the return value from the service operation invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-127">Nell'esempio seguente viene illustrato come utilizzare l'evento `AfterResponse`.</span><span class="sxs-lookup"><span data-stu-id="0358d-127">The following example shows how to use the `AfterResponse` event.</span></span>  
  
 [!code-csharp[SendActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterResponseEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.AfterResponseEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AfterResponseEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ AfterResponseEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0358d-128">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che fa riferimento all'evento <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" />.</span><span class="sxs-lookup"><span data-stu-id="0358d-128">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-129">Questa proprietà dell'evento di dipendenza può essere utilizzata per associare l'evento di <xref:System.Workflow.Activities.SendActivity.AfterResponse> dell'attività di trasmissione a un gestore eventi pubblico sulla classe del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="0358d-129">This dependency event property can be used to bind the send activity's <xref:System.Workflow.Activities.SendActivity.AfterResponse> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSend">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; BeforeSend;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.SendActivityEventArgs&gt; BeforeSend" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.SendActivity.BeforeSend" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeSend As EventHandler(Of SendActivityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::SendActivityEventArgs ^&gt; ^ BeforeSend;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0358d-130">Si verifica prima che l'attività <see cref="T:System.Workflow.Activities.SendActivity" /> invii il messaggio al servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-130">Occurs before the <see cref="T:System.Workflow.Activities.SendActivity" /> activity sends the message to the service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-131">Questo gestore eventi associato a questo evento può essere utilizzato per impostare i valori del parametro per l'operazione del servizio richiamata.</span><span class="sxs-lookup"><span data-stu-id="0358d-131">This event handler associated with this event can be used to set the parameter values for the service operation being invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0358d-132">Impossibile impostare il contesto di un'attività <xref:System.Workflow.Activities.SendActivity> in questo gestore eventi.</span><span class="sxs-lookup"><span data-stu-id="0358d-132">The context of a <xref:System.Workflow.Activities.SendActivity> cannot be set in this event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-133">Nell'esempio seguente viene illustrato come utilizzare l'evento `BeforeSend`.</span><span class="sxs-lookup"><span data-stu-id="0358d-133">The following example shows how to use the `BeforeSend` event.</span></span> <span data-ttu-id="0358d-134">Questo esempio è stato adattato dall'esempio SDK `Conversations`.</span><span class="sxs-lookup"><span data-stu-id="0358d-134">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#3](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSendEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.BeforeSendEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeforeSendEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ BeforeSendEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0358d-135">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che fa riferimento all'evento <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" />.</span><span class="sxs-lookup"><span data-stu-id="0358d-135">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-136">Questa proprietà dell'evento di dipendenza può essere utilizzata per associare l'evento di <xref:System.Workflow.Activities.SendActivity.BeforeSend> dell'attività di trasmissione a un gestore eventi pubblico sulla classe del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="0358d-136">This dependency event property can be used to bind the send activity's <xref:System.Workflow.Activities.SendActivity.BeforeSend> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelToken">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ChannelToken ChannelToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.ChannelToken ChannelToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ChannelToken" />
      <MemberSignature Language="VB.NET" Value="Public Property ChannelToken As ChannelToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::ChannelToken ^ ChannelToken { System::Workflow::Activities::ChannelToken ^ get(); void set(System::Workflow::Activities::ChannelToken ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ChannelToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0358d-137">Oggetto <see cref="T:System.Workflow.Activities.ChannelToken" /> utilizzato dall'oggetto <see cref="T:System.Workflow.Activities.SendActivity" /> per associarsi a un canale client.</span><span class="sxs-lookup"><span data-stu-id="0358d-137"><see cref="T:System.Workflow.Activities.ChannelToken" /> used by the <see cref="T:System.Workflow.Activities.SendActivity" /> to associate itself with a client channel.</span></span></summary>
        <value><span data-ttu-id="0358d-138">Oggetto <see cref="T:System.Workflow.Activities.ChannelToken" /> che definisce un canale client utilizzato da un oggetto <see cref="T:System.Workflow.Activities.SendActivity" /> per comunicare con un servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-138">A <see cref="T:System.Workflow.Activities.ChannelToken" /> defining a client channel that a <see cref="T:System.Workflow.Activities.SendActivity" /> uses to communicate with a service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-139">Un token del canale specifica il nome del canale, l'ambito del canale e il nome della configurazione dell'endpoint da utilizzare per stabilire il canale.</span><span class="sxs-lookup"><span data-stu-id="0358d-139">A channel token specifies the name of the channel, the scope of the channel, and the endpoint configuration name to be used in establishing the channel.</span></span> <span data-ttu-id="0358d-140">Il nome dell'endpoint nel file di configurazione ha l'indirizzo, l'associazione e le informazioni del contratto per un servizio con il quale l'attività <xref:System.Workflow.Activities.SendActivity> comunica.</span><span class="sxs-lookup"><span data-stu-id="0358d-140">The endpoint name in the configuration file has the address, binding, and contract information for a service that the <xref:System.Workflow.Activities.SendActivity> activity communicates with.</span></span>  
  
 <span data-ttu-id="0358d-141">Il token del canale specifica inoltre un nome univoco del canale e un nome dell'attività del proprietario per il token.</span><span class="sxs-lookup"><span data-stu-id="0358d-141">The channel token also specifies a unique channel name and an owner activity name for the token.</span></span> <span data-ttu-id="0358d-142">Un token del canale può essere condiviso tra più attività di trasmissione che utilizzano lo stesso endpoint per comunicare con un servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-142">A channel token can be shared between multiple send activities that want to use the same endpoint to communicate with a service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-143">Nell'esempio seguente viene illustrato come accedere alla proprietà `ChannelToken`.</span><span class="sxs-lookup"><span data-stu-id="0358d-143">The following example shows how to access the `ChannelToken` property.</span></span> <span data-ttu-id="0358d-144">Questo esempio è stato adattato dall'esempio SDK `CalculatorClient`.</span><span class="sxs-lookup"><span data-stu-id="0358d-144">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#7](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Context { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0358d-145">Restituisce un dizionario che contiene il contesto utilizzato per la comunicazione tra il client e il servizio con cui sta comunicando, inclusi elementi come l'identificazione per la correlazione.</span><span class="sxs-lookup"><span data-stu-id="0358d-145">Returns a dictionary that contains the context used for communication between the client and the service it is communicating with, including such things as identification for correlation.</span></span></summary>
        <value><span data-ttu-id="0358d-146">Raccolta basata su dizionario che contiene le chiavi <see cref="T:System.Xml.XmlQualifiedName" /> e i valori <see cref="T:System.String" /> associati.</span><span class="sxs-lookup"><span data-stu-id="0358d-146">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-147">Le informazioni di contesto vengono utilizzate per la comunicazione tra il client e il servizio con cui sta comunicando e includono elementi come l'identificazione per la correlazione.</span><span class="sxs-lookup"><span data-stu-id="0358d-147">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-148">Nell'esempio seguente viene illustrato come accedere alla proprietà `Context`.</span><span class="sxs-lookup"><span data-stu-id="0358d-148">The following example shows how to access the `Context` property.</span></span> <span data-ttu-id="0358d-149">Questo esempio è stato adattato dall'esempio SDK `CalculatorClient`.</span><span class="sxs-lookup"><span data-stu-id="0358d-149">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#8](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAddress">
      <MemberSignature Language="C#" Value="public string CustomAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomAddress" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.CustomAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0358d-150">Ottiene o imposta l'indirizzo personalizzato utilizzato per comunicare con un servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-150">Gets or sets the custom address used to communicate with a service.</span></span></summary>
        <value><span data-ttu-id="0358d-151">Valore della stringa il cui valore è l'indirizzo sul quale un servizio è in ascolto.</span><span class="sxs-lookup"><span data-stu-id="0358d-151">String value whose value is the address a service is listening on.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-152">Se presente, questo valore viene utilizzato per definire l'indirizzo endpoint per l'operazione.</span><span class="sxs-lookup"><span data-stu-id="0358d-152">If present, this value is used to define the endpoint address for the operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-153">Nell'esempio seguente viene illustrato come accedere alla proprietà `CustomAddress`.</span><span class="sxs-lookup"><span data-stu-id="0358d-153">The following example shows how to access the `CustomAddress` property.</span></span> <span data-ttu-id="0358d-154">Questo esempio è stato adattato dall'esempio SDK `CalculatorClient`.</span><span class="sxs-lookup"><span data-stu-id="0358d-154">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#9](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAddressProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.CustomAddressProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomAddressProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CustomAddressProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0358d-155">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> per la proprietà <see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" />.</span><span class="sxs-lookup"><span data-stu-id="0358d-155">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> for the <see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-156">Se presente, questo valore viene utilizzato per definire l'indirizzo endpoint per l'operazione.</span><span class="sxs-lookup"><span data-stu-id="0358d-156">If present, this value is used to define the endpoint address for the operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0358d-157">Restituisce un dizionario che contiene il contesto utilizzato per la comunicazione tra il client e il servizio con cui sta comunicando, inclusi elementi come l'identificazione per la correlazione.</span><span class="sxs-lookup"><span data-stu-id="0358d-157">Returns a dictionary that contains the context used for communication between the client and the service it is communicating with, including such things as identification for correlation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-158">Le informazioni di contesto vengono utilizzate per la comunicazione tra il client e il servizio con cui sta comunicando e includono elementi come l'identificazione per la correlazione.</span><span class="sxs-lookup"><span data-stu-id="0358d-158">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ChannelToken endpoint, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ChannelToken ^ endpoint, Type ^ contractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpoint" Type="System.Workflow.Activities.ChannelToken" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="0358d-159">Attività le cui informazioni di contesto sono richieste.</span><span class="sxs-lookup"><span data-stu-id="0358d-159">Activity whose context information is required.</span></span></param>
        <param name="endpoint"><span data-ttu-id="0358d-160">Informazioni dell'endpoint per la correlazione con un servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-160">Endpoint information for correlation with a service.</span></span></param>
        <param name="contractType"><span data-ttu-id="0358d-161">La classe <see cref="T:System.Type" /> del contratto implementato da un servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-161">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <summary><span data-ttu-id="0358d-162">Ottiene o imposta le informazioni di contesto per un'operazione di trasmissione.</span><span class="sxs-lookup"><span data-stu-id="0358d-162">Gets or sets the context information for a send operation.</span></span></summary>
        <returns><span data-ttu-id="0358d-163">Raccolta basata su dizionario che contiene le chiavi <see cref="T:System.Xml.XmlQualifiedName" /> e i valori <see cref="T:System.String" /> associati.</span><span class="sxs-lookup"><span data-stu-id="0358d-163">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-164">Le informazioni di contesto vengono utilizzate per la comunicazione tra il client e il servizio con cui sta comunicando e includono elementi come l'identificazione per la correlazione.</span><span class="sxs-lookup"><span data-stu-id="0358d-164">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-165">Nell'esempio seguente viene illustrato come utilizzare il metodo `GetContext`.</span><span class="sxs-lookup"><span data-stu-id="0358d-165">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#12](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ endpointName, System::String ^ ownerActivityName, Type ^ contractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="0358d-166">Attività le cui informazioni di contesto sono richieste.</span><span class="sxs-lookup"><span data-stu-id="0358d-166">Activity whose context information is required.</span></span></param>
        <param name="endpointName"><span data-ttu-id="0358d-167">Nome dell'endpoint utilizzato per la correlazione con un servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-167">Name of the endpoint used for correlation with a service.</span></span></param>
        <param name="ownerActivityName"><span data-ttu-id="0358d-168">Nome dell’attività proprietaria.</span><span class="sxs-lookup"><span data-stu-id="0358d-168">The name of the owning activity.</span></span></param>
        <param name="contractType"><span data-ttu-id="0358d-169">La classe <see cref="T:System.Type" /> del contratto implementato da un servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-169">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <summary><span data-ttu-id="0358d-170">Metodo statico che restituisce le informazioni di contesto, dati un'istanza di attività, il nome di un endpoint utilizzato da quell'attività, il nome dell'attività del proprietario e un oggetto di <see cref="T:System.Type" /> che rappresenta il tipo del contratto.</span><span class="sxs-lookup"><span data-stu-id="0358d-170">Static method that returns context information given an activity instance, an endpoint name used by that activity, the name of the owner activity, and a <see cref="T:System.Type" /> object that represents the type of the contract.</span></span></summary>
        <returns><span data-ttu-id="0358d-171">Raccolta basata su dizionario che contiene le chiavi <see cref="T:System.Xml.XmlQualifiedName" /> e i valori <see cref="T:System.String" /> associati.</span><span class="sxs-lookup"><span data-stu-id="0358d-171">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-172">Le informazioni di contesto vengono utilizzate per la comunicazione tra il client e il servizio con cui sta comunicando e includono elementi come l'identificazione per la correlazione.</span><span class="sxs-lookup"><span data-stu-id="0358d-172">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-173">Nell'esempio seguente viene illustrato come utilizzare il metodo `GetContext`.</span><span class="sxs-lookup"><span data-stu-id="0358d-173">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0358d-174">Ottiene la raccolta di parametri associabili come disponibile nell'elenco di parametri formali del servizio [!INCLUDE[indigo1](~/includes/indigo1-md.md)].</span><span class="sxs-lookup"><span data-stu-id="0358d-174">Gets the collection of bindable parameters as found in the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service's formal parameter list.</span></span></summary>
        <value><span data-ttu-id="0358d-175">Oggetto <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> dei parametri associabili.</span><span class="sxs-lookup"><span data-stu-id="0358d-175">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-176">È possibile utilizzare <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> per specificare le associazioni tra i parametri dell'operazione del servizio e le proprietà e i campi pubblici del flusso di lavoro che contiene l'attività di <xref:System.Workflow.Activities.SendActivity>.</span><span class="sxs-lookup"><span data-stu-id="0358d-176"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> can be used to specify bindings between the service operation parameters and public field and properties of the workflow that contains the <xref:System.Workflow.Activities.SendActivity> activity.</span></span> <span data-ttu-id="0358d-177">Quando l'attività di <xref:System.Workflow.Activities.SendActivity> viene eseguita, i valori del parametro corrispondenti vengono letti dalle proprietà del flusso di lavoro a cui sono associati e inviati al servizio come parametri dell'operazione del servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-177">When the <xref:System.Workflow.Activities.SendActivity> activity executes, the corresponding parameter values are read from the workflow properties they are bound to and are sent to the service as service operation parameters.</span></span>  
  
 <span data-ttu-id="0358d-178">È inoltre possibile utilizzare <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> per recuperare i valori restituiti da un'operazione del servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-178"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> can also be used to retrieve the return values from a service operation.</span></span>  
  
 <span data-ttu-id="0358d-179">Tutti i parametri dell'operazione del servizio devono essere associati.</span><span class="sxs-lookup"><span data-stu-id="0358d-179">All parameters of the service operation should be bound.</span></span> <span data-ttu-id="0358d-180">I parametri dell'operazione del servizio non associati producono avvisi del compilatore e i valori predefiniti del parametro vengono inviati quando viene richiamata l'attività <xref:System.Workflow.Activities.SendActivity>.</span><span class="sxs-lookup"><span data-stu-id="0358d-180">Unbound service operation parameters produce compiler warnings and the default values of the parameter are sent when the <xref:System.Workflow.Activities.SendActivity> is invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-181">Nell'esempio seguente viene illustrato come accedere alla proprietà `ParameterBindings`.</span><span class="sxs-lookup"><span data-stu-id="0358d-181">The following example shows how to access the `ParameterBindings` property.</span></span> <span data-ttu-id="0358d-182">Questo esempio è stato adattato dall'esempio SDK `Conversations`.</span><span class="sxs-lookup"><span data-stu-id="0358d-182">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#0](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValuePropertyName">
      <MemberSignature Language="C#" Value="public const string ReturnValuePropertyName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ReturnValuePropertyName" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.ReturnValuePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Const ReturnValuePropertyName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ReturnValuePropertyName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0358d-183">Nome della proprietà utilizzata per il valore restituito inviato dal servizio con cui l'attività <see langword="SendActivity" /> sta comunicando.</span><span class="sxs-lookup"><span data-stu-id="0358d-183">Name of the property that is used for the return value sent by the service that the <see langword="SendActivity" /> activity is communicating with.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-184">Questa stringa può essere utilizzata per recuperare il valore restituito dalla proprietà <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> associata all'attività di <xref:System.Workflow.Activities.SendActivity> nel gestore eventi di <xref:System.Workflow.Activities.SendActivity.AfterResponse>.</span><span class="sxs-lookup"><span data-stu-id="0358d-184">This string can be used to retrieve the return value from the <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> associated with the <xref:System.Workflow.Activities.SendActivity> activity in the <xref:System.Workflow.Activities.SendActivity.AfterResponse> event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-185">Nell'esempio seguente viene illustrato come accedere al campo `ReturnValuePropertyName`.</span><span class="sxs-lookup"><span data-stu-id="0358d-185">The following example shows how to access the `ReturnValuePropertyName` field.</span></span>  
  
 [!code-csharp[SendActivity#6](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceOperationInfo">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ServiceOperationInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceOperationInfo As TypedOperationInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::TypedOperationInfo ^ ServiceOperationInfo { System::Workflow::Activities::TypedOperationInfo ^ get(); void set(System::Workflow::Activities::TypedOperationInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.TypedOperationInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0358d-186">Definisce il contratto e l'operazione del servizio con cui comunica l'attività <see langword="SendActivity" />.</span><span class="sxs-lookup"><span data-stu-id="0358d-186">Defines the contract and operation of the service that the <see langword="SendActivity" /> activity communicates with.</span></span></summary>
        <value><span data-ttu-id="0358d-187">Oggetto <see cref="T:System.Workflow.Activities.TypedOperationInfo" /> che contiene il nome del contratto, il tipo di contratto, il nome dell'operazione (che può essere diverso dal nome effettivo del metodo), il tipo di operazione, ovvero unidirezionale o meno, nonché informazioni sul metodo, inclusi i parametri relativi all'operazione.</span><span class="sxs-lookup"><span data-stu-id="0358d-187">A <see cref="T:System.Workflow.Activities.TypedOperationInfo" /> object that contains the contract name, the contract type, the operation name, (which may be distinct from the actual method name), whether the operation is a one-way operation, and method information including parameters about the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-188">L'attività <xref:System.Workflow.Activities.SendActivity> fa sempre riferimento a un contratto esistente e alle operazioni definite.</span><span class="sxs-lookup"><span data-stu-id="0358d-188">The <xref:System.Workflow.Activities.SendActivity> activity always refers to an existing contract and its defined operations.</span></span> <span data-ttu-id="0358d-189">Non esiste alcun provisioning che consente a un'attività <xref:System.Workflow.Activities.SendActivity> di definire un contratto.</span><span class="sxs-lookup"><span data-stu-id="0358d-189">There is no provision that allows a <xref:System.Workflow.Activities.SendActivity> activity to define a contract itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-190">Nell'esempio seguente viene illustrato come accedere alla proprietà `ServiceOperationInfo`.</span><span class="sxs-lookup"><span data-stu-id="0358d-190">The following example shows how to access the `ServiceOperationInfo` property.</span></span> <span data-ttu-id="0358d-191">Questo esempio è stato adattato dall'esempio SDK `Conversations`.</span><span class="sxs-lookup"><span data-stu-id="0358d-191">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0358d-192">Imposta informazioni di contesto per un'attività di <see cref="T:System.Workflow.Activities.SendActivity" />.</span><span class="sxs-lookup"><span data-stu-id="0358d-192">Sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-193">Le informazioni di contesto vengono utilizzate per la comunicazione tra il client e il servizio con cui sta comunicando e includono elementi come l'identificazione per la correlazione.</span><span class="sxs-lookup"><span data-stu-id="0358d-193">Context information is used for communication between the client and the service it is communicating and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public static void SetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ChannelToken endpoint, class System.Type contractType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ChannelToken ^ endpoint, Type ^ contractType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpoint" Type="System.Workflow.Activities.ChannelToken" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="0358d-194">L'istanza dell'attività con cui associare le informazioni di contesto.</span><span class="sxs-lookup"><span data-stu-id="0358d-194">The Activity instance to associate the context information with.</span></span></param>
        <param name="endpoint"><span data-ttu-id="0358d-195">Endpoint utilizzato per la correlazione con un servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-195">The endpoint used for correlation with a service.</span></span></param>
        <param name="contractType"><span data-ttu-id="0358d-196">La classe <see cref="T:System.Type" /> del contratto implementato da un servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-196">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <param name="context"><span data-ttu-id="0358d-197">Informazioni di contesto da impostare.</span><span class="sxs-lookup"><span data-stu-id="0358d-197">The context information to set.</span></span></param>
        <summary><span data-ttu-id="0358d-198">Metodo statico che imposta le informazioni di contesto per un'attività <see cref="T:System.Workflow.Activities.SendActivity" />, dati un'istanza di attività, un endpoint utilizzato da tale attività, un oggetto <see cref="T:System.Type" /> che rappresenta il tipo del contratto e le informazioni di contesto.</span><span class="sxs-lookup"><span data-stu-id="0358d-198">A static method that sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity, given an activity instance, an endpoint used by that activity, a <see cref="T:System.Type" /> object that represents the type of the contract, and the context information itself.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0358d-199">Le informazioni di contesto vengono utilizzate per la comunicazione tra il client e il servizio con cui sta comunicando e includono elementi come l'identificazione per la correlazione.</span><span class="sxs-lookup"><span data-stu-id="0358d-199">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0358d-200">Nell'esempio seguente viene illustrato come utilizzare il metodo `SetContext`.</span><span class="sxs-lookup"><span data-stu-id="0358d-200">The following example shows how to use the `SetContext` method.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public static void SetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContext(class System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, class System.Type contractType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ endpointName, System::String ^ ownerActivityName, Type ^ contractType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="0358d-201">L'istanza dell'attività con cui associare le informazioni di contesto.</span><span class="sxs-lookup"><span data-stu-id="0358d-201">The Activity instance to associate the context information with.</span></span></param>
        <param name="endpointName"><span data-ttu-id="0358d-202">Nome di un endpoint utilizzato per la correlazione con un servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-202">The name of an endpoint used for correlation with a service.</span></span></param>
        <param name="ownerActivityName"><span data-ttu-id="0358d-203">Nome dell’attività proprietaria.</span><span class="sxs-lookup"><span data-stu-id="0358d-203">The name of the owning activity</span></span></param>
        <param name="contractType"><span data-ttu-id="0358d-204">La classe <see cref="T:System.Type" /> del contratto implementato da un servizio.</span><span class="sxs-lookup"><span data-stu-id="0358d-204">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <param name="context"><span data-ttu-id="0358d-205">Informazioni di contesto da impostare.</span><span class="sxs-lookup"><span data-stu-id="0358d-205">The context information to set.</span></span></param>
        <summary><span data-ttu-id="0358d-206">Metodo statico che imposta le informazioni di contesto per un'attività <see cref="T:System.Workflow.Activities.SendActivity" />, dati un'istanza di attività, un nome di endpoint utilizzato da tale attività, il nome dell'attività del proprietario, un oggetto <see cref="T:System.Type" /> che rappresenta il tipo del contratto e le informazioni di contesto.</span><span class="sxs-lookup"><span data-stu-id="0358d-206">A static method that sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity, given an activity instance, an endpoint name used by that activity, the name of the owner activity, a <see cref="T:System.Type" /> object that represents the type of the contract, and the context information itself.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0358d-207">Nell'esempio seguente viene illustrato come utilizzare il metodo `SetContext`.</span><span class="sxs-lookup"><span data-stu-id="0358d-207">The following example shows how to use the `SetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>