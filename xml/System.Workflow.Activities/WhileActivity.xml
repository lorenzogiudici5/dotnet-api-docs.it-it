<Type Name="WhileActivity" FullName="System.Workflow.Activities.WhileActivity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a175d5dd62bedc53edca941f9b65d5db05c885a3" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48671079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WhileActivity : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WhileActivity extends System.Workflow.ComponentModel.CompositeActivity implements class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.WhileActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WhileActivity&#xA;Inherits CompositeActivity&#xA;Implements IActivityEventListener(Of ActivityExecutionStatusChangedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public ref class WhileActivity sealed : System::Workflow::ComponentModel::CompositeActivity, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt;" />
  <TypeSignature Language="F#" Value="type WhileActivity = class&#xA;    inherit CompositeActivity&#xA;    interface IActivityEventListener&lt;ActivityExecutionStatusChangedEventArgs&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.CompositeActivity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.WhileDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.WhileActivity), "Resources.While.png")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.WhileValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fd7ab-101">Esegue un'attività figlio in modo interattivo finché una certa condizione è vera.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fd7ab-101">Runs a child activity iteratively as long as a certain condition is true.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="fd7ab-102">L’attività <xref:System.Workflow.Activities.WhileActivity> è un’attività <xref:System.Workflow.ComponentModel.CompositeActivity>, ovvero <xref:System.Workflow.Activities.WhileActivity> può contenere altre attività.</span><span class="sxs-lookup"><span data-stu-id="fd7ab-102">The <xref:System.Workflow.Activities.WhileActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the <xref:System.Workflow.Activities.WhileActivity> can contain other activities.</span></span>  
  
 <span data-ttu-id="fd7ab-103">Prima di ciascuna iterazione, la proprietà <xref:System.Workflow.Activities.WhileActivity.Condition%2A> viene valutata.</span><span class="sxs-lookup"><span data-stu-id="fd7ab-103">Before each iteration, the <xref:System.Workflow.Activities.WhileActivity.Condition%2A> property is evaluated.</span></span> <span data-ttu-id="fd7ab-104">Se la proprietà <xref:System.Workflow.Activities.WhileActivity.Condition%2A> viene valutata `false`, <xref:System.Workflow.Activities.WhileActivity> termina immediatamente.</span><span class="sxs-lookup"><span data-stu-id="fd7ab-104">If the <xref:System.Workflow.Activities.WhileActivity.Condition%2A> property evaluates to `false`, the <xref:System.Workflow.Activities.WhileActivity> immediately finishes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd7ab-105">Nel seguente esempio di codice viene dimostrato come creare una nuova istanza della classe <xref:System.Workflow.Activities.WhileActivity> e aggiungere la classe <xref:System.Workflow.Activities.ParallelActivity> alla classe <xref:System.Workflow.Activities.WhileActivity>.</span><span class="sxs-lookup"><span data-stu-id="fd7ab-105">The following code example demonstrates how to create a new instance of the <xref:System.Workflow.Activities.WhileActivity> class and add the <xref:System.Workflow.Activities.ParallelActivity> class to the <xref:System.Workflow.Activities.WhileActivity> class.</span></span>  <span data-ttu-id="fd7ab-106">Questo esempio di codice è parte dell'esempio SDK WhileAndParallel nel file WhileAndParallelWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="fd7ab-106">This code example is part of the WhileAndParallel SDK Sample from the WhileAndParallelWorkflow.Designer.cs file.</span></span> <span data-ttu-id="fd7ab-107">Per altre informazioni, vedere [usando mentre e parallelo](http://msdn.microsoft.com/library/776a25cc-6aed-4754-b680-996213831b84).</span><span class="sxs-lookup"><span data-stu-id="fd7ab-107">For more information, see [Using While and Parallel](http://msdn.microsoft.com/library/776a25cc-6aed-4754-b680-996213831b84).</span></span>  
  
 [!code-csharp[wf_samples#275](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#275)]
 [!code-vb[wf_samples#275](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#275)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms735819(v=vs.90)">
      <span data-ttu-id="fd7ab-108">Utilizzo dell'attività While</span>
      <span class="sxs-lookup">
        <span data-stu-id="fd7ab-108">Using the While Activity</span>
      </span>
    </related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734614(v=vs.90)">
      <span data-ttu-id="fd7ab-109">Utilizzo di condizioni nei flussi di lavoro</span>
      <span class="sxs-lookup">
        <span data-stu-id="fd7ab-109">Using Conditions in Workflows</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fd7ab-110">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.WhileActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-110">Initializes a new instance of the <see cref="T:System.Workflow.Activities.WhileActivity" /> class.</span>
          </span>
        </summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms735819(v=vs.90)">
          <span data-ttu-id="fd7ab-111">Utilizzo dell'attività While</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-111">Using the While Activity</span>
          </span>
        </related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734614(v=vs.90)">
          <span data-ttu-id="fd7ab-112">Utilizzo di condizioni nei flussi di lavoro</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-112">Using Conditions in Workflows</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WhileActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.WhileActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WhileActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fd7ab-113">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.WhileActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-113">Initializes a new instance of the <see cref="T:System.Workflow.Activities.WhileActivity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fd7ab-114">Nel seguente esempio di codice viene dimostrato come creare una nuova istanza della classe <xref:System.Workflow.Activities.WhileActivity> e aggiungere la classe <xref:System.Workflow.Activities.ParallelActivity> alla classe <xref:System.Workflow.Activities.WhileActivity>.</span><span class="sxs-lookup"><span data-stu-id="fd7ab-114">The following code example demonstrates how to create a new instance of the <xref:System.Workflow.Activities.WhileActivity> class and add the <xref:System.Workflow.Activities.ParallelActivity> class to the <xref:System.Workflow.Activities.WhileActivity> class.</span></span>  <span data-ttu-id="fd7ab-115">Questo esempio di codice è parte dell'esempio SDK WhileAndParallel nel file WhileAndParallelWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="fd7ab-115">This code example is part of the WhileAndParallel SDK Sample from the WhileAndParallelWorkflow.Designer.cs file.</span></span> <span data-ttu-id="fd7ab-116">Per altre informazioni, vedere [usando mentre e parallelo](http://msdn.microsoft.com/library/776a25cc-6aed-4754-b680-996213831b84).</span><span class="sxs-lookup"><span data-stu-id="fd7ab-116">For more information, see [Using While and Parallel](http://msdn.microsoft.com/library/776a25cc-6aed-4754-b680-996213831b84).</span></span>  
  
 [!code-csharp[wf_samples#275](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#275)]
 [!code-vb[wf_samples#275](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#275)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms735819(v=vs.90)">
          <span data-ttu-id="fd7ab-117">Utilizzo dell'attività While</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-117">Using the While Activity</span>
          </span>
        </related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734614(v=vs.90)">
          <span data-ttu-id="fd7ab-118">Utilizzo di condizioni nei flussi di lavoro</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-118">Using Conditions in Workflows</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WhileActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.WhileActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WhileActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.WhileActivity : string -&gt; System.Workflow.Activities.WhileActivity" Usage="new System.Workflow.Activities.WhileActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fd7ab-119">Nome dell'attività definito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-119">The user-defined name of the activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd7ab-120">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.WhileActivity" /> mediante il nome dell'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-120">Initializes a new instance of the <see cref="T:System.Workflow.Activities.WhileActivity" /> class using the name of the activity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms735819(v=vs.90)">
          <span data-ttu-id="fd7ab-121">Utilizzo dell'attività While</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-121">Using the While Activity</span>
          </span>
        </related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734614(v=vs.90)">
          <span data-ttu-id="fd7ab-122">Utilizzo di condizioni nei flussi di lavoro</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-122">Using Conditions in Workflows</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.WhileActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Cancel : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="whileActivity.Cancel executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.ActivityCondition Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.ActivityCondition Condition" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.WhileActivity.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Property Condition As ActivityCondition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::ActivityCondition ^ Condition { System::Workflow::ComponentModel::ActivityCondition ^ get(); void set(System::Workflow::ComponentModel::ActivityCondition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Condition : System.Workflow.ComponentModel.ActivityCondition with get, set" Usage="System.Workflow.Activities.WhileActivity.Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityCondition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd7ab-123">Ottiene o imposta una condizione che determina se <see cref="T:System.Workflow.Activities.WhileActivity" /> deve essere eseguita o terminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-123">Gets or sets a condition that determines whether the <see cref="T:System.Workflow.Activities.WhileActivity" /> should run or finish.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd7ab-124">Quando la proprietà <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> viene valutata <see langword="true" />, <see cref="T:System.Workflow.Activities.WhileActivity" /> prosegue l'esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-124">When the <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> property evaluates to <see langword="true" />, the <see cref="T:System.Workflow.Activities.WhileActivity" /> continues to run.</span>
          </span>
          <span data-ttu-id="fd7ab-125">Quando la proprietà <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> viene valutata <see langword="false" />, <see cref="T:System.Workflow.Activities.WhileActivity" /> termina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-125">When the <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> evaluates to <see langword="false" />, the <see cref="T:System.Workflow.Activities.WhileActivity" /> finishes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7ab-126">Nel seguente esempio di codice viene dimostrato come creare una nuova istanza della classe <xref:System.Workflow.Activities.WhileActivity>, aggiungere la classe <xref:System.Workflow.Activities.ParallelActivity> alla classe <xref:System.Workflow.Activities.WhileActivity> e impostare la proprietà <xref:System.Workflow.Activities.WhileActivity.Condition%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd7ab-126">The following code example demonstrates how to create a new instance of the <xref:System.Workflow.Activities.WhileActivity> class, add the <xref:System.Workflow.Activities.ParallelActivity> class to the <xref:System.Workflow.Activities.WhileActivity> class, and set the <xref:System.Workflow.Activities.WhileActivity.Condition%2A> property.</span></span> <span data-ttu-id="fd7ab-127">Questo esempio di codice è parte dell'esempio SDK WhileAndParallel nel file WhileAndParallelWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="fd7ab-127">This code example is part of the WhileAndParallel SDK Sample from the WhileAndParallelWorkflow.Designer.cs file.</span></span> <span data-ttu-id="fd7ab-128">Per altre informazioni, vedere [usando mentre e parallelo](http://msdn.microsoft.com/library/776a25cc-6aed-4754-b680-996213831b84).</span><span class="sxs-lookup"><span data-stu-id="fd7ab-128">For more information, see [Using While and Parallel](http://msdn.microsoft.com/library/776a25cc-6aed-4754-b680-996213831b84).</span></span>  
  
 [!code-csharp[wf_samples#275](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#275)]
 [!code-vb[wf_samples#275](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#275)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms735819(v=vs.90)">
          <span data-ttu-id="fd7ab-129">Utilizzo dell'attività While</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-129">Using the While Activity</span>
          </span>
        </related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734614(v=vs.90)">
          <span data-ttu-id="fd7ab-130">Utilizzo di condizioni nei flussi di lavoro</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-130">Using Conditions in Workflows</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ConditionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ConditionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.WhileActivity.ConditionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConditionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ConditionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConditionProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.WhileActivity.ConditionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd7ab-131">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che fa riferimento alla proprietà <see cref="P:System.Workflow.Activities.WhileActivity.Condition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-131">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.WhileActivity.Condition" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms735819(v=vs.90)">
          <span data-ttu-id="fd7ab-132">Utilizzo dell'attività While</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-132">Using the While Activity</span>
          </span>
        </related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734614(v=vs.90)">
          <span data-ttu-id="fd7ab-133">Utilizzo di condizioni nei flussi di lavoro</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-133">Using Conditions in Workflows</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DynamicActivity">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity DynamicActivity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity DynamicActivity" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.WhileActivity.DynamicActivity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicActivity As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Activity ^ DynamicActivity { System::Workflow::ComponentModel::Activity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicActivity : System.Workflow.ComponentModel.Activity" Usage="System.Workflow.Activities.WhileActivity.DynamicActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd7ab-134">Ottiene le attività figlio dinamiche in <see cref="T:System.Workflow.Activities.WhileActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-134">Gets the dynamic child activities in the <see cref="T:System.Workflow.Activities.WhileActivity" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd7ab-135">Le attività figlio dinamiche in <see cref="T:System.Workflow.Activities.WhileActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-135">The dynamic child activities in the <see cref="T:System.Workflow.Activities.WhileActivity" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms735819(v=vs.90)">
          <span data-ttu-id="fd7ab-136">Utilizzo dell'attività While</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-136">Using the While Activity</span>
          </span>
        </related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734614(v=vs.90)">
          <span data-ttu-id="fd7ab-137">Utilizzo di condizioni nei flussi di lavoro</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-137">Using Conditions in Workflows</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.WhileActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="whileActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;.OnEvent">
      <MemberSignature Language="C#" Value="void IActivityEventListener&lt;ActivityExecutionStatusChangedEventArgs&gt;.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;.OnEvent(object sender, class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.WhileActivity.System#Workflow#ComponentModel#IActivityEventListener&lt;System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs&gt;#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnEvent (sender As Object, e As ActivityExecutionStatusChangedEventArgs) Implements IActivityEventListener(Of ActivityExecutionStatusChangedEventArgs).OnEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;.OnEvent(System::Object ^ sender, System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^ e) = System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt;::OnEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="fd7ab-138">Oggetto che ha generato l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-138">The object that raised the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="fd7ab-139">Gli argomenti dell'evento tipizzati in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-139">The previously typed event arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd7ab-140">Definisce la procedura di elaborazione quando si verifica l'evento di sottoscrizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd7ab-140">Defines the processing procedure when the subscribed-to event occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>