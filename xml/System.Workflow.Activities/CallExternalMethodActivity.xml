<Type Name="CallExternalMethodActivity" FullName="System.Workflow.Activities.CallExternalMethodActivity">
  <TypeSignature Language="C#" Value="public class CallExternalMethodActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallExternalMethodActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.CallExternalMethodActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class CallExternalMethodActivity&#xA;Inherits Activity&#xA;Implements IDynamicPropertyTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallExternalMethodActivity : System::Workflow::ComponentModel::Activity, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MethodInvoking")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.CallExternalMethodActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CallExternalMethodActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b89f7-101">Definisce un'attività della comunicazione del flusso di lavoro utilizzata per chiamare un metodo in un servizio locale.</span><span class="sxs-lookup"><span data-stu-id="b89f7-101">Defines a workflow communication activity that is used to call a method on a local service.</span></span> <span data-ttu-id="b89f7-102">Questa attività viene utilizzata per inviare dati dal flusso di lavoro all'host tramite il servizio locale.</span><span class="sxs-lookup"><span data-stu-id="b89f7-102">This activity is used to send data from the workflow to the host through the local service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="b89f7-103">Un servizio locale è una classe che implementa un'interfaccia di servizio locale (un'interfaccia contrassegnata con <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) e che viene aggiunta a <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span><span class="sxs-lookup"><span data-stu-id="b89f7-103">A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b89f7-104">Quando viene chiamato il metodo esterno, tutti i parametri del metodo vengono duplicati.</span><span class="sxs-lookup"><span data-stu-id="b89f7-104">When the external method is called all parameters of the method are cloned.</span></span> <span data-ttu-id="b89f7-105">Se i tipi di parametro implementano <xref:System.ICloneable>, viene chiamato il metodo `Clone` oppure ne viene effettuata la serializzazione e la deserializzazione con un oggetto <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span><span class="sxs-lookup"><span data-stu-id="b89f7-105">If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b89f7-106">Nell'esempio di codice seguente è illustrato l'utilizzo di <xref:System.Workflow.Activities.CallExternalMethodActivity> in un'attività personalizzata per chiamare un metodo esterno.</span><span class="sxs-lookup"><span data-stu-id="b89f7-106">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity> in a custom activity to call an external method.</span></span> <span data-ttu-id="b89f7-107">Questo esempio di codice è parte dell'esempio SDK Listen nel file PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="b89f7-107">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="b89f7-108">Per ulteriori informazioni, vedere [ascolto esempio](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="b89f7-108">For more information, see [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#213](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#213)]
 [!code-vb[wf_samples#213](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#213)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b89f7-109">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-109">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b89f7-110">Nell'esempio seguente viene illustrato come creare un'istanza della classe `CallExternalMethodActivity`.</span><span class="sxs-lookup"><span data-stu-id="b89f7-110">The following example shows how to create an instance of the `CallExternalMethodActivity` class.</span></span>  <span data-ttu-id="b89f7-111">Questo esempio di codice fa parte dell'esempio SDK PersistenceHost nel file DocumentApprovalWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="b89f7-111">This example is from the PersistenceHost SDK sample, from the DocumentApprovalWorkflow.designer.cs file.</span></span> <span data-ttu-id="b89f7-112">Per altre informazioni, vedere [esempio di Host di persistenza](http://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251).</span><span class="sxs-lookup"><span data-stu-id="b89f7-112">For more information, see [Persistence Host Sample](http://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251).</span></span>  
  
 [!code-csharp[wf_samples#278](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#278)]
 [!code-vb[wf_samples#278](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#278)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b89f7-113">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-113">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b89f7-114">Nel codice di esempio riportato di seguito viene illustrato come inizializzare una nuova istanza di <xref:System.Workflow.Activities.CallExternalMethodActivity>.</span><span class="sxs-lookup"><span data-stu-id="b89f7-114">The following code example shows how initialize a new instance of the <xref:System.Workflow.Activities.CallExternalMethodActivity>.</span></span> <span data-ttu-id="b89f7-115">Il codice inizializza anche nuove istanze delle classi <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> e <xref:System.Workflow.Activities.CodeActivity>.</span><span class="sxs-lookup"><span data-stu-id="b89f7-115">The code also initializes new instances of the <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> and <xref:System.Workflow.Activities.CodeActivity> classes.</span></span> <span data-ttu-id="b89f7-116">Questo esempio di codice è parte dell'esempio SDK Listen nel file PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="b89f7-116">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="b89f7-117">Per ulteriori informazioni, vedere [ascolto esempio](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="b89f7-117">For more information, see [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#214](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#214)]
 [!code-vb[wf_samples#214](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#214)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b89f7-118">Nome definito dall'utente dell'attività, utilizzato per inizializzare la proprietà del nome dell'attività.</span><span class="sxs-lookup"><span data-stu-id="b89f7-118">The user-defined name of the activity, used to initialize the activity name property.</span></span></param>
        <summary><span data-ttu-id="b89f7-119">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> mediante il nome dell'attività.</span><span class="sxs-lookup"><span data-stu-id="b89f7-119">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class using the name of the activity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationToken">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.CorrelationToken CorrelationToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CorrelationToken As CorrelationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Workflow::Runtime::CorrelationToken ^ CorrelationToken { System::Workflow::Runtime::CorrelationToken ^ get(); void set(System::Workflow::Runtime::CorrelationToken ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.CorrelationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b89f7-120">Ottiene o imposta <see cref="T:System.Workflow.Runtime.CorrelationToken" /> per il metodo esterno.</span><span class="sxs-lookup"><span data-stu-id="b89f7-120">Gets or sets the <see cref="T:System.Workflow.Runtime.CorrelationToken" /> for the external method.</span></span></summary>
        <value><span data-ttu-id="b89f7-121">Il token di correlazione per il metodo esterno.</span><span class="sxs-lookup"><span data-stu-id="b89f7-121">The correlation token for the external method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b89f7-122">Questa proprietà definisce da quale attività <xref:System.Workflow.Activities.CallExternalMethodActivity> specifica proviene una determinata chiamata al metodo esterno.</span><span class="sxs-lookup"><span data-stu-id="b89f7-122">This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from.</span></span> <span data-ttu-id="b89f7-123">Questo valore può quindi essere utilizzato nel payload di un evento del servizio di comunicazione locale per indirizzare tale evento all'attività <xref:System.Workflow.Activities.HandleExternalEventActivity> corretta.</span><span class="sxs-lookup"><span data-stu-id="b89f7-123">This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.</span></span>  
  
 <span data-ttu-id="b89f7-124">Per un esempio di correlazione, vedere la [correlato di esempio di servizio locale](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="b89f7-124">For an example of correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b89f7-125">Nell'esempio seguente viene illustrato come accedere alla proprietà `CorrelationToken` di un oggetto `CallExternalMethodActivity`.</span><span class="sxs-lookup"><span data-stu-id="b89f7-125">The following sample shows how to access the `CorrelationToken` property of a `CallExternalMethodActivity` object.</span></span> <span data-ttu-id="b89f7-126">Questo esempio è tratto dall'esempio dall'esempio SDK Correlated Local Service, nel file CorrelatedLocalServiceWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="b89f7-126">This sample is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="b89f7-127">Per ulteriori informazioni, vedere [correlato di esempio di servizio locale](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="b89f7-127">For more information, see [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[wf_samples#200](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#200)]
 [!code-vb[wf_samples#200](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#200)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationTokenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CorrelationTokenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CorrelationTokenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b89f7-128">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che fa riferimento alla proprietà <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-128">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="b89f7-129">La classe <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> che contiene l'ambiente di esecuzione nel quale eseguire <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-129">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that contains the execution environment in which to run the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span></span></param>
        <summary><span data-ttu-id="b89f7-130">Tenta di eseguire <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> con il <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="b89f7-130">Tries to run the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> with the specified <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span></span></summary>
        <returns><span data-ttu-id="b89f7-131">Uno dei valori di <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-131">One of the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b89f7-132"><see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="b89f7-132">This <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b89f7-133"><paramref name="executionContext" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="b89f7-133"><paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b89f7-134">L'oggetto di servizio per l'oggetto <paramref name="executionContext" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="b89f7-134">The service object for the <paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b89f7-135">Esegue l'inizializzazione nelle proprietà della dipendenza.</span><span class="sxs-lookup"><span data-stu-id="b89f7-135">Performs initialization on dependency properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b89f7-136">Questo metodo inizializza la proprietà <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A>, verifica che le proprietà <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> e <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> siano impostate e verifica che l'evento a cui viene fatto riferimento nella proprietà <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> possa essere trovato nell'interfaccia di riferimento nella proprietà <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>.</span><span class="sxs-lookup"><span data-stu-id="b89f7-136">This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public virtual Type InterfaceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ InterfaceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b89f7-137">Ottiene o imposta l'interfaccia di dichiarazione di un metodo esterno che dispone dell'oggetto <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-137">Gets or sets an external method's declaring interface that has the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></summary>
        <value><span data-ttu-id="b89f7-138">Interfaccia di dichiarazione del metodo esterno che dispone dell'oggetto <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-138">The external method's declaring interface that has the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b89f7-139">Nell'esempio di codice riportato di seguito viene illustrato come impostare la proprietà <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>.</span><span class="sxs-lookup"><span data-stu-id="b89f7-139">The following code example shows how to set the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.</span></span> <span data-ttu-id="b89f7-140">Il tipo di interfaccia deve essere attribuito tramite <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="b89f7-140">The interface type must be attributed with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span> <span data-ttu-id="b89f7-141">Questo esempio di codice è parte dell'esempio SDK Listen nel file PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="b89f7-141">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="b89f7-142">Per ulteriori informazioni, vedere [ascolto esempio](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="b89f7-142">For more information, see [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InterfaceTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InterfaceTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b89f7-143">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che fa riferimento alla proprietà <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-143">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b89f7-144">La proprietà <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> corrisponde al nome dell'interfaccia che è stata contrassegnata con l'oggetto <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="b89f7-144">The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInvoking">
      <MemberSignature Language="C#" Value="public event EventHandler MethodInvoking;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MethodInvoking" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MethodInvoking As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MethodInvoking;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b89f7-145">Si verifica prima di richiamare il metodo.</span><span class="sxs-lookup"><span data-stu-id="b89f7-145">Occurs before invoking the method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b89f7-146">Nell'esempio di codice riportato di seguito viene illustrato l'utilizzo dell'evento <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> per impostare la chiamata del metodo prima di richiamare il metodo esterno.</span><span class="sxs-lookup"><span data-stu-id="b89f7-146">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event to set the method to call before invoking the external method.</span></span> <span data-ttu-id="b89f7-147">Questo esempio di codice è parte dell'esempio SDK Listen nel file PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="b89f7-147">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="b89f7-148">Per ulteriori informazioni, vedere [ascolto esempio](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="b89f7-148">For more information, see [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInvokingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodInvokingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodInvokingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b89f7-149">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che fa riferimento all'evento <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-149">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b89f7-150">L'evento <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> definisce un delegato dell'evento che viene eseguito prima che l'attività richiami il metodo esterno nel servizio locale.</span><span class="sxs-lookup"><span data-stu-id="b89f7-150">The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public virtual string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b89f7-151">Ottiene o imposta il nome del metodo da chiamare nel servizio locale si registrato tramite <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-151">Gets or sets the name of the method to be called on the local service registered with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</span></span></summary>
        <value><span data-ttu-id="b89f7-152">Il nome del metodo dell'interfaccia <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-152">The method name of the <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b89f7-153">Nell'esempio di codice riportato di seguito viene illustrato come utilizzare la proprietà <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> per impostare il nome del metodo esterno.</span><span class="sxs-lookup"><span data-stu-id="b89f7-153">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property to set the method name of the external method.</span></span> <span data-ttu-id="b89f7-154">Questo esempio di codice è parte dell'esempio SDK Listen nel file PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="b89f7-154">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="b89f7-155">Per ulteriori informazioni, vedere [ascolto esempio](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="b89f7-155">For more information, see [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodNameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b89f7-156">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che fa riferimento alla proprietà <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-156">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b89f7-157">La proprietà <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> corrisponde al nome del metodo contenuto in un'interfaccia che è stata contrassegnata con l'oggetto <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="b89f7-157">The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoked">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoked (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoked(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoked (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoked(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b89f7-158">Una classe <see cref="T:System.EventArgs" /> che contiene i dati per l'evento <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-158">An <see cref="T:System.EventArgs" /> that contains the data for the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span></span></param>
        <summary><span data-ttu-id="b89f7-159">Fornisce un hook per consentire alle classi derivate i estrarre e restituire valori da <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-159">Provides a hook for derived classes to extract out and return values from the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span></span> <span data-ttu-id="b89f7-160">Questo metodo viene chiamato subito dopo l'esecuzione del metodo esterno.</span><span class="sxs-lookup"><span data-stu-id="b89f7-160">This method is called just after the external method is run.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b89f7-161">Nel codice seguente viene illustrata un'implementazione del metodo `OnMethodInvoked`.</span><span class="sxs-lookup"><span data-stu-id="b89f7-161">The following example shows an implementation of the `OnMethodInvoked` method.</span></span>  
  
 [!code-csharp[wf_samples#1](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#1)]
 [!code-vb[wf_samples#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoking">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoking (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoking(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoking (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoking(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b89f7-162">Una classe <see cref="T:System.EventArgs" /> che contiene i dati per l'evento <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-162">An <see cref="T:System.EventArgs" /> that contains the data for the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span></span></param>
        <summary><span data-ttu-id="b89f7-163">Fornisce un hook pr consentire alle classi derivate di impostare <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-163">Provides a hook for derived classes to set <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span></span> <span data-ttu-id="b89f7-164">Questo metodo viene chiamato subito prima dell'esecuzione del metodo esterno.</span><span class="sxs-lookup"><span data-stu-id="b89f7-164">This method is called just before the external method is run.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b89f7-165">Nell'esempio seguente viene illustrata un'implementazione del metodo `OnMethodInvoking`.</span><span class="sxs-lookup"><span data-stu-id="b89f7-165">The following example demonstrates an implementation of the `OnMethodInvoking` method.</span></span> <span data-ttu-id="b89f7-166">Questo esempio è tratto dall'esempio SDK Correlated Local Service, nel file CreateTask.cs.</span><span class="sxs-lookup"><span data-stu-id="b89f7-166">This example is from the Correlated Local Service SDK sample, from the CreateTask.cs file.</span></span> <span data-ttu-id="b89f7-167">Per ulteriori informazioni, vedere [correlato di esempio di servizio locale](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="b89f7-167">For more information, see [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[wf_samples#207](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#207)]
 [!code-vb[wf_samples#207](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#207)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b89f7-168">Ottiene la raccolta di parametri associabili come disponibile nell'elenco di parametri formali del metodo esterno.</span><span class="sxs-lookup"><span data-stu-id="b89f7-168">Gets the collection of bindable parameters as found in the external method's formal parameter list.</span></span></summary>
        <value><span data-ttu-id="b89f7-169">Oggetto <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> dei parametri associabili.</span><span class="sxs-lookup"><span data-stu-id="b89f7-169">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b89f7-170">Nell'esempio seguente viene illustrato come aggiungere l'associazione di un parametro alla raccolta di associazioni dei parametri.</span><span class="sxs-lookup"><span data-stu-id="b89f7-170">The following example shows how to add a parameter binding to the parameter bindings collection.</span></span> <span data-ttu-id="b89f7-171">Questo esempio di codice fa parte dell'esempio SDK Host Communication nel file VotingServiceWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="b89f7-171">This example is from the Host Communication SDK sample, from the VotingServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="b89f7-172">Per ulteriori informazioni, vedere [Host comunicazione esempio](http://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).</span><span class="sxs-lookup"><span data-stu-id="b89f7-172">For more information, see [Host Communication Sample](http://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).</span></span>  
  
 [!code-csharp[WF_Samples#301](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#301)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindingsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterBindingsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ParameterBindingsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b89f7-173">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che fa riferimento alla proprietà <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-173">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="b89f7-174">Oggetto che implementa <see cref="T:System.IServiceProvider" /> per fornire accesso ai servizi in fase di progettazione eventualmente necessari.</span><span class="sxs-lookup"><span data-stu-id="b89f7-174">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="b89f7-175">Nome della proprietà.</span><span class="sxs-lookup"><span data-stu-id="b89f7-175">The name of the property.</span></span></param>
        <summary><span data-ttu-id="b89f7-176">Restituisce il tipo di accesso per la proprietà specificata.</span><span class="sxs-lookup"><span data-stu-id="b89f7-176">Returns the access type for the specified property.</span></span></summary>
        <returns><span data-ttu-id="b89f7-177">Valore di enumerazione di <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> che indica il livello di accesso della proprietà.</span><span class="sxs-lookup"><span data-stu-id="b89f7-177">An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denotes the access level of the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b89f7-178">Questo oggetto viene utilizzato in fase di compilazione per convalidare la corretta associazione reciproca delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="b89f7-178">Used at compile time to validate whether the properties are correctly bound to one another.</span></span> <span data-ttu-id="b89f7-179">Senza questa interfaccia queste informazioni vengono derivate direttamente dai metodi di richiamo e impostazione delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="b89f7-179">Without this interface this information is inferred directly from property getter/setters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="b89f7-180">Oggetto che implementa <see cref="T:System.IServiceProvider" /> per fornire accesso ai servizi in fase di progettazione eventualmente necessari.</span><span class="sxs-lookup"><span data-stu-id="b89f7-180">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="b89f7-181">Nome della proprietà.</span><span class="sxs-lookup"><span data-stu-id="b89f7-181">The name of the property.</span></span></param>
        <summary><span data-ttu-id="b89f7-182">Restituisce l'oggetto <see cref="T:System.Type" /> della proprietà specificata.</span><span class="sxs-lookup"><span data-stu-id="b89f7-182">Returns the <see cref="T:System.Type" /> of the specified property.</span></span></summary>
        <returns><span data-ttu-id="b89f7-183">Oggetto <see cref="T:System.Type" /> della proprietà il cui nome è passato come parametro <paramref name="propertyName" />.</span><span class="sxs-lookup"><span data-stu-id="b89f7-183">The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b89f7-184">Questo oggetto viene utilizzato in fase di compilazione per convalidare la corretta associazione reciproca delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="b89f7-184">Used at compile time to validate whether the properties are correctly bound to one other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>