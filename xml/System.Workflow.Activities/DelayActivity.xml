<Type Name="DelayActivity" FullName="System.Workflow.Activities.DelayActivity">
  <TypeSignature Language="C#" Value="public sealed class DelayActivity : System.Workflow.ComponentModel.Activity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DelayActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.Activities.IEventActivity, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.DelayActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DelayActivity&#xA;Inherits Activity&#xA;Implements IActivityEventListener(Of QueueEventArgs), IEventActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class DelayActivity sealed : System::Workflow::ComponentModel::Activity, System::Workflow::Activities::IEventActivity, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Activities.IEventActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InitializeTimeoutDuration")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.DelayDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.DelayActivity), "Resources.Delay.png")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.DelayActivity/DelayActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="77c98-101">Fornisce la logica per stabilire un timer e attendere in modo asincrono la scadenza del timer.</span><span class="sxs-lookup"><span data-stu-id="77c98-101">Provides the logic to establish a timer and to wait, asynchronously, for timer's expiration.</span></span>  <span data-ttu-id="77c98-102">Questa classe non può essere ereditata.</span><span class="sxs-lookup"><span data-stu-id="77c98-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="77c98-103">Quando viene notificato che il timer è scaduto, l'esecuzione di <xref:System.Workflow.Activities.DelayActivity> è completata.</span><span class="sxs-lookup"><span data-stu-id="77c98-103">When notified that its timer has expired, a <xref:System.Workflow.Activities.DelayActivity> completes its execution.</span></span>  
  
 <span data-ttu-id="77c98-104">È possibile impostare un timeout su <xref:System.Workflow.Activities.DelayActivity> in modo che il flusso di lavoro venga sospeso prima di riprendere esecuzione.</span><span class="sxs-lookup"><span data-stu-id="77c98-104">You can set a time out on the <xref:System.Workflow.Activities.DelayActivity> so that your workflow pauses before resuming execution.</span></span> <span data-ttu-id="77c98-105">Specificare <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> utilizzando <xref:System.TimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="77c98-105">You specify the <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> using <xref:System.TimeSpan>.</span></span> <span data-ttu-id="77c98-106">Questo fa in modo che il flusso di lavoro venga sospeso finché non è trascorso il <xref:System.TimeSpan> specificato.</span><span class="sxs-lookup"><span data-stu-id="77c98-106">This causes your workflow to pause until the specified <xref:System.TimeSpan> has elapsed.</span></span>  
  
 <span data-ttu-id="77c98-107">La classe <xref:System.Workflow.Activities.DelayActivity> esegue il metodo del codice associato all'evento <xref:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration> prima che l'attività inizi e il metodo code-beside può essere utilizzato per inizializzare la proprietà <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c98-107">The <xref:System.Workflow.Activities.DelayActivity> class runs the code method associated with the <xref:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration> event before the activity starts and the code-beside method can be used to initialize the <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> property.</span></span>  
  
 <span data-ttu-id="77c98-108">È garantito che il completamento di <xref:System.Workflow.Activities.DelayActivity> non avvenga prima della durata indicata in <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c98-108">The <xref:System.Workflow.Activities.DelayActivity> is guaranteed to complete no sooner than the indicated <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A>.</span></span> <span data-ttu-id="77c98-109">Il ritardo può richiedere più tempo perché la notifica del timer potrebbe avvenire qualche tempo dopo che la durata <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> è stata raggiunta.</span><span class="sxs-lookup"><span data-stu-id="77c98-109">The delay can take longer because the timer notification might occur some time after the <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> is reached.</span></span> <span data-ttu-id="77c98-110">Una ragione per un ritardo più lungo è se il flusso di lavoro viene eseguito nell'ambiente server di un sistema con un carico di lavoro elevato.</span><span class="sxs-lookup"><span data-stu-id="77c98-110">One reason for a longer delay is if the workflow is running under high system stress in a server environment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c98-111">Nell'esempio di codice riportato di seguito viene illustrato come creare una nuova istanza della classe <xref:System.Workflow.Activities.DelayActivity>.</span><span class="sxs-lookup"><span data-stu-id="77c98-111">The following code example demonstrates how to create a new instance of the <xref:System.Workflow.Activities.DelayActivity> class.</span></span>  <span data-ttu-id="77c98-112">Questo esempio di codice è parte dell'esempio SDK SimpleStateMachineWorkflow nel file StateMachineWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="77c98-112">This code example is part of the SimpleStateMachineWorkflow SDK Sample from the StateMachineWorkflow.cs file.</span></span> <span data-ttu-id="77c98-113">Per ulteriori informazioni, vedere la pagina relativa a Simple State Machine.</span><span class="sxs-lookup"><span data-stu-id="77c98-113">For more information, see Simple State Machine.</span></span>  
  
 [!code-csharp[wf_samples#188](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#188)]
 [!code-vb[wf_samples#188](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#188)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="77c98-114">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.DelayActivity" />.</span><span class="sxs-lookup"><span data-stu-id="77c98-114">Initializes a new instance of the <see cref="T:System.Workflow.Activities.DelayActivity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelayActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelayActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77c98-115">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.DelayActivity" />.</span><span class="sxs-lookup"><span data-stu-id="77c98-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.DelayActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="77c98-116">Nell'esempio di codice riportato di seguito viene illustrato come inizializzare una nuova istanza della classe <xref:System.Workflow.Activities.DelayActivity>.</span><span class="sxs-lookup"><span data-stu-id="77c98-116">The following code example demonstrates how to initialize a new instance of the <xref:System.Workflow.Activities.DelayActivity> class.</span></span>  <span data-ttu-id="77c98-117">Questo esempio di codice è parte dell'esempio SDK SimpleStateMachineWorkflow nel file StateMachineWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="77c98-117">This code example is part of the SimpleStateMachineWorkflow SDK Sample from the StateMachineWorkflow.cs file.</span></span> <span data-ttu-id="77c98-118">Per ulteriori informazioni, vedere [semplice macchina a stati](http://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).</span><span class="sxs-lookup"><span data-stu-id="77c98-118">For more information, see [Simple State Machine](http://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).</span></span>  
  
 [!code-csharp[wf_samples#188](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#188)]
 [!code-vb[wf_samples#188](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#188)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelayActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelayActivity(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="77c98-119">Nome dell'attività definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="77c98-119">The user-defined name of the activity.</span></span></param>
        <summary><span data-ttu-id="77c98-120">Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.DelayActivity" /> mediante il nome dell'attività.</span><span class="sxs-lookup"><span data-stu-id="77c98-120">Initializes a new instance of the <see cref="T:System.Workflow.Activities.DelayActivity" /> class using the name of the activity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeTimeoutDuration">
      <MemberSignature Language="C#" Value="public event EventHandler InitializeTimeoutDuration;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler InitializeTimeoutDuration" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InitializeTimeoutDuration As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ InitializeTimeoutDuration;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77c98-121">Si verifica prima che inizi la durata del timeout.</span><span class="sxs-lookup"><span data-stu-id="77c98-121">Occurs before the time-out duration starts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c98-122">Questo evento non deve essere utilizzato per impostare la proprietà <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> per una classe <xref:System.Workflow.Activities.DelayActivity>.</span><span class="sxs-lookup"><span data-stu-id="77c98-122">This event should not be used to set the <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> for a <xref:System.Workflow.Activities.DelayActivity>.</span></span> <span data-ttu-id="77c98-123">La durata del timeout deve invece essere impostata nel metodo del flusso di lavoro `InitializeComponent`.</span><span class="sxs-lookup"><span data-stu-id="77c98-123">The time-out duration should be set in the workflow's `InitializeComponent` method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeTimeoutDurationEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InitializeTimeoutDurationEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InitializeTimeoutDurationEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.DelayActivity.InitializeTimeoutDurationEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InitializeTimeoutDurationEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InitializeTimeoutDurationEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77c98-124">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che fa riferimento all'evento <see cref="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration" />.</span><span class="sxs-lookup"><span data-stu-id="77c98-124">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.OnClosed(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.QueueName">
      <MemberSignature Language="C#" Value="IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#QueueName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property QueueName As IComparable Implements IEventActivity.QueueName" />
      <MemberSignature Language="C++ CLI" Value="property IComparable ^ System.Workflow.Activities.IEventActivity.QueueName { IComparable ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.Activities.IEventActivity.QueueName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77c98-125">Ottiene il nome della coda del flusso di lavoro che sarà recapitato alla scadenza del timer.</span><span class="sxs-lookup"><span data-stu-id="77c98-125">Gets the name of the workflow queue that will be delivered when the timer expires.</span></span></summary>
        <value><span data-ttu-id="77c98-126">Nome della coda del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="77c98-126">The name of the workflow queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c98-127">Il nome della coda del flusso di lavoro viene impostato dal metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c98-127">The name of the workflow queue is set by the <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Subscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Subscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Subscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Subscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Subscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Subscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><span data-ttu-id="77c98-128">Elemento <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> che rappresenta l’ambiente di esecuzione dell’elemento <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="77c98-128">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <param name="parentEventHandler"><span data-ttu-id="77c98-129">Elemento <see cref="T:System.EventHandler" /> dell’evento padre.</span><span class="sxs-lookup"><span data-stu-id="77c98-129">The <see cref="T:System.EventHandler" /> for the parent event.</span></span></param>
        <summary><span data-ttu-id="77c98-130">Crea la sottoscrizione dell'attività <see cref="T:System.Workflow.Activities.DelayActivity" /> a un evento.</span><span class="sxs-lookup"><span data-stu-id="77c98-130">Creates the subscription of the <see cref="T:System.Workflow.Activities.DelayActivity" /> to an event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77c98-131"><paramref name="parentContext" /> o <paramref name="parentEventHandler" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="77c98-131"><paramref name="parentContext" /> or <paramref name="parentEventHandler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Unsubscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Unsubscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Unsubscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Unsubscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Unsubscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Unsubscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><span data-ttu-id="77c98-132">Elemento <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> che rappresenta l’ambiente di esecuzione dell’elemento <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="77c98-132">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <param name="parentEventHandler"><span data-ttu-id="77c98-133">Elemento <see cref="T:System.EventHandler" /> dell’evento padre.</span><span class="sxs-lookup"><span data-stu-id="77c98-133">The <see cref="T:System.EventHandler" /> for the parent event.</span></span></param>
        <summary><span data-ttu-id="77c98-134">Annulla la sottoscrizione dell'attività <see cref="T:System.Workflow.Activities.DelayActivity" /> a un evento.</span><span class="sxs-lookup"><span data-stu-id="77c98-134">Cancels the subscription of the <see cref="T:System.Workflow.Activities.DelayActivity" /> to an event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77c98-135"><paramref name="parentContext" /> o <paramref name="parentEventHandler" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="77c98-135"><paramref name="parentContext" /> or <paramref name="parentEventHandler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent">
      <MemberSignature Language="C#" Value="void IActivityEventListener&lt;QueueEventArgs&gt;.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(object sender, class System.Workflow.ComponentModel.QueueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.System#Workflow#ComponentModel#IActivityEventListener&lt;System#Workflow#ComponentModel#QueueEventArgs&gt;#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnEvent (sender As Object, e As QueueEventArgs) Implements IActivityEventListener(Of QueueEventArgs).OnEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(System::Object ^ sender, System::Workflow::ComponentModel::QueueEventArgs ^ e) = System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;::OnEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Workflow.ComponentModel.QueueEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="77c98-136">Oggetto che ha generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="77c98-136">The object that raised the event.</span></span></param>
        <param name="e"><span data-ttu-id="77c98-137">Gli argomenti dell'evento tipizzati in precedenza.</span><span class="sxs-lookup"><span data-stu-id="77c98-137">The previously typed event arguments.</span></span></param>
        <summary><span data-ttu-id="77c98-138">Definisce la procedura di elaborazione quando si verifica l'evento di sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="77c98-138">Defines the processing procedure when the subscribed-to event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutDuration">
      <MemberSignature Language="C#" Value="public TimeSpan TimeoutDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeoutDuration" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.DelayActivity.TimeoutDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeoutDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeoutDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.DelayActivity/TimeoutDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77c98-139">Ottiene e imposta la durata del ritardo nel flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="77c98-139">Gets and sets the duration of the delay in the workflow.</span></span></summary>
        <value><span data-ttu-id="77c98-140">Un <see cref="T:System.TimeSpan" /> che indica la lunghezza del ritardo nel flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="77c98-140">A <see cref="T:System.TimeSpan" /> that indicates the length of the delay in the workflow.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c98-141">Il periodo di tempo impostato in questa proprietà determina il tempo di inattività del flusso di lavoro prima che proceda con l'attività successiva.</span><span class="sxs-lookup"><span data-stu-id="77c98-141">The time period set in this property determines the time the workflow will sit idle before the workflow proceeds to the next activity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c98-142">Nell'esempio di codice riportato di seguito viene illustrato come impostare il valore della proprietà <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> su 3 secondi.</span><span class="sxs-lookup"><span data-stu-id="77c98-142">The following code example demonstrates how to set the value of the <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> property to 3 seconds.</span></span> <span data-ttu-id="77c98-143">Questo codice presuppone che `delay2` sia di tipo <xref:System.Workflow.Activities.DelayActivity>.</span><span class="sxs-lookup"><span data-stu-id="77c98-143">This code assumes that `delay2` is of type <xref:System.Workflow.Activities.DelayActivity>.</span></span> <span data-ttu-id="77c98-144">Questo esempio di codice è parte dell'esempio SDK SimpleStateMachineWorkflow nel file StateMachineWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="77c98-144">This code example is part of the SimpleStateMachineWorkflow SDK Sample from the StateMachineWorkflow.cs file.</span></span> <span data-ttu-id="77c98-145">Per ulteriori informazioni, vedere [semplice macchina a stati](http://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).</span><span class="sxs-lookup"><span data-stu-id="77c98-145">For more information, see [Simple State Machine](http://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).</span></span>  
  
 [!code-csharp[wf_samples#190](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#190)]
 [!code-vb[wf_samples#190](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#190)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutDurationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty TimeoutDurationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty TimeoutDurationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TimeoutDurationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ TimeoutDurationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77c98-146">Rappresenta la classe <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che fa riferimento alla proprietà <see cref="P:System.Workflow.Activities.DelayActivity.TimeoutDuration" />.</span><span class="sxs-lookup"><span data-stu-id="77c98-146">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.DelayActivity.TimeoutDuration" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
   
  
## Examples  
 <span data-ttu-id="77c98-147">Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il campo <xref:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty>.</span><span class="sxs-lookup"><span data-stu-id="77c98-147">The following code example demonstrates how to use the <xref:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty> field.</span></span>  
  
 [!code-csharp[WF_Samples#190](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#190)]
 [!code-vb[WF_Samples#190](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#190)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>