<Type Name="ActiveDirectoryRole" FullName="System.Workflow.Activities.ActiveDirectoryRole">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58dc66e2ac39ddebff4aa7b7a9f875b94da17704" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36454378" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ActiveDirectoryRole : System.Workflow.Activities.WorkflowRole, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActiveDirectoryRole extends System.Workflow.Activities.WorkflowRole implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.ActiveDirectoryRole" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActiveDirectoryRole&#xA;Inherits WorkflowRole&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectoryRole sealed : System::Workflow::Activities::WorkflowRole, IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type ActiveDirectoryRole = class&#xA;    inherit WorkflowRole&#xA;    interface ISerializable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.WorkflowRole</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un ruolo Active Directory in un ambiente host di Windows Workflow Foundation. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 In genere, l'archivio di Active Directory è utilizzato per archiviare informazioni organizzative sul personale. <xref:System.Workflow.Activities.ActiveDirectoryRole> serve principalmente per eseguire query su informazioni organizzative per ragioni aziendali.  
  
 I ruoli Active Directory corrispondono in genere a una funzione del processo, un titolo o una competenza del processo all'interno del contesto dell'organizzazione.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />
  </Docs>
  <Members>
    <Member MemberName="GetAllReports">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetAllReports ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetAllReports() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllReports () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetAllReports();" />
      <MemberSignature Language="F#" Value="member this.GetAllReports : unit -&gt; System.Workflow.Activities.ActiveDirectoryRole" Usage="activeDirectoryRole.GetAllReports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una classe <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> contenente tutti i ruoli che riportano direttamente o indirettamente al ruolo corrente.</summary>
        <returns>Classe <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> contenente tutti i ruoli che riportano direttamente o indirettamente al ruolo corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A> restituisce tutti i nodi di livello inferiore rispetto al nodo corrente.  Utilizzare <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A> per restituire solo i nodi di livello direttamente inferiore rispetto al nodo corrente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectReports">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetDirectReports ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetDirectReports() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectReports () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetDirectReports();" />
      <MemberSignature Language="F#" Value="member this.GetDirectReports : unit -&gt; System.Workflow.Activities.ActiveDirectoryRole" Usage="activeDirectoryRole.GetDirectReports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una classe <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> contenente tutti i ruoli che riportano direttamente al ruolo corrente.</summary>
        <returns>Restituisce una classe <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> contenente tutti i ruoli che riportano direttamente al ruolo corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A> restituisce solo i nodi di livello direttamente inferiore rispetto al nodo corrente. Per restituire tutti i nodi di livello inferiore rispetto al nodo corrente utilizzare la classe <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>.   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.DirectoryServices.DirectoryEntry&gt; GetEntries ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.DirectoryServices.DirectoryEntry&gt; GetEntries() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntries () As ICollection(Of DirectoryEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::DirectoryServices::DirectoryEntry ^&gt; ^ GetEntries();" />
      <MemberSignature Language="F#" Value="member this.GetEntries : unit -&gt; System.Collections.Generic.ICollection&lt;System.DirectoryServices.DirectoryEntry&gt;" Usage="activeDirectoryRole.GetEntries " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.DirectoryServices.DirectoryEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una raccolta contenente tutti gli oggetti <see cref="T:System.DirectoryServices.DirectoryEntry" /> associate alla classe corrente <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />. </summary>
        <returns>Raccolta <see cref="T:System.DirectoryServices.DirectoryEntry" /> associata alla classe corrente <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />. </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un ruolo può essere una raccolta generale di oggetti di sicurezza. Di conseguenza, un ruolo può contenere più identità, ad esempio utilizzare <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> per restituire tutti gli oggetti della directory associati al ruolo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentities">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetIdentities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetIdentities() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetIdentities () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetIdentities();" />
      <MemberSignature Language="F#" Value="override this.GetIdentities : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="activeDirectoryRole.GetIdentities " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un elenco generico di account Windows NT associati a <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
        <returns>Elenco generico di valori che rappresentano gli account Windows NT associati all'oggetto <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities%2A> ottiene tutti gli oggetti <xref:System.Security.Principal.SecurityIdentifier> associati a <xref:System.Workflow.Activities.ActiveDirectoryRole> e converte ognuno di loro in un valore stringa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManager">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManager () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetManager();" />
      <MemberSignature Language="F#" Value="member this.GetManager : unit -&gt; System.Workflow.Activities.ActiveDirectoryRole" Usage="activeDirectoryRole.GetManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un ruolo Active Directory contenente informazioni sul gestore della classe corrente <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
        <returns>Oggetto <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> contenente informazioni sul gesture del ruolo corrente. </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>restituisce il gestore diretto per il ruolo corrente. Per restituire tutti i nodi di livello superiore rispetto al nodo corrente utilizzare la classe <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>.   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagerialChain">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagerialChain () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetManagerialChain();" />
      <MemberSignature Language="F#" Value="member this.GetManagerialChain : unit -&gt; System.Workflow.Activities.ActiveDirectoryRole" Usage="activeDirectoryRole.GetManagerialChain " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il ruolo Active Directory contenente informazioni sulla catena di gestione associata alla classe corrente <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
        <returns>Classe <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> contenente informazioni sulla catena di gestione associata al ruolo corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A> restituisce tutti i nodi di livello superiore rispetto al ruolo corrente.  Per restituire solo il gestore diretto del ruolo corrente, utilizzare <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeers">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetPeers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetPeers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPeers () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetPeers();" />
      <MemberSignature Language="F#" Value="member this.GetPeers : unit -&gt; System.Workflow.Activities.ActiveDirectoryRole" Usage="activeDirectoryRole.GetPeers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un ruolo Active Directory contenente informazioni su tutte le operazioni di una directory sotto la supervisione del gestore della classe corrente <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
        <returns>Classe <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> contenente informazioni su tutte le operazioni di una directory sotto la supervisione del gesture della classe <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.Workflow.Activities.ActiveDirectoryRole> restituita contiene informazioni provenienti da tutti gli oggetti gestiti dal gestore di questo ruolo ma non contiene le informazioni provenienti dal ruolo corrente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityIdentifiers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Security.Principal.SecurityIdentifier&gt; GetSecurityIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Security.Principal.SecurityIdentifier&gt; GetSecurityIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSecurityIdentifiers () As IList(Of SecurityIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Security::Principal::SecurityIdentifier ^&gt; ^ GetSecurityIdentifiers();" />
      <MemberSignature Language="F#" Value="member this.GetSecurityIdentifiers : unit -&gt; System.Collections.Generic.IList&lt;System.Security.Principal.SecurityIdentifier&gt;" Usage="activeDirectoryRole.GetSecurityIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Security.Principal.SecurityIdentifier&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un elenco generico di oggetti <see cref="T:System.Security.Principal.SecurityIdentifier" /> associati all'elemento <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> corrente.</summary>
        <returns>Elenco generico di oggetti <see cref="T:System.Security.Principal.SecurityIdentifier" /> associati all'elemento <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers%2A> controlla ogni <xref:System.DirectoryServices.DirectoryEntry> restituita dal metodo <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> per verificare se la voce ha un ID di sicurezza nella propria raccolta <xref:System.DirectoryServices.DirectoryEntry.Properties%2A>. Se <xref:System.DirectoryServices.DirectoryEntry> dispone di tale proprietà, <xref:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers%2A> aggiunge un <xref:System.Security.Principal.SecurityIdentifier> all'elenco che restituisce.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludesIdentity">
      <MemberSignature Language="C#" Value="public override bool IncludesIdentity (string identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IncludesIdentity(string identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IncludesIdentity (identity As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IncludesIdentity(System::String ^ identity);" />
      <MemberSignature Language="F#" Value="override this.IncludesIdentity : string -&gt; bool" Usage="activeDirectoryRole.IncludesIdentity identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">Identità di cui eseguire la ricerca.</param>
        <summary>Restituisce un valore che indica se <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> contiene l'identità specificata.</summary>
        <returns>
          <see langword="true" /> per indicare che <paramref name="identity" /> è compresa in <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />; in caso contrario, <see langword="false" />. </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dato che un ruolo è la generalizzazione di uno o più oggetti, un unico ruolo può descrivere più identità. Utilizzare <xref:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity%2A> per verificare che un’identità specificata sia contenuta all'interno di questo ruolo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ActiveDirectoryRole.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Workflow.Activities.ActiveDirectoryRole.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome di ruolo della Active Directory.</summary>
        <value>Nome del ruolo di Active Directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il nome per descrivere il ruolo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootEntry">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry RootEntry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntry RootEntry" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ActiveDirectoryRole.RootEntry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootEntry As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntry ^ RootEntry { System::DirectoryServices::DirectoryEntry ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootEntry : System.DirectoryServices.DirectoryEntry" Usage="System.Workflow.Activities.ActiveDirectoryRole.RootEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nodo Active Directory radice associato all'oggetto <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
        <value>Classe <see cref="T:System.DirectoryServices.DirectoryEntry" /> che rappresenta il nodo Active Directory radice associato a questa classe <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La voce radice è il ruolo di livello superiore della catena di ruoli che non ha gestore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate da <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da popolare con i dati.</param>
        <param name="context">Destinazione <see cref="T:System.Runtime.Serialization.StreamingContext" /> per questa serializzazione.</param>
        <summary>Popola un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati richiesti per serializzare l'oggetto di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione di <xref:System.Workflow.Activities.ActiveDirectoryRole.System%23Runtime%23Serialization%23ISerializable%23GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)> consente la serializzazione di questo oggetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>