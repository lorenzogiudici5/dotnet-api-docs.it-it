<Type Name="TextPatternRange" FullName="System.Windows.Automation.Text.TextPatternRange">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04b05150fd153351bd0d4d4a5be88cb75ea6b5f8" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46616848" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextPatternRange" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPatternRange extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Text.TextPatternRange" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPatternRange" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPatternRange" />
  <TypeSignature Language="F#" Value="type TextPatternRange = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="18d3c-101">Rappresenta un'estensione di testo continuo in un contenitore <see cref="T:System.Windows.Automation.TextPattern" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="18d3c-101">Represents a span of continuous text in a <see cref="T:System.Windows.Automation.TextPattern" /> container.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-102">Oggetto <xref:System.Windows.Automation.Text.TextPatternRange> può rappresentare un punto di inserimento, un subset o tutto il testo in un <xref:System.Windows.Automation.TextPattern> contenitore.</span><span class="sxs-lookup"><span data-stu-id="18d3c-102">A <xref:System.Windows.Automation.Text.TextPatternRange> can represent an insertion point, a subset, or all of the text in a <xref:System.Windows.Automation.TextPattern> container.</span></span>  
  
 <span data-ttu-id="18d3c-103">Oggetto <xref:System.Windows.Automation.Text.TextPatternRange> non saranno più valide se si verifica una delle operazioni seguenti: il testo nel <xref:System.Windows.Automation.TextPattern> contenitore cambia a causa di alcune attività dell'utente, o il <xref:System.Windows.Automation.ValuePattern.SetValue%2A> metodo di <xref:System.Windows.Automation.ValuePattern> consente di modificare a livello di codice il valore del testo nel <xref:System.Windows.Automation.TextPattern> contenitore.</span><span class="sxs-lookup"><span data-stu-id="18d3c-103">A <xref:System.Windows.Automation.Text.TextPatternRange> will become invalid if one of the following occurs: the text in the <xref:System.Windows.Automation.TextPattern> container changes because of some user activity, or the <xref:System.Windows.Automation.ValuePattern.SetValue%2A> method of <xref:System.Windows.Automation.ValuePattern> is used to programmatically change the value of the text in the <xref:System.Windows.Automation.TextPattern> container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">
      <span data-ttu-id="18d3c-104">Cenni preliminari sui pattern di controllo per l'automazione interfaccia utente</span>
      <span class="sxs-lookup">
        <span data-stu-id="18d3c-104">UI Automation Control Patterns Overview</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">
      <span data-ttu-id="18d3c-105">Pattern di controllo di automazione interfaccia utente per i client</span>
      <span class="sxs-lookup">
        <span data-stu-id="18d3c-105">UI Automation Control Patterns for Clients</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="AddToSelection">
      <MemberSignature Language="C#" Value="public void AddToSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.AddToSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToSelection();" />
      <MemberSignature Language="F#" Value="member this.AddToSelection : unit -&gt; unit" Usage="textPatternRange.AddToSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d3c-106">Aggiunge elementi alla raccolta di testo evidenziato in un contenitore di testo che supporta selezioni multiple non contigue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-106">Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-107">Il punto di inserimento si sposta nell'area della nuova selezione.</span><span class="sxs-lookup"><span data-stu-id="18d3c-107">The text insertion point moves to the area of the new selection.</span></span>  
  
 <span data-ttu-id="18d3c-108">Fornire un intervallo di testo degenere sposta il punto di inserimento.</span><span class="sxs-lookup"><span data-stu-id="18d3c-108">Providing a degenerate text range moves the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="18d3c-109">Se il provider di testo non supporta le selezioni multiple non contigue (ad esempio, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> deve avere un valore pari a <see langword="Multiple" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-109">If text provider does not support multiple, disjoint selections (for example, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Automation.Text.TextPatternRange.Select" />
        <altmember cref="M:System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection" />
        <altmember cref="T:System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Text.TextPatternRange Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.Text.TextPatternRange Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As TextPatternRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Text::TextPatternRange ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Automation.Text.TextPatternRange" Usage="textPatternRange.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Text.TextPatternRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d3c-110">Recupera un nuovo oggetto <see cref="T:System.Windows.Automation.Text.TextPatternRange" /> identico all'oggetto <see cref="T:System.Windows.Automation.Text.TextPatternRange" /> originale e che eredita tutte le proprietà dell'originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-110">Retrieves a new <see cref="T:System.Windows.Automation.Text.TextPatternRange" /> identical to the original <see cref="T:System.Windows.Automation.Text.TextPatternRange" /> and inheriting all properties of the original.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d3c-111">Nuovo intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-111">The new text range.</span>
          </span>
          <span data-ttu-id="18d3c-112">Un riferimento Null (<see langword="Nothing" /> in Visual Basic) non viene mai restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-112">A null reference (<see langword="Nothing" /> in Visual Basic) is never returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-113">In alternativa, creare una nuova <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> dal <xref:System.Windows.Automation.TextPattern> e spostare i due endpoint in modo che corrispondano con gli endpoint dell'intervallo di testo originale.</span><span class="sxs-lookup"><span data-stu-id="18d3c-113">Alternatively, create a new <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> from the <xref:System.Windows.Automation.TextPattern> and move the two endpoints to correspond with the endpoints of the original text range.</span></span>  
  
 <span data-ttu-id="18d3c-114">Il nuovo intervallo può essere modificato in modo indipendente dall'originale.</span><span class="sxs-lookup"><span data-stu-id="18d3c-114">The new range can be manipulated independently from the original.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1060](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1060)]  
  
 [!code-vb[UIATextPattern_snip#2060](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2060)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <altmember cref="M:System.Windows.Automation.TextPattern.RangeFromChild(System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.TextPattern.RangeFromPoint(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public bool Compare (System.Windows.Automation.Text.TextPatternRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Compare(class System.Windows.Automation.Text.TextPatternRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.Compare(System.Windows.Automation.Text.TextPatternRange)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (range As TextPatternRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compare(System::Windows::Automation::Text::TextPatternRange ^ range);" />
      <MemberSignature Language="F#" Value="member this.Compare : System.Windows.Automation.Text.TextPatternRange -&gt; bool" Usage="textPatternRange.Compare range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Windows.Automation.Text.TextPatternRange" />
      </Parameters>
      <Docs>
        <param name="range">
          <span data-ttu-id="18d3c-115">Intervallo di testo da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-115">A text range to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d3c-116">Restituisce un valore <see cref="T:System.Boolean" /> che indica se l'estensione (dall'endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> all'endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" />) di un intervallo di testo corrisponde a un altro intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-116">Returns a <see cref="T:System.Boolean" /> value indicating whether the span (the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> endpoint to the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint) of a text range is the same as another text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d3c-117">
            <see langword="true" /> se l'ampiezza di entrambi gli intervalli di testo è identica; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-117">
              <see langword="true" /> if the span of both text ranges is identical; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1061](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1061)]  
  
 [!code-vb[UIATextPattern_snip#2061](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2061)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="18d3c-118">Se l'intervallo confrontato non proviene dallo stesso provider di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-118">If the range being compared does not come from the same text provider.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Docs>
    </Member>
    <Member MemberName="CompareEndpoints">
      <MemberSignature Language="C#" Value="public int CompareEndpoints (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextPatternRange targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareEndpoints(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Text.TextPatternRange targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareEndpoints (endpoint As TextPatternRangeEndpoint, targetRange As TextPatternRange, targetEndpoint As TextPatternRangeEndpoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareEndpoints(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Text::TextPatternRange ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="member this.CompareEndpoints : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Text.TextPatternRange * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; int" Usage="textPatternRange.CompareEndpoints (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Text.TextPatternRange" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="18d3c-119">Endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> o <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> del chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-119">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the caller.</span>
          </span>
        </param>
        <param name="targetRange">
          <span data-ttu-id="18d3c-120">Intervallo di destinazione per il confronto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-120">The target range for comparison.</span>
          </span>
        </param>
        <param name="targetEndpoint">
          <span data-ttu-id="18d3c-121">Endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> o <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> della destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-121">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d3c-122">Restituisce un oggetto <see cref="T:System.Int32" /> che indica se due intervalli di testo presentano endpoint identici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-122">Returns an <see cref="T:System.Int32" /> indicating whether two text ranges have identical endpoints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d3c-123">Restituisce un valore negativo se l'endpoint del chiamante si trova nel testo prima dell'endpoint di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-123">Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</span>
          </span>
          <span data-ttu-id="18d3c-124">Restituisce zero se l'endpoint del chiamante è nella stessa posizione dell'endpoint di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-124">Returns zero if the caller's endpoint is at the same location as the target endpoint.</span>
          </span>
          <span data-ttu-id="18d3c-125">Restituisce un valore positivo se l'endpoint del chiamante si trova nel testo dopo l'endpoint di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-125">Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-126">Confrontando gli endpoint iniziale e finali dell'intervallo di testo stesso è possibile identificare se un intervallo di testo degenere o se gli endpoint sono in ordine di flusso di testo logico.</span><span class="sxs-lookup"><span data-stu-id="18d3c-126">By comparing the starting and ending endpoints of the same text range you can identify if a text range is degenerate or if the endpoints are in the order of logical text flow.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1062](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1062)]  
  
 [!code-vb[UIATextPattern_snip#2062](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2062)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="18d3c-127">Se l'intervallo è un riferimento Null (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-127">If range is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="18d3c-128">Se l'intervallo proviene da un altro contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-128">If range is from another container.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Docs>
    </Member>
    <Member MemberName="ExpandToEnclosingUnit">
      <MemberSignature Language="C#" Value="public void ExpandToEnclosingUnit (System.Windows.Automation.Text.TextUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandToEnclosingUnit(valuetype System.Windows.Automation.Text.TextUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandToEnclosingUnit (unit As TextUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandToEnclosingUnit(System::Windows::Automation::Text::TextUnit unit);" />
      <MemberSignature Language="F#" Value="member this.ExpandToEnclosingUnit : System.Windows.Automation.Text.TextUnit -&gt; unit" Usage="textPatternRange.ExpandToEnclosingUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
      </Parameters>
      <Docs>
        <param name="unit">
          <span data-ttu-id="18d3c-129">Unità testuale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-129">The textual unit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d3c-130">Espande l'intervallo di testo alla <see cref="T:System.Windows.Automation.Text.TextUnit" /> specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-130">Expands the text range to the specified <see cref="T:System.Windows.Automation.Text.TextUnit" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-131">Se l'intervallo è già una quantità esatta di unità di misura specificata e rimane invariato.</span><span class="sxs-lookup"><span data-stu-id="18d3c-131">If the range is already an exact quantity of the specified units then it remains unchanged.</span></span>  
  
 <span data-ttu-id="18d3c-132">Affinché il <xref:System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit%2A> metodo venga eseguito correttamente, viene eseguita una sequenza di azioni dietro le quinte.</span><span class="sxs-lookup"><span data-stu-id="18d3c-132">In order for the <xref:System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit%2A> method to execute successfully, a sequence of actions is performed behind the scenes.</span></span>  
  
1.  <span data-ttu-id="18d3c-133">L'intervallo di testo viene normalizzato; ovvero l'intervallo di testo è compressa in un intervallo degenerato in corrispondenza di <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, rendendo il <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-133">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, making the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="18d3c-134">Questo passaggio è necessario rimuovere l'ambiguità nei casi in cui un intervallo di testo si estenda `unit` i limiti, ad esempio, "{l'U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) è incorporato nel testo" dove "{" e "}" rappresentano il testo endpoint dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-134">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="18d3c-135">L'intervallo risultante viene spostato indietro in <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> all'inizio del limite `unit` richiesto.</span><span class="sxs-lookup"><span data-stu-id="18d3c-135">The resulting range is moved backward in the <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="18d3c-136">L'intervallo viene spostato avanti o indietro in <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> per il numero richiesto di limiti `unit`.</span><span class="sxs-lookup"><span data-stu-id="18d3c-136">The range is moved forward or backward in the <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="18d3c-137">L'intervallo viene quindi espanso dallo stato di intervallo degenerato spostando l'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> di un limite `unit` richiesto.</span><span class="sxs-lookup"><span data-stu-id="18d3c-137">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="18d3c-138">![Regolazioni di intervallo mediante Move ed ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "regolazioni di intervallo mediante Move ed ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="18d3c-138">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="18d3c-139">Esempi di regolazione di un intervallo di testo per Move() ed ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="18d3c-139">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18d3c-140">Questi passaggi sono necessari poiché è comune per la lettura dello schermo leggere un completa parola, frase o intero paragrafo al punto di inserimento o qualsiasi posizione del cursore virtuale.</span><span class="sxs-lookup"><span data-stu-id="18d3c-140">These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</span></span>  
  
 <span data-ttu-id="18d3c-141"><xref:System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit%2A> rispetta il testo nascosto sia visibile.</span><span class="sxs-lookup"><span data-stu-id="18d3c-141"><xref:System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit%2A> respects both hidden and visible text.</span></span> <span data-ttu-id="18d3c-142">Il client di automazione interfaccia utente può controllare il <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> la visibilità del testo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-142">The UI Automation client can check the <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> for text visibility.</span></span>  
  
 <span data-ttu-id="18d3c-143"><xref:System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit%2A> rinvia al successivo più grande <xref:System.Windows.Automation.Text.TextUnit> supportato se il dato <xref:System.Windows.Automation.Text.TextUnit> non è supportata dal controllo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-143"><xref:System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="18d3c-144">L'ordine, da unità più piccolo al più grande, viene elencato di seguito.</span><span class="sxs-lookup"><span data-stu-id="18d3c-144">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1063](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1063)]  
  
 [!code-vb[UIATextPattern_snip#2063](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2063)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Docs>
    </Member>
    <Member MemberName="FindAttribute">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Text.TextPatternRange FindAttribute (System.Windows.Automation.AutomationTextAttribute attribute, object value, bool backward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.Text.TextPatternRange FindAttribute(class System.Windows.Automation.AutomationTextAttribute attribute, object value, bool backward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.FindAttribute(System.Windows.Automation.AutomationTextAttribute,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAttribute (attribute As AutomationTextAttribute, value As Object, backward As Boolean) As TextPatternRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Text::TextPatternRange ^ FindAttribute(System::Windows::Automation::AutomationTextAttribute ^ attribute, System::Object ^ value, bool backward);" />
      <MemberSignature Language="F#" Value="member this.FindAttribute : System.Windows.Automation.AutomationTextAttribute * obj * bool -&gt; System.Windows.Automation.Text.TextPatternRange" Usage="textPatternRange.FindAttribute (attribute, value, backward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Text.TextPatternRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Windows.Automation.AutomationTextAttribute" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="backward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="18d3c-145">Attributo da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-145">The attribute to search for.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="18d3c-146">Valore dell'attributo da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-146">The attribute value to search for.</span>
          </span>
          <span data-ttu-id="18d3c-147">Questo valore deve corrispondere al tipo specificato per l'attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-147">This value must match the type specified for the attribute.</span>
          </span>
        </param>
        <param name="backward">
          <span data-ttu-id="18d3c-148">
            <see langword="true" /> se deve essere restituito l'ultimo intervallo di testo invece del primo; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-148">
              <see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d3c-149">Restituisce un sottoinsieme di intervallo di testo che presenta il valore dell'attributo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-149">Returns a text range subset that has the specified attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d3c-150">Intervallo di testo che presenta un attributo e un valore di attributo corrispondenti; in caso contrario, Null (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-150">A text range having a matching attribute and attribute value; otherwise null (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-151">Non vi è alcuna differenza tra il testo nascosto e visibile.</span><span class="sxs-lookup"><span data-stu-id="18d3c-151">There is no differentiation between hidden and visible text.</span></span> <span data-ttu-id="18d3c-152">I client di automazione interfaccia utente possono usare <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> per controllare la visibilità del testo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-152">UI Automation clients can use <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> to check text visibility.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18d3c-153">Usare <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> da cercare nell'intero documento.</span><span class="sxs-lookup"><span data-stu-id="18d3c-153">Use <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> to search the entire document.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1064](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1064)]  
  
 [!code-vb[UIATextPattern_snip#2064](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2064)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.TextPattern" />
      </Docs>
    </Member>
    <Member MemberName="FindText">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Text.TextPatternRange FindText (string text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.Text.TextPatternRange FindText(string text, bool backward, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.FindText(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindText (text As String, backward As Boolean, ignoreCase As Boolean) As TextPatternRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Text::TextPatternRange ^ FindText(System::String ^ text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.FindText : string * bool * bool -&gt; System.Windows.Automation.Text.TextPatternRange" Usage="textPatternRange.FindText (text, backward, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Text.TextPatternRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="backward" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="18d3c-154">Stringa di testo da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-154">The text string to search for.</span>
          </span>
        </param>
        <param name="backward">
          <span data-ttu-id="18d3c-155">
            <see langword="true" /> se deve essere restituito l'ultimo intervallo di testo invece del primo; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-155">
              <see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="18d3c-156">
            <see langword="true" /> se è necessario ignorare la differenza tra maiuscole e minuscole; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-156">
              <see langword="true" /> if case should be ignored; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d3c-157">Restituisce un sottoinsieme di intervallo di testo contenente il testo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-157">Returns a text range subset that contains the specified text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d3c-158">Intervallo di testo corrispondente al testo specificato; in caso contrario, Null (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-158">A text range matching the specified text; otherwise null (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-159">Non vi è alcuna differenza tra il testo nascosto e visibile.</span><span class="sxs-lookup"><span data-stu-id="18d3c-159">There is no differentiation between hidden and visible text.</span></span> <span data-ttu-id="18d3c-160">I client di automazione interfaccia utente possono usare <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> per controllare la visibilità del testo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-160">UI Automation clients can use <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> to check text visibility.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18d3c-161">Usare <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> da cercare nell'intero documento.</span><span class="sxs-lookup"><span data-stu-id="18d3c-161">Use <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> to search the entire document.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1065](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1065)]  
  
 [!code-vb[UIATextPattern_snip#2065](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2065)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.TextPattern" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeValue">
      <MemberSignature Language="C#" Value="public object GetAttributeValue (System.Windows.Automation.AutomationTextAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetAttributeValue(class System.Windows.Automation.AutomationTextAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.GetAttributeValue(System.Windows.Automation.AutomationTextAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributeValue (attribute As AutomationTextAttribute) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetAttributeValue(System::Windows::Automation::AutomationTextAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeValue : System.Windows.Automation.AutomationTextAttribute -&gt; obj" Usage="textPatternRange.GetAttributeValue attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Windows.Automation.AutomationTextAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="18d3c-162">Attributo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-162">The text attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d3c-163">Restituisce il valore dell'attributo specificato nell'intero intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-163">Returns the value of the specified attribute across the entire text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d3c-164">Restituisce il valore dell'attributo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-164">Returns the value of the specified attribute.</span>
          </span>
          <span data-ttu-id="18d3c-165">Ad esempio, GetAttributeValue (TextPattern.FontNameAttribute) restituirebbe una stringa che rappresenta il nome del tipo di carattere, se univoco, dell'intervallo di testo, mentre GetAttributeValue (TextPattern.IsItalicAttribute) restituirebbe un valore booleano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-165">For example, GetAttributeValue(TextPattern.FontNameAttribute) would return a string that represents the font name, if unique, of the text range while GetAttributeValue(TextPattern.IsItalicAttribute) would return a boolean.</span>
          </span>
          <span data-ttu-id="18d3c-166">Restituisce <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> se il valore dell'attributo specificato varia nell'intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-166">Returns <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> if the value of the specified attribute varies over the text range.</span>
          </span>
          <span data-ttu-id="18d3c-167">Restituisce <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> se l'attributo specificato non è supportato dal provider o dal controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-167">Returns <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> if the specified attribute is not supported by the provider or the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-168">Non vi è alcuna differenza tra il testo nascosto e visibile.</span><span class="sxs-lookup"><span data-stu-id="18d3c-168">There is no differentiation between hidden and visible text.</span></span> <span data-ttu-id="18d3c-169">I client di automazione interfaccia utente possono usare <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> per controllare la visibilità del testo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-169">UI Automation clients can use <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> to check text visibility.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1066](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1066)]  
  
 [!code-vb[UIATextPattern_snip#2066](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2066)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="18d3c-170">Se l'attributo specificato non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-170">If the specified attribute is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingRectangles">
      <MemberSignature Language="C#" Value="public System.Windows.Rect[] GetBoundingRectangles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect[] GetBoundingRectangles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoundingRectangles () As Rect()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Rect&gt; ^ GetBoundingRectangles();" />
      <MemberSignature Language="F#" Value="member this.GetBoundingRectangles : unit -&gt; System.Windows.Rect[]" Usage="textPatternRange.GetBoundingRectangles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d3c-171">Recupera una raccolta di rettangoli di delimitazione per ogni riga di testo completamente o parzialmente visibile in un intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-171">Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d3c-172">Una matrice di rettangoli di delimitazione per ogni riga di testo completa o parziale in un intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-172">An array of bounding rectangles for each full or partial line of text in a text range.</span>
          </span>
          <span data-ttu-id="18d3c-173">Matrice vuota per un intervallo di testo degenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-173">An empty array for a degenerate text range.</span>
          </span>
          <span data-ttu-id="18d3c-174">Matrice vuota per un intervallo di testo che presenta coordinate di schermo che lo collocano completamente fuori dello schermo, al di fuori della visualizzazione o nascosto da una finestra sovrapposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-174">An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1067](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1067)]  
  
 [!code-vb[UIATextPattern_snip#2067](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2067)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement[] GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement[] GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As AutomationElement()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationElement ^&gt; ^ GetChildren();" />
      <MemberSignature Language="F#" Value="member this.GetChildren : unit -&gt; System.Windows.Automation.AutomationElement[]" Usage="textPatternRange.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d3c-175">Recupera una raccolta di tutti gli oggetti incorporati che rientrano nell'intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-175">Retrieves a collection of all embedded objects that fall within the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d3c-176">Raccolta di tutti gli oggetti figlio che rientrano nell'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-176">A collection of all child objects that fall within the range.</span>
          </span>
          <span data-ttu-id="18d3c-177">Nella raccolta verranno inclusi anche gli oggetti figlio che si sovrappongono all'intervallo ma non vi sono racchiusi completamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-177">Children that overlap with the range but are not entirely enclosed by it will also be included in the collection.</span>
          </span>
          <span data-ttu-id="18d3c-178">Restituisce una raccolta vuota se non sono presenti oggetti figlio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-178">Returns an empty collection if there are no child objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UIATextPattern_snip#StartTarget](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#starttarget)]
 [!code-vb[UIATextPattern_snip#StartTarget](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#starttarget)]  
[!code-csharp[UIATextPattern_snip#GetTextElement](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#gettextelement)]
[!code-vb[UIATextPattern_snip#GetTextElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#gettextelement)]  
[!code-csharp[UIATextPattern_snip#GetEmbeddedObjects](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#getembeddedobjects)]
[!code-vb[UIATextPattern_snip#GetEmbeddedObjects](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#getembeddedobjects)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnclosingElement">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetEnclosingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetEnclosingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnclosingElement () As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetEnclosingElement();" />
      <MemberSignature Language="F#" Value="member this.GetEnclosingElement : unit -&gt; System.Windows.Automation.AutomationElement" Usage="textPatternRange.GetEnclosingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d3c-179">Restituisce l'oggetto <see cref="T:System.Windows.Automation.AutomationElement" /> più interno che racchiude l'intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-179">Returns the innermost <see cref="T:System.Windows.Automation.AutomationElement" /> that encloses the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d3c-180">L'elemento più interno che racchiude il chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-180">The innermost element enclosing the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-181">Che li racchiude <xref:System.Windows.Automation.AutomationElement>, in genere il provider di testo che fornisce l'intervallo di testo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-181">The enclosing <xref:System.Windows.Automation.AutomationElement>, typically the text provider that supplies the text range.</span></span> <span data-ttu-id="18d3c-182">Se tuttavia il provider di testo supporta elementi figlio, quali tabelle o collegamenti ipertestuali, l'elemento contenitore potrebbe essere un discendente del provider di testo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-182">However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1069](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1069)]  
  
 [!code-vb[UIATextPattern_snip#2069](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2069)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText(int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.GetText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText (maxLength As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText(int maxLength);" />
      <MemberSignature Language="F#" Value="member this.GetText : int -&gt; string" Usage="textPatternRange.GetText maxLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxLength">
          <span data-ttu-id="18d3c-183">Lunghezza massima della stringa da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-183">The maximum length of the string to return.</span>
          </span>
          <span data-ttu-id="18d3c-184">Usare <c>-1</c> se non è richiesto alcun limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-184">Use <c>-1</c> if no limit is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d3c-185">Restituisce il testo normale dell'intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-185">Returns the plain text of the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d3c-186">Testo normale dell'intervallo di testo, probabilmente troncato all'oggetto <paramref name="maxLength" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-186">The plain text of the text range, possibly truncated at the specified <paramref name="maxLength" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-187"><xref:System.Windows.Automation.Text.TextPatternRange.GetText%2A> rispetta il testo nascosto sia visibile.</span><span class="sxs-lookup"><span data-stu-id="18d3c-187"><xref:System.Windows.Automation.Text.TextPatternRange.GetText%2A> respects both hidden and visible text.</span></span> <span data-ttu-id="18d3c-188">Il client di automazione interfaccia utente può controllare il <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> la visibilità del testo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-188">The UI Automation client can check the <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> for text visibility.</span></span>  
  
 <span data-ttu-id="18d3c-189">Se `maxLength` è maggiore della lunghezza dell'intervallo del testo del chiamante, la stringa restituita sarà il testo normale dell'intervallo di testo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-189">If `maxLength` is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</span></span>  
  
 <span data-ttu-id="18d3c-190"><xref:System.Windows.Automation.Text.TextPatternRange.GetText%2A> non saranno interessati dall'ordine degli endpoint nel flusso di testo. restituirà sempre il testo tra gli endpoint di inizio e fine dell'intervallo di testo nell'ordine di flusso di testo logico.</span><span class="sxs-lookup"><span data-stu-id="18d3c-190"><xref:System.Windows.Automation.Text.TextPatternRange.GetText%2A> will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1070](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1070)]  
  
 [!code-vb[UIATextPattern_snip#2070](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2070)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="18d3c-191">Se <paramref name="maxLength" /> è minore di -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-191">If <paramref name="maxLength" /> is less than -1.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public int Move (System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Move(valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.Move(System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Move (unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Move(System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="member this.Move : System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="textPatternRange.Move (unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unit">
          <span data-ttu-id="18d3c-192">Limite di unità di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-192">The text unit boundary.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="18d3c-193">Numero di unità di testo da spostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-193">The number of text units to move.</span>
          </span>
          <span data-ttu-id="18d3c-194">Un valore positivo consente di spostare l'intervallo di testo in avanti, un valore negativo consente di spostare l'intervallo di testo indietro e 0 non ha effetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-194">A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d3c-195">Sposta l'intervallo di testo di un numero specificato di unità di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-195">Moves the text range the specified number of text units.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d3c-196">Numero di unità effettivamente spostate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-196">The number of units actually moved.</span>
          </span>
          <span data-ttu-id="18d3c-197">Può essere inferiore al numero richiesto se uno dei nuovi endpoint di intervallo di testo è maggiore o minore degli endpoint di <see cref="P:System.Windows.Automation.TextPattern.DocumentRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-197">This can be less than the number requested if either of the new text range endpoints is greater than or less than the <see cref="P:System.Windows.Automation.TextPattern.DocumentRange" /> endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-198">Quando è necessario scorrere il contenuto di un intervallo di testo, per garantire una corretta esecuzione del metodo <xref:System.Windows.Automation.Text.TextPatternRange.Move%2A> è prevista una serie di passaggi dietro le quinte.</span><span class="sxs-lookup"><span data-stu-id="18d3c-198">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Text.TextPatternRange.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="18d3c-199">L'intervallo di testo viene normalizzato, ovvero viene compresso in un intervallo degenerato all'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> . Ciò rende superfluo l'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> .</span><span class="sxs-lookup"><span data-stu-id="18d3c-199">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="18d3c-200">Questo passaggio è necessario rimuovere l'ambiguità nei casi in cui un intervallo di testo si estenda `unit` i limiti, ad esempio, "{l'U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) è incorporato nel testo" dove "{" e "}" rappresentano il testo endpoint dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-200">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="18d3c-201">L'intervallo risultante viene spostato indietro in <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> all'inizio del limite `unit` richiesto.</span><span class="sxs-lookup"><span data-stu-id="18d3c-201">The resulting range is moved backward in the <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="18d3c-202">L'intervallo viene spostato avanti o indietro in <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> per il numero richiesto di limiti `unit`.</span><span class="sxs-lookup"><span data-stu-id="18d3c-202">The range is moved forward or backward in the <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="18d3c-203">L'intervallo viene quindi espanso dallo stato di intervallo degenerato spostando l'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> di un limite `unit` richiesto.</span><span class="sxs-lookup"><span data-stu-id="18d3c-203">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="18d3c-204">![Regolazioni di intervallo mediante Move ed ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "regolazioni di intervallo mediante Move ed ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="18d3c-204">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="18d3c-205">Esempi di regolazione di un intervallo di testo per Move() ed ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="18d3c-205">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="18d3c-206">Il contenuto testuale (o testo interno) di un contenitore di testo o di un oggetto incorporato, ad esempio una cella di tabella o un collegamento ipertestuale, viene esposto come un flusso di testo continuo sia nella vista di controllo che nella visualizzazione del contenuto dell'albero di [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]. I limiti dell'oggetto vengono ignorati.</span><span class="sxs-lookup"><span data-stu-id="18d3c-206">The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree; object boundaries are ignored.</span></span> <span data-ttu-id="18d3c-207">Se un client di automazione interfaccia utente sta recuperando il testo a scopo di esposizione, interpretazione o analisi, è necessario verificare l'eventuale presenza di casi speciali nell'intervallo di testo, ad esempio una tabella con contenuto testuale o altri oggetti incorporati.</span><span class="sxs-lookup"><span data-stu-id="18d3c-207">If a UI Automation client is retrieving the text for the purpose of reciting, interpreting, or analyzing in some manner, the text range should be checked for special cases, such as a table with textual content or other embedded objects.</span></span> <span data-ttu-id="18d3c-208">Questa operazione può essere eseguita chiamando <xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A> per ottenere un <xref:System.Windows.Automation.AutomationElement> per ogni oggetto incorporato e chiamando quindi <xref:System.Windows.Automation.TextPattern.RangeFromChild%2A> per ottenere un intervallo di testo per ogni elemento; questa operazione viene eseguita in modo ricorsivo fino a quando non è stato recuperato tutto il contenuto testuale.</span><span class="sxs-lookup"><span data-stu-id="18d3c-208">This can be accomplished by calling <xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A> to obtain an <xref:System.Windows.Automation.AutomationElement> for each embedded object and then calling <xref:System.Windows.Automation.TextPattern.RangeFromChild%2A> to obtain a text range for each element; this is done recursively until all textual content has been retrieved.</span></span>  
  
 <span data-ttu-id="18d3c-209">![Intervalli di testo estesi da oggetti incorporati. ] (~/add/media/uia-textpattern-embeddedobjecttextranges.png "Intervalli di testo estesi da oggetti incorporati.")</span><span class="sxs-lookup"><span data-stu-id="18d3c-209">![Text ranges spanned by embedded objects.](~/add/media/uia-textpattern-embeddedobjecttextranges.png "Text ranges spanned by embedded objects.")</span></span>  
<span data-ttu-id="18d3c-210">Esempio di un flusso di testo con oggetti incorporati e le estensioni degli intervalli corrispondenti</span><span class="sxs-lookup"><span data-stu-id="18d3c-210">Example of a text stream with embedded objects and their range spans</span></span>  
  
 <span data-ttu-id="18d3c-211"><xref:System.Windows.Automation.Text.TextPatternRange.Move%2A> rispetta il testo nascosto sia visibile.</span><span class="sxs-lookup"><span data-stu-id="18d3c-211"><xref:System.Windows.Automation.Text.TextPatternRange.Move%2A> respects both hidden and visible text.</span></span> <span data-ttu-id="18d3c-212">Il client di automazione interfaccia utente può controllare il <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> la visibilità del testo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-212">The UI Automation client can check the <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> for text visibility.</span></span>  
  
 <span data-ttu-id="18d3c-213"><xref:System.Windows.Automation.Text.TextPatternRange.Move%2A> rinvia al successivo più grande <xref:System.Windows.Automation.Text.TextUnit> supportato se il dato <xref:System.Windows.Automation.Text.TextUnit> non è supportata dal controllo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-213"><xref:System.Windows.Automation.Text.TextPatternRange.Move%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="18d3c-214">L'ordine, da unità più piccolo al più grande, viene elencato di seguito.</span><span class="sxs-lookup"><span data-stu-id="18d3c-214">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
> [!NOTE]
>  <span data-ttu-id="18d3c-215">Il testo non viene modificato in alcun modo quando l'intervallo di testo appena si estende su una parte diversa del testo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-215">The text is not altered in any way as the text range just spans a different part of the text.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#StartTarget](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#starttarget)]
 [!code-vb[UIATextPattern_snip#StartTarget](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#starttarget)]  
[!code-csharp[UIATextPattern_snip#GetTextElement](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#gettextelement)]
[!code-vb[UIATextPattern_snip#GetTextElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#gettextelement)]  
[!code-csharp[UIATextPattern_snip#MoveSelection](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#moveselection)]
[!code-vb[UIATextPattern_snip#MoveSelection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#moveselection)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByRange">
      <MemberSignature Language="C#" Value="public void MoveEndpointByRange (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextPatternRange targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveEndpointByRange(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Text.TextPatternRange targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveEndpointByRange (endpoint As TextPatternRangeEndpoint, targetRange As TextPatternRange, targetEndpoint As TextPatternRangeEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveEndpointByRange(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Text::TextPatternRange ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="member this.MoveEndpointByRange : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Text.TextPatternRange * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; unit" Usage="textPatternRange.MoveEndpointByRange (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Text.TextPatternRange" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="18d3c-216">Endpoint da spostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-216">The endpoint to move.</span>
          </span>
        </param>
        <param name="targetRange">
          <span data-ttu-id="18d3c-217">Altro intervallo dallo stesso provider di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-217">Another range from the same text provider.</span>
          </span>
        </param>
        <param name="targetEndpoint">
          <span data-ttu-id="18d3c-218">Un endpoint nell'altro intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-218">An endpoint on the other range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d3c-219">Sposta un endpoint di un intervallo di testo all'endpoint specificato di un secondo intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-219">Moves one endpoint of a text range to the specified endpoint of a second text range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-220">Se l'endpoint da spostare supera l'altro endpoint dell'intervallo di testo stesso, l'altro endpoint viene spostato, inoltre, producendo un intervallo degenere e garantire l'ordinamento corretto degli endpoint (vale a dire <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> è sempre minore o uguale al <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span><span class="sxs-lookup"><span data-stu-id="18d3c-220">If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> is always less than or equal to <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1072](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1072)]  
  
 [!code-vb[UIATextPattern_snip#2072](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2072)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByUnit">
      <MemberSignature Language="C#" Value="public int MoveEndpointByUnit (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 MoveEndpointByUnit(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndpointByUnit (endpoint As TextPatternRangeEndpoint, unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int MoveEndpointByUnit(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="member this.MoveEndpointByUnit : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="textPatternRange.MoveEndpointByUnit (endpoint, unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="18d3c-221">Endpoint da spostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-221">The endpoint to move.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="18d3c-222">Unità testuale per lo spostamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-222">The textual unit for moving.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="18d3c-223">Numero di unità da spostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-223">The number of units to move.</span>
          </span>
          <span data-ttu-id="18d3c-224">Un numero positivo comporta lo spostamento in avanti dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-224">A positive count moves the endpoint forward.</span>
          </span>
          <span data-ttu-id="18d3c-225">Un numero negativo comporta lo spostamento indietro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-225">A negative count moves backward.</span>
          </span>
          <span data-ttu-id="18d3c-226">Un numero pari a 0 non ha effetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-226">A count of 0 has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d3c-227">Sposta un endpoint dell'intervallo di testo del numero specificato di <see cref="T:System.Windows.Automation.Text.TextUnit" /> nell'intervallo del documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-227">Moves one endpoint of the text range the specified number of <see cref="T:System.Windows.Automation.Text.TextUnit" />s within the document range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d3c-228">Numero di unità effettivamente spostate, che può essere inferiore al numero richiesto se con lo spostamento degli endpoint si raggiunge l'inizio o la fine del documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-228">The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-229">Quando è necessario scorrere il contenuto di un intervallo di testo, per garantire una corretta esecuzione del metodo <xref:System.Windows.Automation.Text.TextPatternRange.Move%2A> è prevista una serie di passaggi dietro le quinte.</span><span class="sxs-lookup"><span data-stu-id="18d3c-229">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Text.TextPatternRange.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="18d3c-230">L'intervallo di testo viene normalizzato, ovvero viene compresso in un intervallo degenerato all'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> . Ciò rende superfluo l'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> .</span><span class="sxs-lookup"><span data-stu-id="18d3c-230">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="18d3c-231">Questo passaggio è necessario rimuovere l'ambiguità nei casi in cui un intervallo di testo si estenda `unit` i limiti, ad esempio, "{l'U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) è incorporato nel testo" dove "{" e "}" rappresentano il testo endpoint dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-231">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="18d3c-232">L'intervallo risultante viene spostato indietro in <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> all'inizio del limite `unit` richiesto.</span><span class="sxs-lookup"><span data-stu-id="18d3c-232">The resulting range is moved backward in the <xref:System.Windows.Automation.TextPattern.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="18d3c-233">L'intervallo viene quindi espanso dallo stato di intervallo degenerato spostando l'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> di un limite `unit` richiesto.</span><span class="sxs-lookup"><span data-stu-id="18d3c-233">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="18d3c-234">![Regolazioni di intervallo mediante Move ed ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "regolazioni di intervallo mediante Move ed ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="18d3c-234">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="18d3c-235">Esempi di regolazione di un intervallo di testo per Move() ed ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="18d3c-235">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="18d3c-236">Il contenuto testuale (o testo interno) di un contenitore di testo o di un oggetto incorporato, ad esempio una cella di tabella o un collegamento ipertestuale, viene esposto come un flusso di testo continuo sia nella vista di controllo che nella visualizzazione del contenuto dell'albero di [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]. I limiti dell'oggetto vengono ignorati.</span><span class="sxs-lookup"><span data-stu-id="18d3c-236">The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree; object boundaries are ignored.</span></span> <span data-ttu-id="18d3c-237">Se un client di automazione interfaccia utente sta recuperando il testo a scopo di esposizione, interpretazione o analisi, è necessario verificare l'eventuale presenza di casi speciali nell'intervallo di testo, ad esempio una tabella con contenuto testuale o altri oggetti incorporati.</span><span class="sxs-lookup"><span data-stu-id="18d3c-237">If a UI Automation client is retrieving the text for the purpose of reciting, interpreting, or analyzing in some manner, the text range should be checked for special cases, such as a table with textual content or other embedded objects.</span></span> <span data-ttu-id="18d3c-238">Questa operazione può essere eseguita chiamando <xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A> per ottenere un <xref:System.Windows.Automation.AutomationElement> per ogni oggetto incorporato e chiamando quindi <xref:System.Windows.Automation.TextPattern.RangeFromChild%2A> per ottenere un intervallo di testo per ogni elemento; questa operazione viene eseguita in modo ricorsivo fino a quando non è stato recuperato tutto il contenuto testuale.</span><span class="sxs-lookup"><span data-stu-id="18d3c-238">This can be accomplished by calling <xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A> to obtain an <xref:System.Windows.Automation.AutomationElement> for each embedded object and then calling <xref:System.Windows.Automation.TextPattern.RangeFromChild%2A> to obtain a text range for each element; this is done recursively until all textual content has been retrieved.</span></span>  
  
 <span data-ttu-id="18d3c-239">![Intervalli di testo estesi da oggetti incorporati. ] (~/add/media/uia-textpattern-embeddedobjecttextranges.png "Intervalli di testo estesi da oggetti incorporati.")</span><span class="sxs-lookup"><span data-stu-id="18d3c-239">![Text ranges spanned by embedded objects.](~/add/media/uia-textpattern-embeddedobjecttextranges.png "Text ranges spanned by embedded objects.")</span></span>  
<span data-ttu-id="18d3c-240">Esempio di un flusso di testo con oggetti incorporati e le estensioni degli intervalli corrispondenti</span><span class="sxs-lookup"><span data-stu-id="18d3c-240">Example of a text stream with embedded objects and their range spans</span></span>  
  
 <span data-ttu-id="18d3c-241"><xref:System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit%2A> rinvia al successivo più grande <xref:System.Windows.Automation.Text.TextUnit> supportato se il dato <xref:System.Windows.Automation.Text.TextUnit> non è supportata dal controllo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-241"><xref:System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="18d3c-242">L'ordine, da unità più piccolo al più grande, viene elencato di seguito.</span><span class="sxs-lookup"><span data-stu-id="18d3c-242">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1073](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1073)]  
  
 [!code-vb[UIATextPattern_snip#2073](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2073)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromSelection">
      <MemberSignature Language="C#" Value="public void RemoveFromSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFromSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFromSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFromSelection();" />
      <MemberSignature Language="F#" Value="member this.RemoveFromSelection : unit -&gt; unit" Usage="textPatternRange.RemoveFromSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d3c-243">Rimuove una sezione evidenziata del testo, corrispondente agli endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> e <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> dell'intervallo di testo chiamante, da una raccolta esistente di testo evidenziato in un contenitore di testo che supporta selezioni multiple non contigue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-243">Removes a highlighted section of text, corresponding to the calling text range <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints, from an existing collection of highlighted text in a text container that supports multiple, disjoint selections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-244">Il punto di inserimento passerà all'area di evidenziazione rimossa.</span><span class="sxs-lookup"><span data-stu-id="18d3c-244">The text insertion point will move to the area of the removed highlight.</span></span>  
  
 <span data-ttu-id="18d3c-245">Fornire un intervallo di testo degenere sposterà il punto di inserimento.</span><span class="sxs-lookup"><span data-stu-id="18d3c-245">Providing a degenerate text range will move the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="18d3c-246">Se il provider di testo non supporta le selezioni multiple non contigue (ad esempio, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> deve avere un valore pari a <see langword="Multiple" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-246">If text provider does not support multiple, disjoint selections (for example, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Automation.Text.TextPatternRange.Select" />
        <altmember cref="M:System.Windows.Automation.Text.TextPatternRange.AddToSelection" />
        <altmember cref="T:System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (bool alignToTop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollIntoView(bool alignToTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.ScrollIntoView(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (alignToTop As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollIntoView(bool alignToTop);" />
      <MemberSignature Language="F#" Value="member this.ScrollIntoView : bool -&gt; unit" Usage="textPatternRange.ScrollIntoView alignToTop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignToTop" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="alignToTop">
          <span data-ttu-id="18d3c-247">
            <see langword="true" /> se il controllo di testo deve essere spostato in modo che l'intervallo di testo sia allineato al margine superiore del riquadro di visualizzazione; <see langword="false" /> se deve essere allineato al margine inferiore del riquadro di visualizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-247">
              <see langword="true" /> if the text control should be scrolled so the text range is flush with the top of the viewport; <see langword="false" /> if it should be flush with the bottom of the viewport.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d3c-248">Determina lo scorrimento verticale del controllo di testo fino a quando l'intervallo di testo non è visibile nel riquadro di visualizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-248">Causes the text control to scroll vertically until the text range is visible in the viewport.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-249"><xref:System.Windows.Automation.Text.TextPatternRange.ScrollIntoView%2A> rispetta il testo nascosto sia visibile.</span><span class="sxs-lookup"><span data-stu-id="18d3c-249"><xref:System.Windows.Automation.Text.TextPatternRange.ScrollIntoView%2A> respects both hidden and visible text.</span></span> <span data-ttu-id="18d3c-250">Il client di automazione interfaccia utente può controllare il <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> la visibilità del testo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-250">The UI Automation client can check the <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> for text visibility.</span></span> <span data-ttu-id="18d3c-251">Se l'intervallo di testo è nascosta, il controllo testo scorre solo se il testo nascosto ha un ancoraggio nel riquadro di visualizzazione.</span><span class="sxs-lookup"><span data-stu-id="18d3c-251">If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1074](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1074)]  
  
 [!code-vb[UIATextPattern_snip#2074](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2074)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="18d3c-252">Se lo scorrimento non è supportato dal controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-252">If scrolling is not supported by the control.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Text.TextPatternRange.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="textPatternRange.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d3c-253">Evidenzia il testo nel controllo di testo corrispondente agli endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> e <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> dell'intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-253">Highlights text in the text control corresponding to the text range <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d3c-254">Se viene specificato un intervallo di testo degenere, il punto di inserimento sposterà alla <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint dell'intervallo di testo.</span><span class="sxs-lookup"><span data-stu-id="18d3c-254">If a degenerate text range is provided, the text insertion point will move to the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint of the text range.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1075](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1075)]  
  
 [!code-vb[UIATextPattern_snip#2075](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2075)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="18d3c-255">Si verifica quando la selezione del testo non è supportata dal controllo del testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-255">Occurs when text selection is not supported by the text control.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Automation.Text.TextPatternRange.AddToSelection" />
        <altmember cref="M:System.Windows.Automation.SelectionItemPattern.RemoveFromSelection" />
        <altmember cref="T:System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Docs>
    </Member>
    <Member MemberName="TextPattern">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.TextPattern TextPattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.TextPattern TextPattern" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Text.TextPatternRange.TextPattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextPattern As TextPattern" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::TextPattern ^ TextPattern { System::Windows::Automation::TextPattern ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TextPattern : System.Windows.Automation.TextPattern" Usage="System.Windows.Automation.Text.TextPatternRange.TextPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TextPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18d3c-256">Ottiene l'oggetto <see cref="T:System.Windows.Automation.TextPattern" /> associato all'intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-256">Gets the <see cref="T:System.Windows.Automation.TextPattern" /> associated with the text range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18d3c-257">Provider di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d3c-257">The text provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UIATextPattern_snip#1076](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATextPattern_snip/CSharp/SearchWindow.cs#1076)]  
  
 [!code-vb[UIATextPattern_snip#2076](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATextPattern_snip/VisualBasic/SearchWindow.vb#2076)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>