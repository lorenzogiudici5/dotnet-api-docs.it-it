<Type Name="ModelSearchService" FullName="System.Activities.Presentation.Services.ModelSearchService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f5e1935917ad00f73cdd9698b10981457fcc6b5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36652901" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ModelSearchService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelSearchService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Services.ModelSearchService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelSearchService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelSearchService abstract" />
  <TypeSignature Language="F#" Value="type ModelSearchService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta una classe responsabile della generazione di un oggetto TextImage e dello spostamento all'elemento ModelItem corrispondente in Workflow Designer.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelSearchService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelSearchService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelSearchService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Activities.Presentation.Services.ModelSearchService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTextImage">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.TextImage GenerateTextImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.TextImage GenerateTextImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelSearchService.GenerateTextImage" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GenerateTextImage () As TextImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::TextImage ^ GenerateTextImage();" />
      <MemberSignature Language="F#" Value="abstract member GenerateTextImage : unit -&gt; System.Activities.Presentation.Model.TextImage" Usage="modelSearchService.GenerateTextImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.TextImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera un'immagine di testo in cui è possibile eseguire ricerche basata sull'albero dell'elemento del modello.</summary>
        <returns>Immagine di testo in cui è possibile eseguire ricerche basata sull'albero dell'elemento del modello.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="NavigateTo">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Passa all'elemento del modello di destinazione in Progettazione flussi di lavoro e restituisce un valore booleano che indica se la navigazione ha esito positivo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NavigateTo">
      <MemberSignature Language="C#" Value="public abstract bool NavigateTo (int location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NavigateTo(int32 location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelSearchService.NavigateTo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function NavigateTo (location As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool NavigateTo(int location);" />
      <MemberSignature Language="F#" Value="abstract member NavigateTo : int -&gt; bool" Usage="modelSearchService.NavigateTo location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location">Numero di riga nell'immagine del testo.</param>
        <summary>Indica se il passaggio a un elemento del modello in base al numero di riga nell'immagine di testo ha esito positivo.</summary>
        <returns>
          <see langword="true" /> se l'operazione di navigazione ha esito positivo; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateTo">
      <MemberSignature Language="C#" Value="public abstract bool NavigateTo (int startLine, int startColumn, int endLine, int endColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NavigateTo(int32 startLine, int32 startColumn, int32 endLine, int32 endColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelSearchService.NavigateTo(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function NavigateTo (startLine As Integer, startColumn As Integer, endLine As Integer, endColumn As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool NavigateTo(int startLine, int startColumn, int endLine, int endColumn);" />
      <MemberSignature Language="F#" Value="abstract member NavigateTo : int * int * int * int -&gt; bool" Usage="modelSearchService.NavigateTo (startLine, startColumn, endLine, endColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startLine" Type="System.Int32" />
        <Parameter Name="startColumn" Type="System.Int32" />
        <Parameter Name="endLine" Type="System.Int32" />
        <Parameter Name="endColumn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startLine">Riga iniziale.</param>
        <param name="startColumn">Colonna iniziale.</param>
        <param name="endLine">Riga finale.</param>
        <param name="endColumn">Colonna finale.</param>
        <summary>Indica se il passaggio a un elemento del modello in base alla posizione dell'origine nel file XAML ha esito positivo.</summary>
        <returns>
          <see langword="true" /> se l'operazione di navigazione ha esito positivo; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>