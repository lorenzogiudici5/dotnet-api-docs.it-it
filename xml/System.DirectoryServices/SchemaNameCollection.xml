<Type Name="SchemaNameCollection" FullName="System.DirectoryServices.SchemaNameCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="572077674da54500306a9c26f2f850b660203f76" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36739234" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SchemaNameCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SchemaNameCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.SchemaNameCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SchemaNameCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class SchemaNameCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type SchemaNameCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="85529-101">Contiene un elenco di nomi di schema utilizzabili dalla proprietà <see cref="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" /> di un oggetto <see cref="T:System.DirectoryServices.DirectoryEntries" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85529-101">Contains a list of the schema names that the <see cref="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" /> property of a <see cref="T:System.DirectoryServices.DirectoryEntries" /> object can use.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <altmember cref="N:System.DirectoryServices" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; int" Usage="schemaNameCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="85529-102">Nome di schema da aggiungere all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-102">The schema name to add to this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-103">Accoda un nome di schema specificato all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-103">Appends a specified schema name to this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85529-104">L'indice con inizio zero del valore della proprietà specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-104">The zero-based index of the specified property value.</span>
          </span>
          <span data-ttu-id="85529-105">Se l'oggetto non viene trovato, il valore restituito sarà -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-105">If the object is not found, the return value is -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.DirectoryServices.SchemaNameCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.DirectoryServices.SchemaNameCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As SchemaNameCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::DirectoryServices::SchemaNameCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.DirectoryServices.SchemaNameCollection -&gt; unit" Usage="schemaNameCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DirectoryServices.SchemaNameCollection" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="85529-106">Oggetto <see cref="T:System.DirectoryServices.SchemaNameCollection" /> che contiene i nomi di schema da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-106">A <see cref="T:System.DirectoryServices.SchemaNameCollection" /> that contains the schema names to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-107">Accoda un set di nomi di schema specificati all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-107">Appends a set of specified schema names to this collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string[] -&gt; unit" Usage="schemaNameCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="85529-108">Matrice di tipo <see cref="T:System.String" /> che contiene i nomi di schema da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-108">An array of type <see cref="T:System.String" /> that contains the schema names to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-109">Accoda un set di nomi di schema specificati all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-109">Appends a set of specified schema names to this collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="schemaNameCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85529-110">Rimuove tutti gli oggetti dall'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-110">Removes all objects from this collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="schemaNameCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="85529-111">Nome di schema da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-111">The schema name to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-112">Determina se l'insieme contiene un nome di schema specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-112">Determines whether this collection contains a specified schema name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85529-113">Il valore restituito sarà <see langword="true" /> se la proprietà specificata appartiene all'insieme; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-113">The return value is <see langword="true" /> if the specified property belongs to this collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] stringArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(string[] stringArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (stringArray As String(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::String ^&gt; ^ stringArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : string[] * int -&gt; unit" Usage="schemaNameCollection.CopyTo (stringArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArray" Type="System.String[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stringArray">
          <span data-ttu-id="85529-114">Matrice di tipo <see cref="T:System.String" /> che riceve i nomi di schema dell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-114">An array of type <see cref="T:System.String" /> that receives this collection's schema names.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="85529-115">Indice della matrice in base zero in corrispondenza del quale iniziare la copia dei nomi dello schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-115">The zero-based array index at which to begin copying the schema names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-116">Copia i nomi di schema dell'insieme in una matrice, partendo da un determinato indice della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-116">Copies the schema names from this collection to an array, starting at a particular index of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SchemaNameCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.DirectoryServices.SchemaNameCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85529-117">La proprietà <see cref="P:System.DirectoryServices.SchemaNameCollection.Count" /> ottiene il numero di oggetti nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-117">The <see cref="P:System.DirectoryServices.SchemaNameCollection.Count" /> property gets the number of objects in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85529-118">Numero di oggetti nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-118">The number of objects in this collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="schemaNameCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85529-119">Restituisce un enumeratore che può essere usato per scorrere la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-119">Returns an enumerator that you can use to iterate through this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85529-120">Enumeratore che può essere utilizzato per scorrere l'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-120">An enumerator that you can used to iterate through this collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string -&gt; int" Usage="schemaNameCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="85529-121">Nome di schema da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-121">The schema name to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-122">Determina l'indice di un nome di schema specificato nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-122">Determines the index of a specified schema name in this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85529-123">Indice in base zero del nome dello schema specificato oppure -1 se il nome dello schema non è stato trovato nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-123">The zero-based index of the specified schema name, or -1 if the schema name was not found in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; unit" Usage="schemaNameCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="85529-124">Indice in base zero nell'insieme in corrispondenza del quale inserire il nome dello schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-124">The zero-based index into the collection at which to insert the schema name.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="85529-125">Nome di schema da inserire nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-125">The schema name to insert into this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-126">Inserisce un nome di schema nell'insieme, in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-126">Inserts a schema name into this collection at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85529-127">Se il `index` parametro è uguale al numero di elementi nella raccolta, questo metodo aggiunge il valore alla fine della raccolta.</span><span class="sxs-lookup"><span data-stu-id="85529-127">If the `index` parameter equals the number of items in the collection, this method appends the value to the end of the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[int] { System::String ^ get(int index); void set(int index, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string with get, set" Usage="System.DirectoryServices.SchemaNameCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="85529-128">Indice in base zero dell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-128">The zero-based index into the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-129">Ottiene o imposta l'oggetto esistente in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-129">Gets or sets the object that exists at a specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85529-130">Oggetto che è presente nell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-130">The object that exists at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85529-131">In C#, questa proprietà è l'indicizzatore per la classe <xref:System.DirectoryServices.SchemaNameCollection>.</span><span class="sxs-lookup"><span data-stu-id="85529-131">In C#, this property is the indexer for the <xref:System.DirectoryServices.SchemaNameCollection> class.</span></span>  
  
 <span data-ttu-id="85529-132">In JScript è possibile utilizzare le proprietà predefinite indicizzate definite da un tipo, ma non è possibile definire in modo esplicito la propria.</span><span class="sxs-lookup"><span data-stu-id="85529-132">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="85529-133">Tuttavia, specificando l'attributo expando in una classe automaticamente fornisce una proprietà indicizzata predefinita il cui tipo è oggetto e il cui tipo di indice è <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="85529-133">However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="schemaNameCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="85529-134">Nome di schema da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-134">The schema name to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-135">Rimuove un nome di schema specificato dall'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-135">Removes a specified schema name from this collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="schemaNameCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="85529-136">Indice in base zero del nome dello schema da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-136">The zero-based index of the schema name to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-137">Rimuove il nome di schema dall'insieme in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-137">Removes the schema name that is at a specified index from this collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="85529-138">L'indice in base zero è minore di zero o uguale alla dimensione dell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-138">The zero-based index is either less than zero or equal to the size of the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="85529-139">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-139">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="85529-140">L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-140">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="85529-141">Indice in base zero in <c>array</c> in corrispondenza del quale ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-141">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-142">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-142">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85529-143">
            <paramref name="array" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-143">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="85529-144">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-144">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85529-145">
            <paramref name="array" /> è multidimensionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-145">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="85529-146">-oppure-  Il numero di elementi nell'insieme di origine <see cref="T:System.Collections.ICollection" /> è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-146">-or-  The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="85529-147">Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-147">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85529-148">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-148">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85529-149">
            <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-149">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85529-150"><xref:System.Collections.ICollection.SyncRoot%2A> restituisce un oggetto che può essere utilizzato per sincronizzare l'accesso a <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="85529-150"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="85529-151">Classi della maggior parte delle raccolte di <xref:System.Collections?displayProperty=nameWithType> dello spazio dei nomi anche implementare un metodo sincronizzato, che fornisce un wrapper di sincronizzazione per la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="85529-151">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</span></span>  
  
 <span data-ttu-id="85529-152">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="85529-152">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="85529-153">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="85529-153">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="85529-154">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="85529-154">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="85529-155">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="85529-155">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="85529-156">Nell'esempio seguente viene illustrato come bloccare la raccolta utilizzando la <xref:System.Collections.ICollection.SyncRoot%2A> durante l'intera enumerazione:</span><span class="sxs-lookup"><span data-stu-id="85529-156">The following example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
  lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85529-157">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-157">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85529-158">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-158">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85529-159">Per le raccolte con un archivio sottostante non è disponibile pubblicamente, è l'implementazione prevista deve restituire l'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="85529-159">For collections with an underlying store is not publicly available, the expected implementation is to return the current instance.</span></span> <span data-ttu-id="85529-160">Si noti che il puntatore all'istanza corrente potrebbe non essere sufficiente per le raccolte che incapsulano altre raccolte; questo caso viene restituita la raccolta sottostante `SyncRoot` proprietà.</span><span class="sxs-lookup"><span data-stu-id="85529-160">Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's `SyncRoot` property.</span></span>  
  
 <span data-ttu-id="85529-161">La maggior parte delle classi della raccolta nello spazio dei nomi <xref:System.Collections?displayProperty=nameWithType> implementa anche un metodo `Synchronized`, che fornisce un wrapper di sincronizzazione per la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="85529-161">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span> <span data-ttu-id="85529-162">Le classi derivate, tuttavia, possono fornire una propria versione sincronizzata della raccolta mediante la proprietà <xref:System.Collections.ICollection.SyncRoot%2A>.</span><span class="sxs-lookup"><span data-stu-id="85529-162">However, derived classes can provide their own synchronized version of the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="85529-163">Il codice di sincronizzazione deve eseguire operazioni sul <xref:System.Collections.ICollection.SyncRoot%2A> della raccolta, non direttamente sulla raccolta.</span><span class="sxs-lookup"><span data-stu-id="85529-163">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the collection, not directly on the collection.</span></span> <span data-ttu-id="85529-164">In questo modo si garantisce il corretto funzionamento delle raccolte derivate da altri oggetti.</span><span class="sxs-lookup"><span data-stu-id="85529-164">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="85529-165">Nello specifico, viene mantenuta la sincronizzazione con altri thread che potrebbero modificare contemporaneamente l'istanza della raccolta.</span><span class="sxs-lookup"><span data-stu-id="85529-165">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</span></span>  
  
 <span data-ttu-id="85529-166">In assenza di un `Synchronized` metodo su una raccolta, l'utilizzo previsto per <xref:System.Collections.ICollection.SyncRoot%2A> si presenta come segue:</span><span class="sxs-lookup"><span data-stu-id="85529-166">In the absence of a `Synchronized` method on a collection, the expected usage for <xref:System.Collections.ICollection.SyncRoot%2A> looks like this:</span></span>  
  
```csharp  
ICollection MyCollection =...  
 lock(MyCollection.SyncRoot) {  
  // Some operation on the collection, which is now thread safe.  
 }  
```  
  
```vb  
Dim myCollection as New ICollection()  
 SyncLock myCollection.SyncRoot  
  ' Some operation on the collection, which is now thread safe.  
 End SyncLock  
```  
  
 <span data-ttu-id="85529-167">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="85529-167">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="85529-168">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="85529-168">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="85529-169">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="85529-169">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="85529-170">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="85529-170">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="85529-171">Nell'esempio seguente viene illustrato come bloccare la raccolta utilizzando la <xref:System.Collections.ICollection.SyncRoot%2A> durante l'intera enumerazione:</span><span class="sxs-lookup"><span data-stu-id="85529-171">The following example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
 lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="85529-172">Elemento da aggiungere all'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-172">The item to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-173">Aggiunge un elemento all'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-173">Adds an item to the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85529-174">Posizione in cui è stato inserito il nuovo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-174">The position into which the new item was inserted.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="85529-175">Valore da individuare nell'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-175">The value to locate in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-176">Determina se l'elenco contiene un valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-176">Determines whether the list contains a specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85529-177">
            <see langword="true" /> se il valore si trova nell'elenco; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-177">
              <see langword="true" /> if the value is found in the list, otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85529-178">A partire da .NET Framework 2.0, questo metodo Usa l'uguaglianza CompareTo metodi e degli oggetti nella raccolta per determinare se l'elemento esiste.</span><span class="sxs-lookup"><span data-stu-id="85529-178">Starting with the .NET Framework 2.0, this method uses the Equals and CompareTo methods of the objects in the collection to determine whether item exists.</span></span> <span data-ttu-id="85529-179">Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando Equals e CompareTo metodi del parametro di elemento per gli oggetti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="85529-179">In the earlier versions of the .NET Framework, this determination was made by using the Equals and CompareTo methods of the item parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="85529-180">Elemento da individuare nell'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-180">The item to locate in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-181">Determina l'indice di un elemento specificato nell'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-181">Determines the index of a specified item in the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85529-182">Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-182">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85529-183">A partire da .NET Framework 2.0, questo metodo Usa l'uguaglianza CompareTo metodi e degli oggetti nella raccolta per determinare se l'elemento esiste.</span><span class="sxs-lookup"><span data-stu-id="85529-183">Starting with the .NET Framework 2.0, this method uses the Equals and CompareTo methods of the objects in the collection to determine whether item exists.</span></span> <span data-ttu-id="85529-184">Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando Equals e CompareTo metodi del parametro di elemento per gli oggetti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="85529-184">In the earlier versions of the .NET Framework, this determination was made by using the Equals and CompareTo methods of the item parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="85529-185">Indice in base zero in corrispondenza del quale deve essere inserito value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-185">The zero-based index at which value should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="85529-186">Elemento da inserire nell'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-186">The item to insert into the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-187">Inserisce un elemento nell'elenco in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-187">Inserts an item to the list at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85529-188">Se `index` è uguale al numero di elementi nell'elenco, quindi *valore* viene aggiunto alla fine.</span><span class="sxs-lookup"><span data-stu-id="85529-188">If `index` equals the number of items in the list, then *value* is appended to the end.</span></span>  
  
 <span data-ttu-id="85529-189">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="85529-189">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="85529-190">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</span><span class="sxs-lookup"><span data-stu-id="85529-190">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85529-191">Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> ha dimensioni fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-191">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85529-192">
            <see langword="true" /> se <see cref="T:System.Collections.IList" /> è di dimensioni fisse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-192">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85529-193">Una raccolta con dimensioni fisse non consente l'aggiunta o la rimozione di elementi dopo la sua creazione, ma consente la modifica degli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="85529-193">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85529-194">Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-194">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85529-195">
            <see langword="true" /> se <see cref="T:System.Collections.IList" /> è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-195">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85529-196">Una raccolta di sola lettura non consente l'aggiunta, la rimozione o la modifica di elementi dopo la sua creazione.</span><span class="sxs-lookup"><span data-stu-id="85529-196">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="85529-197">Indice in base zero dell'elemento da ottenere o impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-197">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-198">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-198">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85529-199">Elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-199">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85529-200">Questa proprietà consente di accedere a un elemento specifico della raccolta utilizzando la sintassi seguente: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="85529-200">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="85529-201">
            <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-201">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85529-202">La proprietà è stata impostata e l'interfaccia <see cref="T:System.Collections.IList" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-202">The property is set and the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="85529-203">Il <c>valore</c> da rimuovere dall'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-203">The <c>value</c> to remove from the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85529-204">Rimuove la prima occorrenza di un oggetto <paramref name="value" /> specifico dall'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85529-204">Removes the first occurrence of a specific <paramref name="value" /> from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85529-205">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="85529-205">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="85529-206">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</span><span class="sxs-lookup"><span data-stu-id="85529-206">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>