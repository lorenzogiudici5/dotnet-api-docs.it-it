<Type Name="PropertyCollection" FullName="System.DirectoryServices.PropertyCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0921950ce61c04ffbd3abee9e7ce017faf3d3ccf" />
    <Meta Name="ms.sourcegitcommit" Value="6ee2e6b2c5d7c5bd66feeb362d29e65fdf858836" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/15/2018" />
    <Meta Name="ms.locfileid" Value="51691079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyCollection : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.PropertyCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyCollection&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyCollection : System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type PropertyCollection = class&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="6019a-101">La classe <see cref="T:System.DirectoryServices.PropertyCollection" /> contiene le proprietà di un oggetto <see cref="T:System.DirectoryServices.DirectoryEntry" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6019a-101">The <see cref="T:System.DirectoryServices.PropertyCollection" /> class contains the properties of a <see cref="T:System.DirectoryServices.DirectoryEntry" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
      <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
    </permission>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="propertyCollection.Contains propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="6019a-102">Nome della proprietà da trovare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-102">The name of the property to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6019a-103">Determina se la proprietà specificata è contenuta nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-103">Determines whether the specified property is in this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6019a-104">Il valore restituito sarà <see langword="true" /> se la proprietà specificata appartiene all'insieme; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-104">The return value is <see langword="true" /> if the specified property belongs to this collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.DirectoryServices.PropertyValueCollection[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.DirectoryServices.PropertyValueCollection[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As PropertyValueCollection(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::DirectoryServices::PropertyValueCollection ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.DirectoryServices.PropertyValueCollection[] * int -&gt; unit" Usage="propertyCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.DirectoryServices.PropertyValueCollection[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="6019a-105">Matrice degli oggetti <see cref="T:System.DirectoryServices.PropertyValueCollection" /> che riceve gli elementi di questa raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-105">The array of <see cref="T:System.DirectoryServices.PropertyValueCollection" /> objects that receives the elements of this collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6019a-106">Indice in base zero in <paramref name="array" /> in corrispondenza del quale il metodo avvia la copia della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-106">The zero-based index in <paramref name="array" /> where this method starts copying this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6019a-107">Copia tutti gli oggetti di questo insieme in una matrice, a partire dall'indice specificato della matrice di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-107">Copies the all objects in this collection to an array, starting at the specified index in the target array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="6019a-108">Si è verificato un errore durante la chiamata all'interfaccia sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-108">An error occurred during the call to the underlying interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.DirectoryServices.PropertyCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6019a-109">Ottiene il numero delle proprietà nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-109">Gets the number of properties in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6019a-110">Numero di proprietà nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-110">The number of properties in this collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6019a-111">Internet Information Services (IIS) e il provider WinNT non supportano attualmente <xref:System.DirectoryServices.PropertyCollection.Count%2A>, in modo che ognuno di essi genererà un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="6019a-111">The Internet Information Services (IIS), and WinNT providers do not currently support <xref:System.DirectoryServices.PropertyCollection.Count%2A>, so each will throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="6019a-112">Si è verificato un errore durante la chiamata all'interfaccia sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-112">An error occurred during the call to the underlying interface.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6019a-113">La directory non supporta la segnalazione del numero delle proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-113">The directory cannot report the number of properties.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="propertyCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6019a-114">Restituisce un enumeratore che può essere usato per scorrere la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-114">Returns an enumerator that you can use to iterate through this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6019a-115">
            <see cref="T:System.Collections.IDictionaryEnumerator" /> che può essere utilizzato per scorrere l'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-115">An <see cref="T:System.Collections.IDictionaryEnumerator" /> that you can use to iterate through this collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="6019a-116">Si è verificato un errore durante la chiamata all'interfaccia sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-116">An error occurred during the call to the underlying interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.PropertyValueCollection this[string propertyName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.PropertyValueCollection Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(propertyName As String) As PropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::PropertyValueCollection ^ default[System::String ^] { System::DirectoryServices::PropertyValueCollection ^ get(System::String ^ propertyName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.DirectoryServices.PropertyValueCollection" Usage="System.DirectoryServices.PropertyCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.PropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="6019a-117">Nome della proprietà da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-117">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6019a-118">Ottiene la proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-118">Gets the specified property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6019a-119">Valore della proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-119">The value of the specified property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6019a-120">In C#, questa proprietà è l'indicizzatore per la classe <xref:System.DirectoryServices.PropertyCollection>.</span><span class="sxs-lookup"><span data-stu-id="6019a-120">In C#, this property is the indexer for the <xref:System.DirectoryServices.PropertyCollection> class.</span></span>  
  
 <span data-ttu-id="6019a-121">In JScript è possibile usare le proprietà predefinite indicizzate definite da un tipo, ma non è possibile definire in modo esplicito il proprio.</span><span class="sxs-lookup"><span data-stu-id="6019a-121">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="6019a-122">Tuttavia, specificando l'attributo expando in una classe fornisce automaticamente un valore predefinito di proprietà con un tipo di oggetto e il tipo di indice indicizzata <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="6019a-122">However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection PropertyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection PropertyNames" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.PropertyNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyNames As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ PropertyNames { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyNames : System.Collections.ICollection" Usage="System.DirectoryServices.PropertyCollection.PropertyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6019a-123">Ottiene i nomi delle proprietà nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-123">Gets the names of the properties in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6019a-124">Oggetto <see cref="T:System.Collections.ICollection" /> che contiene i nomi delle proprietà nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-124">An <see cref="T:System.Collections.ICollection" /> object that contains the names of the properties in this collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6019a-125">Quando si accede a membri del <xref:System.DirectoryServices.PropertyCollection.PropertyNames%2A> proprietà, un <xref:System.Runtime.InteropServices.COMException> generate a causa di un errore durante l'accesso all'interfaccia sottostante.</span><span class="sxs-lookup"><span data-stu-id="6019a-125">When accessing members of the <xref:System.DirectoryServices.PropertyCollection.PropertyNames%2A> property, a <xref:System.Runtime.InteropServices.COMException> might be thrown due to an error while accessing the underlying interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="6019a-126">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-126">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="6019a-127">L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-127">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6019a-128">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-128">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6019a-129">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-129">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6019a-130">
            <paramref name="array" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-130">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6019a-131">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-131">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6019a-132">
            <paramref name="array" /> è multidimensionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-132">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="6019a-133">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-133">-or-</span>
          </span>
          <span data-ttu-id="6019a-134">Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-134">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="6019a-135">Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-135">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6019a-136">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-136">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6019a-137">
            <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-137">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6019a-138"><xref:System.Collections.ICollection.SyncRoot%2A> restituisce un oggetto che può essere utilizzato per sincronizzare l'accesso a <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="6019a-138"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="6019a-139">Raccolta la maggior parte delle classi nel <xref:System.Collections?displayProperty=nameWithType> dello spazio dei nomi anche implementare un metodo sincronizzato, che fornisce un wrapper sincronizzato per la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="6019a-139">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</span></span>  
  
 <span data-ttu-id="6019a-140">Enumerare una raccolta di per sé non è una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="6019a-140">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="6019a-141">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="6019a-141">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="6019a-142">Per garantire la sicurezza dei thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione oppure intercettare le eccezioni risultanti dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="6019a-142">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.</span></span>  
  
 <span data-ttu-id="6019a-143">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="6019a-143">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="6019a-144">Nell'esempio seguente viene illustrato come bloccare la raccolta usando il <xref:System.Collections.ICollection.SyncRoot%2A> durante l'intera enumerazione:</span><span class="sxs-lookup"><span data-stu-id="6019a-144">The following example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
  lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6019a-145">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-145">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6019a-146">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-146">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6019a-147">Per raccolte il cui archivio sottostante non è disponibile pubblicamente, l'implementazione prevista deve restituire l'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="6019a-147">For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</span></span> <span data-ttu-id="6019a-148">Si noti che il puntatore all'istanza corrente potrebbe non essere sufficiente per le raccolte che incapsulano altre raccolte; questi ultimi dovranno restituire proprietà SyncRoot della raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="6019a-148">Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's SyncRoot property.</span></span>  
  
 <span data-ttu-id="6019a-149">Raccolta la maggior parte delle classi nel <xref:System.Collections?displayProperty=nameWithType> dello spazio dei nomi anche implementare un metodo sincronizzato, che fornisce un wrapper sincronizzato per la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="6019a-149">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</span></span> <span data-ttu-id="6019a-150">Le classi derivate, tuttavia, possono fornire una propria versione sincronizzata della raccolta mediante la proprietà <xref:System.Collections.ICollection.SyncRoot%2A>.</span><span class="sxs-lookup"><span data-stu-id="6019a-150">However, derived classes can provide their own synchronized version of the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="6019a-151">Il codice di sincronizzazione deve eseguire operazioni su di <xref:System.Collections.ICollection.SyncRoot%2A> della raccolta, non direttamente sulla raccolta.</span><span class="sxs-lookup"><span data-stu-id="6019a-151">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the collection, not directly on the collection.</span></span> <span data-ttu-id="6019a-152">In questo modo si garantisce il corretto funzionamento delle raccolte derivate da altri oggetti.</span><span class="sxs-lookup"><span data-stu-id="6019a-152">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="6019a-153">Nello specifico, viene mantenuta la sincronizzazione con altri thread che potrebbero modificare contemporaneamente l'istanza della raccolta.</span><span class="sxs-lookup"><span data-stu-id="6019a-153">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</span></span>  
  
 <span data-ttu-id="6019a-154">In assenza di un metodo sincronizzato in una raccolta, l'utilizzo previsto per <xref:System.Collections.ICollection.SyncRoot%2A> ha un aspetto simile al seguente:</span><span class="sxs-lookup"><span data-stu-id="6019a-154">In the absence of a Synchronized method on a collection, the expected usage for <xref:System.Collections.ICollection.SyncRoot%2A> looks like this:</span></span>  
  
```csharp  
ICollection MyCollection =...  
 lock(MyCollection.SyncRoot) {  
  // Some operation on the collection, which is now thread safe.  
 }  
```  
  
```vb  
Dim myCollection as New ICollection()  
 SyncLock myCollection.SyncRoot  
  ' Some operation on the collection, which is now thread safe.  
 End SyncLock  
```  
  
 <span data-ttu-id="6019a-155">Enumerare una raccolta di per sé non è una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="6019a-155">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="6019a-156">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="6019a-156">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="6019a-157">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="6019a-157">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="6019a-158">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="6019a-158">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="6019a-159">Esempio di codice seguente viene illustrato come bloccare la raccolta usando il <xref:System.Collections.ICollection.SyncRoot%2A> durante l'intera enumerazione:</span><span class="sxs-lookup"><span data-stu-id="6019a-159">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
 lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6019a-160">Oggetto <see cref="T:System.Object" /> da usare come chiave dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-160">The <see cref="T:System.Object" /> to use as the key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6019a-161">Oggetto <see cref="T:System.Object" /> da usare come valore dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-161">The <see cref="T:System.Object" /> to use as the value of the element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6019a-162">Aggiunge un elemento con la chiave e il valore forniti all'oggetto <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-162">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6019a-163">È anche possibile usare la <xref:System.Collections.IDictionary.Item%2A> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel dizionario (ad esempio, `myCollection["myNonexistentKey"] = myValue`).</span><span class="sxs-lookup"><span data-stu-id="6019a-163">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="6019a-164">Tuttavia, se la chiave specificata esiste già nel dizionario, impostando il <xref:System.Collections.IDictionary.Item%2A> proprietà sovrascrive il vecchio valore.</span><span class="sxs-lookup"><span data-stu-id="6019a-164">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="6019a-165">Al contrario, il <xref:System.Collections.IDictionary.Add%2A> metodo non modifica gli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="6019a-165">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6019a-166">Nell'esempio seguente viene illustrato come implementare il metodo <xref:System.Collections.IDictionary.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="6019a-166">The following example shows how to implement the <xref:System.Collections.IDictionary.Add%2A> method.</span></span> <span data-ttu-id="6019a-167">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Collections.IDictionary> classe.</span><span class="sxs-lookup"><span data-stu-id="6019a-167">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#9](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#9)]
 [!code-csharp[Dictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#9)]
 [!code-vb[Dictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6019a-168">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-168">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6019a-169">Un elemento con la stessa chiave esiste già nell'oggetto <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-169">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6019a-170">La classe <see cref="T:System.Collections.IDictionary" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-170">The <see cref="T:System.Collections.IDictionary" /> is read-only.</span>
          </span>
          <span data-ttu-id="6019a-171">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-171">-or-</span>
          </span>
          <span data-ttu-id="6019a-172">Le dimensioni dell'oggetto <see cref="T:System.Collections.IDictionary" /> sono fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-172">The <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Clear">
      <MemberSignature Language="C#" Value="void IDictionary.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IDictionary.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Clear() = System::Collections::IDictionary::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6019a-173">Rimuove tutti gli elementi dall'oggetto <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-173">Removes all elements from the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6019a-174">Nell'esempio seguente viene illustrato come implementare il <xref:System.Collections.IDictionary.Clear%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="6019a-174">The following example demonstrates how to implement the <xref:System.Collections.IDictionary.Clear%2A> method.</span></span> <span data-ttu-id="6019a-175">In questo esempio fa parte di un esempio più esaustivo disponibile per il <xref:System.Collections.IDictionary> classe.</span><span class="sxs-lookup"><span data-stu-id="6019a-175">This example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#8](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#8)]
 [!code-csharp[Dictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#8)]
 [!code-vb[Dictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6019a-176">L'oggetto <see cref="T:System.Collections.IDictionary" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-176">The <see cref="T:System.Collections.IDictionary" /> object is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ value) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6019a-177">Chiave da individuare nell'oggetto <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-177">The key to locate in the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6019a-178">Determina se l'oggetto <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-178">Determines whether the <see cref="T:System.Collections.IDictionary" /> object contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6019a-179">
            <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-179">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6019a-180">Nell'esempio seguente viene illustrato come implementare il <xref:System.Collections.IDictionary.Contains%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="6019a-180">The following example demonstrates how to implement the <xref:System.Collections.IDictionary.Contains%2A> method.</span></span> <span data-ttu-id="6019a-181">In questo esempio fa parte di un esempio più esaustivo disponibile per il <xref:System.Collections.IDictionary> classe.</span><span class="sxs-lookup"><span data-stu-id="6019a-181">This example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#5)]
 [!code-csharp[Dictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#5)]
 [!code-vb[Dictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6019a-182">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-182">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6019a-183">Ottiene un valore che indica se le dimensioni dell'oggetto <see cref="T:System.Collections.IDictionary" /> sono fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-183">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6019a-184">
            <see langword="true" /> se le dimensioni dell'oggetto <see cref="T:System.Collections.IDictionary" /> sono fisse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-184">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6019a-185">Una raccolta con una dimensione fissa non consente l'aggiunta o rimozione di elementi dopo la raccolta viene creata, ma consente la modifica degli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="6019a-185">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="6019a-186">Una raccolta con una dimensione fissa è semplicemente una raccolta con un wrapper che impedisce l'aggiunta e rimozione di elementi. Pertanto, se vengono apportate modifiche alla raccolta sottostante, incluse l'aggiunta o rimozione di elementi, la raccolta a dimensione fissa riflette le modifiche.</span><span class="sxs-lookup"><span data-stu-id="6019a-186">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6019a-187">Nell'esempio seguente viene illustrato come implementare il <xref:System.Collections.IDictionary.IsFixedSize%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="6019a-187">The following example demonstrates how to implement the <xref:System.Collections.IDictionary.IsFixedSize%2A> property.</span></span> <span data-ttu-id="6019a-188">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Collections.IDictionary> classe.</span><span class="sxs-lookup"><span data-stu-id="6019a-188">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#6](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#6)]
 [!code-csharp[Dictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#6)]
 [!code-vb[Dictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6019a-189">Ottiene un valore che indica se l'oggetto <see cref="T:System.Collections.IDictionary" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-189">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6019a-190">
            <see langword="true" /> se l'oggetto <see cref="T:System.Collections.IDictionary" /> è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-190">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6019a-191">Una raccolta di sola lettura non consente l'aggiunta, la rimozione o la modifica di elementi dopo la sua creazione.</span><span class="sxs-lookup"><span data-stu-id="6019a-191">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6019a-192">Nell'esempio seguente viene illustrato come implementare il <xref:System.Collections.IDictionary.IsReadOnly%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="6019a-192">The following example shows how to implement the <xref:System.Collections.IDictionary.IsReadOnly%2A> property.</span></span> <span data-ttu-id="6019a-193">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Collections.IDictionary> classe.</span><span class="sxs-lookup"><span data-stu-id="6019a-193">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#4)]
 [!code-csharp[Dictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#4)]
 [!code-vb[Dictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6019a-194">Chiave dell'elemento da ottenere o impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-194">The key of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6019a-195">Ottiene o imposta l'elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-195">Gets or sets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6019a-196">Elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-196">The element with the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6019a-197">Questa proprietà consente di accedere a un elemento specifico della raccolta utilizzando la sintassi seguente: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="6019a-197">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="6019a-198">È anche possibile usare la <xref:System.Collections.IDictionary.Item%2A> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel dizionario (ad esempio, `myCollection["myNonexistentKey"] = myValue`).</span><span class="sxs-lookup"><span data-stu-id="6019a-198">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="6019a-199">Tuttavia, se la chiave specificata esiste già nel dizionario, impostando il <xref:System.Collections.IDictionary.Item%2A> proprietà sovrascrive il vecchio valore.</span><span class="sxs-lookup"><span data-stu-id="6019a-199">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="6019a-200">Al contrario, il <xref:System.Collections.IDictionary.Add%2A> metodo non modifica gli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="6019a-200">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6019a-201">Nell'esempio seguente viene illustrato come implementare il <xref:System.Collections.IDictionary.Item%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="6019a-201">The following example shows how to implement the <xref:System.Collections.IDictionary.Item%2A> property.</span></span> <span data-ttu-id="6019a-202">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Collections.IDictionary> classe.</span><span class="sxs-lookup"><span data-stu-id="6019a-202">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#13](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#13)]
 [!code-csharp[Dictionary#13](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#13)]
 [!code-vb[Dictionary#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6019a-203">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-203">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6019a-204">La proprietà è impostata e l'oggetto <see cref="T:System.Collections.IDictionary" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-204">The property is set and the <see cref="T:System.Collections.IDictionary" /> object is read-only.</span>
          </span>
          <span data-ttu-id="6019a-205">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-205">-or-</span>
          </span>
          <span data-ttu-id="6019a-206">La proprietà è impostata, <paramref name="key" /> non esiste nella raccolta e <see cref="T:System.Collections.IDictionary" /> è di dimensioni fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-206">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6019a-207">Ottiene un oggetto <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'oggetto <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-207">Gets an <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6019a-208">Oggetto <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'oggetto <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-208">An <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6019a-209">L'ordine delle chiavi nell'oggetto restituito <xref:System.Collections.ICollection> oggetto non è specificato, ma è sicuramente identico all'ordine dei valori corrispondenti nel <xref:System.Collections.ICollection> restituiti dai <xref:System.Collections.IDictionary.Values%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="6019a-209">The order of the keys in the returned <xref:System.Collections.ICollection> object is unspecified, but is guaranteed to be the same order as the corresponding values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6019a-210">Nell'esempio seguente viene illustrato come implementare il <xref:System.Collections.IDictionary.Keys%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="6019a-210">The following example shows how to implement the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span> <span data-ttu-id="6019a-211">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Collections.IDictionary> classe.</span><span class="sxs-lookup"><span data-stu-id="6019a-211">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#10](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#10)]
 [!code-csharp[Dictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#10)]
 [!code-vb[Dictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6019a-212">Chiave dell'elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-212">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6019a-213">Rimuove dall'oggetto <see cref="T:System.Collections.IDictionary" /> l'elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-213">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6019a-214">Nell'esempio seguente viene illustrato come implementare il metodo <xref:System.Collections.IDictionary.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="6019a-214">The following example shows how to implement the <xref:System.Collections.IDictionary.Remove%2A> method.</span></span> <span data-ttu-id="6019a-215">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Collections.IDictionary> classe.</span><span class="sxs-lookup"><span data-stu-id="6019a-215">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#7](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#7)]
 [!code-csharp[Dictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#7)]
 [!code-vb[Dictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6019a-216">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-216">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6019a-217">L'oggetto <see cref="T:System.Collections.IDictionary" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-217">The <see cref="T:System.Collections.IDictionary" /> object is read-only.</span>
          </span>
          <span data-ttu-id="6019a-218">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-218">-or-</span>
          </span>
          <span data-ttu-id="6019a-219">Le dimensioni dell'oggetto <see cref="T:System.Collections.IDictionary" /> sono fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-219">The <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6019a-220">Restituisce un oggetto <see cref="T:System.Collections.IEnumerable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-220">Returns an <see cref="T:System.Collections.IEnumerable" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6019a-221">Oggetto <see cref="T:System.Collections.IEnumerable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-221">An <see cref="T:System.Collections.IEnumerable" />.object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6019a-222">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="6019a-222">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="6019a-223">L'istruzione `foreach` del linguaggio C# (`for each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="6019a-223">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="6019a-224">Pertanto, l'utilizzo `foreach` consiglia invece di modificare direttamente l'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="6019a-224">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="6019a-225">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="6019a-225">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="6019a-226">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="6019a-226">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="6019a-227">Anche il metodo <xref:System.Collections.IEnumerator.Reset%2A> riporta l'enumeratore in questa posizione.</span><span class="sxs-lookup"><span data-stu-id="6019a-227"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="6019a-228">In questa posizione, la <xref:System.Collections.IEnumerator.Current%2A> proprietà non è definita.</span><span class="sxs-lookup"><span data-stu-id="6019a-228">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="6019a-229">Pertanto, è necessario chiamare il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="6019a-229">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="6019a-230"><xref:System.Collections.IEnumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="6019a-230"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="6019a-231"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="6019a-231"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="6019a-232">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="6019a-232">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="6019a-233">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="6019a-233">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="6019a-234">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituite `false`, <xref:System.Collections.IEnumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="6019a-234">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="6019a-235">Per impostare nuovamente la proprietà <xref:System.Collections.IEnumerator.Current%2A> sul primo elemento della raccolta, è possibile chiamare il metodo <xref:System.Collections.IEnumerator.Reset%2A> seguito da <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="6019a-235">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="6019a-236">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="6019a-236">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="6019a-237">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</span><span class="sxs-lookup"><span data-stu-id="6019a-237">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="6019a-238">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="6019a-238">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="6019a-239">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="6019a-239">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="6019a-240">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="6019a-240">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.DirectoryServices.PropertyCollection.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6019a-241">Ottiene i valori delle proprietà nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-241">Gets the values of the properties in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6019a-242">
            <see cref="T:System.Collections.ICollection" /> che contiene i valori delle proprietà nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6019a-242">An <see cref="T:System.Collections.ICollection" /> that contains the values of the properties in this collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6019a-243">Quando si accede a membri del <xref:System.DirectoryServices.PropertyCollection.Values%2A> proprietà, un <xref:System.Runtime.InteropServices.COMException> eccezione potrebbe essere generata a causa di un errore durante l'accesso all'interfaccia sottostante.</span><span class="sxs-lookup"><span data-stu-id="6019a-243">When accessing members of the <xref:System.DirectoryServices.PropertyCollection.Values%2A> property, a <xref:System.Runtime.InteropServices.COMException> exception might be thrown due to an error while accessing the underlying interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>