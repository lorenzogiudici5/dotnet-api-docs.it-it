<Type Name="DirectorySearcher" FullName="System.DirectoryServices.DirectorySearcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d6b44e7c63e50b8ca1bef25c5deba3cb892984c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37764144" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DirectorySearcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectorySearcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.DirectorySearcher" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectorySearcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectorySearcher : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type DirectorySearcher = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.DirectoryServices.DSDescription("DirectorySearcherDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Esegue query in Servizi di dominio Active Directory.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare un <xref:System.DirectoryServices.DirectorySearcher> oggetto da cercare ed eseguire query in una gerarchia di Active Directory Domain Services usando Lightweight Directory Access Protocol (LDAP). LDAP è l'unico provider di Active Directory Service Interfaces (ADSI) fornito dal sistema che supporta la ricerca nella directory. Un amministratore può apportare, alter ed eliminare gli oggetti presenti nella gerarchia. Per altre informazioni, vedere [Using System. DirectoryServices](http://msdn.microsoft.com/library/ffa2f003-3a9a-4e2a-815e-825c8ddd7949).  
  
 Quando si crea un'istanza di <xref:System.DirectoryServices.DirectorySearcher>, è necessario specificare la radice in cui si desidera recuperare e un elenco facoltativo delle proprietà da recuperare. Il <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> proprietà consente di impostare proprietà aggiuntive per eseguire le attività seguenti:  
  
-   Memorizzare nella cache i risultati della ricerca nel computer locale. Impostare il <xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> proprietà `true` per archiviare le informazioni di directory nel computer locale. Gli aggiornamenti vengono apportati alla cache locale e il commit in Active Directory Domain Services solo quando il <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=nameWithType> viene chiamato il metodo.  
  
-   Specificare il periodo di tempo per la ricerca, usando il <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> proprietà.  
  
-   Recuperare solo i nomi degli attributi. Impostare il <xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A> proprietà `true` per recuperare solo i nomi degli attributi a cui è stato assegnato alcun valore.  
  
-   Eseguire una ricerca per pagina. Impostare il <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> proprietà per specificare il numero massimo di oggetti restituiti in una ricerca per pagina. Se non si desidera eseguire una ricerca per pagina, impostare il <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> proprietà sul valore predefinito pari a zero.  
  
-   Specificare il numero massimo di voci da restituire, usando il <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> proprietà. Se si imposta il <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> proprietà sul valore predefinito pari a zero, il server predefinito è 1000 voci.  
  
> [!NOTE]
>  Se il numero massimo di voci restituite e limiti di tempo supera i limiti impostati nel server, le impostazioni del server eseguire l'override le impostazioni del componente.  
  
 Per un elenco dei valori iniziali delle proprietà di un'istanza della classe <xref:System.DirectoryServices.DirectorySearcher>, vedere il costruttore <xref:System.DirectoryServices.DirectorySearcher.%23ctor>.  
  
> [!NOTE]
>  Si presuppone di avere una conoscenza generale dei servizi di dominio Active Directory prima di usare questa classe. Per altre informazioni, vedere il <xref:System.DirectoryServices?displayProperty=nameWithType> Panoramica.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
      <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
    </permission>
    <altmember cref="T:System.DirectoryServices.DirectoryEntries" />
    <altmember cref="T:System.DirectoryServices.DirectoryEntry" />
    <altmember cref="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
    <altmember cref="T:System.DirectoryServices.DirectorySearcher" />
    <altmember cref="T:System.DirectoryServices.PropertyCollection" />
    <altmember cref="T:System.DirectoryServices.PropertyValueCollection" />
    <altmember cref="T:System.DirectoryServices.ReferralChasingOption" />
    <altmember cref="T:System.DirectoryServices.SearchResultCollection" />
    <altmember cref="T:System.DirectoryServices.SearchResult" />
    <altmember cref="T:System.DirectoryServices.ResultPropertyValueCollection" />
    <altmember cref="T:System.DirectoryServices.SearchScope" />
    <altmember cref="T:System.DirectoryServices.SortDirection" />
    <altmember cref="T:System.DirectoryServices.SortOption" />
    <altmember cref="N:System.DirectoryServices" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.DirectoryServices.DirectorySearcher" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> con i valori predefiniti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i valori iniziali delle proprietà del <xref:System.DirectoryServices.DirectorySearcher> oggetto.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Riferimento null (`Nothing` in Visual Basic)|  
|<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|"(objectClass=*)"|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|Oggetto <xref:System.Collections.Specialized.StringCollection> vuoto.|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : System.DirectoryServices.DirectoryEntry -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher searchRoot" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Nodo nella gerarchia dei Servizi di dominio Active Directory in cui inizia la ricerca. La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> è inizializzata su questo valore.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> utilizzando il percorso di ricerca specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i valori iniziali delle proprietà del <xref:System.DirectoryServices.DirectorySearcher> oggetto.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|"(objectClass=*)"|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|Oggetto <xref:System.Collections.Specialized.StringCollection> vuoto.|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::String ^ filter);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : string -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher filter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter">Stringa del filtro di ricerca in formato LDAP (Lightweight Directory Access Protocol). La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> è inizializzata su questo valore.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> con il filtro di ricerca specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i valori iniziali delle proprietà del <xref:System.DirectoryServices.DirectorySearcher> oggetto.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Riferimento null (`Nothing` in Visual Basic)|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|Oggetto <xref:System.Collections.Specialized.StringCollection> vuoto.|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry, filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : System.DirectoryServices.DirectoryEntry * string -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (searchRoot, filter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Nodo nella gerarchia dei Servizi di dominio Active Directory in cui inizia la ricerca. La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> è inizializzata su questo valore.</param>
        <param name="filter">Stringa del filtro di ricerca in formato LDAP (Lightweight Directory Access Protocol). La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> è inizializzata su questo valore.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> con il percorso di ricerca e il filtro di ricerca specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i valori iniziali delle proprietà del <xref:System.DirectoryServices.DirectorySearcher> oggetto.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|Oggetto <xref:System.Collections.Specialized.StringCollection> vuoto.|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (string filter, string[] propertiesToLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter, string[] propertiesToLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String, propertiesToLoad As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : string * string[] -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (filter, propertiesToLoad)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filter">Stringa del filtro di ricerca in formato LDAP (Lightweight Directory Access Protocol). La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> è inizializzata su questo valore.</param>
        <param name="propertiesToLoad">Gruppo di proprietà da recuperare durante la ricerca. La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> è inizializzata su questo valore.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> con il filtro di ricerca e le proprietà da recuperare specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i valori iniziali delle proprietà del <xref:System.DirectoryServices.DirectorySearcher> oggetto.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Riferimento null (`Nothing` in Visual Basic)|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry, filter As String, propertiesToLoad As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot, System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : System.DirectoryServices.DirectoryEntry * string * string[] -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (searchRoot, filter, propertiesToLoad)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Nodo nella gerarchia dei Servizi di dominio Active Directory in cui inizia la ricerca. La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> è inizializzata su questo valore.</param>
        <param name="filter">Stringa del filtro di ricerca in formato LDAP (Lightweight Directory Access Protocol). La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> è inizializzata su questo valore.</param>
        <param name="propertiesToLoad">Insieme di proprietà recuperate durante la ricerca. La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> è inizializzata su questo valore.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> con il percorso di ricerca, il filtro di ricerca e le proprietà da recuperare specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i valori iniziali delle proprietà del <xref:System.DirectoryServices.DirectorySearcher> oggetto.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter, string[] propertiesToLoad, valuetype System.DirectoryServices.SearchScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String, propertiesToLoad As String(), scope As SearchScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad, System::DirectoryServices::SearchScope scope);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : string * string[] * System.DirectoryServices.SearchScope -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (filter, propertiesToLoad, scope)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
        <Parameter Name="scope" Type="System.DirectoryServices.SearchScope" />
      </Parameters>
      <Docs>
        <param name="filter">Stringa del filtro di ricerca in formato LDAP (Lightweight Directory Access Protocol). La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> è inizializzata su questo valore.</param>
        <param name="propertiesToLoad">Gruppo di proprietà da recuperare durante la ricerca. La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> è inizializzata su questo valore.</param>
        <param name="scope">Ambito di ricerca visualizzato dal server. La proprietà <see cref="T:System.DirectoryServices.SearchScope" /> è inizializzata su questo valore.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> con il filtro di ricerca, le proprietà da recuperare e l'ambito di ricerca specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i valori iniziali delle proprietà del <xref:System.DirectoryServices.DirectorySearcher> oggetto.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Riferimento null (`Nothing` in Visual Basic)|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, valuetype System.DirectoryServices.SearchScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry, filter As String, propertiesToLoad As String(), scope As SearchScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot, System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad, System::DirectoryServices::SearchScope scope);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : System.DirectoryServices.DirectoryEntry * string * string[] * System.DirectoryServices.SearchScope -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (searchRoot, filter, propertiesToLoad, scope)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
        <Parameter Name="scope" Type="System.DirectoryServices.SearchScope" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Nodo nella gerarchia dei Servizi di dominio Active Directory in cui inizia la ricerca. La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> è inizializzata su questo valore.</param>
        <param name="filter">Stringa del filtro di ricerca in formato LDAP (Lightweight Directory Access Protocol). La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> è inizializzata su questo valore.</param>
        <param name="propertiesToLoad">Gruppo di proprietà da recuperare durante la ricerca. La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> è inizializzata su questo valore.</param>
        <param name="scope">Ambito di ricerca visualizzato dal server. La proprietà <see cref="T:System.DirectoryServices.SearchScope" /> è inizializzata su questo valore.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> con il percorso di ricerca, il filtro di ricerca, le proprietà da recuperare e l'ambito di ricerca specificati.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName="Asynchronous">
      <MemberSignature Language="C#" Value="public bool Asynchronous { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Asynchronous" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Asynchronous" />
      <MemberSignature Language="VB.NET" Value="Public Property Asynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Asynchronous { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Asynchronous : bool with get, set" Usage="System.DirectoryServices.DirectorySearcher.Asynchronous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSAsynchronous")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la ricerca viene eseguita in modo asincrono.</summary>
        <value>
          <see langword="true" /> se la ricerca è asincrona; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una ricerca asincrona può visualizzare i risultati quando vengono individuate durante la ricerca simultaneamente altri risultati. Ciò è utile per le attività come il popolamento di caselle di riepilogo.  
  
 L'impostazione predefinita di questa proprietà è `false`.  
  
   
  
## Examples  
 Nell'esempio c# seguente viene illustrato come creare una ricerca asincrona.  
  
```csharp  
using System.DirectoryServices;  
...  
// Bind to the users container.  
DirectoryEntry entry = new DirectoryEntry("LDAP://CN=users,DC=fabrikam,DC=com");  
// Create a DirectorySearcher object.  
DirectorySearcher mySearcher = new DirectorySearcher(entry);  
//Set the Asynchronous property to true.  
src.Asynchronous = true;  
//Use the FindAll method to get search results.  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeScopeQuery">
      <MemberSignature Language="C#" Value="public string AttributeScopeQuery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeScopeQuery" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeScopeQuery As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AttributeScopeQuery { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AttributeScopeQuery : string with get, set" Usage="System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSAttributeQuery")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome visualizzato LDAP dell'attributo con nome distinto in cui effettuare la ricerca. Per questo tipo di ricerca può essere utilizzato un solo attributo.</summary>
        <value>Nome visualizzato LDAP dell'attributo su cui effettuare la ricerca o stringa vuota qualora non sia impostata una query relativa all'ambito dell'attributo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'attributo che questa proprietà è impostata su deve essere un attributo di nome distinto, ad esempio managedBy o membro. L'attributo può essere singolo o multivalore. Per altre informazioni, vedere gli argomenti di adschema "[membro](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)"e"[Managed By](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)" in MSDN Library all'indirizzo [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 La ricerca viene eseguita sugli oggetti che vengono identificati dal nome distinto specificato nell'attributo dell'oggetto di base. Ad esempio, se l'oggetto di base è un gruppo adschema e <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> è impostato su "member", quindi verrà eseguita la ricerca su tutti gli oggetti che sono membri del gruppo. Per altre informazioni, vedere l'argomento di classe adschema "Gruppo" in MSDN Library all'indirizzo [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 Quando la <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> proprietà viene utilizzata, la <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> proprietà deve essere impostata su <xref:System.DirectoryServices.SearchScope.Base>. Se il <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> è impostata su qualsiasi altro valore, impostare il <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> proprietà genererà una <xref:System.ArgumentException>.  
  
 Per altre informazioni, vedere l'argomento "Esecuzione di una Query con ambito attributo" in MSDN Library all'indirizzo [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> proprietà con l'attributo member per ottenere i membri di un gruppo. Quindi stampa i nomi e cognomi dei membri e i numeri di telefono.  
  
```csharp  
using System.DirectoryServices;  
DirectoryEntry group = new DirectoryEntry("LDAP://CN=MyGroup, …");  
DirectorySearcher src = new DirectorySearcher(group "(&(objectClass=user)(objectCategory=Person))");  
src.AttributeScopedQuery = "member";  
src.PropertiesToLoad.Add("sn");  
src.PropertiesToLoad.Add("givenName");  
src.PropertiesToLoad.Add("telephoneNumber");  
foreach(SearchResult res in src.FindAll())  
{  
    Console.WriteLine("…");  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> è impostata su un valore diverso da <see cref="F:System.DirectoryServices.SearchScope.Base" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CacheResults">
      <MemberSignature Language="C#" Value="public bool CacheResults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheResults" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.CacheResults" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheResults { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CacheResults : bool with get, set" Usage="System.DirectoryServices.DirectorySearcher.CacheResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSCacheResults")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o imposta un valore che indica se il risultato è memorizzato nella cache del computer client.</summary>
        <value>
          <see langword="true" /> se il risultato è memorizzato nella cache del computer client; <see langword="false" /> in caso diverso. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la ricerca restituisce un set di risultati di grandi dimensioni, la ricerca sarà più efficiente se questa proprietà è impostata su `false` per evitare il trasferimento del gruppo di risultati al computer client.  Se in questo caso, tuttavia, non sarà in grado di enumerare i risultati due volte, perché il <xref:System.DirectoryServices.SearchResultCollection> oggetto crea un nuovo oggetto enumeratore ogni volta che viene chiamato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ClientTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ClientTimeout" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ClientTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ClientTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ClientTimeout : TimeSpan with get, set" Usage="System.DirectoryServices.DirectorySearcher.ClientTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSClientTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o imposta il tempo massimo di attesa del client per la restituzione dei risultati da parte del server. Se il server non risponde nell'intervallo di tempo specificato, la ricerca verrà interrotta e non verrà restituito alcun risultato.</summary>
        <value>Struttura <see cref="T:System.TimeSpan" /> che contiene il tempo di attesa massimo del client per la restituzione dei risultati da parte del server.  Il valore predefinito è -1 secondi e indica che il tempo di attesa è illimitato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La risoluzione minima di questa proprietà è un secondo. Frazioni di secondo vengono ignorate.  
  
 Se il <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> viene raggiunta prima che il client va in timeout, il server restituisce i risultati e il client si arresta in attesa. Il limite di tempo massima per il server è 120 secondi.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="DerefAlias">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DereferenceAlias DerefAlias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.DereferenceAlias DerefAlias" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.DerefAlias" />
      <MemberSignature Language="VB.NET" Value="Public Property DerefAlias As DereferenceAlias" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DereferenceAlias DerefAlias { System::DirectoryServices::DereferenceAlias get(); void set(System::DirectoryServices::DereferenceAlias value); };" />
      <MemberSignature Language="F#" Value="member this.DerefAlias : System.DirectoryServices.DereferenceAlias with get, set" Usage="System.DirectoryServices.DirectorySearcher.DerefAlias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSDerefAlias")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DereferenceAlias</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica come vengono risolti gli alias degli oggetti trovati nel corso di una ricerca.</summary>
        <value>Valore <see cref="T:System.DirectoryServices.DereferenceAlias" /> che specifica il comportamento per la dereferenziazione agli alias. L'impostazione predefinita di questa proprietà è <see cref="F:System.DirectoryServices.DereferenceAlias.Never" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio c# seguente viene illustrato come impostare il <xref:System.DirectoryServices.DirectorySearcher.DerefAlias%2A> proprietà <xref:System.DirectoryServices.DereferenceAlias.Always> , in modo che Dereferenzia gli alias durante la ricerca nei subordinati e l'individuazione degli oggetti di base.  
  
```  
using System.DirectoryServices;  
...  
// Bind to the users container.  
DirectoryEntry entry = new DirectoryEntry("LDAP://CN=users,DC=fabrikam,DC=com");  
// Create a DirectorySearcher object.  
DirectorySearcher mySearcher = new DirectorySearcher(entry);  
// Set DerefAlias to Always.  
src.DerefAlias = DerefenceAlias.Always;  
//Use the FindAll method to get search results.  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.DereferenceAlias" />
      </Docs>
    </Member>
    <Member MemberName="DirectorySynchronization">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectorySynchronization DirectorySynchronization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectorySynchronization DirectorySynchronization" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
      <MemberSignature Language="VB.NET" Value="Public Property DirectorySynchronization As DirectorySynchronization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectorySynchronization ^ DirectorySynchronization { System::DirectoryServices::DirectorySynchronization ^ get(); void set(System::DirectoryServices::DirectorySynchronization ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DirectorySynchronization : System.DirectoryServices.DirectorySynchronization with get, set" Usage="System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSDirectorySynchronization")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectorySynchronization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un oggetto che rappresenta il controllo di sincronizzazione directory da utilizzare con la ricerca.</summary>
        <value>Oggetto <see cref="T:System.DirectoryServices.DirectorySynchronization" /> per la ricerca. <see langword="null" /> se il controllo di sincronizzazione directory non deve essere utilizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il controllo di sincronizzazione directory, noto come il controllo DirSync, è un controllo LDAP che viene usato per ricercare gli oggetti che sono stati modificati dopo uno stato precedente.  
  
 Per altre informazioni, vedere l'argomento "[esecuzione del Polling delle modifiche usando il controllo DirSync](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)" in MSDN Library all'indirizzo [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="directorySearcher.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> se il metodo rilascia sia le risorse gestite che quelle non gestite; <see langword="false" /> se rilascia solo le risorse non gestite.</param>
        <summary>Rilascia le risorse gestite utilizzate dall'oggetto <see cref="T:System.DirectoryServices.DirectorySearcher" /> ed eventualmente le risorse non gestite.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedDN">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ExtendedDN ExtendedDN { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ExtendedDN ExtendedDN" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ExtendedDN" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedDN As ExtendedDN" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ExtendedDN ExtendedDN { System::DirectoryServices::ExtendedDN get(); void set(System::DirectoryServices::ExtendedDN value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedDN : System.DirectoryServices.ExtendedDN with get, set" Usage="System.DirectoryServices.DirectorySearcher.ExtendedDN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSExtendedDn")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ExtendedDN</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica il formato dei nomi distinti.</summary>
        <value>Uno dei valori di <see cref="T:System.DirectoryServices.ExtendedDN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come restituire una raccolta di nomi distinti in formato esadecimale.  
  
```csharp  
using System.DirectoryServices;  
...  
DirectorySearcher src = new DirectorySearcher("…");  
src.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  
src.ExtendedDN = ExtendedDN.HexString;  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.DirectoryServices.DirectorySearcher.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("(objectClass=*)")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSFilter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica la stringa di filtro in formato LDAP (Lightweight Directory Access Protocol).</summary>
        <value>Stringa di filtro di ricerca in formato LDAP, come "(objectClass=user)". Il valore predefinito "(objectClass=*)" consente il recupero di tutti gli oggetti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il filtro Usa le linee guida seguenti:  
  
1.  La stringa deve essere racchiuso tra parentesi.  
  
2.  Le espressioni possono usare gli operatori relazionali: <, \<=, =, > = e >. Un esempio è "(objectClass=User)". Un altro esempio è "(lastName > = Davis)".  
  
3.  Espressioni composte sono formate con operatori prefisso & e &#124;. Un esempio è "(&(objectClass=user) (lastName = Davis))". Un altro esempio è "(&(objectClass=printer) (&#124;(building=42)(building=43)))".  
  
 Quando il filtro contiene un attributo di tipo ADS_UTC_TIME, il valore deve essere nel formato yyyymmddhhmmssZ dove y, m, d, h, m e s indicano per anno, mese, giorno, ora, minuto e secondo, rispettivamente. Il valore di secondi (ss) è facoltativo. La lettera finale Z indica che non sono previsti tempi differenziale. In questo formato, "20: 10.00 Potrebbe 13, 1999" diventa"19990513102000Z". Si noti che i servizi di dominio Active Directory archivia data e ora come Coordinated Universal Time (Greenwich Mean Time). Se si specifica un'ora senza tempi di backup differenziali, si specifica l'ora in ora GMT.  
  
 Se non si è il fuso orario UTC, è possibile aggiungere un valore differenziale in Coordinated Universal Time (anziché specificare Z) per specificare un'ora in base al proprio fuso orario. Il backup differenziale è basato su quanto segue: differenziale = Coordinated Universal Time - Local. Per specificare un backup differenziale, utilizzare il seguente formato: [+ /-] hhmm aaaammgghhmmss. Ad esempio, "52:58 20.00. Marzo 23, Nuova Zelanda ora Standard (backup differenziale è 12 ore) viene specificato come "19990323205258.0 + 1200" 1999".  
  
 Per altre informazioni sul formato di stringa di ricerca LDAP, vedere "Search Filter Syntax" in MSDN Library all'indirizzo [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchResultCollection FindAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.SearchResultCollection FindAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.FindAll" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll () As SearchResultCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::SearchResultCollection ^ FindAll();" />
      <MemberSignature Language="F#" Value="member this.FindAll : unit -&gt; System.DirectoryServices.SearchResultCollection" Usage="directorySearcher.FindAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchResultCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue la ricerca e restituisce l'insieme delle voci trovate.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.SearchResultCollection" /> che contiene i risultati della ricerca.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A causa delle limitazioni di implementazione, il <xref:System.DirectoryServices.SearchResultCollection> classe non può rilasciare tutte le risorse non gestite quando è sottoposto a garbage collection. Per evitare una perdita di memoria, è necessario chiamare il <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metodo quando la <xref:System.DirectoryServices.SearchResultCollection> oggetto non è più necessario.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.DirectoryServices.DirectoryEntry" /> specificato non è un contenitore.</exception>
        <exception cref="T:System.NotSupportedException">La ricerca non è supportata dal provider in uso.</exception>
        <altmember cref="M:System.DirectoryServices.DirectorySearcher.FindOne" />
      </Docs>
    </Member>
    <Member MemberName="FindOne">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchResult FindOne ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.SearchResult FindOne() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.FindOne" />
      <MemberSignature Language="VB.NET" Value="Public Function FindOne () As SearchResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::SearchResult ^ FindOne();" />
      <MemberSignature Language="F#" Value="member this.FindOne : unit -&gt; System.DirectoryServices.SearchResult" Usage="directorySearcher.FindOne " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue la ricerca restituendo solo la prima voce trovata.</summary>
        <returns>Oggetto <see cref="T:System.DirectoryServices.SearchResult" /> che contiene la prima voce trovata nel corso della ricerca.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se viene trovata più di una voce durante la ricerca, viene restituita solo la prima voce. Se viene rilevata alcuna voce in modo che corrisponda ai criteri di ricerca, un riferimento null (`Nothing` in Visual Basic) viene restituito.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DirectoryServices.DirectorySearcher.FindAll" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : int with get, set" Usage="System.DirectoryServices.DirectorySearcher.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPageSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica la dimensione della pagina in una ricerca per pagina.</summary>
        <value>Numero massimo di oggetti che può essere restituito dal server come risultato di una ricerca per pagina. Il valore predefinito zero indica che non deve essere eseguita una ricerca per pagina.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo che il server ha individuato il numero di oggetti specificati dal <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> proprietà interrompe la ricerca e restituire i risultati al client. Quando il client richiede una maggiore quantità di dati, il server verrà riavviato la ricerca in cui è stata interrotta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il nuovo valore è minore di zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="PropertiesToLoad">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection PropertiesToLoad { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection PropertiesToLoad" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertiesToLoad As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ PropertiesToLoad { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertiesToLoad : System.Collections.Specialized.StringCollection" Usage="System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPropertiesToLoad")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica l'elenco delle proprietà da recuperare durante la ricerca.</summary>
        <value>Oggetto <see cref="T:System.Collections.Specialized.StringCollection" /> che contiene l'insieme delle proprietà da recuperare durante la ricerca..  Il valore predefinito è una <see cref="T:System.Collections.Specialized.StringCollection" /> vuota, che recupera tutte le proprietà.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per recuperare le proprietà specifiche, aggiungerli a questa raccolta prima di iniziare la ricerca. Ad esempio, `searcher.PropertiesToLoad.Add("phone");` aggiungerà le proprietà telefono per l'elenco delle proprietà da recuperare nella ricerca.  
  
 La proprietà "ADsPath" viene sempre recuperata durante la ricerca. In [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] e sistemi operativi precedenti, l'account che esegue la ricerca deve essere un membro del gruppo Administrators per recuperare la proprietà ntSecurityDescriptor. Se ciò non avviene, il valore della proprietà che viene restituito per ntSecurityDescriptor sarà `null`. Per altre informazioni, vedere l'argomento "NT--descrittore di sicurezza" in MSDN Library all'indirizzo [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
      </Docs>
    </Member>
    <Member MemberName="PropertyNamesOnly">
      <MemberSignature Language="C#" Value="public bool PropertyNamesOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PropertyNamesOnly" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyNamesOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PropertyNamesOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyNamesOnly : bool with get, set" Usage="System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPropertyNamesOnly")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o imposta un valore che indica se la ricerca viene effettuata soltanto sui nomi di attributi a cui sono stati assegnati valori.</summary>
        <value>
          <see langword="true" /> se vengono recuperati solo i nomi degli attributi a cui sono stati assegnati i valori; <see langword="false" /> se vengono recuperati solo i nomi e i valori di tutti gli attributi richiesti. Il valore predefinito è <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferralChasing">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ReferralChasingOption ReferralChasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ReferralChasingOption ReferralChasing" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ReferralChasing" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferralChasing As ReferralChasingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ReferralChasingOption ReferralChasing { System::DirectoryServices::ReferralChasingOption get(); void set(System::DirectoryServices::ReferralChasingOption value); };" />
      <MemberSignature Language="F#" Value="member this.ReferralChasing : System.DirectoryServices.ReferralChasingOption with get, set" Usage="System.DirectoryServices.DirectorySearcher.ReferralChasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSReferralChasing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ReferralChasingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica la modalità di ricerca dei riferimenti.</summary>
        <value>Uno dei valori di <see cref="T:System.DirectoryServices.ReferralChasingOption" />. Il valore predefinito è <see cref="F:System.DirectoryServices.ReferralChasingOption.External" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la ricerca di primo livello non è specificata nel contesto dei nomi del server o quando i risultati della ricerca superano un contesto dei nomi (ad esempio, quando si dispone di domini figlio e la ricerca nel dominio padre), il server invia un messaggio di riferimento al client che il client può essere  ignorare o inseguire.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore non appartiene all'enumerazione <see cref="T:System.DirectoryServices.ReferralChasingOption" />.</exception>
        <altmember cref="T:System.DirectoryServices.ReferralChasingOption" />
      </Docs>
    </Member>
    <Member MemberName="SearchRoot">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry SearchRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntry SearchRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchRoot As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntry ^ SearchRoot { System::DirectoryServices::DirectoryEntry ^ get(); void set(System::DirectoryServices::DirectoryEntry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SearchRoot : System.DirectoryServices.DirectoryEntry with get, set" Usage="System.DirectoryServices.DirectorySearcher.SearchRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSearchRoot")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica il nodo della gerarchia dei Servizi di dominio Active Directory in cui viene avviata la ricerca.</summary>
        <value>Il <see cref="T:System.DirectoryServices.DirectoryEntry" /> oggetto nella gerarchia dei Servizi di dominio Active Directory in cui inizia la ricerca. Il valore predefinito è un riferimento null (<see langword="Nothing" /> in Visual Basic).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> è un riferimento null (`Nothing` in Visual Basic), il percorso di ricerca è impostato sulla radice del dominio a cui il server è attualmente in uso.  
  
 Esistono diversi modi per eseguire la ricerca nel catalogo globale:  
  
-   Enumerare il catalogo globale e scegliere il primo elemento figlio.  
  
-   Specificare il nome del server. Utilizzare la funzione DsGetDcName per individuare il catalogo globale.  Per altre informazioni sulla funzione DsGetDcName, vedere l'argomento "DsGetDcName" in MSDN Library all'indirizzo [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
-   Recupero di RootDSE del catalogo globale e richiesta di "rootNamingContext".  
  
-   Usare il catalogo globale, che specifica un percorso di ricerca come se tramite il protocollo LDAP. Ad esempio, "GC: / / OU =..., DC =..., DC =...".  
  
-   Il codice c# seguente viene illustrato come enumerare il catalogo globale e scegliere il primo elemento figlio.  
  
    ```csharp  
    DirectoryEntry entry = new DirectoryEntry("GC://forestname");  
    IEnumerator ie = entry.Children.GetEnumerator();  
    ie.MoveNext();  
    entry = (DirectoryEntry)ie.Current;  
    DirectorySearcher search = new DirectorySearcher(entry);  
    ```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchScope">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchScope SearchScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.SearchScope SearchScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchScope As SearchScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SearchScope SearchScope { System::DirectoryServices::SearchScope get(); void set(System::DirectoryServices::SearchScope value); };" />
      <MemberSignature Language="F#" Value="member this.SearchScope : System.DirectoryServices.SearchScope with get, set" Usage="System.DirectoryServices.DirectorySearcher.SearchScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSearchScope")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica l'ambito della ricerca visualizzato dal server.</summary>
        <value>Uno dei valori di <see cref="T:System.DirectoryServices.SearchScope" />. Il valore predefinito è <see cref="F:System.DirectoryServices.SearchScope.Subtree" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore non appartiene all'enumerazione <see cref="T:System.DirectoryServices.SearchScope" />.</exception>
        <altmember cref="T:System.DirectoryServices.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName="SecurityMasks">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.SecurityMasks SecurityMasks" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SecurityMasks" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityMasks As SecurityMasks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SecurityMasks SecurityMasks { System::DirectoryServices::SecurityMasks get(); void set(System::DirectoryServices::SecurityMasks value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityMasks : System.DirectoryServices.SecurityMasks with get, set" Usage="System.DirectoryServices.DirectorySearcher.SecurityMasks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSecurityMasks")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SecurityMasks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica quali informazioni sull'accesso di sicurezza per gli attributi specificati devono essere restituite dalla ricerca.</summary>
        <value>Uno dei valori di <see cref="T:System.DirectoryServices.SecurityMasks" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
using System.DirectoryServices;  
...  
DirectorySearcher src = new DirectorySearcher("…");  
src.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  
src.SecurityMasks = SecurityMasks.Dacl | SecurityMasks.Owner;  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.SecurityMasks" />
      </Docs>
    </Member>
    <Member MemberName="ServerPageTimeLimit">
      <MemberSignature Language="C#" Value="public TimeSpan ServerPageTimeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ServerPageTimeLimit" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerPageTimeLimit As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ServerPageTimeLimit { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ServerPageTimeLimit : TimeSpan with get, set" Usage="System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSServerPageTimeLimit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica la durata massima della ricerca di una singola pagina di risultati da parte del server. Questo valore è diverso dal limite di tempo definito per l'intera ricerca.</summary>
        <value>Oggetto <see cref="T:System.TimeSpan" /> che rappresenta quanto tempo deve utilizzare il server per la ricerca di una pagina di risultati.  Il valore predefinito è -1 secondi e indica che il tempo di ricerca è illimitato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La risoluzione minima di questa proprietà è un secondo. Frazioni di secondo vengono ignorate.  
  
 Quando viene raggiunto il limite di tempo, il server si arresta la ricerca e restituisce i risultati accumulati fino a quel punto insieme a un cookie che contiene le informazioni su come riprendere la ricerca.  
  
> [!NOTE]
>  Questa proprietà si applica solo alle ricerche in cui <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> è impostata su un valore che non è il valore predefinito-1.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="ServerTimeLimit">
      <MemberSignature Language="C#" Value="public TimeSpan ServerTimeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ServerTimeLimit" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerTimeLimit As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ServerTimeLimit { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ServerTimeLimit : TimeSpan with get, set" Usage="System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSServerTimeLimit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La proprietà <see cref="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" /> ottiene o imposta un valore che indica il tempo massimo consentito al server per la ricerca. Se viene raggiunto il limite di tempo, verranno restituite soltanto le voci trovate fino a quel momento.</summary>
        <value>Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il tempo consentito al server per una ricerca.  Il valore predefinito è -1 secondi, che indica che verrà utilizzata l'impostazione predefinita determinata dal server, ovvero 120 secondi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La risoluzione minima di questa proprietà è un secondo. Frazioni di secondo vengono ignorate.  
  
 A differenza di <xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> proprietà, il <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> proprietà indica la quantità totale di tempo in cui il server può dedicare su una ricerca. Quando viene raggiunto il limite di tempo, il server si arresta la ricerca e restituisce i risultati accumulati fino a quel momento.  
  
 Impostare <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> su-1 secondi per utilizzare il valore predefinito determinato server.  
  
> [!NOTE]
>  Se si imposta <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> su un valore superiore a quello predefinito determinato server di 120 secondi, viene usato il valore predefinito determinato server. Una volta raggiunto il limite di tempo del server, è possibile continuare la ricerca da dove era stata interrotta.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
      </Docs>
    </Member>
    <Member MemberName="SizeLimit">
      <MemberSignature Language="C#" Value="public int SizeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SizeLimit" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SizeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SizeLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SizeLimit : int with get, set" Usage="System.DirectoryServices.DirectorySearcher.SizeLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSizeLimit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica il numero massimo di oggetti che il server restituisce in una ricerca.</summary>
        <value>Numero massimo di oggetti che può essere restituito dal server come risultato di una ricerca. Il valore predefinito è zero, che indica che verrà utilizzato il limite di dimensioni predefinito sul server pari a 1000 voci.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il server arresta la ricerca dopo che il limite delle dimensioni viene raggiunto e restituisce i risultati accumulati fino a quel momento.  
  
> [!NOTE]
>  Se si imposta <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> su un valore superiore a quello predefinito pari a 1000 voci determinati server, viene usato il valore predefinito determinato server.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il nuovo valore è minore di zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SortOption Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.SortOption Sort" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As SortOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SortOption ^ Sort { System::DirectoryServices::SortOption ^ get(); void set(System::DirectoryServices::SortOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sort : System.DirectoryServices.SortOption with get, set" Usage="System.DirectoryServices.DirectorySearcher.Sort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSort")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SortOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica la proprietà in base alla quale vengono ordinati i risultati.</summary>
        <value>Oggetto <see cref="T:System.DirectoryServices.SortOption" /> che specifica la proprietà e la direzione in base alle quali devono essere ordinati i risultati della ricerca.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore della proprietà è <see langword="null" /> (Nothing in Visual Basic).</exception>
        <altmember cref="T:System.DirectoryServices.SortOption" />
      </Docs>
    </Member>
    <Member MemberName="Tombstone">
      <MemberSignature Language="C#" Value="public bool Tombstone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tombstone" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Tombstone" />
      <MemberSignature Language="VB.NET" Value="Public Property Tombstone As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Tombstone { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Tombstone : bool with get, set" Usage="System.DirectoryServices.DirectorySearcher.Tombstone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSTombstone")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la ricerca deve restituire anche gli oggetti eliminati che corrispondono al filtro di ricerca.</summary>
        <value>
          <see langword="true" /> se gli oggetti eliminati devono essere inclusi nella ricerca; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio c# seguente viene illustrato come impostare il <xref:System.DirectoryServices.DirectorySearcher.Tombstone%2A> proprietà `true`.  
  
```csharp  
using System.DirectoryServices;  
...  
// Create a DirectorySearcher object.  
DirectorySearcher src = new DirectorySearcher("(isDeleted=true)");  
//Set the Tombstone property to true.  
src.Tombstone = true;  
//Use the FindAll method to get search results.  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualListView">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryVirtualListView VirtualListView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryVirtualListView VirtualListView" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.VirtualListView" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualListView As DirectoryVirtualListView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryVirtualListView ^ VirtualListView { System::DirectoryServices::DirectoryVirtualListView ^ get(); void set(System::DirectoryServices::DirectoryVirtualListView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualListView : System.DirectoryServices.DirectoryVirtualListView with get, set" Usage="System.DirectoryServices.DirectorySearcher.VirtualListView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSVirtualListView")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryVirtualListView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica le opzioni di visualizzazione elenco virtuale per la ricerca.</summary>
        <value>Oggetto <see cref="T:System.DirectoryServices.DirectoryVirtualListView" /> che contiene le informazioni sulla ricerca con visualizzazione elenco virtuale. Il valore predefinito di questa proprietà è <see langword="null" /> e indica di non utilizzare l'opzione di ricerca con visualizzazione elenco virtuale.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.DirectoryServices.DirectoryVirtualListView" />
      </Docs>
    </Member>
  </Members>
</Type>