<Type Name="TextRange" FullName="System.Windows.Documents.TextRange">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fb8c911bcd50ae7df0bc24cc8b65e1bdb494e3e5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629975" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextRange" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextRange extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextRange" />
  <TypeSignature Language="VB.NET" Value="Public Class TextRange" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextRange" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta una selezione di contenuto tra due posizioni dell'oggetto <see cref="T:System.Windows.Documents.TextPointer" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Documents.TextRange> classe introduce la seguente terminologia.  
  
-   **Selezione** : <xref:System.Windows.Documents.TextRange> è una selezione di contenuto tra due posizioni indicate da **TextPointer**.  Una di queste posizioni un ancoraggio fisso rispetto alla selezione, mentre l'altra posizione è mobile.  È simile al comportamento di una selezione effettuata da un utente tramite mouse o tastiera.  
  
-   **Selezione corrente** - perché un <xref:System.Windows.Documents.TextRange> indica sempre una selezione nel contenuto, è opportuno fare riferimento alla selezione indicata da una <xref:System.Windows.Documents.TextRange> come il *selezione corrente*.  
  
-   **Contenitore di testo** : *contenitore di testo* è l'elemento che forma il bordo finale per il contenuto di flusso vicino; selezione indicata da una <xref:System.Windows.Documents.TextRange> rientra sempre all'interno di un contenitore di testo.  Attualmente, un contenitore di testo deve essere un <xref:System.Windows.Documents.FlowDocument> o <xref:System.Windows.Controls.TextBlock>.  
  
-   **Documento** -collettivamente contenuto all'interno di un contenitore di testo viene considerato un *documento*.  
  
 Per ulteriori informazioni su altri correlati a parole quali *posizione*, vedere <xref:System.Windows.Documents.TextPointer>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo di <xref:System.Windows.Documents.TextRange.Text%2A> proprietà di un <xref:System.Windows.Documents.TextRange> per restituire la rappresentazione di testo normale di un oggetto specificato <xref:System.Windows.Documents.FlowDocument>.  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_Text](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_text)]
 [!code-vb[TextPointer_Snippets#_TextRange_Text](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_text)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextRange (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.TextPointer position1, class System.Windows.Documents.TextPointer position2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (position1 As TextPointer, position2 As TextPointer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextRange(System::Windows::Documents::TextPointer ^ position1, System::Windows::Documents::TextPointer ^ position2);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="position1" Type="System.Windows.Documents.TextPointer" />
        <Parameter Name="position2" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position1">Posizione dell'ancoraggio fissa che marca un'estremità della selezione utilizzata per formare il nuovo oggetto <see cref="T:System.Windows.Documents.TextRange" />.</param>
        <param name="position2">Posizione mobile che contrassegna l'altra estremità della selezione utilizzata per formare il nuovo oggetto <see cref="T:System.Windows.Documents.TextRange" />.</param>
        <summary>Inizializza un'istanza nuova della classe <see cref="T:System.Windows.Documents.TextRange" />, considerando due posizioni <see cref="T:System.Windows.Documents.TextPointer" /> specificate come posizioni di inizio e di fine per il nuovo intervallo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Documents.TextRange> è formato da una selezione tra due posizioni indicate da **TextPointer**.  Una di queste posizioni (indicato da `position1`) viene fissata rispetto alla selezione, mentre l'altra posizione (indicato da `position2`) è mobile.  È simile al comportamento di una selezione effettuata da un utente tramite mouse o tastiera.  
  
 Le entità finali effettive del nuovo <xref:System.Windows.Documents.TextRange> potrebbe essere modificata per corrispondere a qualsiasi regola di selezione euristica applicabili per il documento che contiene il nuovo <xref:System.Windows.Documents.TextRange>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Windows.Documents.TextRange> costruttore.  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_Text](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_text)]
 [!code-vb[TextPointer_Snippets#_TextRange_Text](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_text)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si verifica quando <paramref name="position1" /> e <paramref name="position2" /> non sono posizionati all'interno dello stesso documento.</exception>
        <exception cref="T:System.ArgumentNullException">Si verifica quando <paramref name="position1" /> o <paramref name="position2" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyPropertyValue">
      <MemberSignature Language="C#" Value="public void ApplyPropertyValue (System.Windows.DependencyProperty formattingProperty, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyPropertyValue(class System.Windows.DependencyProperty formattingProperty, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyPropertyValue (formattingProperty As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyPropertyValue(System::Windows::DependencyProperty ^ formattingProperty, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formattingProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="formattingProperty">Proprietà di formattazione da applicare.</param>
        <param name="value">Valore per la proprietà di formattazione.</param>
        <summary>Applica una proprietà di formattazione specificata e un valore alla selezione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo si applica la formattazione inserendo appropriata <xref:System.Windows.Documents.Inline> elementi, ad esempio <xref:System.Windows.Documents.Bold> e <xref:System.Windows.Documents.Italic>, nella selezione indicata da questo <xref:System.Windows.Documents.TextRange>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'uso del metodo <xref:System.Windows.Documents.TextRange.ApplyPropertyValue%2A>.  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_loadsave)]
 [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_loadsave)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si verifica quando <paramref name="formattingProperty" /> non specifica una proprietà di formattazione valida o <paramref name="value" /> specifica un valore non valido per <paramref name="formattingProperty" />.</exception>
        <exception cref="T:System.ArgumentNullException">Si verifica quando l'oggetto <paramref name="formattingProperty" /> è <see langword="null" />:</exception>
        <altmember cref="M:System.Windows.Documents.TextRange.ClearAllProperties" />
        <altmember cref="M:System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="CanLoad">
      <MemberSignature Language="C#" Value="public bool CanLoad (string dataFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanLoad(string dataFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.CanLoad(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanLoad (dataFormat As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanLoad(System::String ^ dataFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataFormat">Un formato dati per verificare la compatibilità del caricamento nella selezione corrente.  Per un elenco di formati dati predefiniti, vedere la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Controlla se la selezione corrente può essere caricata con il contenuto in un formato dati specificato.</summary>
        <returns>
          <see langword="true" /> se la selezione corrente può essere caricata con il contenuto nel formato dati specificato; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la corrispondente <xref:System.Windows.Documents.TextRange.Load%2A> metodo per caricare effettivamente il contenuto nella selezione corrente in un formato dati specificato.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'uso del metodo <xref:System.Windows.Documents.TextRange.CanLoad%2A>.  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_loadsave)]
 [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_loadsave)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextRange.CanSave(System.String)" />
        <altmember cref="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CanSave">
      <MemberSignature Language="C#" Value="public bool CanSave (string dataFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanSave(string dataFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.CanSave(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanSave (dataFormat As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanSave(System::String ^ dataFormat);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextRange.CanSave(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataFormat">Formato dati per verificare la compatibilità di salvataggio con la selezione corrente.  Per un elenco di formati dati predefiniti, vedere la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Controlla se la selezione corrente può essere salvata nel formato dati specificato.</summary>
        <returns>
          <see langword="true" /> se la selezione corrente può essere salvata nel formato dati specificato; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la corrispondente <xref:System.Windows.Documents.TextRange.Save%2A> metodo effettivamente salvare la selezione corrente in un formato dati specificato.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'uso del metodo <xref:System.Windows.Documents.TextRange.CanSave%2A>.  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_loadsave)]
 [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_loadsave)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextRange.CanLoad(System.String)" />
        <altmember cref="M:System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.TextRange.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Event Changed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Changed;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Documents.ITextRange.Changed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'intervallo viene riposizionato in riferimento a una nuova sezione di contenuto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllProperties">
      <MemberSignature Language="C#" Value="public void ClearAllProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearAllProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.ClearAllProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearAllProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearAllProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove tutte le proprietà di formattazione (rappresentato dagli elementi <see cref="T:System.Windows.Documents.Inline" /> ) dalla selezione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo influisce solo su eventuali <xref:System.Windows.Documents.Inline> la formattazione di elementi, ad esempio <xref:System.Windows.Documents.Bold> o <xref:System.Windows.Documents.Italic>. Proprietà impostate su paragrafi e altri che li racchiude <xref:System.Windows.Documents.Block> elementi non vengono modificati.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Documents.TextPointer textPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Documents.TextPointer textPointer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Documents::TextPointer ^ textPointer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPointer" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPointer">Posizione da testare per l'inclusione nella selezione corrente.</param>
        <summary>Controlla se una posizione (specificata da un oggetto <see cref="T:System.Windows.Documents.TextPointer" />) è situata all'interno della selezione corrente.</summary>
        <returns>
          <see langword="true" /> se la posizione specificata si trova nella selezione corrente; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le posizioni in delle estremità della selezione corrente (indicato da <xref:System.Windows.Documents.TextRange.Start%2A> e <xref:System.Windows.Documents.TextRange.End%2A>) vengono considerati come parte della selezione corrente.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'uso del metodo <xref:System.Windows.Documents.TextRange.Contains%2A>.  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_StartEnd](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_startend)]
 [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_startend)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si verifica quando *textPointer* non è nello stesso documento della selezione corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer End { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer End" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextRange.End" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ End { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la posizione che contrassegna l'estremità della selezione corrente.</summary>
        <value>
          <see cref="T:System.Windows.Documents.TextPointer" /> che punta all'estremità della selezione corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Windows.Documents.TextRange.End%2A> proprietà.  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_StartEnd](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_startend)]
 [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_startend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextRange.Start" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (System.Windows.DependencyProperty formattingProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyValue(class System.Windows.DependencyProperty formattingProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (formattingProperty As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(System::Windows::DependencyProperty ^ formattingProperty);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextRange.GetPropertyValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formattingProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="formattingProperty">Proprietà di formattazione della quale ottenere il valore rispetto alla selezione corrente.</param>
        <summary>Restituisce il valore effettivo di una formattazione specificata nella selezione corrente.</summary>
        <returns>Oggetto che specifica il valore della proprietà di formattazione specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per restituire un valore della proprietà, l'intero <xref:System.Windows.Documents.TextRange> deve estendersi sul testo con un solo valore per il `formattingProperty`. Se il <xref:System.Windows.Documents.TextRange> si estende sul testo con due o più valori diversi per il `formattingProperty`, <xref:System.Windows.DependencyProperty.UnsetValue> viene restituito.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si verifica quando <paramref name="formattingProperty" /> non specifica una proprietà di formattazione valida o <paramref name="value" /> specifica un valore non valido per <paramref name="formattingProperty" />.</exception>
        <exception cref="T:System.ArgumentNullException">Si verifica quando l'oggetto <paramref name="formattingProperty" /> è <see langword="null" />:</exception>
        <altmember cref="M:System.Windows.Documents.TextRange.ClearAllProperties" />
        <altmember cref="M:System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextRange.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextRange.IsEmpty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la selezione corrente è vuota o meno.</summary>
        <value>
          <see langword="true" /> se la selezione corrente è vuota, in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Documents.TextRange> viene considerato vuoto se il <xref:System.Windows.Documents.TextRange.Start%2A> e <xref:System.Windows.Documents.TextRange.End%2A> posizioni sono uguali.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Windows.Documents.TextRange.IsEmpty%2A> proprietà.  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_loadsave)]
 [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_loadsave)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream, string dataFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream, string dataFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream, System::String ^ dataFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="dataFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso leggibile che contiene dati da caricare nella selezione corrente.</param>
        <param name="dataFormat">Formato dati da utilizzare per caricare i dati.  I formati dati supportati attualmente sono <see cref="F:System.Windows.DataFormats.Rtf" />, <see cref="F:System.Windows.DataFormats.Text" />, <see cref="F:System.Windows.DataFormats.Xaml" /> e <see cref="F:System.Windows.DataFormats.XamlPackage" />.</param>
        <summary>Carica la selezione corrente in un formato dati specificato da un flusso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.IO.Stream.CanSeek%2A> è `true` per `stream`, verrà caricato dall'inizio del flusso di contenuto alla fine del flusso.  In caso contrario, il contenuto verrà letto dall'oggetto corrente <xref:System.IO.Stream.Position%2A> alla fine del flusso.  Quando termina, questo metodo `stream` viene lasciato aperto e la posizione corrente all'interno di `stream` non è definito.  
  
 Un'operazione di caricamento sostituisce la selezione corrente con il contenuto appena caricato.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'uso del metodo <xref:System.Windows.Documents.TextRange.Load%2A>.  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_loadsave)]
 [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_loadsave)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Si verifica quando <paramref name="stream" /> o <paramref name="dataFormat" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Si verifica quando il formato dati specificato non è supportato.  Può essere generato anche se il contenuto caricato da <paramref name="stream" /> non corrisponde al formato dati specificato.</exception>
        <altmember cref="M:System.Windows.Documents.TextRange.CanLoad(System.String)" />
        <altmember cref="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)" />
        <altmember cref="M:System.Windows.Documents.TextRange.CanSave(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Salva la selezione corrente in un flusso specificato in un formato dati specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream, string dataFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream, string dataFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream, System::String ^ dataFormat);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextRange.Save(System.IO.Stream,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="dataFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso vuoto, scrivibile nel quale salvare la selezione corrente.</param>
        <param name="dataFormat">Formato dati nel quale salvare la selezione corrente.  I formati dati supportati attualmente sono <see cref="F:System.Windows.DataFormats.Rtf" />, <see cref="F:System.Windows.DataFormats.Text" />, <see cref="F:System.Windows.DataFormats.Xaml" /> e <see cref="F:System.Windows.DataFormats.XamlPackage" />.</param>
        <summary>Salva la selezione corrente in un flusso specificato in un formato dati specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando termina, questo metodo `stream` viene lasciato aperto e la posizione corrente all'interno di `stream` non è definito.  
  
 Come parte del salvataggio operazione, il contenuto della selezione corrente può essere convertiti nel formato di dati specificato da `dataFormat`.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'uso del metodo <xref:System.Windows.Documents.TextRange.Save%2A>.  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_loadsave)]
 [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_loadsave)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> o <paramref name="dataFormat" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il formato dati specificato non è supportato.  
  
 -oppure–  
  
 Il contenuto caricato da <paramref name="stream" /> non corrisponde al formato dati specificato.</exception>
        <altmember cref="M:System.Windows.Documents.TextRange.CanSave(System.String)" />
        <altmember cref="M:System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)" />
        <altmember cref="M:System.Windows.Documents.TextRange.CanLoad(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream, string dataFormat, bool preserveTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream, string dataFormat, bool preserveTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream, System::String ^ dataFormat, bool preserveTextElements);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextRange.Save(System.IO.Stream,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="dataFormat" Type="System.String" />
        <Parameter Name="preserveTextElements" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso vuoto, scrivibile nel quale salvare la selezione corrente.</param>
        <param name="dataFormat">Formato dati nel quale salvare la selezione corrente.  I formati dati supportati attualmente sono <see cref="F:System.Windows.DataFormats.Rtf" />, <see cref="F:System.Windows.DataFormats.Text" />, <see cref="F:System.Windows.DataFormats.Xaml" /> e <see cref="F:System.Windows.DataFormats.XamlPackage" />.</param>
        <param name="preserveTextElements">
          <see langword="true" /> per conservare gli oggetti <see cref="T:System.Windows.Documents.TextElement" /> personalizzati; in caso contrario <see langword="false" />.</param>
        <summary>Salva la selezione corrente in un flusso specificato in un formato dati specificato, con l’opzione per conservare gli oggetti <see cref="T:System.Windows.Documents.TextElement" /> personalizzati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando `preserveTextElements` è `false`personalizzato <xref:System.Windows.Documents.TextElement> gli oggetti vengono salvati come nota <xref:System.Windows.Documents.TextElement> tipi.  Ad esempio, si supponga di crea un oggetto personalizzato <xref:System.Windows.Documents.TextElement> chiamato `Heading1`, che eredita da <xref:System.Windows.Documents.Paragraph>. Quando si chiama questo metodo con `preserveTextElements` impostato su `false`, `Heading1` viene convertito in un <xref:System.Windows.Documents.Paragraph> quando il <xref:System.Windows.Documents.TextRange> viene salvato.  Quando si chiama questo metodo con `preserveTextElements` impostato su `true`, `Heading1` viene salvato senza essere convertiti. Per mantenere gli elementi di testo personalizzato, `dataFormat` deve essere impostato su <xref:System.Windows.DataFormats.Xaml?displayProperty=nameWithType>.  
  
 <xref:System.Windows.Documents.TextRange.Save%28System.IO.Stream%2CSystem.String%2CSystem.Boolean%29> è stato introdotto in .NET Framework versione 3.5.  Per altre informazioni, vedere [Versioni e dipendenze](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Si verifica quando <paramref name="stream" /> o <paramref name="dataFormat" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Si verifica quando il formato dati specificato non è supportato.  Può essere generato anche se il contenuto caricato da <paramref name="stream" /> non corrisponde al formato dati specificato.</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Documents.TextPointer position1, class System.Windows.Documents.TextPointer position2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (position1 As TextPointer, position2 As TextPointer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Windows::Documents::TextPointer ^ position1, System::Windows::Documents::TextPointer ^ position2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position1" Type="System.Windows.Documents.TextPointer" />
        <Parameter Name="position2" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position1">Posizione di ancoraggio fissa che contrassegna un'estremità della selezione aggiornata.</param>
        <param name="position2">Posizione mobile che contrassegna l'estremità della selezione aggiornata.</param>
        <summary>Aggiorna la selezione corrente, prendendo due posizioni dell'oggetto <see cref="T:System.Windows.Documents.TextPointer" /> per indicare la selezione aggiornata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Documents.TextRange> è formato da una selezione tra due posizioni indicate da **TextPointer**.  Una di queste posizioni (indicato da `position1`) viene fissata rispetto alla selezione, mentre l'altra posizione (indicato da `position2`) è mobile.  È simile al comportamento di una selezione effettuata da un utente tramite mouse o tastiera.  
  
 È possibile modificare le entità finali della selezione del nuovo effettive per corrispondere a qualsiasi regola di selezione euristica applicabili per il documento che contiene la nuova selezione corrente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si verifica quando <paramref name="position1" /> e <paramref name="position2" /> non sono posizionati all'interno dello stesso documento.</exception>
        <exception cref="T:System.ArgumentNullException">Si verifica quando <paramref name="position1" /> o <paramref name="position2" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer Start" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextRange.Start" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Start As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ Start { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la posizione che contrassegna l'inizio della selezione corrente.</summary>
        <value>
          <see cref="T:System.Windows.Documents.TextPointer" /> che punta all'inizio della selezione corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Windows.Documents.TextRange.Start%2A> proprietà.  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_StartEnd](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_startend)]
 [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_startend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextRange.End" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextRange.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextRange.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contenuto del testo normale della selezione corrente.</summary>
        <value>Stringa che contiene il testo normale della selezione corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa proprietà per estrarre il contenuto di testo normale nella selezione corrente, indipendentemente dal fatto che sia presente alcuna formattazione.  
  
 Caratteri di nuova riga e le interruzioni di paragrafo vengono trattate come equivalenti rispetto a questa proprietà.  I tipi di interruzioni di contenuto presente nella selezione corrente vengono convertiti in nuove righe quando questa proprietà è di lettura.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Windows.Documents.TextRange.Text%2A> proprietà.  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_Text](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_text)]
 [!code-vb[TextPointer_Snippets#_TextRange_Text](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_text)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Si verifica quando viene effettuato un tentativo di impostazione della proprietà su <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>