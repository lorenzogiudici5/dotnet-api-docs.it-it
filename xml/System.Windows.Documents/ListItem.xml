<Type Name="ListItem" FullName="System.Windows.Documents.ListItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="63ce7f414054090ca0455091f3f612484cfbc42d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30630315" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListItem : System.Windows.Documents.TextElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListItem extends System.Windows.Documents.TextElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.ListItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ListItem&#xA;Inherits TextElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListItem : System::Windows::Documents::TextElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.TextElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Blocks")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Elemento di contenuto del flusso che rappresenta un particolare elemento di contenuto in un oggetto <see cref="T:System.Windows.Documents.List" /> ordinato o non ordinato.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.ListItem> Applica un modello di contenuto sicuro per il contenuto figlio. Vedere [Cenni preliminari sul modello di contenuto TextElement](~/docs/framework/wpf/advanced/textelement-content-model-overview.md) per ulteriori informazioni sul <xref:System.Windows.Documents.ListItem> modello di contenuto.  
  
 <xref:System.Windows.Documents.ListItem> gli elementi devono essere contenuti in un <xref:System.Windows.Documents.List> elemento.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come definire un <xref:System.Windows.Documents.List> utilizzando [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].  
  
 [!code-xaml[ListSnippets#_ListXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml#_listxaml)]  
  
 Nell'esempio seguente viene illustrato come creare e popolare un <xref:System.Windows.Documents.List> a livello di codice.  
  
 [!code-csharp[ListSnippets#_List_Props](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_props)]
 [!code-vb[ListSnippets#_List_Props](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_props)]  
  
 La figura seguente illustra il rendering di questo esempio.  
  
 ![Schermata: Elenco ordinato](~/add/media/ordered-list.png "schermata: elenco ordinato")  
  
 Nell'esempio seguente viene illustrato come definire un tipo annidato <xref:System.Windows.Documents.List> (sono elencati all'interno di elenchi) utilizzando [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].  
  
 [!code-xaml[ListSnippets#_NestedListXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml#_nestedlistxaml)]  
  
 La figura seguente illustra il rendering di questo esempio.  
  
 ![Elenco Nested](~/add/media/flow-nested-list-example.png "elenco annidate")  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Documents.ListItem" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.ListItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListItem (System.Windows.Documents.Paragraph paragraph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Paragraph paragraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.ListItem.#ctor(System.Windows.Documents.Paragraph)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListItem(System::Windows::Documents::Paragraph ^ paragraph);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paragraph" Type="System.Windows.Documents.Paragraph" />
      </Parameters>
      <Docs>
        <param name="paragraph">Oggetto <see cref="T:System.Windows.Documents.Paragraph" /> che specifica il contenuto iniziale del nuovo oggetto <see cref="T:System.Windows.Documents.ListItem" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Documents.ListItem" />, accettando un oggetto <see cref="T:System.Windows.Documents.Paragraph" /> specificato come contenuto iniziale del nuovo oggetto <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato l'utilizzo del costruttore.  
  
 [!code-csharp[ListSnippets#_List_Const](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_const)]
 [!code-vb[ListSnippets#_List_Const](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_const)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Blocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection Blocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection Blocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.Blocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Blocks As BlockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::BlockCollection ^ Blocks { System::Windows::Documents::BlockCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di blocchi contenente gli elementi <see cref="T:System.Windows.Documents.Block" /> di livello superiore dell'oggetto <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <value>Insieme di blocchi contenente gli elementi <see cref="T:System.Windows.Documents.Block" /> dell'oggetto <see cref="T:System.Windows.Documents.ListItem" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la raccolta di blocco restituita da questa proprietÃ  per enumerare o modificare il contenuto di un <xref:System.Windows.Documents.Section> elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush BorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush BorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.BorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ BorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un oggetto <see cref="T:System.Windows.Media.Brush" /> da utilizzare per disegnare il bordo dell'elemento.</summary>
        <value>Pennello utilizzato per applicare il bordo dell'elemento. Il valore predefinito Ã¨ <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per una tabella di campioni che mostra i colori del pennello predefiniti disponibili, vedere <xref:System.Windows.Media.Brushes>.  
  
<a name="dependencyPropertyInfo_BorderBrush"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietÃ  di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Documents.ListItem.BorderBrushProperty>|  
|Impostare le proprietÃ  dei metadati `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.BorderBrush%2A> attributo di un <xref:System.Windows.Documents.Block> elemento (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 La figura seguente illustra il rendering di questo esempio.  
  
 ![Schermata: 1 blu,&#47;4 pollici bordo intorno a Block](~/add/media/block-borders.png "schermata: bordo blu, 1/4 di pollice intorno a Block")  
  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.BorderBrush%2A> proprietÃ  a livello di codice.  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.BorderThickness" />
      </Docs>
    </Member>
    <Member MemberName="BorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.BorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietÃ  di dipendenza <see cref="P:System.Windows.Documents.ListItem.BorderBrush" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThickness">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness BorderThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness BorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.BorderThickness" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderThickness As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness BorderThickness { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo spessore del bordo per l'elemento.</summary>
        <value>Struttura <see cref="T:System.Windows.Thickness" /> che specifica la quantitÃ  di bordo da applicare, in DIP (Device Independent Pixel). Il valore predefinito Ã¨ uno spessore uniforme pari a zero (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderThickness"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object BorderThickness="uniformThickness"/>  
- or -  
<object BorderThickness="independentThickness"/>  
- or -  
<object BorderThickness="qualifiedUniformThickness"/>  
- or -  
<object BorderThickness="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_BorderThickness"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *uniformThickness*  
 Rappresentazione di stringa di un singolo <xref:System.Double> valore da applicare in modo uniforme in tutte le dimensioni di spessore quattro.  Ad esempio, un valore di `"10"` Ã¨ equivalente a un valore di `"10,10,10,10"`.  Un valore non qualificato viene misurato in DIP (device independent pixel). Le stringhe non devono includere decimali in modo esplicito.  
  
 *independentThickness*  
 Rappresentazione di stringa di quattro ordinati <xref:System.Double> valori corrispondenti alle dimensioni di spessore indipendente per i margini sinistro, superiore, destro e in basso, nell'ordine indicato.  I quattro valori devono essere separati da virgole; non sono consentiti spazi.  Ad esempio, "5,10,15,20" significa 5 pixel del bordo a sinistra del contenuto, 10 pixel del bordo superiore contenuto, 15 pixel del bordo a destra del contenuto e 20 pixel del bordo sotto il contenuto.  
  
 *qualifiedUniformThickness*  
 Valore descritto da *uniformThickness* seguito da uno degli identificatori di unitÃ  seguenti: `px`, `in`.  
  
 `px` (impostazione predefinita) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` Ã¨ pollici; in 1 = = 96px  
  
 Ad esempio, `"1in"` fornisce un bordo uniforme di 1 pollice in tutte le direzioni.  
  
 *qualifiedIndependentThickness*  
 Valore descritto da *independentThickness quale*, con ogni valore indipendente seguito da uno degli identificatori di unitÃ  seguenti: `px`, `in`.  
  
 `px` (impostazione predefinita) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` Ã¨ pollici; in 1 = = 96px  
  
 Ad esempio `"1.5in,0.8in,1.5in,0.8in"`.  Identificatori di unitÃ  potrebbero essere misto o omesso da uno o piÃ¹ valori.  
  
<a name="dependencyPropertyInfo_BorderThickness"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietÃ  di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Documents.ListItem.BorderThicknessProperty>|  
|Impostare le proprietÃ  dei metadati `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.BorderThickness%2A> attributo di un <xref:System.Windows.Documents.Block> elemento (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 La figura seguente illustra il rendering di questo esempio.  
  
 ![Schermata: 1 blu,&#47;4 pollici bordo intorno a Block](~/add/media/block-borders.png "schermata: bordo blu, 1/4 di pollice intorno a Block")  
  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.BorderThickness%2A> proprietÃ  a livello di codice.  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.BorderBrush" />
      </Docs>
    </Member>
    <Member MemberName="BorderThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.BorderThicknessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderThicknessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderThicknessProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietÃ  di dipendenza <see cref="P:System.Windows.Documents.ListItem.BorderThickness" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la direzione relativa per il flusso di contenuto all'interno di un elemento <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <value>Uno dei valori <see cref="T:System.Windows.FlowDirection" /> che specifica la direzione di flusso relativa.  Il valore predefinito Ã¨ <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ottenendo questa proprietÃ , viene restituita la direzione di flusso effettiva attuale.  Impostando questa proprietÃ , il contenuto dell'elemento <xref:System.Windows.Documents.ListItem> subisce un riflusso nella direzione indicata.  
  
 La direzione del flusso di contenuto in genere corrisponde alla direzione di flusso insita della lingua rappresentata.  Lingua ebraica e araba sono esempi di lingue che fluiscono da destra a sinistra.  Inglese, tedesco e russo sono esempi di lingue che fluiscono da sinistra a destra.  
  
> [!NOTE]
>  Il valore di questa proprietÃ  non viene automaticamente modificato in base alla lingua utilizzata dal sistema operativo. Se Ã¨ necessario utilizzare un valore diverso da quello predefinito di <xref:System.Windows.FlowDirection.LeftToRight>, Ã¨ necessario specificarlo.  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietÃ  di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Documents.ListItem.FlowDirectionProperty>|  
|Impostare le proprietÃ  dei metadati `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.FlowDirection%2A> attributo di un <xref:System.Windows.Documents.Block> elemento (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_FlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_flowdirectionxaml)]  
  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.FlowDirection%2A> proprietÃ  a livello di codice.  
  
 [!code-csharp[BlockSnippets#_Block_FlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_flowdirection)]
 [!code-vb[BlockSnippets#_Block_FlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_flowdirection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FlowDirectionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietÃ  di dipendenza <see cref="P:System.Windows.Documents.ListItem.FlowDirection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'altezza di ogni riga di contenuto.</summary>
        <value>Altezza di ogni riga, in DIP (Device Independent Pixel), nell'intervallo di valori compreso tra 0,0034 e 160000.  Il valore <see cref="F:System.Double.NaN" /> (equivalente al valore dell'attributo "<c>Auto</c>") fa sÃ¬ che l'altezza della riga venga determinata automaticamente dalle caratteristiche del carattere corrente.  Il valore predefinito Ã¨ <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modifica il <xref:System.Windows.Documents.ListItem.LineHeight%2A> valore non modifica l'altezza del testo associato, ma modifica l'altezza della riga che contiene il testo.  
  
 Oltre a questa proprietÃ , il layout delle righe in un <xref:System.Windows.Documents.ListItem> Ã¨ interessato dalla relativa <xref:System.Windows.Documents.ListItem.LineStackingStrategy%2A> proprietÃ .  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *double*  
 Rappresentazione di stringa di un <xref:System.Double> valore compreso nell'intervallo `0.0034` a `160000`. Un valore non qualificato viene misurato in DIP (device independent pixel). Le stringhe non devono includere decimali in modo esplicito.  
  
 *qualifiedDouble*  
 Oggetto *doppie* valore come descritto in precedenza, (ad eccezione di `Auto`) seguito da uno degli identificatori di unitÃ  seguenti: `px`, `in`, `cm`, `pt`.  
  
 `px` (impostazione predefinita) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` Ã¨ pollici; in 1 = = 96px  
  
 `cm` centimetri; 1cm==(96/2.54) px  
  
 `pt` punti; 1pt==(96/72) px  
  
 Auto  
 Determina l'altezza della riga venga determinata automaticamente dalle caratteristiche del carattere corrente.  Equivalente al valore della proprietÃ  <xref:System.Double.NaN?displayProperty=nameWithType>.  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietÃ  di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Documents.ListItem.LineHeightProperty>|  
|Impostare le proprietÃ  dei metadati `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.LineHeight%2A> attributo di un <xref:System.Windows.Documents.Block> elemento.  
  
 [!code-xaml[BlockSnippets#_Block_LineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_lineheightxaml)]  
  
 Nella figura seguente viene illustrato come nell'esempio precedente viene eseguito il rendering.  
  
 ![Schermata: LineHeight di FlowDocument](~/add/media/flowdocument-lineheight.png "schermata: LineHeight di FlowDocument")  
  
 La figura seguente mostra come viene eseguito rendering lo stesso esempio con l'impostazione predefinita di <xref:System.Windows.Documents.ListItem.LineHeight%2A> = <xref:System.Double.NaN?displayProperty=nameWithType>.  
  
 ![Schermata: LineHeight predefinito di FlowDocument](~/add/media/flowdocument-lineheightdefault.png "schermata: LineHeight predefinito di FlowDocument")  
  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.LineHeight%2A> proprietÃ  a livello di codice.  
  
 [!code-csharp[BlockSnippets#_Block_LineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_lineheight)]
 [!code-vb[BlockSnippets#_Block_LineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_lineheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.LineHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineHeightProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietÃ  di dipendenza <see cref="P:System.Windows.Documents.ListItem.LineHeight" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.LineStackingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Property LineStackingStrategy As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LineStackingStrategy LineStackingStrategy { System::Windows::LineStackingStrategy get(); void set(System::Windows::LineStackingStrategy value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il meccanismo che determina un riquadro delle righe per ciascuna riga di testo all'interno dell'oggetto <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <value>Uno dei valori <see cref="T:System.Windows.LineStackingStrategy" /> che specifica il meccanismo che determina un riquadro delle righe per ciascuna riga di testo all'interno di <see cref="T:System.Windows.Documents.ListItem" />. Il valore predefinito Ã¨ <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_LineStackingStrategy"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietÃ  di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Documents.ListItem.LineStackingStrategyProperty>|  
|Impostare le proprietÃ  dei metadati `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> proprietÃ  per determinare come le caselle di riga vengono create per le righe di testo di un <xref:System.Windows.Controls.TextBlock>. Il primo <xref:System.Windows.Controls.TextBlock> ha un <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> valore <xref:System.Windows.LineStackingStrategy.MaxHeight> e il secondo <xref:System.Windows.Controls.TextBlock> ha un valore di <xref:System.Windows.LineStackingStrategy.BlockLineHeight>.  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 Nella figura seguente viene illustrato il risultato del codice precedente.  
  
 ![Schermata: Confronto di valori LineStackingStrategy](~/add/media/flow-linestackingstrategy.gif "schermata: confronto LineStackingStrategy valori")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.LineStackingStrategyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineStackingStrategyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineStackingStrategyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietÃ  di dipendenza <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.List List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.List List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As List" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::List ^ List { System::Windows::Documents::List ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.List</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il <see cref="T:System.Windows.Documents.List" /> che contiene il <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <value>Elenco contenente <see cref="T:System.Windows.Documents.ListItem" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Margin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo spessore del margine per l'elemento.</summary>
        <value>Oggetto <see cref="T:System.Windows.Thickness" /> struttura che specifica la quantitÃ  di margine da applicare, in DIP (device independent pixel). Il valore predefinito Ã¨ uno spessore uniforme pari a zero (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.ListItem.Margin%2A> Ã¨ lo spazio di buffer esterno all'area di contenuto dell'elemento, tra i bordi dell'area di contenuto dell'elemento e i bordi dell'elemento padre.  Si differenzia <xref:System.Windows.Documents.ListItem.Padding%2A>, ovvero lo spazio di buffer interno all'area di contenuto dell'elemento, tra il contenuto dell'elemento e il bordo interno dell'elemento.  
  
<a name="xamlAttributeUsage_Margin"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object Margin="uniformThickness"/>  
- or -  
<object Margin="independentThickness"/>  
- or -  
<object Margin="qualifiedUniformThickness"/>  
- or -  
<object Margin="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Margin"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *uniformThickness*  
 Rappresentazione di stringa di un singolo <xref:System.Double> valore da applicare in modo uniforme in tutte le dimensioni di spessore quattro.  Ad esempio, un valore di `"10"` Ã¨ equivalente a un valore di `"10,10,10,10"`.  Un valore non qualificato viene misurato in DIP (device independent pixel). Le stringhe non devono includere decimali in modo esplicito.  
  
 *independentThickness*  
 Rappresentazione di stringa di quattro ordinati <xref:System.Double> valori corrispondenti alle dimensioni di spessore indipendente per i margini sinistro, superiore, destro e in basso, nell'ordine indicato.  I quattro valori devono essere separati da virgole; non sono consentiti spazi.  Ad esempio, "5,10,15,20" significa 5 pixel del margine a sinistra del contenuto, 10 pixel del margine superiore contenuto, 15 pixel del margine a destra del contenuto e 20 pixel del margine sotto il contenuto.  
  
 *qualifiedUniformThickness*  
 Valore descritto da *uniformThickness* seguito da uno degli identificatori di unitÃ  seguenti: `px`, `in`.  
  
 `px` (impostazione predefinita) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` Ã¨ pollici; in 1 = = 96px  
  
 Ad esempio, `"1in"` fornisce un margine uniforme di 1 pollice in tutte le direzioni.  
  
 *qualifiedIndependentThickness*  
 Valore descritto da *independentThickness quale*, con ogni valore indipendente seguito da uno degli identificatori di unitÃ  seguenti: `px`, `in`.  
  
 `px` (impostazione predefinita) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` Ã¨ pollici; in 1 = = 96px  
  
 Ad esempio `"1.5in,0.8in,1.5in,0.8in"`.  Identificatori di unitÃ  potrebbero essere misto o omesso da uno o piÃ¹ valori.  
  
<a name="dependencyPropertyInfo_Margin"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietÃ  di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Documents.ListItem.MarginProperty>|  
|Impostare le proprietÃ  dei metadati `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.Margin%2A> attributo di un <xref:System.Windows.Documents.Block> elemento (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 La figura seguente illustra il rendering di questo esempio.  Colori e spessori enorme vengono utilizzati a scopo illustrativo.  
  
 ![Schermata: Paragrafi con spaziatura e margini](~/add/media/block-marginpadding.png "schermata: paragrafi con spaziatura e margini")  
  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.Margin%2A> proprietÃ  a livello di codice.  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.Padding" />
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarginProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietÃ  di dipendenza <see cref="P:System.Windows.Documents.ListItem.Margin" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItem NextListItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItem NextListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.NextListItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextListItem As ListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItem ^ NextListItem { System::Windows::Documents::ListItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Windows.Documents.ListItem" /> successivo nell'oggetto <see cref="T:System.Windows.Documents.List" /> che lo contiene.</summary>
        <value>Oggetto <see cref="T:System.Windows.Documents.ListItem" /> successivo nell'oggetto <see cref="T:System.Windows.Documents.List" />, oppure <see langword="null" /> se non esiste un oggetto <see cref="T:System.Windows.Documents.ListItem" /> successivo.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.PreviousListItem" />
        <altmember cref="P:System.Windows.Documents.ListItem.SiblingListItems" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Padding { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo spessore della spaziatura interna per l'elemento.</summary>
        <value>Oggetto <see cref="T:System.Windows.Thickness" /> struttura che specifica la quantitÃ  di spaziatura interna da applicare, in DIP (device independent pixel). Il valore predefinito Ã¨ uno spessore uniforme pari a zero (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.ListItem.Padding%2A> Ã¨ lo spazio di buffer interno all'area di contenuto dell'elemento, tra il contenuto dell'elemento e il bordo interno dell'elemento.  Si differenzia <xref:System.Windows.Documents.ListItem.Margin%2A>, ovvero lo spazio di buffer esterno all'area di contenuto dell'elemento, tra i bordi dell'area di contenuto dell'elemento e i bordi dell'elemento padre.  
  
<a name="xamlAttributeUsage_Padding"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object Padding="uniformThickness"/>  
- or -  
<object Padding="independentThickness"/>  
- or -  
<object Padding="qualifiedUniformThickness"/>  
- or -  
<object Padding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Padding"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *uniformThickness*  
 Rappresentazione di stringa di un singolo <xref:System.Double> valore da applicare in modo uniforme in tutte le dimensioni di spessore quattro.  Ad esempio, un valore di `"10"` Ã¨ equivalente a un valore di `"10,10,10,10"`.  Un valore non qualificato viene misurato in DIP (device independent pixel). Le stringhe non devono includere decimali in modo esplicito.  
  
 *independentThickness*  
 Rappresentazione di stringa di quattro ordinati <xref:System.Double> valori corrispondenti alle dimensioni di spessore indipendente per i margini sinistro, superiore, destro e in basso, nell'ordine indicato.  I quattro valori devono essere separati da virgole; non sono consentiti spazi.  Ad esempio, "5,10,15,20" significa 5 pixel di riempimento a sinistra del contenuto, 10 pixel di spaziatura interna sopra il contenuto, 15 pixel di spaziatura interna a destra del contenuto e 20 pixel di spaziatura interna sotto il contenuto.  
  
 *qualifiedUniformThickness*  
 Valore descritto da *uniformThickness* seguito da uno degli identificatori di unitÃ  seguenti: `px`, `in`.  
  
 `px` (impostazione predefinita) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` Ã¨ pollici; in 1 = = 96px  
  
 Ad esempio, `"1in"` fornisce una spaziatura interna uniforme di 1 pollice in tutte le direzioni.  
  
 *qualifiedIndependentThickness*  
 Valore descritto da *independentThickness quale*, con ogni valore indipendente seguito da uno degli identificatori di unitÃ  seguenti: `px`, `in`.  
  
 `px` (impostazione predefinita) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` Ã¨ pollici; in 1 = = 96px  
  
 Ad esempio `"1.5in,0.8in,1.5in,0.8in"`.  Identificatori di unitÃ  potrebbero essere misto o omesso da uno o piÃ¹ valori.  
  
<a name="dependencyPropertyInfo_Padding"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietÃ  di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Documents.ListItem.PaddingProperty>|  
|Impostare le proprietÃ  dei metadati `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.Padding%2A> attributo di un <xref:System.Windows.Documents.Block> elemento (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 La figura seguente illustra il rendering di questo esempio.  Colori e spessori enorme vengono utilizzati a scopo illustrativo.  
  
 ![Schermata: Paragrafi con spaziatura e margini](~/add/media/block-marginpadding.png "schermata: paragrafi con spaziatura e margini")  
  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.Padding%2A> proprietÃ  a livello di codice.  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.Margin" />
      </Docs>
    </Member>
    <Member MemberName="PaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.PaddingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PaddingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PaddingProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietÃ  di dipendenza <see cref="P:System.Windows.Documents.ListItem.Padding" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItem PreviousListItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItem PreviousListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.PreviousListItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousListItem As ListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItem ^ PreviousListItem { System::Windows::Documents::ListItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Windows.Documents.ListItem" /> precedente nell'oggetto <see cref="T:System.Windows.Documents.List" /> che lo contiene.</summary>
        <value>Oggetto <see cref="T:System.Windows.Documents.ListItem" /> precedente nell'oggetto <see cref="T:System.Windows.Documents.List" />, oppure <see langword="null" /> se non esiste un oggetto <see cref="T:System.Windows.Documents.ListItem" /> precedente.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.NextListItem" />
        <altmember cref="P:System.Windows.Documents.ListItem.SiblingListItems" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBlocks">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeBlocks (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeBlocks(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.ListItem.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeBlocks (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeBlocks(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">Oggetto del gestore dei servizi di serializzazione per l'oggetto.</param>
        <summary>Restituisce un valore che indica se il valore effettivo della proprietÃ  <see cref="P:System.Windows.Documents.ListItem.Blocks" /> deve essere serializzato o meno durante la serializzazione dell'oggetto <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <returns>
          <see langword="true" /> se la proprietÃ  <see cref="P:System.Windows.Documents.ListItem.Blocks" /> deve essere serializzata; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <paramref name="manager" /> Ã¨ <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SiblingListItems">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItemCollection SiblingListItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItemCollection SiblingListItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.SiblingListItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SiblingListItems As ListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItemCollection ^ SiblingListItems { System::Windows::Documents::ListItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Windows.Documents.ListItemCollection" /> contenente gli elementi <see cref="T:System.Windows.Documents.ListItem" /> di pari livello rispetto all'elemento <see cref="T:System.Windows.Documents.ListItem" /> corrente.</summary>
        <value>Oggetto <see cref="T:System.Windows.Documents.ListItemCollection" /> contenente gli elementi <see cref="T:System.Windows.Documents.ListItem" /> figlio ospitati direttamente dall'entitÃ  principale dell'elemento <see cref="T:System.Windows.Documents.ListItem" /> corrente, oppure <see langword="null" /> se l'elemento <see cref="T:System.Windows.Documents.ListItem" /> corrente non possiede alcuna entitÃ  principale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Documents.ListItemCollection> restituita da questa proprietÃ  include il <xref:System.Windows.Documents.ListItem> elemento tramite il quale la raccolta Ã¨ accessibile; ovvero, l'elemento che possiede questa proprietÃ  Ã¨ considerato di pari livello ai fini della generazione dell'insieme di elementi di pari livello.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.NextListItem" />
        <altmember cref="P:System.Windows.Documents.ListItem.PreviousListItem" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica l'allineamento orizzontale del contenuto di testo.</summary>
        <value>Uno dei valori <see cref="T:System.Windows.TextAlignment" /> che specifica l'allineamento desiderato. Il valore predefinito Ã¨ <see cref="F:System.Windows.TextAlignment.Left" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietÃ  di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.Documents.ListItem.TextAlignmentProperty>|  
|Impostare le proprietÃ  dei metadati `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.Block.TextAlignment%2A> attributo di un <xref:System.Windows.Documents.Block> elemento.  
  
 [!code-xaml[BlockSnippets#_Block_TextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_textalignmentxaml)]  
  
 Nella figura seguente viene illustrato come illustrato nell'esempio precedente il rendering con <xref:System.Windows.TextAlignment.Left> l'allineamento del testo (impostazione predefinita).  
  
 ![Schermata: Valore della proprietÃ  TextAlign di sinistra](~/add/media/flowdoc-textalign-left.png "schermata: valore Left della proprietÃ  TextAlign")  
  
 La figura seguente mostra come viene eseguito il rendering dello stesso esempio con <xref:System.Windows.TextAlignment.Right> l'allineamento del testo.  
  
 ![Schermata: Valore TextAlign di destra](~/add/media/flowdoc-textalign-right.png "schermata: valore TextAlign di destra")  
  
 La figura seguente mostra come viene eseguito il rendering dello stesso esempio con <xref:System.Windows.TextAlignment.Center> l'allineamento del testo.  
  
 ![Schermata: Valore della proprietÃ  TextAlign di Center](~/add/media/flowdoc-textalign-center.png "schermata: valore Center della proprietÃ  TextAlign")  
  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Documents.ListItem.TextAlignment%2A> proprietÃ  a livello di codice.  
  
 [!code-csharp[BlockSnippets#_Block_TextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_textalignment)]
 [!code-vb[BlockSnippets#_Block_TextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_textalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietÃ  di dipendenza <see cref="P:System.Windows.Documents.ListItem.TextAlignment" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>