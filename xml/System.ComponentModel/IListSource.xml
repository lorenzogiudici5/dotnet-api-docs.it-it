<Type Name="IListSource" FullName="System.ComponentModel.IListSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="854d2280630e0531066f1e077cc99d8d435b9d8a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30375915" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IListSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListSource" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IListSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataSourceListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataSourceConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente di fornire a un oggetto le funzionalità per restituire un elenco che possa essere associato a un'origine dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È in genere utilizzare questa interfaccia per restituire un elenco che può essere associato a un'origine dati, da un oggetto che non implementa <xref:System.Collections.IList> stesso.  
  
 Associazione ai dati può essere eseguita in fase di esecuzione o in una finestra di progettazione, ma sono presenti regole per ogni. In fase di esecuzione, è possibile associare ai dati in una delle seguenti:  
  
-   <xref:System.Array>  
  
-   Responsabile dell'implementazione di <xref:System.Collections.IList>, purché l'implementatore abbia un oggetto fortemente tipizzato <xref:System.Collections.IList.Item%2A> proprietà (vale a dire il <xref:System.Type> non sia <xref:System.Object>). È possibile ottenere questo risultato effettua l'implementazione predefinita di <xref:System.Collections.IList.Item%2A> privata. Se si desidera creare un <xref:System.Collections.IList> che segue le regole di una raccolta fortemente tipizzata, è necessario derivare da <xref:System.Collections.CollectionBase>.  
  
-   Responsabile dell'implementazione di <xref:System.ComponentModel.ITypedList>.  
  
 Nella finestra di progettazione, è possibile inizializzare l'associazione a <xref:System.ComponentModel.Component> oggetti seguendo le stesse regole.  
  
> [!NOTE]
>  Gli implementatori di <xref:System.ComponentModel.IListSource> può restituire un <xref:System.Collections.IList> che contiene una raccolta di <xref:System.Collections.IList> oggetti.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come implementare il <xref:System.ComponentModel.IListSource> interfaccia. Un componente denominato `EmployeeListSource` espone un <xref:System.Collections.IList> per l'associazione dati mediante l'implementazione di <xref:System.ComponentModel.IListSource.GetList%2A> metodo. Per un elenco completo di codice, vedere [procedura: implementare l'interfaccia IListSource](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md).  
  
 [!code-csharp[System.ComponentModel.IListSource#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#1)]
 [!code-vb[System.ComponentModel.IListSource#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IListSource" />
    <altmember cref="T:System.ComponentModel.ITypedList" />
    <altmember cref="T:System.ComponentModel.BindingList`1" />
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.Collections.CollectionBase" />
  </Docs>
  <Members>
    <Member MemberName="ContainsListCollection">
      <MemberSignature Language="C#" Value="public bool ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainsListCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContainsListCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'insieme è costituito da oggetti <see cref="T:System.Collections.IList" />.</summary>
        <value>
          <see langword="true" /> se l'insieme è costituito da oggetti <see cref="T:System.Collections.IList" />, in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzo di questa proprietà in <xref:System.Data.DataSet> restituisce `true` perché la <xref:System.Data.DataSet> classe contiene una raccolta di raccolte. Utilizzo di questa proprietà in <xref:System.Data.DataTable> restituisce `false` perché la <xref:System.Data.DataTable> classe contiene una raccolta di oggetti.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come implementare il <xref:System.ComponentModel.IListSource> interfaccia. Un componente denominato `EmployeeListSource` indica che non contenga un <xref:System.Collections.IList> per l'associazione dati restituendo `false` dal <xref:System.ComponentModel.IListSource.ContainsListCollection%2A> metodo. Per un elenco completo di codice, vedere [procedura: implementare l'interfaccia IListSource](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md).  
  
 [!code-csharp[System.ComponentModel.IListSource#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#3)]
 [!code-vb[System.ComponentModel.IListSource#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public System.Collections.IList GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IListSource.GetList" />
      <MemberSignature Language="VB.NET" Value="Public Function GetList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IList ^ GetList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Collections.IList" /> che può essere associato a un'origine dati da un oggetto che non implementa un'interfaccia <see cref="T:System.Collections.IList" />.</summary>
        <returns>Un oggetto <see cref="T:System.Collections.IList" /> che può essere associato a un'origine dati dall'oggetto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come implementare il <xref:System.ComponentModel.IListSource> interfaccia. Un componente denominato `EmployeeListSource` espone un <xref:System.Collections.IList> per l'associazione dati mediante l'implementazione di <xref:System.ComponentModel.IListSource.GetList%2A> metodo. Per un elenco completo di codice, vedere [procedura: implementare l'interfaccia IListSource](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md).  
  
 [!code-csharp[System.ComponentModel.IListSource#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#4)]
 [!code-vb[System.ComponentModel.IListSource#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
  </Members>
</Type>