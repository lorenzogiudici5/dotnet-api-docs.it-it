<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4cbcf956b31b59ea60a4db449f2f1d6d9aec6137" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36705005" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AsyncCompletedEventHandler = delegate of obj * AsyncCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="28768-101">The source of the event.</span>
      <span class="sxs-lookup">
        <span data-stu-id="28768-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="28768-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="28768-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="28768-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="28768-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28768-104">Quando si crea un delegato di <xref:System.ComponentModel.AsyncCompletedEventHandler>, si identifica il metodo con cui gestire l'evento.</span><span class="sxs-lookup"><span data-stu-id="28768-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="28768-105">Per associare l'evento al gestore eventi in uso, aggiungere all'evento un'istanza del delegato.</span><span class="sxs-lookup"><span data-stu-id="28768-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="28768-106">Il metodo del gestore eventi viene chiamato ogni volta che si verifica l'evento, a meno che non venga rimosso il delegato.</span><span class="sxs-lookup"><span data-stu-id="28768-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="28768-107">Per ulteriori informazioni sui delegati del gestore eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28768-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="28768-108">Per un metodo asincrono, denominato *NomeMetodo*, nel componente, sarà necessario un corrispondente *NomeMetodo* `Completed` evento ed eventualmente *NomeMetodo* `CompletedEventArgs` classe.</span><span class="sxs-lookup"><span data-stu-id="28768-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="28768-109">Per un componente che supporta più chiamate simultanee dei relativi metodi asincroni, il client può fornire un token univoco o un ID attività, per distinguere le attività asincrone genera eventi specifici.</span><span class="sxs-lookup"><span data-stu-id="28768-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="28768-110">Il client <xref:System.ComponentModel.AsyncCompletedEventHandler> può leggere il <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> proprietà per determinare quale attività sono in fase di completamento.</span><span class="sxs-lookup"><span data-stu-id="28768-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="28768-111">L'implementazione deve utilizzare il <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> per creare un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> che associa gli ID con delle attività del client attività asincrona in sospeso.</span><span class="sxs-lookup"><span data-stu-id="28768-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28768-112">Per un esempio di codice il <xref:System.ComponentModel.AsyncCompletedEventHandler> delegato, vedere l'esempio incluso nel <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="28768-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
</Type>