<Type Name="IEditableObject" FullName="System.ComponentModel.IEditableObject">
  <TypeSignature Language="C#" Value="public interface IEditableObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEditableObject" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IEditableObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEditableObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditableObject" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a60f2-101">Offre le funzionalità per eseguire il commit o il rollback delle modifiche a un oggetto utilizzato come origine dati.</span><span class="sxs-lookup"><span data-stu-id="a60f2-101">Provides functionality to commit or rollback changes to an object that is used as a data source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a60f2-102">Questa interfaccia viene in genere utilizzata per acquisire il <xref:System.ComponentModel.IEditableObject.BeginEdit%2A>, <xref:System.ComponentModel.IEditableObject.EndEdit%2A>, e <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> semantica di un <xref:System.Data.DataRowView>.</span><span class="sxs-lookup"><span data-stu-id="a60f2-102">This interface is typically used to capture the <xref:System.ComponentModel.IEditableObject.BeginEdit%2A>, <xref:System.ComponentModel.IEditableObject.EndEdit%2A>, and <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> semantics of a <xref:System.Data.DataRowView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a60f2-103">Nell'esempio seguente viene fornita una semplice implementazione del <xref:System.ComponentModel.IEditableObject> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a60f2-103">The following sample provides a simple implementation of the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="a60f2-104">Il `Customer` archivia le informazioni utente e può essere utilizzata come una raccolta per un database di clienti.</span><span class="sxs-lookup"><span data-stu-id="a60f2-104">The `Customer` class stores customer information and can be used as a collection for a customer database.</span></span> <span data-ttu-id="a60f2-105">Questo esempio si presuppone che si usa il `CustomerList` è reperibile nell'esempio nella classe di <xref:System.ComponentModel.IBindingList> classe.</span><span class="sxs-lookup"><span data-stu-id="a60f2-105">This sample assumes that you have used the `CustomerList` class that can be found in sample in the <xref:System.ComponentModel.IBindingList> class.</span></span>  
  
 [!code-cpp[Binding_Editable#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Binding_Editable/CPP/binding_editable.cpp#1)]
 [!code-csharp[Binding_Editable#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Binding_Editable/CS/binding_editable.cs#1)]
 [!code-vb[Binding_Editable#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Binding_Editable/VB/binding_editable.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableObject.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a60f2-106">Consente di iniziare la modifica di un oggetto.</span><span class="sxs-lookup"><span data-stu-id="a60f2-106">Begins an edit on an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a60f2-107">Questo metodo viene in genere utilizzato per acquisire il <xref:System.ComponentModel.IEditableObject.BeginEdit%2A> semantica di un <xref:System.Data.DataRowView>.</span><span class="sxs-lookup"><span data-stu-id="a60f2-107">This method is typically used to capture the <xref:System.ComponentModel.IEditableObject.BeginEdit%2A> semantics of a <xref:System.Data.DataRowView>.</span></span>  
  
 <span data-ttu-id="a60f2-108">Se <xref:System.ComponentModel.IEditableObject.BeginEdit%2A> viene chiamato su un oggetto già in corso di modifica, le chiamate successive vengono ignorate.</span><span class="sxs-lookup"><span data-stu-id="a60f2-108">If <xref:System.ComponentModel.IEditableObject.BeginEdit%2A> is called on an object that is already being edited, the second and subsequent calls are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a60f2-109">Oggetto che implementa questa interfaccia richiede l'archiviazione degli aggiornamenti dopo <see cref="M:System.ComponentModel.IEditableObject.BeginEdit" /> in modo che possano essere annullati se <see cref="M:System.ComponentModel.IEditableObject.CancelEdit" /> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="a60f2-109">An object implementing this interface needs to store updates after <see cref="M:System.ComponentModel.IEditableObject.BeginEdit" /> in such a way that they can be discarded if <see cref="M:System.ComponentModel.IEditableObject.CancelEdit" /> is called.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableObject.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a60f2-110">Consente di annullare le modifiche apportate dall'ultima chiamata al metodo <see cref="M:System.ComponentModel.IEditableObject.BeginEdit" />.</span><span class="sxs-lookup"><span data-stu-id="a60f2-110">Discards changes since the last <see cref="M:System.ComponentModel.IEditableObject.BeginEdit" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a60f2-111">Questo metodo viene in genere utilizzato per acquisire il <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> semantica di un <xref:System.Data.DataRowView>.</span><span class="sxs-lookup"><span data-stu-id="a60f2-111">This method is typically used to capture the <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> semantics of a <xref:System.Data.DataRowView>.</span></span>  
  
 <span data-ttu-id="a60f2-112">Questo metodo verrà ignorato se chiamato su un oggetto che non viene modificato.</span><span class="sxs-lookup"><span data-stu-id="a60f2-112">This method will be ignored if called on an object that is not being edited.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a60f2-113">Se l'elenco di appartenenza implementa <xref:System.ComponentModel.IBindingList>, la chiamata <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> su un oggetto creato con <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> Elimina l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="a60f2-113">If the owning list implements <xref:System.ComponentModel.IBindingList>, calling <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> on an object created using <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> discards the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableObject.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a60f2-114">Consente di inserire le modifiche dall'ultima chiamata al metodo <see cref="M:System.ComponentModel.IEditableObject.BeginEdit" /> o <see cref="M:System.ComponentModel.IBindingList.AddNew" /> nell'oggetto sottostante.</span><span class="sxs-lookup"><span data-stu-id="a60f2-114">Pushes changes since the last <see cref="M:System.ComponentModel.IEditableObject.BeginEdit" /> or <see cref="M:System.ComponentModel.IBindingList.AddNew" /> call into the underlying object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a60f2-115">Questo metodo viene in genere utilizzato per acquisire il <xref:System.ComponentModel.IEditableObject.EndEdit%2A> semantica di un <xref:System.Data.DataRowView>.</span><span class="sxs-lookup"><span data-stu-id="a60f2-115">This method is typically used to capture the <xref:System.ComponentModel.IEditableObject.EndEdit%2A> semantics of a <xref:System.Data.DataRowView>.</span></span>  
  
 <span data-ttu-id="a60f2-116">Questo metodo verrà ignorato se chiamato su un oggetto che non viene modificato.</span><span class="sxs-lookup"><span data-stu-id="a60f2-116">This method will be ignored if called on an object that is not being edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>