<Type Name="BackgroundWorker" FullName="System.ComponentModel.BackgroundWorker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="39f7c80e09eb1e4015b00c77fb7fae56e118bba5" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48631327" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BackgroundWorker : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackgroundWorker extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.BackgroundWorker" />
  <TypeSignature Language="VB.NET" Value="Public Class BackgroundWorker&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class BackgroundWorker : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type BackgroundWorker = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("DoWork")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="250a0-101">Esegue un'operazione su un thread separato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="250a0-101">Executes an operation on a separate thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-102">Il <xref:System.ComponentModel.BackgroundWorker> classe consente di eseguire un'operazione su un thread dedicato separato.</span><span class="sxs-lookup"><span data-stu-id="250a0-102">The <xref:System.ComponentModel.BackgroundWorker> class allows you to run an operation on a separate, dedicated thread.</span></span> <span data-ttu-id="250a0-103">Le operazioni che richiedono molto tempo, ad esempio download e le transazioni di database possono causare l'interfaccia utente (UI) a sembrare come se ha smesso di rispondere durante l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="250a0-103">Time-consuming operations like downloads and database transactions can cause your user interface (UI) to seem as though it has stopped responding while they are running.</span></span> <span data-ttu-id="250a0-104">Quando si desidera un'interfaccia utente reattiva e si vogliano evitare ritardi associati a tali operazioni, il <xref:System.ComponentModel.BackgroundWorker> classe costituisce la soluzione ideale.</span><span class="sxs-lookup"><span data-stu-id="250a0-104">When you want a responsive UI and you are faced with long delays associated with such operations, the <xref:System.ComponentModel.BackgroundWorker> class provides a convenient solution.</span></span>  
  
 <span data-ttu-id="250a0-105">Per eseguire un'operazione impegnativa in background, creare un <xref:System.ComponentModel.BackgroundWorker> e rimanere in ascolto degli eventi che indicano lo stato di avanzamento dell'operazione e ne indicano quando l'operazione è stata completata.</span><span class="sxs-lookup"><span data-stu-id="250a0-105">To execute a time-consuming operation in the background, create a <xref:System.ComponentModel.BackgroundWorker> and listen for events that report the progress of your operation and signal when your operation is finished.</span></span> <span data-ttu-id="250a0-106">È possibile creare il <xref:System.ComponentModel.BackgroundWorker> a livello di codice oppure è possibile trascinarlo nel form dal **componenti** scheda della finestra di **della casella degli strumenti**.</span><span class="sxs-lookup"><span data-stu-id="250a0-106">You can create the <xref:System.ComponentModel.BackgroundWorker> programmatically or you can drag it onto your form from the **Components** tab of the **Toolbox**.</span></span> <span data-ttu-id="250a0-107">Se si crea il <xref:System.ComponentModel.BackgroundWorker> nella finestra di progettazione Windows Form, verrà visualizzato nella barra dei componenti e relative proprietà verranno visualizzate nella finestra Proprietà.</span><span class="sxs-lookup"><span data-stu-id="250a0-107">If you create the <xref:System.ComponentModel.BackgroundWorker> in the Windows Forms Designer, it will appear in the Component Tray, and its properties will be displayed in the Properties window.</span></span>  
  
 <span data-ttu-id="250a0-108">Per configurare un'operazione in background, aggiungere un gestore eventi per il <xref:System.ComponentModel.BackgroundWorker.DoWork> evento.</span><span class="sxs-lookup"><span data-stu-id="250a0-108">To set up for a background operation, add an event handler for the <xref:System.ComponentModel.BackgroundWorker.DoWork> event.</span></span> <span data-ttu-id="250a0-109">In questo gestore dell'evento, chiamare l'operazione desiderata.</span><span class="sxs-lookup"><span data-stu-id="250a0-109">Call your time-consuming operation in this event handler.</span></span> <span data-ttu-id="250a0-110">Per avviare l'operazione, chiamare <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="250a0-110">To start the operation, call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span> <span data-ttu-id="250a0-111">Per ricevere le notifiche degli aggiornamenti di stato di avanzamento, gestire il <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="250a0-111">To receive notifications of progress updates, handle the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="250a0-112">Per ricevere una notifica quando l'operazione è completata, gestire il <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> evento.</span><span class="sxs-lookup"><span data-stu-id="250a0-112">To receive a notification when the operation is completed, handle the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="250a0-113">È necessario prestare attenzione a non modificare tutti gli oggetti dell'interfaccia utente nel <xref:System.ComponentModel.BackgroundWorker.DoWork> gestore dell'evento.</span><span class="sxs-lookup"><span data-stu-id="250a0-113">You must be careful not to manipulate any user-interface objects in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span> <span data-ttu-id="250a0-114">Comunicare invece con l'interfaccia utente tramite il <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> e <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> eventi.</span><span class="sxs-lookup"><span data-stu-id="250a0-114">Instead, communicate to the user interface through the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> and <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> events.</span></span>  
>   
>  <span data-ttu-id="250a0-115"><xref:System.ComponentModel.BackgroundWorker> gli eventi non vengono effettuato il marshalling tra <xref:System.AppDomain> limiti.</span><span class="sxs-lookup"><span data-stu-id="250a0-115"><xref:System.ComponentModel.BackgroundWorker> events are not marshaled across <xref:System.AppDomain> boundaries.</span></span> <span data-ttu-id="250a0-116">Non usare un <xref:System.ComponentModel.BackgroundWorker> per eseguire operazioni a thread multipli in più di un componente <xref:System.AppDomain>.</span><span class="sxs-lookup"><span data-stu-id="250a0-116">Do not use a <xref:System.ComponentModel.BackgroundWorker> component to perform multithreaded operations in more than one <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="250a0-117">Se l'operazione in background richiede un parametro, chiamare <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> con il parametro.</span><span class="sxs-lookup"><span data-stu-id="250a0-117">If your background operation requires a parameter, call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> with your parameter.</span></span> <span data-ttu-id="250a0-118">All'interno di <xref:System.ComponentModel.BackgroundWorker.DoWork> gestore eventi, è possibile estrarre il parametro dal <xref:System.ComponentModel.DoWorkEventArgs.Argument%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="250a0-118">Inside the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler, you can extract the parameter from the <xref:System.ComponentModel.DoWorkEventArgs.Argument%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="250a0-119">Per altre informazioni su <xref:System.ComponentModel.BackgroundWorker>, vedere [Procedura: eseguire un'operazione in background](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).</span><span class="sxs-lookup"><span data-stu-id="250a0-119">For more information about <xref:System.ComponentModel.BackgroundWorker>, see [How to: Run an Operation in the Background](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250a0-120">Esempio di codice seguente illustra le nozioni di base di <xref:System.ComponentModel.BackgroundWorker> classe per l'esecuzione di un'operazione impegnativa in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="250a0-120">The following code example demonstrates the basics of the <xref:System.ComponentModel.BackgroundWorker> class for executing a time-consuming operation asynchronously.</span></span> <span data-ttu-id="250a0-121">La figura seguente mostra un esempio dell'output.</span><span class="sxs-lookup"><span data-stu-id="250a0-121">The following illustration shows an example of the output.</span></span>  
  
 <span data-ttu-id="250a0-122">![Esempio di BackgroundWorker semplice](~/add/media/backgroundworker-simple.png "esempio di BackgroundWorker semplice")</span><span class="sxs-lookup"><span data-stu-id="250a0-122">![BackgroundWorker simple example](~/add/media/backgroundworker-simple.png "BackgroundWorker simple example")</span></span>  
  
 <span data-ttu-id="250a0-123">Per provare questo codice, creare un'applicazione Windows Form.</span><span class="sxs-lookup"><span data-stu-id="250a0-123">To try this code, create a Windows Forms application.</span></span> <span data-ttu-id="250a0-124">Aggiungere un <xref:System.Windows.Forms.Label> controllo denominato `resultLabel` e aggiungere due <xref:System.Windows.Forms.Button> controlli denominati `startAsyncButton` e `cancelAsyncButton`.</span><span class="sxs-lookup"><span data-stu-id="250a0-124">Add a <xref:System.Windows.Forms.Label> control named `resultLabel` and add two <xref:System.Windows.Forms.Button> controls named `startAsyncButton` and `cancelAsyncButton`.</span></span> <span data-ttu-id="250a0-125">Creare <xref:System.Windows.Forms.Control.Click> gestori eventi per entrambi i pulsanti.</span><span class="sxs-lookup"><span data-stu-id="250a0-125">Create <xref:System.Windows.Forms.Control.Click> event handlers for both buttons.</span></span> <span data-ttu-id="250a0-126">Dal **componenti** della scheda della casella degli strumenti, aggiungere un <xref:System.ComponentModel.BackgroundWorker> componente denominato `backgroundWorker1`.</span><span class="sxs-lookup"><span data-stu-id="250a0-126">From the **Components** tab of the Toolbox, add a <xref:System.ComponentModel.BackgroundWorker> component named `backgroundWorker1`.</span></span> <span data-ttu-id="250a0-127">Creare <xref:System.ComponentModel.BackgroundWorker.DoWork>, <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>, e <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> gestori eventi per il <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="250a0-127">Create <xref:System.ComponentModel.BackgroundWorker.DoWork>, <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>, and <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handlers for the <xref:System.ComponentModel.BackgroundWorker>.</span></span> <span data-ttu-id="250a0-128">Nel codice del form, sostituire il codice esistente con il codice seguente.</span><span class="sxs-lookup"><span data-stu-id="250a0-128">In the code for the form, replace the existing code with the following code.</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorkerSimple#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.componentmodel.backgroundworkersimple/cs/form1.cs#1)]
 [!code-vb[System.ComponentModel.BackgroundWorkerSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.componentmodel.backgroundworkersimple/vb/form1.vb#1)]  
  
 <span data-ttu-id="250a0-129">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.ComponentModel.BackgroundWorker> classe per l'esecuzione di un'operazione impegnativa in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="250a0-129">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker> class for executing a time-consuming operation asynchronously.</span></span> <span data-ttu-id="250a0-130">La figura seguente mostra un esempio dell'output.</span><span class="sxs-lookup"><span data-stu-id="250a0-130">The following illustration shows an example of the output.</span></span>  
  
 <span data-ttu-id="250a0-131">![Esempio di BackgroundWorker Fibonacci](~/add/media/backgroundworker-fibonacci.png "esempio BackgroundWorker Fibonacci")</span><span class="sxs-lookup"><span data-stu-id="250a0-131">![BackgroundWorker Fibonacci example](~/add/media/backgroundworker-fibonacci.png "BackgroundWorker Fibonacci example")</span></span>  
  
 <span data-ttu-id="250a0-132">L'operazione viene calcolato il numero di Fibonacci selezionato, segnala gli aggiornamenti di stato di avanzamento durante il calcolo e consente un calcolo in sospeso da annullare.</span><span class="sxs-lookup"><span data-stu-id="250a0-132">The operation computes the selected Fibonacci number, reports progress updates as the calculation proceeds, and permits a pending calculation to be canceled.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#1)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#1)]
 [!code-vb[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
      <span data-ttu-id="250a0-133">Procedura: eseguire un'operazione in background</span>
      <span class="sxs-lookup">
        <span data-stu-id="250a0-133">How to: Run an Operation in the Background</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
      <span data-ttu-id="250a0-134">Suggerimenti per l'utilizzo del threading gestito</span>
      <span class="sxs-lookup">
        <span data-stu-id="250a0-134">Managed Threading Best Practices</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
      <span data-ttu-id="250a0-135">Procedura: scaricare file in background</span>
      <span class="sxs-lookup">
        <span data-stu-id="250a0-135">How to: Download a File in the Background</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackgroundWorker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BackgroundWorker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="250a0-136">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BackgroundWorker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-136">Initializes a new instance of the <see cref="T:System.ComponentModel.BackgroundWorker" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-137">Questo costruttore inizializza un <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="250a0-137">This constructor initializes a <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-138">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-138">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-139">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-139">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="backgroundWorker.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="250a0-140">Richiede l'annullamento di un'operazione in background in attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-140">Requests cancellation of a pending background operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-141"><xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> Invia una richiesta per terminare l'operazione in background in attesa e imposta il <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="250a0-141"><xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> submits a request to terminate the pending background operation and sets the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="250a0-142">Quando si chiama <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>, metodo di lavoro ha la possibilità di arrestare l'esecuzione e uscire.</span><span class="sxs-lookup"><span data-stu-id="250a0-142">When you call <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>, your worker method has an opportunity to stop its execution and exit.</span></span> <span data-ttu-id="250a0-143">Il codice di lavoro debba verificare periodicamente la <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> proprietà per vedere se è stata impostata `true`.</span><span class="sxs-lookup"><span data-stu-id="250a0-143">The worker code should periodically check the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to see if it has been set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="250a0-144">Tenere presente che il codice nel <xref:System.ComponentModel.BackgroundWorker.DoWork> gestore eventi può terminare la sua attività quando viene effettuata una richiesta di annullamento e il ciclo di polling può impedire <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> viene impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="250a0-144">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="250a0-145">In questo caso, il <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag di <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> nel <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> gestore dell'evento non verrà impostato `true`, anche se è stata effettuata una richiesta di annullamento.</span><span class="sxs-lookup"><span data-stu-id="250a0-145">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="250a0-146">Questa situazione viene denominata una *race condition* e costituisce un problema comune nella programmazione multithreading.</span><span class="sxs-lookup"><span data-stu-id="250a0-146">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="250a0-147">Per altre informazioni sulla progettazione multithreading problemi, vedere [Threading consigliate gestito](~/docs/standard/threading/managed-threading-best-practices.md).</span><span class="sxs-lookup"><span data-stu-id="250a0-147">For more information about multithreading design issues, see [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250a0-148">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> metodo per annullare un'operazione asincrona ("background").</span><span class="sxs-lookup"><span data-stu-id="250a0-148">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method to cancel an asynchronous ("background") operation.</span></span> <span data-ttu-id="250a0-149">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.BackgroundWorker> classe.</span><span class="sxs-lookup"><span data-stu-id="250a0-149">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#4)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#4)]
 [!code-vb[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="250a0-150">
            <see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-150">
              <see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> is <see langword="false" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-151">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-151">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-152">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-152">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CancellationPending">
      <MemberSignature Language="C#" Value="public bool CancellationPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancellationPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.CancellationPending" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancellationPending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CancellationPending : bool" Usage="System.ComponentModel.BackgroundWorker.CancellationPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="250a0-153">Ottiene un valore che indica se l'applicazione ha richiesto l'annullamento di un'operazione in background.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-153">Gets a value indicating whether the application has requested cancellation of a background operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="250a0-154">
            <see langword="true" /> se l'applicazione ha richiesto l'annullamento di un operazione in background; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-154">
              <see langword="true" /> if the application has requested cancellation of a background operation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="250a0-155">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-155">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-156">Se <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> viene `true`, il <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> metodo è stato chiamato sul <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="250a0-156">If <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> is `true`, then the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method has been called on the <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 <span data-ttu-id="250a0-157">Questa proprietà è destinata all'uso dal thread di lavoro, che devono verificare periodicamente <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> e interrompere l'operazione in background quando è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="250a0-157">This property is meant for use by the worker thread, which should periodically check <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> and abort the background operation when it is set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250a0-158">Esempio di codice seguente viene illustrato l'utilizzo dei <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> proprietà alla query un <xref:System.ComponentModel.BackgroundWorker> sullo stato di annullamento.</span><span class="sxs-lookup"><span data-stu-id="250a0-158">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to query a <xref:System.ComponentModel.BackgroundWorker> about its cancellation state.</span></span> <span data-ttu-id="250a0-159">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.BackgroundWorker> classe.</span><span class="sxs-lookup"><span data-stu-id="250a0-159">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#8)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#8)]
 [!code-vb[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-160">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-160">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-161">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-161">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="backgroundWorker.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="backgroundWorker.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoWork">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.DoWorkEventHandler DoWork;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.DoWorkEventHandler DoWork" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.DoWork" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoWork As DoWorkEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::DoWorkEventHandler ^ DoWork;" />
      <MemberSignature Language="F#" Value="member this.DoWork : System.ComponentModel.DoWorkEventHandler " Usage="member this.DoWork : System.ComponentModel.DoWorkEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DoWorkEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="250a0-162">Si verifica quando viene chiamato il metodo <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-162">Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" /> is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-163">Questo evento viene generato quando si chiama il <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="250a0-163">This event is raised when you call the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method.</span></span> <span data-ttu-id="250a0-164">Ciò avviene quando si avvia l'operazione che esegue le operazioni potrebbe richiedere molto tempo.</span><span class="sxs-lookup"><span data-stu-id="250a0-164">This is where you start the operation that performs the potentially time-consuming work.</span></span>  
  
 <span data-ttu-id="250a0-165">Il codice nel <xref:System.ComponentModel.BackgroundWorker.DoWork> gestore dell'evento debba verificare periodicamente la <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> valore della proprietà e interrompere l'operazione se si tratta di `true`.</span><span class="sxs-lookup"><span data-stu-id="250a0-165">Your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler should periodically check the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property value and abort the operation if it is `true`.</span></span> <span data-ttu-id="250a0-166">In questo caso, è possibile impostare il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag di <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> a `true`e il <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag di <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> nel <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> gestore dell'evento verrà impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="250a0-166">When this occurs, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag of <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> to `true`, and the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will be set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="250a0-167">Tenere presente che il codice nel <xref:System.ComponentModel.BackgroundWorker.DoWork> gestore eventi può terminare la sua attività quando viene effettuata una richiesta di annullamento e il ciclo di polling può impedire <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> viene impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="250a0-167">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="250a0-168">In questo caso, il <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag di <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> nel <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> gestore dell'evento non verrà impostato `true`, anche se è stata effettuata una richiesta di annullamento.</span><span class="sxs-lookup"><span data-stu-id="250a0-168">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="250a0-169">Questa situazione viene denominata una *race condition* e costituisce un problema comune nella programmazione multithreading.</span><span class="sxs-lookup"><span data-stu-id="250a0-169">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="250a0-170">Per altre informazioni sulla progettazione multithreading problemi, vedere [Threading consigliate gestito](~/docs/standard/threading/managed-threading-best-practices.md).</span><span class="sxs-lookup"><span data-stu-id="250a0-170">For more information about multithreading design issues, see [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span></span>  
  
 <span data-ttu-id="250a0-171">Se l'operazione produce un risultato, è possibile assegnare il risultato di <xref:System.ComponentModel.DoWorkEventArgs.Result%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="250a0-171">If your operation produces a result, you can assign the result to the <xref:System.ComponentModel.DoWorkEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="250a0-172">Questo sarà disponibile per il <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> gestore dell'evento nel <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="250a0-172">This will be available to the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler in the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="250a0-173">Se l'operazione genera un'eccezione che il codice non gestito, il <xref:System.ComponentModel.BackgroundWorker> intercetta l'eccezione e lo passa nel <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> gestore eventi, in cui viene esposta come il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà della <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="250a0-173">If the operation raises an exception that your code does not handle, the <xref:System.ComponentModel.BackgroundWorker> catches the exception and passes it into the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler, where it is exposed as the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType>.</span></span> <span data-ttu-id="250a0-174">Se si esegue il debugger di Visual Studio, il debugger si interrompe in corrispondenza del punto nel <xref:System.ComponentModel.BackgroundWorker.DoWork> gestore dell'evento in cui è stata generata l'eccezione non gestita.</span><span class="sxs-lookup"><span data-stu-id="250a0-174">If you are running under the Visual Studio debugger, the debugger will break at the point in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler where the unhandled exception was raised.</span></span> <span data-ttu-id="250a0-175">Se si dispone di più di uno <xref:System.ComponentModel.BackgroundWorker>, è consigliabile non fare riferimento ad esse direttamente, verrebbe le <xref:System.ComponentModel.BackgroundWorker.DoWork> gestore eventi da un'istanza specifica di <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="250a0-175">If you have more than one <xref:System.ComponentModel.BackgroundWorker>, you should not reference any of them directly, as this would couple your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler to a specific instance of <xref:System.ComponentModel.BackgroundWorker>.</span></span> <span data-ttu-id="250a0-176">Invece, dovrebbe accedere il <xref:System.ComponentModel.BackgroundWorker> eseguendo il cast di `sender` parametro nel <xref:System.ComponentModel.BackgroundWorker.DoWork> gestore dell'evento.</span><span class="sxs-lookup"><span data-stu-id="250a0-176">Instead, you should access your <xref:System.ComponentModel.BackgroundWorker> by casting the `sender` parameter in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span>  
  
 <span data-ttu-id="250a0-177">È necessario prestare attenzione a non modificare tutti gli oggetti dell'interfaccia utente nel <xref:System.ComponentModel.BackgroundWorker.DoWork> gestore dell'evento.</span><span class="sxs-lookup"><span data-stu-id="250a0-177">You must be careful not to manipulate any user-interface objects in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span> <span data-ttu-id="250a0-178">Comunicare invece con l'interfaccia utente tramite il <xref:System.ComponentModel.BackgroundWorker> gli eventi.</span><span class="sxs-lookup"><span data-stu-id="250a0-178">Instead, communicate to the user interface through the <xref:System.ComponentModel.BackgroundWorker> events.</span></span>  
  
 <span data-ttu-id="250a0-179">Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="250a0-179">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250a0-180">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.ComponentModel.BackgroundWorker.DoWork> evento per avviare un'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="250a0-180">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.DoWork> event to start an asynchronous operation.</span></span> <span data-ttu-id="250a0-181">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.BackgroundWorker> classe.</span><span class="sxs-lookup"><span data-stu-id="250a0-181">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#5)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#5)]
 [!code-vb[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-182">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-182">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
          <span data-ttu-id="250a0-183">Suggerimenti per l'utilizzo del threading gestito</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-183">Managed Threading Best Practices</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-184">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-184">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.ComponentModel.BackgroundWorker.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="250a0-185">Ottiene un valore che indica se <see cref="T:System.ComponentModel.BackgroundWorker" /> sta eseguendo un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-185">Gets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> is running an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="250a0-186">
            <see langword="true" /> se la classe <see cref="T:System.ComponentModel.BackgroundWorker" /> sta eseguendo un'operazione asincrona; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-186">
              <see langword="true" />, if the <see cref="T:System.ComponentModel.BackgroundWorker" /> is running an asynchronous operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-187">Il <xref:System.ComponentModel.BackgroundWorker> avvia un'operazione asincrona quando si chiama <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="250a0-187">The <xref:System.ComponentModel.BackgroundWorker> starts an asynchronous operation when you call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250a0-188">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> proprietà per attendere il completamento di un <xref:System.ComponentModel.BackgroundWorker> operazione.</span><span class="sxs-lookup"><span data-stu-id="250a0-188">The following code example demonstrates how to use the <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> property to wait for completion of a <xref:System.ComponentModel.BackgroundWorker> operation.</span></span> <span data-ttu-id="250a0-189">Questo esempio di codice fa parte di un esempio più esaustivo, descritto nella [procedura: scaricare un File in Background](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span><span class="sxs-lookup"><span data-stu-id="250a0-189">This code example is part of a larger example described in [How to: Download a File in the Background](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="Overload:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-190">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-190">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-191">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-191">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OnDoWork">
      <MemberSignature Language="C#" Value="protected virtual void OnDoWork (System.ComponentModel.DoWorkEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoWork(class System.ComponentModel.DoWorkEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoWork (e As DoWorkEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoWork(System::ComponentModel::DoWorkEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoWork : System.ComponentModel.DoWorkEventArgs -&gt; unit&#xA;override this.OnDoWork : System.ComponentModel.DoWorkEventArgs -&gt; unit" Usage="backgroundWorker.OnDoWork e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.DoWorkEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="250a0-192">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-192">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="250a0-193">Genera l'evento <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-193">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProgressChanged (System.ComponentModel.ProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressChanged(class System.ComponentModel.ProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressChanged (e As ProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressChanged(System::ComponentModel::ProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProgressChanged : System.ComponentModel.ProgressChangedEventArgs -&gt; unit&#xA;override this.OnProgressChanged : System.ComponentModel.ProgressChangedEventArgs -&gt; unit" Usage="backgroundWorker.OnProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="250a0-194">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-194">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="250a0-195">Genera l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-195">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-196">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="250a0-196">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="250a0-197">Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="250a0-197">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="250a0-198">Il metodo <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="250a0-198">The <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="250a0-199">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="250a0-199">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250a0-200">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> metodo per segnalare lo stato di avanzamento di un'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="250a0-200">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> method to report the progress of an asynchronous operation.</span></span> <span data-ttu-id="250a0-201">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.AsyncOperationManager> classe.</span><span class="sxs-lookup"><span data-stu-id="250a0-201">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#24)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#24)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="250a0-202">Quando si esegue l'override di <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="250a0-202">When overriding <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-203">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-203">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-204">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-204">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OnRunWorkerCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRunWorkerCompleted (System.ComponentModel.RunWorkerCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRunWorkerCompleted(class System.ComponentModel.RunWorkerCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRunWorkerCompleted (e As RunWorkerCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRunWorkerCompleted(System::ComponentModel::RunWorkerCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventArgs -&gt; unit&#xA;override this.OnRunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventArgs -&gt; unit" Usage="backgroundWorker.OnRunWorkerCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.RunWorkerCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="250a0-205">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-205">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="250a0-206">Genera l'evento <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-206">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-207">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="250a0-207">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="250a0-208">Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="250a0-208">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="250a0-209">Il metodo <xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="250a0-209">The <xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="250a0-210">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="250a0-210">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="250a0-211">Quando si esegue l'override di <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="250a0-211">When overriding <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-212">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-212">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-213">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-213">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ProgressChangedEventHandler ProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProgressChanged As ProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::ProgressChangedEventHandler ^ ProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ProgressChanged : System.ComponentModel.ProgressChangedEventHandler " Usage="member this.ProgressChanged : System.ComponentModel.ProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="250a0-214">Si verifica quando viene chiamato il metodo <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-214">Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" /> is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-215">Questo evento viene generato quando si chiama il <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="250a0-215">This event is raised when you call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method.</span></span>  
  
 <span data-ttu-id="250a0-216">Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="250a0-216">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250a0-217">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> evento per segnalare lo stato di avanzamento di un'operazione asincrona all'utente.</span><span class="sxs-lookup"><span data-stu-id="250a0-217">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="250a0-218">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.BackgroundWorker> classe.</span><span class="sxs-lookup"><span data-stu-id="250a0-218">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#7)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#7)]
 [!code-vb[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-219">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-219">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-220">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-220">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReportProgress">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="250a0-221">Genera l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-221">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportProgress(int32 percentProgress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportProgress (percentProgress As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportProgress(int percentProgress);" />
      <MemberSignature Language="F#" Value="member this.ReportProgress : int -&gt; unit" Usage="backgroundWorker.ReportProgress percentProgress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentProgress" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percentProgress">
          <span data-ttu-id="250a0-222">La percentuale di completamento, da 0 a 100, dell'operazione in background.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-222">The percentage, from 0 to 100, of the background operation that is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="250a0-223">Genera l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-223">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-224">Se è necessario l'operazione in background per inviare segnalazioni sullo stato di avanzamento, è possibile chiamare il <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> metodo per generare il <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="250a0-224">If you need the background operation to report on its progress, you can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="250a0-225">Il <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> valore della proprietà deve essere `true`, o <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> genererà un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="250a0-225">The <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property value must be `true`, or <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="250a0-226">È responsabilità dell'utente per implementare in modo corretto di misurare lo stato di avanzamento dell'operazione in background come una percentuale totale completata dell'attività.</span><span class="sxs-lookup"><span data-stu-id="250a0-226">It is up to you to implement a meaningful way of measuring your background operation's progress as a percentage of the total task completed.</span></span>  
  
 <span data-ttu-id="250a0-227">La chiamata al <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> metodo è asincrono e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="250a0-227">The call to the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method is asynchronous and returns immediately.</span></span> <span data-ttu-id="250a0-228">Il <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> gestore eventi viene eseguito sul thread che ha creato il <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="250a0-228">The <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event handler executes on the thread that created the <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250a0-229">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> metodo per segnalare lo stato di avanzamento di un'operazione asincrona all'utente.</span><span class="sxs-lookup"><span data-stu-id="250a0-229">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="250a0-230">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.BackgroundWorker> classe.</span><span class="sxs-lookup"><span data-stu-id="250a0-230">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#8)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#8)]
 [!code-vb[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="250a0-231">La proprietà <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> è impostata su <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-231">The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> property is set to <see langword="false" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-232">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-232">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-233">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-233">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportProgress(int32 percentProgress, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportProgress (percentProgress As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportProgress(int percentProgress, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ReportProgress : int * obj -&gt; unit" Usage="backgroundWorker.ReportProgress (percentProgress, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentProgress" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="percentProgress">
          <span data-ttu-id="250a0-234">La percentuale di completamento, da 0 a 100, dell'operazione in background.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-234">The percentage, from 0 to 100, of the background operation that is complete.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="250a0-235">L'oggetto di stato passato a <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-235">The state object passed to <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="250a0-236">Genera l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-236">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-237">Se è necessario l'operazione in background per inviare segnalazioni sullo stato di avanzamento, è possibile chiamare il <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> metodo per generare il <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="250a0-237">If you need the background operation to report on its progress, you can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="250a0-238">Il <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> valore della proprietà deve essere `true`, o <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> genererà un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="250a0-238">The <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property value must `true`, or <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="250a0-239">È responsabilità dell'utente per implementare in modo corretto di misurare lo stato di avanzamento dell'operazione in background come una percentuale totale completata dell'attività.</span><span class="sxs-lookup"><span data-stu-id="250a0-239">It is up to you to implement a meaningful way of measuring your background operation's progress as a percentage of the total task completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250a0-240">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> metodo per segnalare lo stato di avanzamento di un'operazione asincrona all'utente.</span><span class="sxs-lookup"><span data-stu-id="250a0-240">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="250a0-241">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Windows.Forms.ToolStripProgressBar> classe.</span><span class="sxs-lookup"><span data-stu-id="250a0-241">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ToolStripProgressBar> class.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripProgressBar#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripProgressBar/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.ToolStripProgressBar#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripProgressBar/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="250a0-242">La proprietà <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> è impostata su <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-242">The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> property is set to <see langword="false" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-243">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-243">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-244">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-244">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RunWorkerAsync">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="250a0-245">Avvia l'esecuzione di un'operazione in background.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-245">Starts execution of a background operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RunWorkerAsync">
      <MemberSignature Language="C#" Value="public void RunWorkerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunWorkerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunWorkerAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunWorkerAsync();" />
      <MemberSignature Language="F#" Value="member this.RunWorkerAsync : unit -&gt; unit" Usage="backgroundWorker.RunWorkerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="250a0-246">Avvia l'esecuzione di un'operazione in background.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-246">Starts execution of a background operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-247">Il <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> metodo invia una richiesta per avviare l'operazione in esecuzione in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="250a0-247">The <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method submits a request to start the operation running asynchronously.</span></span> <span data-ttu-id="250a0-248">Quando la richiesta viene elaborata, il <xref:System.ComponentModel.BackgroundWorker.DoWork> evento viene generato, che a sua volta avvia l'esecuzione dell'operazione in background.</span><span class="sxs-lookup"><span data-stu-id="250a0-248">When the request is serviced, the <xref:System.ComponentModel.BackgroundWorker.DoWork> event is raised, which in turn starts execution of your background operation.</span></span>  
  
 <span data-ttu-id="250a0-249">Se l'operazione in background è già in esecuzione, la chiamata <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> anche in questo caso verrà generato un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="250a0-249">If the background operation is already running, calling <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> again will raise an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250a0-250">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> metodo per avviare un'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="250a0-250">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method to start an asynchronous operation.</span></span> <span data-ttu-id="250a0-251">Fa parte di un esempio più esaustivo, descritto nella [procedura: scaricare un File in Background](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span><span class="sxs-lookup"><span data-stu-id="250a0-251">It is part of a larger example described in [How to: Download a File in the Background](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="250a0-252">
            <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-252">
              <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> is <see langword="true" />.</span>
          </span>
        </exception>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-253">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-253">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
          <span data-ttu-id="250a0-254">Suggerimenti per l'utilizzo del threading gestito</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-254">Managed Threading Best Practices</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-255">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-255">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RunWorkerAsync">
      <MemberSignature Language="C#" Value="public void RunWorkerAsync (object argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunWorkerAsync(object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunWorkerAsync (argument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunWorkerAsync(System::Object ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RunWorkerAsync : obj -&gt; unit" Usage="backgroundWorker.RunWorkerAsync argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="250a0-256">Parametro che deve essere utilizzato dall'operazione in background da eseguire nell'evento <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-256">A parameter for use by the background operation to be executed in the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="250a0-257">Avvia l'esecuzione di un'operazione in background.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-257">Starts execution of a background operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-258">Il <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> metodo invia una richiesta per avviare l'operazione in esecuzione in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="250a0-258">The <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method submits a request to start the operation running asynchronously.</span></span> <span data-ttu-id="250a0-259">Quando la richiesta viene elaborata, il <xref:System.ComponentModel.BackgroundWorker.DoWork> evento viene generato, che a sua volta avvia l'esecuzione dell'operazione in background.</span><span class="sxs-lookup"><span data-stu-id="250a0-259">When the request is serviced, the <xref:System.ComponentModel.BackgroundWorker.DoWork> event is raised, which in turn starts execution of your background operation.</span></span>  
  
 <span data-ttu-id="250a0-260">Se l'operazione richiede un parametro, è possibile specificare come le `argument` parametro per <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="250a0-260">If your operation requires a parameter, you can provide it as the `argument` parameter to <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span>  
  
 <span data-ttu-id="250a0-261">Se l'operazione in background è già in esecuzione, la chiamata <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> anche in questo caso verrà generato un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="250a0-261">If the background operation is already running, calling <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> again will raise an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250a0-262">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> metodo per avviare un'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="250a0-262">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method to start an asynchronous operation.</span></span> <span data-ttu-id="250a0-263">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.BackgroundWorker> classe.</span><span class="sxs-lookup"><span data-stu-id="250a0-263">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#3)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#3)]
 [!code-vb[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="250a0-264">
            <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-264">
              <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> is <see langword="true" />.</span>
          </span>
        </exception>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-265">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-265">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-266">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-266">How to: Download a File in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
          <span data-ttu-id="250a0-267">Suggerimenti per l'utilizzo del threading gestito</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-267">Managed Threading Best Practices</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RunWorkerCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RunWorkerCompleted As RunWorkerCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::RunWorkerCompletedEventHandler ^ RunWorkerCompleted;" />
      <MemberSignature Language="F#" Value="member this.RunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventHandler " Usage="member this.RunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RunWorkerCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="250a0-268">Viene generato quando l'operazione in background è stata annullata o ha generato un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-268">Occurs when the background operation has completed, has been canceled, or has raised an exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-269">Questo evento viene generato quando il <xref:System.ComponentModel.BackgroundWorker.DoWork> restituito dal gestore di evento.</span><span class="sxs-lookup"><span data-stu-id="250a0-269">This event is raised when the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler returns.</span></span>  
  
 <span data-ttu-id="250a0-270">Se l'operazione viene completata e il risultato viene assegnato nel <xref:System.ComponentModel.BackgroundWorker.DoWork> gestore eventi, è possibile accedere al risultato tramite il <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="250a0-270">If the operation completes successfully and its result is assigned in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler, you can access the result through the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="250a0-271">Il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà di <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indica che è stata generata un'eccezione dall'operazione.</span><span class="sxs-lookup"><span data-stu-id="250a0-271">The <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indicates that an exception was thrown by the operation.</span></span>  
  
 <span data-ttu-id="250a0-272">Il <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> proprietà di <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indica se una richiesta di annullamento è stata elaborata dall'operazione in background.</span><span class="sxs-lookup"><span data-stu-id="250a0-272">The <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indicates whether a cancellation request was processed by the background operation.</span></span> <span data-ttu-id="250a0-273">Se il codice nel <xref:System.ComponentModel.BackgroundWorker.DoWork> gestore dell'evento rileva una richiesta di annullamento controllando il <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> flag e impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag di <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> a `true`, la <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag di <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> anche verrà impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="250a0-273">If your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler detects a cancellation request by checking the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> flag and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag of <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> to `true`, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> also will be set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="250a0-274">Tenere presente che il codice nel <xref:System.ComponentModel.BackgroundWorker.DoWork> gestore eventi può terminare la sua attività quando viene effettuata una richiesta di annullamento e il ciclo di polling può impedire <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> viene impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="250a0-274">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="250a0-275">In questo caso, il <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag di <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> nel <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> gestore dell'evento non verrà impostato `true`, anche se è stata effettuata una richiesta di annullamento.</span><span class="sxs-lookup"><span data-stu-id="250a0-275">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="250a0-276">Questa situazione viene denominata una *race condition* e costituisce un problema comune nella programmazione multithreading.</span><span class="sxs-lookup"><span data-stu-id="250a0-276">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="250a0-277">Per altre informazioni sulla progettazione multithreading problemi, vedere [Threading consigliate gestito](~/docs/standard/threading/managed-threading-best-practices.md).</span><span class="sxs-lookup"><span data-stu-id="250a0-277">For more information about multithreading design issues, see [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span></span>  
  
 <span data-ttu-id="250a0-278">I <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> gestore dell'evento è consigliabile controllare sempre il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=nameWithType> e <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A?displayProperty=nameWithType> proprietà prima di accedere al <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="250a0-278">Your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler should always check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A?displayProperty=nameWithType> properties before accessing the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="250a0-279">Se è stata generata un'eccezione o se è stata annullata l'operazione, l'accesso al <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> proprietà genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="250a0-279">If an exception was raised or if the operation was canceled, accessing the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property raises an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250a0-280">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> eventi per gestire il risultato di un'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="250a0-280">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event to handle the result of an asynchronous operation.</span></span> <span data-ttu-id="250a0-281">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.BackgroundWorker> classe.</span><span class="sxs-lookup"><span data-stu-id="250a0-281">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#6)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#6)]
 [!code-vb[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-282">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-282">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-283">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-283">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WorkerReportsProgress">
      <MemberSignature Language="C#" Value="public bool WorkerReportsProgress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WorkerReportsProgress" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkerReportsProgress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WorkerReportsProgress { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WorkerReportsProgress : bool with get, set" Usage="System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="250a0-284">Ottiene o imposta un valore che indica se la classe <see cref="T:System.ComponentModel.BackgroundWorker" /> è in grado di segnalare gli aggiornamenti dello stato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-284">Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> can report progress updates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="250a0-285">
            <see langword="true" /> se la classe <see cref="T:System.ComponentModel.BackgroundWorker" /> supporta gli aggiornamenti dello stato; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-285">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports progress updates; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="250a0-286">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-286">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-287">Impostare il <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> proprietà `true` se si desidera che il <xref:System.ComponentModel.BackgroundWorker> per supportare gli aggiornamenti di stato di avanzamento.</span><span class="sxs-lookup"><span data-stu-id="250a0-287">Set the <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property to `true` if you want the <xref:System.ComponentModel.BackgroundWorker> to support progress updates.</span></span> <span data-ttu-id="250a0-288">Quando questa proprietà è `true`, il codice utente può chiamare le <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> metodo per generare il <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="250a0-288">When this property is `true`, user code can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-289">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-289">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-290">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-290">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WorkerSupportsCancellation">
      <MemberSignature Language="C#" Value="public bool WorkerSupportsCancellation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WorkerSupportsCancellation" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkerSupportsCancellation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WorkerSupportsCancellation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WorkerSupportsCancellation : bool with get, set" Usage="System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="250a0-291">Ottiene o imposta un valore che indica se la classe <see cref="T:System.ComponentModel.BackgroundWorker" /> supporta l'annullamento asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-291">Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports asynchronous cancellation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="250a0-292">
            <see langword="true" /> se <see cref="T:System.ComponentModel.BackgroundWorker" /> supporta l'annullamento; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-292">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports cancellation; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="250a0-293">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-293">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250a0-294">Impostare il <xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A> proprietà `true` se si desidera che il <xref:System.ComponentModel.BackgroundWorker> per supportare l'annullamento.</span><span class="sxs-lookup"><span data-stu-id="250a0-294">Set the <xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A> property to `true` if you want the <xref:System.ComponentModel.BackgroundWorker> to support cancellation.</span></span> <span data-ttu-id="250a0-295">Quando questa proprietà è impostata `true`, è possibile chiamare il <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> metodo per interrompere un'operazione in background.</span><span class="sxs-lookup"><span data-stu-id="250a0-295">When this property is `true`, you can call the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method to interrupt a background operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
        <related type="Article" href="http://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="250a0-296">Procedura: eseguire un'operazione in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-296">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="250a0-297">Procedura: scaricare file in background</span>
          <span class="sxs-lookup">
            <span data-stu-id="250a0-297">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>