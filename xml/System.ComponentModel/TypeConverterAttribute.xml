<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeConverterAttribute.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">360c3a36-c465-4a92-baa7-e17b5430051f2a34118aeea4bc90482c2958972edd18ee3134ae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a34118aeea4bc90482c2958972edd18ee3134ae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7865e39826e7aaf54da4c7042975153813a31c7</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/16/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Specifies what type to use as a converter for the object this attribute is bound to.</source>
          <target state="translated">Specifica il tipo da utilizzare come convertitore per l'oggetto a cui l'attributo è associato.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The class you use for conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">La classe utilizzata per la conversione deve ereditare da <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A&gt;</ph> property to get the name of the class that provides the data conversion for the object this attribute is bound to.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A&gt;</ph> proprietà per ottenere il nome della classe che fornisce la conversione dei dati per l'oggetto di questo attributo è associata.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information about attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">Per altre informazioni sugli attributi, vedere <bpt id="p1">[</bpt>Attributi<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information about type converters, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class and <bpt id="p1">[</bpt>How to: Implement a Type Converter<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui convertitori di tipi, vedere il <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> classe di base e <bpt id="p1">[</bpt>procedura: implementare un convertitore di tipi<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>In order to establish a type converter on a custom class that provides type conversion behavior for XAML, you apply the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> attribute to your type.</source>
          <target state="translated">Per stabilire un convertitore di tipi in una classe personalizzata che fornisce il comportamento di conversione di tipi per XAML, si applica il <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> al tipo di attributo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The argument of the attribute references your type converter implementation.</source>
          <target state="translated">L'argomento dell'attributo fa riferimento all'implementazione del convertitore.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Your type converter should be able to accept values from a string that is used for attributes or initialization text in XAML markup, and convert that string into your intended destination type.</source>
          <target state="translated">Il convertitore di tipi deve essere in grado di accettare i valori da una stringa che viene utilizzato per gli attributi o il testo di inizializzazione nel markup XAML e convertire tale stringa nel tipo di destinazione desiderato.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>TypeConverters and XAML<ept id="p1">](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>TypeConverters and XAML<ept id="p1">](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Rather than applying to all values of a type, a type converter behavior for XAML can also be established on a specific property.</source>
          <target state="translated">Anziché applicare a tutti i valori di un tipo, un comportamento del convertitore di tipi per XAML può essere stabilito anche in una proprietà specifica.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>In this case, you apply <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the property definition (the outer definition, not the specific <ph id="ph2">`get`</ph> and <ph id="ph3">`set`</ph> definitions).</source>
          <target state="translated">In questo caso, applicano <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> alla definizione della proprietà (la definizione esterna, non la specifica <ph id="ph2">`get`</ph> e <ph id="ph3">`set`</ph> definizioni).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>A type converter behavior for XAML usage of a custom attachable member can be assigned by applying <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the <ph id="ph2">`get`</ph> method accessor that supports the XAML usage.</source>
          <target state="translated">Un comportamento del convertitore di tipi per l'utilizzo XAML di un membro associabile personalizzato può essere assegnato applicando <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> per il <ph id="ph2">`get`</ph> funzione di accesso di metodo che supporta l'utilizzo di XAML.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Cenni preliminari sulle proprietà associate<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For complex XAML serialization cases that require additional state from the object runtime, consider defining a value serializer in addition to a type converter, and attribute both support classes on your custom types or custom members.</source>
          <target state="translated">Per i casi di serializzazione di XAML complessi che richiedono uno stato aggiuntivo dal runtime dell'oggetto, si consiglia di definire un serializzatore di valori oltre a un convertitore di tipi e un attributo entrambe le classi di supporto ai tipi personalizzati o membri personalizzati.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The following example declares <ph id="ph1">`MyClass`</ph> to use the type converter called <ph id="ph2">`MyClassConverter`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene dichiarato <ph id="ph1">`MyClass`</ph> per usare il convertitore di tipo denominato <ph id="ph2">`MyClassConverter`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>This example assumes that <ph id="ph1">`MyClassConverter`</ph> has been implemented elsewhere.</source>
          <target state="translated">In questo esempio si presuppone che <ph id="ph1">`MyClassConverter`</ph> sia stato implementato altrove.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The class implementing the converter (<ph id="ph1">`MyClassConverter`</ph>) must inherit from the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">La classe che implementa il convertitore (<ph id="ph1">`MyClassConverter`</ph>) deve ereditare dalla <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The next example creates an instance of <ph id="ph1">`MyClass`</ph>.</source>
          <target state="translated">Nell'esempio seguente crea un'istanza di <ph id="ph1">`MyClass`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Then it gets the attributes for the class, and prints the name of the type converter used by <ph id="ph1">`MyClass`</ph>.</source>
          <target state="translated">Ottiene gli attributi per la classe e viene stampato il nome del convertitore di tipi usato da <ph id="ph1">`MyClass`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class with the default type converter, which is an empty string ("").</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> con il convertitore di tipi predefinito, ovvero una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor">
          <source>The class that provides the data conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">La classe che fornisce la conversione dei dati deve ereditare da <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
          <source>The fully qualified name of the class to use for data conversion for the object this attribute is bound to.</source>
          <target state="translated">Nome completo della classe da utilizzare per la conversione dei dati per l'oggetto a cui è associato questo attributo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class, using the specified type name as the data converter for the object this attribute is bound to.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>, utilizzando il nome del tipo specificato come convertitore di dati per l'oggetto a cui è associato questo attributo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
          <source>The class that provides the data conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">La classe che fornisce la conversione dei dati deve ereditare da <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of the converter class to use for data conversion for the object this attribute is bound to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che rappresenta il tipo della classe del convertitore da utilizzare per la conversione dei dati per l'oggetto a cui è associato questo attributo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class, using the specified type as the data converter for the object this attribute is bound to.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>, utilizzando il nome del tipo specificato come convertitore di dati per l'oggetto a cui è associato questo attributo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
          <source>The class that provides the data conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">La classe che fornisce la conversione dei dati deve ereditare da <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
          <source>Gets the fully qualified type name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to use as a converter for the object this attribute is bound to.</source>
          <target state="translated">Ottiene il nome di tipo completo dell'oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> da utilizzare come convertitore per l'oggetto a cui è associato questo attributo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
          <source>The fully qualified type name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to use as a converter for the object this attribute is bound to, or an empty string ("") if none exists.</source>
          <target state="translated">Nome di tipo completo dell'oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> da utilizzare come convertitore per l'oggetto a cui è associato questo attributo o, in mancanza, una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
          <source>The default value is an empty string ("").</source>
          <target state="translated">Il valore predefinito è una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.TypeConverterAttribute.Default">
          <source>Specifies the type to use as a converter for the object this attribute is bound to.</source>
          <target state="translated">Specifica il tipo da utilizzare come convertitore per l'oggetto a cui è associato questo attributo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
          <source>The object to test the value equality of.</source>
          <target state="translated">Oggetto di cui va verificata l'uguaglianza di valore.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
          <source>Returns whether the value of the given object is equal to the current <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>.</source>
          <target state="translated">Specifica se il valore dell'oggetto specificato è uguale all'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the given object is equal to that of the current <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Restituisce il codice hash per l'istanza.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>.</source>
          <target state="translated">Codice hash per l'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> corrente.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>