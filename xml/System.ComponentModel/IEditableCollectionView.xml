<Type Name="IEditableCollectionView" FullName="System.ComponentModel.IEditableCollectionView">
  <TypeSignature Language="C#" Value="public interface IEditableCollectionView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEditableCollectionView" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IEditableCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEditableCollectionView" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditableCollectionView" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="94813-101">Definisce i metodi e le proprietà implementati da <see cref="T:System.Windows.Data.CollectionView" /> per fornire funzionalità di modifica a un insieme.</span><span class="sxs-lookup"><span data-stu-id="94813-101">Defines methods and properties that a <see cref="T:System.Windows.Data.CollectionView" /> implements to provide editing capabilities to a collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94813-102">Quando una visualizzazione di raccolta implementa il <xref:System.ComponentModel.IEditableCollectionView> interfaccia, è possibile modificare direttamente la raccolta sottostante, se le modifiche apportate, utilizzando i metodi e proprietà che <xref:System.ComponentModel.IEditableCollectionView> espone, indipendentemente dal tipo della raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-102">When a collection view implements the <xref:System.ComponentModel.IEditableCollectionView> interface, you can directly change the underlying collection, if it allows changes to be made, by using the methods and properties that <xref:System.ComponentModel.IEditableCollectionView> exposes, regardless of the collection's type.</span></span>  
  
 <span data-ttu-id="94813-103">I tipi di <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, e <xref:System.Windows.Data.ListCollectionView> sono i tipi forniti con [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] che ereditano da <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="94813-103">The types <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, and <xref:System.Windows.Data.ListCollectionView> are the types that ship with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] that inherit from <xref:System.Windows.Data.CollectionView>.</span></span>  <span data-ttu-id="94813-104">Questi tipi implementano anche il <xref:System.ComponentModel.IEditableCollectionView>, pertanto è possibile modificare una raccolta che utilizza uno di tali tipi.</span><span class="sxs-lookup"><span data-stu-id="94813-104">These types also implement the <xref:System.ComponentModel.IEditableCollectionView>, so you can edit a collection that uses one of those types.</span></span>  <span data-ttu-id="94813-105"><xref:System.Windows.Controls.ItemCollection>, in particolare, viene utilizzato spesso in quanto il <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> proprietà è un <xref:System.Windows.Controls.ItemCollection>.</span><span class="sxs-lookup"><span data-stu-id="94813-105"><xref:System.Windows.Controls.ItemCollection>, in particular, is often used because the <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> property is an <xref:System.Windows.Controls.ItemCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94813-106">Nell'esempio seguente viene illustrato come aggiungere un elemento a una raccolta utilizzando i metodi definiti da <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="94813-106">The following example shows how to add an item to a collection by using methods that are defined by <xref:System.ComponentModel.IEditableCollectionView>.</span></span>  <span data-ttu-id="94813-107">Questa applicazione consente di visualizzare un elenco di elementi per la vendita e consente all'utente di aggiunta, modifica o rimozione di un elemento.</span><span class="sxs-lookup"><span data-stu-id="94813-107">This application displays a list of items for sale and gives the user the option of adding, editing, or removing an item.</span></span>  <span data-ttu-id="94813-108">Quando l'utente aggiunge o modifica un elemento, un modulo chiede all'utente di immettere un nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="94813-108">When the user adds or edits an item, a form prompts the user to enter a new item.</span></span>  <span data-ttu-id="94813-109">Se l'utente invia il form, l'elemento viene eseguito alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-109">If the user submits the form, the item is committed to the collection.</span></span>  <span data-ttu-id="94813-110">Se l'utente annulla il form, l'elemento verrà ignorato.</span><span class="sxs-lookup"><span data-stu-id="94813-110">If the user cancels the form, the item is discarded.</span></span> <span data-ttu-id="94813-111">Per l'esempio completo, vedere [modifica di una raccolta da utilizzare l'esempio IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="94813-111">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94813-112">Aggiunge un nuovo elemento alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-112">Adds a new item to the collection.</span></span></summary>
        <returns><span data-ttu-id="94813-113">Nuovo elemento aggiunto alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-113">The new item that is added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94813-114">La chiamata <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> inizia una transazione di aggiunta.</span><span class="sxs-lookup"><span data-stu-id="94813-114">Calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> begins an add transaction.</span></span>  <span data-ttu-id="94813-115">È necessario chiamare <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> o <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> per terminare la transazione di aggiunta.</span><span class="sxs-lookup"><span data-stu-id="94813-115">You should call <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to end the add transaction.</span></span> <span data-ttu-id="94813-116">Un nuovo elemento viene sempre visualizzata nella visualizzazione raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-116">A new item always appears in the collection view.</span></span> <span data-ttu-id="94813-117">Applicato un filtro, ordinamento o raggruppamento per la visualizzazione applicata al nuovo elemento quando <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="94813-117">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94813-118">Nell'esempio seguente viene creato un <xref:System.Windows.Window> che richiede all'utente di aggiungere un nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="94813-118">The following example creates a <xref:System.Windows.Window> that prompts the user to add a new item.</span></span>  <span data-ttu-id="94813-119">Viene quindi chiamato <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> per creare un nuovo oggetto e imposta il <xref:System.Windows.FrameworkElement.DataContext%2A> del <xref:System.Windows.Window> a tale oggetto.</span><span class="sxs-lookup"><span data-stu-id="94813-119">Then it calls <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> to create a new object and sets the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Window> to that object.</span></span> <span data-ttu-id="94813-120">Per l'esempio completo, vedere [modifica di una raccolta da utilizzare l'esempio IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="94813-120">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94813-121">Ottiene un valore che indica se è possibile aggiungere un nuovo elemento alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-121">Gets a value that indicates whether a new item can be added to the collection.</span></span></summary>
        <value>
          <span data-ttu-id="94813-122"><see langword="true" /> se è possibile aggiungere un nuovo elemento alla raccolta. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="94813-122"><see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94813-123">Un <xref:System.ComponentModel.IEditableCollectionView> possibile aggiungere un nuovo elemento, se vengono soddisfatte le seguenti:</span><span class="sxs-lookup"><span data-stu-id="94813-123">An <xref:System.ComponentModel.IEditableCollectionView> can add a new item if the following are true:</span></span>  
  
-   <span data-ttu-id="94813-124">Un elemento può essere aggiunto alla raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="94813-124">An item can be added to the underlying collection.</span></span>  <span data-ttu-id="94813-125">Se la raccolta è di sola lettura, ad esempio <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> è `false`.</span><span class="sxs-lookup"><span data-stu-id="94813-125">For example, if the collection is read-only, <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`.</span></span>  
  
-   <span data-ttu-id="94813-126">Il <xref:System.ComponentModel.IEditableCollectionView> possibile creare un oggetto del tipo che è presente nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-126">The <xref:System.ComponentModel.IEditableCollectionView> can create an object of the type that is in the collection.</span></span>  <span data-ttu-id="94813-127">Ad esempio, se la raccolta è di tipo <xref:System.Collections.ObjectModel.ObservableCollection%601>, <xref:System.ComponentModel.IEditableCollectionView> deve essere in grado di creare un oggetto di tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="94813-127">For example, if the collection is of type <xref:System.Collections.ObjectModel.ObservableCollection%601>, the <xref:System.ComponentModel.IEditableCollectionView> must be able to create an object of type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94813-128">L'esempio seguente verifica se un elemento può essere aggiunto alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-128">The following example checks whether an item can be added to the collection.</span></span>  <span data-ttu-id="94813-129">Se <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> è `false`, l'esempio indica che non è possibile aggiungere un elemento.</span><span class="sxs-lookup"><span data-stu-id="94813-129">If <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`, the example tells the user that an item cannot be added.</span></span>  <span data-ttu-id="94813-130">In caso contrario, viene visualizzato un form che richiede all'utente di aggiungere un nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="94813-130">Otherwise, it shows a form that prompts the user to add a new item.</span></span> <span data-ttu-id="94813-131">Per l'esempio completo, vedere [modifica di una raccolta da utilizzare l'esempio IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span><span class="sxs-lookup"><span data-stu-id="94813-131">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94813-132">Ottiene un valore che indica se la visualizzazione raccolta può annullare le modifiche in sospeso e ripristinare i valori originali di un oggetto modificato.</span><span class="sxs-lookup"><span data-stu-id="94813-132">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span></span></summary>
        <value>
          <span data-ttu-id="94813-133"><see langword="true" /> se la visualizzazione raccolta può annullare le modifiche in sospeso e ripristinare i valori originali di un oggetto modificato. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="94813-133"><see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94813-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> è `true` se la visualizzazione supporta il concetto di "modifiche in sospeso" per l'elemento attualmente modificato.</span><span class="sxs-lookup"><span data-stu-id="94813-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true` if the view supports the notion of "pending changes" on the currently edited item.</span></span>   <span data-ttu-id="94813-135">Ad esempio, in cui potrebbe restituire una visualizzazione di raccolta `true` se l'elemento modificato implementa <xref:System.ComponentModel.IEditableObject>, o se la vista dispone di informazioni sullo stato dell'elemento che è possibile utilizzare per eseguire il rollback delle modifiche di nuovo.</span><span class="sxs-lookup"><span data-stu-id="94813-135">For example, a collection view might return `true` if the edited item implements <xref:System.ComponentModel.IEditableObject>, or if the view has information about the item's state that it can use to roll back changes.</span></span> <span data-ttu-id="94813-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> è `false` se la visualizzazione non è possibile annullare le modifiche in un oggetto.</span><span class="sxs-lookup"><span data-stu-id="94813-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `false` if the view cannot revert changes on an object.</span></span>  <span data-ttu-id="94813-137">In tal caso, chiamare <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> della visualizzazione uscire dallo stato di modifica e fornire la logica per annullare le modifiche per l'oggetto che è stato modificato.</span><span class="sxs-lookup"><span data-stu-id="94813-137">In that case, call <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94813-138">Nell'esempio seguente ottiene <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> per verificare se i valori originali dell'elemento modificato possano essere ripristinati prima di chiamare <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="94813-138">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="94813-139">Se non è possibile ripristinare i valori, è necessario fornire la logica aggiuntiva per eseguire questa operazione.</span><span class="sxs-lookup"><span data-stu-id="94813-139">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="94813-140">In caso contrario, vengono ripristinati i valori quando viene chiamato <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="94813-140">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>   <span data-ttu-id="94813-141">Per l'esempio completo, vedere [modifica di una raccolta da utilizzare l'esempio IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="94813-141">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94813-142">Termina la transazione di modifica e, se possibile, ripristina il valore originale dell'elemento.</span><span class="sxs-lookup"><span data-stu-id="94813-142">Ends the edit transaction and, if possible, restores the original value to the item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94813-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> imposta <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> a `null` e determina la visualizzazione di raccolta uscire dallo stato di modifica.</span><span class="sxs-lookup"><span data-stu-id="94813-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> sets <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> to `null` and causes the collection view to exit the edit state.</span></span>  <span data-ttu-id="94813-144">Se <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> è `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> Ripristina inoltre i valori originali dell'oggetto modificato.</span><span class="sxs-lookup"><span data-stu-id="94813-144">If <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> also restores the original values of the edited object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94813-145">Nell'esempio seguente ottiene <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> per verificare se i valori originali dell'elemento modificato possano essere ripristinati prima di chiamare <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="94813-145">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="94813-146">Se non è possibile ripristinare i valori, è necessario fornire la logica aggiuntiva per eseguire questa operazione.</span><span class="sxs-lookup"><span data-stu-id="94813-146">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="94813-147">In caso contrario, vengono ripristinati i valori quando viene chiamato <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="94813-147">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span> <span data-ttu-id="94813-148">Per l'esempio completo, vedere [modifica di una raccolta da utilizzare l'esempio IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="94813-148">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94813-149">Termina la transazione di aggiunta ed elimina il nuovo elemento in sospeso.</span><span class="sxs-lookup"><span data-stu-id="94813-149">Ends the add transaction and discards the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94813-150">Nell'esempio seguente viene visualizzato un form che richiede all'utente di aggiungere un nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="94813-150">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="94813-151">Se l'utente invia il form, viene chiamato <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> ad aggiungere l'elemento alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-151">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="94813-152">Se l'utente annulla il form, viene chiamato <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> per cancellare l'elemento.</span><span class="sxs-lookup"><span data-stu-id="94813-152">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="94813-153">Per l'esempio completo, vedere [modifica di una raccolta da utilizzare l'esempio IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="94813-153">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94813-154">Ottiene un valore che indica se è possibile rimuovere un elemento dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-154">Gets a value that indicates whether an item can be removed from the collection.</span></span></summary>
        <value>
          <span data-ttu-id="94813-155"><see langword="true" /> se è possibile rimuovere un elemento dalla raccolta. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="94813-155"><see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94813-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> è `false` se la raccolta sottostante è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="94813-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> is `false` if the underlying collection is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94813-157">L'esempio seguente chiama <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> per verificare se è possibile rimuovere un elemento dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-157">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="94813-158">Se è possibile rimuovere un elemento, nell'esempio viene richiesto all'utente di confermare l'azione e chiamate <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> se l'utente fa clic **Sì**.</span><span class="sxs-lookup"><span data-stu-id="94813-158">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="94813-159">Per l'esempio completo, vedere [modifica di una raccolta da utilizzare l'esempio IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="94813-159">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94813-160">Termina la transazione di modifica e salva le modifiche in sospeso.</span><span class="sxs-lookup"><span data-stu-id="94813-160">Ends the edit transaction and saves the pending changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94813-161">Nell'esempio seguente crea un modulo che richiede all'utente di modificare un elemento esistente.</span><span class="sxs-lookup"><span data-stu-id="94813-161">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="94813-162">Se l'utente invia il form, viene chiamato <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> per salvare le modifiche alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-162">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> to save the changes to the collection.</span></span>  <span data-ttu-id="94813-163">Se l'utente annulla il form, viene chiamato <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> per annullare le modifiche.</span><span class="sxs-lookup"><span data-stu-id="94813-163">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to discard the changes.</span></span> <span data-ttu-id="94813-164">Per l'esempio completo, vedere [modifica di una raccolta da utilizzare l'esempio IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="94813-164">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94813-165">Termina la transazione di aggiunta e salva il nuovo elemento in sospeso.</span><span class="sxs-lookup"><span data-stu-id="94813-165">Ends the add transaction and saves the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94813-166">Applicato un filtro, ordinamento o raggruppamento per il <xref:System.Windows.Data.CollectionView> viene applicato al nuovo elemento quando <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="94813-166">Any filtering, sorting, or grouping that is applied to the <xref:System.Windows.Data.CollectionView> is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94813-167">Nell'esempio seguente viene visualizzato un form che richiede all'utente di aggiungere un nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="94813-167">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="94813-168">Se l'utente invia il form, viene chiamato <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> ad aggiungere l'elemento alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-168">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="94813-169">Se l'utente annulla il form, viene chiamato <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> per cancellare l'elemento.</span><span class="sxs-lookup"><span data-stu-id="94813-169">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="94813-170">Per l'esempio completo, vedere [modifica di una raccolta da utilizzare l'esempio IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="94813-170">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94813-171">Ottiene l'elemento che viene aggiunto durante la transazione di aggiunta corrente.</span><span class="sxs-lookup"><span data-stu-id="94813-171">Gets the item that is being added during the current add transaction.</span></span></summary>
        <value><span data-ttu-id="94813-172">Elemento aggiunto se <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> è <see langword="true" />. In caso contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="94813-172">The item that is being added if <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94813-173">Ottiene l'elemento della raccolta che viene modificato.</span><span class="sxs-lookup"><span data-stu-id="94813-173">Gets the item in the collection that is being edited.</span></span></summary>
        <value><span data-ttu-id="94813-174">Elemento della raccolta che viene modificato se <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> è <see langword="true" />. In caso contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="94813-174">The item in the collection that is being edited if <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EditItem(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="94813-175">Elemento da modificare.</span><span class="sxs-lookup"><span data-stu-id="94813-175">The item to edit.</span></span></param>
        <summary><span data-ttu-id="94813-176">Avvia una transazione di modifica dell'elemento specificato.</span><span class="sxs-lookup"><span data-stu-id="94813-176">Begins an edit transaction of the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94813-177">Nell'esempio seguente crea un modulo che richiede all'utente di modificare un elemento esistente.</span><span class="sxs-lookup"><span data-stu-id="94813-177">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="94813-178">Se l'utente invia il form, le modifiche vengono salvate per la raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-178">If the user submits the form, the changes are committed to the collection.</span></span>  <span data-ttu-id="94813-179">Se l'utente annulla il form, le modifiche vengono ignorate.</span><span class="sxs-lookup"><span data-stu-id="94813-179">If the user cancels the form, the changes are discarded.</span></span> <span data-ttu-id="94813-180">Per l'esempio completo, vedere [modifica di una raccolta da utilizzare l'esempio IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span><span class="sxs-lookup"><span data-stu-id="94813-180">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94813-181">Ottiene un valore che indica se è in corso una transazione di aggiunta.</span><span class="sxs-lookup"><span data-stu-id="94813-181">Gets a value that indicates whether an add transaction is in progress.</span></span></summary>
        <value>
          <span data-ttu-id="94813-182"><see langword="true" /> se è in corso una transazione di aggiunta; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="94813-182"><see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94813-183">Per avviare una transazione di aggiunta, chiamare <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> e terminare la transazione di aggiunta chiamando <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> o <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span><span class="sxs-lookup"><span data-stu-id="94813-183">You begin an add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> and end the add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94813-184">Ottiene un valore che indica se è in corso una transazione di modifica.</span><span class="sxs-lookup"><span data-stu-id="94813-184">Gets a value that indicates whether an edit transaction is in progress.</span></span></summary>
        <value>
          <span data-ttu-id="94813-185"><see langword="true" /> se è in corso una transazione di modifica. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="94813-185"><see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94813-186">Per avviare una transazione di modifica chiamando <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> e terminare la transazione chiamando <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> o <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="94813-186">You begin an edit transaction by calling <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> and end the transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94813-187">Ottiene o imposta la posizione del segnaposto del nuovo elemento nella visualizzazione raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-187">Gets or sets the position of the new item placeholder in the collection view.</span></span></summary>
        <value><span data-ttu-id="94813-188">Uno dei valori di enumerazione che specifica la posizione del segnaposto del nuovo elemento nella visualizzazione raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-188">One of the enumeration values that specifies the position of the new item placeholder in the collection view.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="94813-189">Elemento da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="94813-189">The item to remove.</span></span></param>
        <summary><span data-ttu-id="94813-190">Rimuove l'elemento specificato dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-190">Removes the specified item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94813-191">Se `item` non è presente nella raccolta, <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> non esegue alcuna operazione.</span><span class="sxs-lookup"><span data-stu-id="94813-191">If `item` is not in the collection, <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94813-192">L'esempio seguente chiama <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> per verificare se è possibile rimuovere un elemento dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-192">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="94813-193">Se è possibile rimuovere un elemento, nell'esempio viene richiesto all'utente di confermare l'azione e chiamate <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> se l'utente fa clic **Sì**.</span><span class="sxs-lookup"><span data-stu-id="94813-193">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="94813-194">Per l'esempio completo, vedere [modifica di una raccolta da utilizzare l'esempio IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="94813-194">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="94813-195">Posizione dell'elemento da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="94813-195">The position of the item to remove.</span></span></param>
        <summary><span data-ttu-id="94813-196">Rimuove dalla raccolta l'elemento in corrispondenza della posizione specificata.</span><span class="sxs-lookup"><span data-stu-id="94813-196">Removes the item at the specified position from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94813-197">`index` è relativo alla visualizzazione raccolta, non la raccolta.</span><span class="sxs-lookup"><span data-stu-id="94813-197">`index` is relative to the collection view, not the collection.</span></span>  <span data-ttu-id="94813-198">Ad esempio, se la raccolta contiene 10 elementi e la visualizzazione include un <xref:System.ComponentModel.ICollectionView.Filter%2A> in modo che vengano visualizzati solo 7, i valori validi di `index` sono da 0 a 6.</span><span class="sxs-lookup"><span data-stu-id="94813-198">For example, if the collection has 10 items and the view has a <xref:System.ComponentModel.ICollectionView.Filter%2A> so that 7 items appear, the valid values of `index` are 0 through 6.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94813-199"><paramref name="index" /> è minore di 0 o maggiore del numero di elementi nella visualizzazione dell'insieme.</span><span class="sxs-lookup"><span data-stu-id="94813-199"><paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
