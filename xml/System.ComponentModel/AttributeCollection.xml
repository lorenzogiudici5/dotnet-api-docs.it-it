<Type Name="AttributeCollection" FullName="System.ComponentModel.AttributeCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c88848cc3701fee183dbc89eec0f4ca1791a28a0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36705119" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AttributeCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttributeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class AttributeCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type AttributeCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="59e50-101">Rappresenta una raccolta di attributi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="59e50-101">Represents a collection of attributes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59e50-102">Il <xref:System.ComponentModel.AttributeCollection> classe è di sola lettura; non implementa i metodi per aggiungere o rimuovere gli attributi.</span><span class="sxs-lookup"><span data-stu-id="59e50-102">The <xref:System.ComponentModel.AttributeCollection> class is read-only; it does not implement methods to add or remove attributes.</span></span> <span data-ttu-id="59e50-103">È necessario ereditare da questa classe per implementare questi metodi.</span><span class="sxs-lookup"><span data-stu-id="59e50-103">You must inherit from this class to implement these methods.</span></span>  
  
 <span data-ttu-id="59e50-104">Utilizzare il <xref:System.ComponentModel.AttributeCollection.Count%2A> proprietà per trovare il numero di attributi presenti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="59e50-104">Use the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to find the number of attributes that exist in the collection.</span></span>  
  
 <span data-ttu-id="59e50-105">È inoltre possibile utilizzare i metodi di questa classe per eseguire una query la raccolta di informazioni sul suo contenuto.</span><span class="sxs-lookup"><span data-stu-id="59e50-105">You can also use the methods of this class to query the collection about its contents.</span></span> <span data-ttu-id="59e50-106">Chiamare il <xref:System.ComponentModel.AttributeCollection.Contains%2A> metodo per verificare che esista un attributo specificato o una matrice di attributi nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="59e50-106">Call the <xref:System.ComponentModel.AttributeCollection.Contains%2A> method to verify that a specified attribute or attribute array exists in the collection.</span></span> <span data-ttu-id="59e50-107">Chiamare il <xref:System.ComponentModel.AttributeCollection.Matches%2A> metodo per verificare che un attributo specificato o una matrice di attributi esista nella raccolta e che i valori degli attributi specificati sono uguali ai valori nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="59e50-107">Call the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method to verify that a specified attribute or array of attributes exists in the collection, and that the values of the specified attributes are the same as the values in the collection.</span></span>  
  
 <span data-ttu-id="59e50-108">Mentre la maggior parte degli attributi hanno valori predefiniti, i valori predefiniti non sono necessari.</span><span class="sxs-lookup"><span data-stu-id="59e50-108">While most attributes have default values, default values are not required.</span></span> <span data-ttu-id="59e50-109">Se un attributo non dispone di alcun valore predefinito, `null` viene restituito dalla proprietà indicizzata che accetta un tipo.</span><span class="sxs-lookup"><span data-stu-id="59e50-109">If an attribute has no default value, `null` is returned from the indexed property that takes a type.</span></span> <span data-ttu-id="59e50-110">Quando si definiscono attributi personalizzati, è possibile dichiarare un valore predefinito che fornisce un costruttore che non accetta argomenti, o definizione di un campo statico pubblico del tipo di attributo denominato "Default".</span><span class="sxs-lookup"><span data-stu-id="59e50-110">When defining your own attributes, you can declare a default value by either providing a constructor that takes no arguments, or defining a public static field of your attribute type named "Default".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59e50-111">Il primo esempio di codice consente di controllare se il <xref:System.ComponentModel.BrowsableAttribute> è stata impostata in questa raccolta.</span><span class="sxs-lookup"><span data-stu-id="59e50-111">The first code example checks to see whether the <xref:System.ComponentModel.BrowsableAttribute> has been set in this collection.</span></span> <span data-ttu-id="59e50-112">Il secondo esempio di codice ottiene il valore effettivo del <xref:System.ComponentModel.DescriptionAttribute> per un pulsante.</span><span class="sxs-lookup"><span data-stu-id="59e50-112">The second code example gets the actual value of the <xref:System.ComponentModel.DescriptionAttribute> for a button.</span></span> <span data-ttu-id="59e50-113">Entrambi gli esempi richiedono che `button1` e `textBox1` sono stati creati in un form.</span><span class="sxs-lookup"><span data-stu-id="59e50-113">Both examples require that `button1` and `textBox1` have been created on a form.</span></span> <span data-ttu-id="59e50-114">Quando si utilizzano gli attributi, verificare che è stato impostato un attributo o il relativo valore di accesso.</span><span class="sxs-lookup"><span data-stu-id="59e50-114">When using attributes, verify that an attribute has been set, or access its value.</span></span>  
  
 [!code-cpp[Classic AttributeCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection Example/VB/source.vb#1)]  
  
 [!code-cpp[Classic AttributeCollection Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection Example/CPP/source.cpp#2)]
 [!code-csharp[Classic AttributeCollection Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection Example/CS/source.cs#2)]
 [!code-vb[Classic AttributeCollection Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
    <altmember cref="T:System.ComponentModel.DescriptionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59e50-115">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AttributeCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-115">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AttributeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59e50-116">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AttributeCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-116">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeCollection (params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeCollection(... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.AttributeCollection : Attribute[] -&gt; System.ComponentModel.AttributeCollection" Usage="new System.ComponentModel.AttributeCollection attributes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="59e50-117">Matrice di tipo <see cref="T:System.Attribute" /> che fornisce gli attributi per questo insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-117">An array of type <see cref="T:System.Attribute" /> that provides the attributes for this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59e50-118">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AttributeCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-118">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59e50-119">Esempio di codice seguente crea un nuovo <xref:System.ComponentModel.AttributeCollection> utilizzando gli attributi di `button1`.</span><span class="sxs-lookup"><span data-stu-id="59e50-119">The following code example creates a new <xref:System.ComponentModel.AttributeCollection> using the attributes on `button1`.</span></span> <span data-ttu-id="59e50-120">Si presuppone che `button1` è stato creato in un form.</span><span class="sxs-lookup"><span data-stu-id="59e50-120">It assumes that `button1` has been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="59e50-121">
            <paramref name="attributes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-121">
              <paramref name="attributes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="protected virtual Attribute[] Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute[] Attributes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Attributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Attributes As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;Attribute ^&gt; ^ Attributes { cli::array &lt;Attribute ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : Attribute[]" Usage="System.ComponentModel.AttributeCollection.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59e50-122">Ottiene l'insieme di attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-122">Gets the attribute collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59e50-123">Raccolta di attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-123">The attribute collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59e50-124">Consente di determinare se questo insieme di attributi dispone dell'attributo o della matrice di attributi specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-124">Determines whether this collection of attributes has the specified attribute or array of attributes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Attribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Attribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(Attribute ^ attribute);" />
      <MemberSignature Language="F#" Value="member this.Contains : Attribute -&gt; bool" Usage="attributeCollection.Contains attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Attribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="59e50-125">Oggetto <see cref="T:System.Attribute" /> da individuare nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-125">An <see cref="T:System.Attribute" /> to find in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59e50-126">Consente di determinare se questo insieme di attributi dispone dell'attributo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-126">Determines whether this collection of attributes has the specified attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59e50-127">
            <see langword="true" /> se l'insieme contiene l'attributo o se è l'attributo predefinito per il tipo di attributo. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-127">
              <see langword="true" /> if the collection contains the attribute or is the default attribute for the type of attribute; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59e50-128">Questa raccolta contiene l'attributo specificato se il tipo di attributo specificato è presente nella raccolta e se il valore dell'attributo specificato è uguale al valore dell'istanza dell'attributo nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="59e50-128">This collection has the specified attribute if the specified type of attribute exists in the collection, and if the value of the specified attribute is the same as the value of the instance of the attribute in the collection.</span></span>  
  
 <span data-ttu-id="59e50-129">La differenza tra i <xref:System.ComponentModel.AttributeCollection.Matches%2A> e <xref:System.ComponentModel.AttributeCollection.Contains%2A> metodi è che <xref:System.ComponentModel.AttributeCollection.Matches%2A> chiamate la <xref:System.Attribute.Match%2A> metodo su un attributo, e <xref:System.ComponentModel.AttributeCollection.Contains%2A> chiamate il <xref:System.Object.Equals%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="59e50-129">The difference between the <xref:System.ComponentModel.AttributeCollection.Matches%2A> and <xref:System.ComponentModel.AttributeCollection.Contains%2A> methods is that <xref:System.ComponentModel.AttributeCollection.Matches%2A> calls the <xref:System.Attribute.Match%2A> method on an attribute, and <xref:System.ComponentModel.AttributeCollection.Contains%2A> calls the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="59e50-130">Per la maggior parte degli attributi, questi metodi eseguono la stessa operazione.</span><span class="sxs-lookup"><span data-stu-id="59e50-130">For most attributes, these methods do the same thing.</span></span> <span data-ttu-id="59e50-131">Per gli attributi che possono avere più flag, tuttavia <xref:System.Attribute.Match%2A> viene in genere implementato in modo che restituisca `true` se uno dei flag vengono soddisfatti.</span><span class="sxs-lookup"><span data-stu-id="59e50-131">For attributes that may have multiple flags, however, <xref:System.Attribute.Match%2A> is typically implemented so that it returns `true` if any of the flags are satisfied.</span></span> <span data-ttu-id="59e50-132">Si consideri, ad esempio, un attributo di associazione dati con i flag booleani "SupportsSql", "SupportsOleDb" e "SupportsXml".</span><span class="sxs-lookup"><span data-stu-id="59e50-132">For example, consider a data binding attribute with the Boolean flags "SupportsSql", "SupportsOleDb", and "SupportsXml".</span></span> <span data-ttu-id="59e50-133">Questo attributo può essere presente in una proprietà che supporta tutti e tre gli approcci di data binding.</span><span class="sxs-lookup"><span data-stu-id="59e50-133">This attribute may be present on a property that supports all three data-binding approaches.</span></span> <span data-ttu-id="59e50-134">Sarà spesso il caso che un programmatore deve conoscere solo se un approccio specifico è disponibile, non tutti e tre.</span><span class="sxs-lookup"><span data-stu-id="59e50-134">It will often be the case that a programmer needs to know only if a particular approach is available, not all three.</span></span> <span data-ttu-id="59e50-135">Pertanto, è possibile utilizzare un programmatore <xref:System.Attribute.Match%2A> con un'istanza dell'attributo contenente solo i flag il programmatore deve.</span><span class="sxs-lookup"><span data-stu-id="59e50-135">Therefore, a programmer could use <xref:System.Attribute.Match%2A> with an instance of the attribute containing only the flags the programmer needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59e50-136">Nell'esempio di codice viene controllato se la raccolta è un <xref:System.ComponentModel.BrowsableAttribute> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="59e50-136">The following code example checks to see whether the collection has a <xref:System.ComponentModel.BrowsableAttribute> set to `true`.</span></span> <span data-ttu-id="59e50-137">Si presuppone che `button1` e `textBox1` sono stati creati in un form.</span><span class="sxs-lookup"><span data-stu-id="59e50-137">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (attributes As Attribute()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Contains : Attribute[] -&gt; bool" Usage="attributeCollection.Contains attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="59e50-138">Matrice di tipo <see cref="T:System.Attribute" /> da individuare nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-138">An array of type <see cref="T:System.Attribute" /> to find in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59e50-139">Consente di determinare se questo insieme di attributi contiene tutti gli attributi specificati nella matrice di attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-139">Determines whether this attribute collection contains all the specified attributes in the attribute array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59e50-140">
            <see langword="true" /> se l'insieme contiene tutti gli attributi. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-140">
              <see langword="true" /> if the collection contains all the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59e50-141">Questa raccolta contiene la matrice di attributi specificata se tutti i tipi di attributo specificato è presente nella raccolta e ogni attributo nella matrice specificata è uguale a un attributo nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="59e50-141">This collection has the specified array of attributes if all the specified attribute types exist in the collection and if each attribute in the specified array is the same as an attribute in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59e50-142">Esempio di codice seguente confronta gli attributi `button1` e `textBox1` per verificare se gli attributi per il pulsante presenti negli attributi della casella di testo.</span><span class="sxs-lookup"><span data-stu-id="59e50-142">The following code example compares the attributes in `button1` and `textBox1` to see whether the attributes for the button are contained in the attributes for the text box.</span></span> <span data-ttu-id="59e50-143">Si presuppone che entrambi `button1` e `textBox1` sono stati creati in un form.</span><span class="sxs-lookup"><span data-stu-id="59e50-143">It assumes that both `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="attributeCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="59e50-144">Oggetto <see cref="T:System.Array" /> in cui copiare la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-144">The <see cref="T:System.Array" /> to copy the collection to.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="59e50-145">Indice da cui iniziare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-145">The index to start from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59e50-146">Consente di copiare l'insieme in una matrice partendo dall'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-146">Copies the collection to an array, starting at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.ComponentModel.AttributeCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59e50-147">Ottiene il numero di attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-147">Gets the number of attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59e50-148">Numero di attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-148">The number of attributes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59e50-149">È possibile utilizzare il <xref:System.ComponentModel.AttributeCollection.Count%2A> proprietà per impostare i limiti di un ciclo che scorre una raccolta di oggetti.</span><span class="sxs-lookup"><span data-stu-id="59e50-149">You can use the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to set the limits of a loop that iterates through a collection of objects.</span></span> <span data-ttu-id="59e50-150">Se la raccolta è in base zero, assicurarsi di utilizzare `Count - 1` come limite superiore del ciclo.</span><span class="sxs-lookup"><span data-stu-id="59e50-150">If the collection is zero-based, be sure to use `Count - 1` as the upper boundary of the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59e50-151">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.ComponentModel.AttributeCollection.Count%2A> proprietà per stampare il numero di proprietà sulla `button1` in una casella di testo.</span><span class="sxs-lookup"><span data-stu-id="59e50-151">The following code example uses the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to print the number of properties on `button1` in a text box.</span></span> <span data-ttu-id="59e50-152">Si presuppone che `button1` e `textBox1` sono stati creati in un form.</span><span class="sxs-lookup"><span data-stu-id="59e50-152">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.AttributeCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.AttributeCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.AttributeCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As AttributeCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::AttributeCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.AttributeCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59e50-153">Specifica un insieme vuoto da utilizzare invece di crearne uno nuovo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-153">Specifies an empty collection that you can use, rather than creating a new one.</span>
          </span>
          <span data-ttu-id="59e50-154">Questo campo è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-154">This field is read-only.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromExisting">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection FromExisting (System.ComponentModel.AttributeCollection existing, params Attribute[] newAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection FromExisting(class System.ComponentModel.AttributeCollection existing, class System.Attribute[] newAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromExisting (existing As AttributeCollection, ParamArray newAttributes As Attribute()) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ FromExisting(System::ComponentModel::AttributeCollection ^ existing, ... cli::array &lt;Attribute ^&gt; ^ newAttributes);" />
      <MemberSignature Language="F#" Value="static member FromExisting : System.ComponentModel.AttributeCollection * Attribute[] -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.AttributeCollection.FromExisting (existing, newAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existing" Type="System.ComponentModel.AttributeCollection" />
        <Parameter Name="newAttributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="existing">
          <span data-ttu-id="59e50-155">Insieme <see cref="T:System.ComponentModel.AttributeCollection" /> da cui creare la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-155">An <see cref="T:System.ComponentModel.AttributeCollection" /> from which to create the copy.</span>
          </span>
        </param>
        <param name="newAttributes">
          <span data-ttu-id="59e50-156">Matrice di tipo <see cref="T:System.Attribute" /> che fornisce gli attributi per questo insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-156">An array of type <see cref="T:System.Attribute" /> that provides the attributes for this collection.</span>
          </span>
          <span data-ttu-id="59e50-157">Può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-157">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59e50-158">Crea un nuovo insieme <see cref="T:System.ComponentModel.AttributeCollection" /> da un insieme <see cref="T:System.ComponentModel.AttributeCollection" /> esistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-158">Creates a new <see cref="T:System.ComponentModel.AttributeCollection" /> from an existing <see cref="T:System.ComponentModel.AttributeCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59e50-159">Nuovo insieme <see cref="T:System.ComponentModel.AttributeCollection" /> che è una copia di <paramref name="existing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-159">A new <see cref="T:System.ComponentModel.AttributeCollection" /> that is a copy of <paramref name="existing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59e50-160">Se il `newAttributes` parametro viene specificato, il relativo <xref:System.Attribute> le voci vengono unite con quelle del `existing` parametro.</span><span class="sxs-lookup"><span data-stu-id="59e50-160">If the `newAttributes` parameter is provided, its <xref:System.Attribute> entries are merged with those of the `existing` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="59e50-161">
            <paramref name="existing" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-161">
              <paramref name="existing" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultAttribute">
      <MemberSignature Language="C#" Value="protected Attribute GetDefaultAttribute (Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Attribute GetDefaultAttribute(class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultAttribute (attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Attribute ^ GetDefaultAttribute(Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultAttribute : Type -&gt; Attribute" Usage="attributeCollection.GetDefaultAttribute attributeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="59e50-162">Oggetto <see cref="T:System.Type" /> dell'attributo da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-162">The <see cref="T:System.Type" /> of the attribute to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59e50-163">Restituisce l'oggetto <see cref="T:System.Attribute" /> predefinito di un dato oggetto <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-163">Returns the default <see cref="T:System.Attribute" /> of a given <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59e50-164">L'oggetto <see cref="T:System.Attribute" /> predefinito di un dato oggetto <paramref name="attributeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-164">The default <see cref="T:System.Attribute" /> of a given <paramref name="attributeType" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="attributeCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59e50-165">Ottiene un enumeratore per questo insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-165">Gets an enumerator for this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59e50-166">Enumeratore di tipo <see cref="T:System.Collections.IEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-166">An enumerator of type <see cref="T:System.Collections.IEnumerator" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59e50-167">Esempio di codice seguente ottiene un enumeratore per gli attributi di `button1`.</span><span class="sxs-lookup"><span data-stu-id="59e50-167">The following code example gets an enumerator for the attributes on `button1`.</span></span> <span data-ttu-id="59e50-168">L'enumeratore viene utilizzato per visualizzare i nomi degli attributi nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="59e50-168">It uses the enumerator to print the names of the attributes in the collection.</span></span> <span data-ttu-id="59e50-169">Si presuppone che `button1` e `textBox1` sono stati creati in un form.</span><span class="sxs-lookup"><span data-stu-id="59e50-169">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/CPP/Source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59e50-170">Ottiene l'attributo con l'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-170">Gets the attribute with the specified index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual Attribute this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Attribute ^ default[int] { Attribute ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Attribute" Usage="System.ComponentModel.AttributeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="59e50-171">Indice in base zero di <see cref="T:System.ComponentModel.AttributeCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-171">The zero-based index of <see cref="T:System.ComponentModel.AttributeCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59e50-172">Ottiene l'attributo con il numero di indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-172">Gets the attribute with the specified index number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59e50-173">Oggetto <see cref="T:System.Attribute" /> con il numero di indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-173">The <see cref="T:System.Attribute" /> with the specified index number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59e50-174">Il numero di indice è in base zero.</span><span class="sxs-lookup"><span data-stu-id="59e50-174">The index number is zero-based.</span></span> <span data-ttu-id="59e50-175">Pertanto, è necessario sottrarre 1 dalla posizione numerica di un determinato <xref:System.Attribute> per accedere a tale <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="59e50-175">Therefore, you must subtract 1 from the numerical position of a particular <xref:System.Attribute> to access that <xref:System.Attribute>.</span></span> <span data-ttu-id="59e50-176">Ad esempio, per ottenere il terzo <xref:System.Attribute>, è necessario specificare `myColl[2]`.</span><span class="sxs-lookup"><span data-stu-id="59e50-176">For example, to get the third <xref:System.Attribute>, you need to specify `myColl[2]`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59e50-177">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.ComponentModel.AttributeCollection.Item%2A> per stampare il nome della proprietà il <xref:System.Attribute> specificata dal numero di indice in una casella di testo.</span><span class="sxs-lookup"><span data-stu-id="59e50-177">The following code example uses the <xref:System.ComponentModel.AttributeCollection.Item%2A> property to print the name of the <xref:System.Attribute> specified by the index number in a text box.</span></span> <span data-ttu-id="59e50-178">Poiché il numero di indice è in base zero, questo esempio di codice viene visualizzato il nome del secondo <xref:System.Attribute> in una casella di testo.</span><span class="sxs-lookup"><span data-stu-id="59e50-178">Because the index number is zero-based, this code example prints the name of the second <xref:System.Attribute> in a text box.</span></span> <span data-ttu-id="59e50-179">Si presuppone `button1` e `textBox1` sono stati creati in un form.</span><span class="sxs-lookup"><span data-stu-id="59e50-179">It assumes `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual Attribute this[Type attributeType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Attribute ^ default[Type ^] { Attribute ^ get(Type ^ attributeType); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : Attribute" Usage="System.ComponentModel.AttributeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="59e50-180">Oggetto <see cref="T:System.Type" /> di <see cref="T:System.Attribute" /> da ottenere dall'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-180">The <see cref="T:System.Type" /> of the <see cref="T:System.Attribute" /> to get from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59e50-181">Ottiene l'attributo con il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-181">Gets the attribute with the specified type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59e50-182">Oggetto <see cref="T:System.Attribute" /> con il tipo specificato o, se l'attributo non esiste, il valore predefinito per il tipo di attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-182">The <see cref="T:System.Attribute" /> with the specified type or, if the attribute does not exist, the default value for the attribute type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59e50-183">Se l'attributo non esiste nella raccolta, questa proprietà restituisce il valore predefinito per il tipo di attributo.</span><span class="sxs-lookup"><span data-stu-id="59e50-183">If the attribute does not exist in the collection, this property returns the default value for the attribute type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59e50-184">Nel codice seguente vengono ottenuti i <xref:System.ComponentModel.DesignerAttribute> dalla raccolta e il relativo valore viene stampato.</span><span class="sxs-lookup"><span data-stu-id="59e50-184">The following code example gets the <xref:System.ComponentModel.DesignerAttribute> from the collection and prints its value.</span></span> <span data-ttu-id="59e50-185">Si presuppone che `button1` e `textBox1` sono stati creati in un form.</span><span class="sxs-lookup"><span data-stu-id="59e50-185">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 <span data-ttu-id="59e50-186">Per eseguire questo esempio di codice, è necessario fornire il nome completo dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="59e50-186">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="59e50-187">Per informazioni su come ottenere il nome completo dell'assembly, vedere [i nomi degli Assembly](~/docs/framework/app-domains/assembly-names.md).</span><span class="sxs-lookup"><span data-stu-id="59e50-187">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[Classic AttributeCollection.this1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59e50-188">Consente di determinare se un attributo o una matrice di attributi specificata coincidono con l'attributo o la matrice di attributi presenti nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-188">Determines whether a specified attribute or array of attributes is the same as an attribute or array of attributes in the collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (Attribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Attribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(Attribute ^ attribute);" />
      <MemberSignature Language="F#" Value="member this.Matches : Attribute -&gt; bool" Usage="attributeCollection.Matches attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Attribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="59e50-189">Istanza di <see cref="T:System.Attribute" /> da confrontare con gli attributi in questo insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-189">An instance of <see cref="T:System.Attribute" /> to compare with the attributes in this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59e50-190">Consente di determinare se un attributo specificato è uguale a un attributo nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-190">Determines whether a specified attribute is the same as an attribute in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59e50-191">
            <see langword="true" /> se l'attributo è contenuto nell'insieme e presenta lo stesso valore dell'attributo nell'insieme. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-191">
              <see langword="true" /> if the attribute is contained within the collection and has the same value as the attribute in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59e50-192">Un attributo può fornire il supporto per la corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="59e50-192">An attribute can provide support for matching.</span></span>  
  
 <span data-ttu-id="59e50-193">La differenza tra i <xref:System.ComponentModel.AttributeCollection.Matches%2A> e <xref:System.ComponentModel.AttributeCollection.Contains%2A> metodi è che <xref:System.ComponentModel.AttributeCollection.Matches%2A> chiamate la <xref:System.Attribute.Match%2A> metodo su un attributo, e <xref:System.ComponentModel.AttributeCollection.Contains%2A> chiamate il <xref:System.Object.Equals%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="59e50-193">The difference between the <xref:System.ComponentModel.AttributeCollection.Matches%2A> and <xref:System.ComponentModel.AttributeCollection.Contains%2A> methods is that <xref:System.ComponentModel.AttributeCollection.Matches%2A> calls the <xref:System.Attribute.Match%2A> method on an attribute, and <xref:System.ComponentModel.AttributeCollection.Contains%2A> calls the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="59e50-194">Per la maggior parte degli attributi, questi metodi eseguono la stessa operazione.</span><span class="sxs-lookup"><span data-stu-id="59e50-194">For most attributes, these methods do the same thing.</span></span> <span data-ttu-id="59e50-195">Per gli attributi che possono avere più flag, tuttavia <xref:System.Attribute.Match%2A> viene in genere implementato in modo che restituisca `true` se uno dei flag vengono soddisfatti.</span><span class="sxs-lookup"><span data-stu-id="59e50-195">For attributes that may have multiple flags, however, <xref:System.Attribute.Match%2A> is typically implemented so that it returns `true` if any of the flags are satisfied.</span></span> <span data-ttu-id="59e50-196">Si consideri, ad esempio, un attributo di associazione dati con i flag booleani "SupportsSql", "SupportsOleDb" e "SupportsXml".</span><span class="sxs-lookup"><span data-stu-id="59e50-196">For example, consider a data binding attribute with the Boolean flags "SupportsSql", "SupportsOleDb", and "SupportsXml".</span></span> <span data-ttu-id="59e50-197">Questo attributo può essere presente in una proprietà che supporta tutti gli approcci di tre associazione dati.</span><span class="sxs-lookup"><span data-stu-id="59e50-197">This attribute may be present on a property that supports all three data binding approaches.</span></span> <span data-ttu-id="59e50-198">Sarà spesso il caso che un programmatore deve conoscere solo se un approccio specifico è disponibile, non tutti e tre.</span><span class="sxs-lookup"><span data-stu-id="59e50-198">It will often be the case that a programmer needs to know only if a particular approach is available, not all three.</span></span> <span data-ttu-id="59e50-199">Pertanto, è possibile utilizzare un programmatore <xref:System.Attribute.Match%2A> con un'istanza dell'attributo contenente solo i flag il programmatore deve.</span><span class="sxs-lookup"><span data-stu-id="59e50-199">Therefore, a programmer could use <xref:System.Attribute.Match%2A> with an instance of the attribute containing only the flags the programmer needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59e50-200">Esempio di codice seguente verifica che il <xref:System.ComponentModel.BrowsableAttribute> è un membro della raccolta e che è stata impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="59e50-200">The following code example verifies that the <xref:System.ComponentModel.BrowsableAttribute> is a member of the collection and that it has been set to `true`.</span></span> <span data-ttu-id="59e50-201">Si presuppone che `button1` e `textBox1` sono stati creati in un form.</span><span class="sxs-lookup"><span data-stu-id="59e50-201">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Matches Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Matches Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Matches Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (attributes As Attribute()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Matches : Attribute[] -&gt; bool" Usage="attributeCollection.Matches attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="59e50-202">Matrice di <see cref="T:System.CodeDom.MemberAttributes" /> da confrontare con gli attributi in questo insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-202">An array of <see cref="T:System.CodeDom.MemberAttributes" /> to compare with the attributes in this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59e50-203">Consente di determinare se gli attributi nella matrice specificata sono uguali agli attributi dell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-203">Determines whether the attributes in the specified array are the same as the attributes in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59e50-204">
            <see langword="true" /> se tutti gli attributi della matrice sono contenuti nell'insieme e presentano gli stessi valori degli attributi nell'insieme. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-204">
              <see langword="true" /> if all the attributes in the array are contained in the collection and have the same values as the attributes in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59e50-205">Un attributo può fornire il supporto per la corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="59e50-205">An attribute can provide support for matching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59e50-206">Esempio di codice seguente confronta gli attributi in un pulsante e una casella di testo per verificare che corrispondano.</span><span class="sxs-lookup"><span data-stu-id="59e50-206">The following code example compares the attributes in a button and a text box to see whether they match.</span></span> <span data-ttu-id="59e50-207">Si presuppone che `button1` e `textBox1` sono stati creati in un form.</span><span class="sxs-lookup"><span data-stu-id="59e50-207">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.AttributeCollection.System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59e50-208">Ottiene il numero di elementi contenuti nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-208">Gets the number of elements contained in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59e50-209">Numero di elementi contenuti nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-209">The number of elements contained in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.AttributeCollection.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59e50-210">Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-210">Gets a value indicating whether access to the collection is synchronized (thread-safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59e50-211">
            <see langword="true" /> se l'accesso alla raccolta è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-211">
              <see langword="true" /> if access to the collection is synchronized (thread-safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.AttributeCollection.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59e50-212">Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-212">Gets an object that can be used to synchronize access to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59e50-213">Oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-213">An object that can be used to synchronize access to the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59e50-214">Restituisce <see cref="T:System.Collections.IEnumerator" /> per <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-214">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59e50-215">
            <see cref="T:System.Collections.IEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59e50-215">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>