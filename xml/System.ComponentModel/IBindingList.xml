<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IBindingList.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5169195ea8630afb5878fad634a03686f98a7fe53.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">169195ea8630afb5878fad634a03686f98a7fe53</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.IBindingList">
          <source>Provides the features required to support both complex and simple scenarios when binding to a data source.</source>
          <target state="translated">Fornisce le funzionalità necessarie per supportare scenari semplici e complessi quando si effettua un'associazione a un'origine dati.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IBindingList">
          <source>This interface is implemented by the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> class.</source>
          <target state="translated">Questa interfaccia è implementata dalla <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IBindingList">
          <source>Implementation of a method should exhibit the same behavior as the implementation of that method in the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> class.</source>
          <target state="translated">Implementazione di un metodo deve presentare lo stesso comportamento dell'implementazione di tale metodo nella <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IBindingList">
          <source>When you call the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.ApplySort%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.RemoveSort%2A&gt;</ph> methods, you should raise a <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id="ph4">&lt;xref:System.ComponentModel.ListChangedType.Reset&gt;</ph> enumeration.</source>
          <target state="translated">Quando si chiama il <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.ApplySort%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.RemoveSort%2A&gt;</ph> metodi, è necessario generare un <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> evento con il <ph id="ph4">&lt;xref:System.ComponentModel.ListChangedType.Reset&gt;</ph> enumerazione.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IBindingList">
          <source>When you call the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.AddNew%2A&gt;</ph> method, you should raise a <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id="ph3">&lt;xref:System.ComponentModel.ListChangedType.ItemAdded&gt;</ph> enumeration carrying the appropriate index.</source>
          <target state="translated">Quando si chiama il <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.AddNew%2A&gt;</ph> (metodo), è necessario generare un <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> evento con il <ph id="ph3">&lt;xref:System.ComponentModel.ListChangedType.ItemAdded&gt;</ph> enumerazione l'indice appropriato.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IBindingList">
          <source>The added row is in a state where pressing the ESC on a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control can remove the new row.</source>
          <target state="translated">La riga aggiunta è in uno stato in cui premendo il tasto ESC per un <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> controllo è possibile rimuovere la nuova riga.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IBindingList">
          <source>Raising the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedType.ItemAdded&gt;</ph> enumeration a second time on this row indicates that the item is now a row not in the "new" state.</source>
          <target state="translated">Generazione di <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> evento con il <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedType.ItemAdded&gt;</ph> enumerazione una seconda volta su questa riga indica che l'elemento è ora una riga non nello stato di "new".</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IBindingList">
          <source>When you remove an item or call the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject.CancelEdit%2A&gt;</ph> method on a new row (if that row implements <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>), you should raise a <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id="ph4">&lt;xref:System.ComponentModel.ListChangedType.ItemDeleted&gt;</ph> enumeration carrying the appropriate index.</source>
          <target state="translated">Quando si rimuove un elemento o una chiamata di <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject.CancelEdit%2A&gt;</ph> metodo in una nuova riga (se la riga implementi <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>), è necessario generare un <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> evento con il <ph id="ph4">&lt;xref:System.ComponentModel.ListChangedType.ItemDeleted&gt;</ph> enumerazione l'indice appropriato.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IBindingList">
          <source>The following example provides a simple implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface.</source>
          <target state="translated">Nell'esempio seguente viene fornita una semplice implementazione del <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IBindingList">
          <source>The <ph id="ph1">`CustomerList`</ph> class stores customer information in a list.</source>
          <target state="translated">La <ph id="ph1">`CustomerList`</ph> classe archivia le informazioni utente in un elenco.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IBindingList">
          <source>This example assumes that you have used the <ph id="ph1">`Customer`</ph> class that can be found in the example in the <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> class.</source>
          <target state="translated">Questo esempio si presuppone che si usa il <ph id="ph1">`Customer`</ph> classe che può essere trovati nell'esempio di <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to add to the indexes used for searching.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> da aggiungere agli indici utilizzati per la ricerca.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)">
          <source>Adds the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to the indexes used for searching.</source>
          <target state="translated">Consente di aggiungere l'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> agli indici utilizzati per la ricerca.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)">
          <source>The list must support this method.</source>
          <target state="translated">L'elenco deve supportare questo metodo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)">
          <source>However, support for this method can be a nonoperation.</source>
          <target state="translated">Tuttavia, il supporto per questo metodo non può essere un'operazione.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.AddNew">
          <source>Adds a new item to the list.</source>
          <target state="translated">Consente di aggiungere un nuovo elemento all'elenco.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.AddNew">
          <source>The item added to the list.</source>
          <target state="translated">Elemento aggiunto all'elenco.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.AddNew">
          <source>This method is supported only if <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt;</ph> is <ph id="ph2">`true`</ph>; otherwise, a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Questo metodo è supportato solo se <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt;</ph> è <ph id="ph2">`true`</ph>; in caso contrario, un <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.AddNew">
          <source>Implementing this method means that the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> list must understand the type of objects to add to the list and must understand how to create a new instance of that type.</source>
          <target state="translated">Implementazione di questo metodo indica che il <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> elenco deve comprendere il tipo di oggetti da aggiungere all'elenco e deve comprendere come creare una nuova istanza di quel tipo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.AddNew">
          <source>For example, if you have a collection of <ph id="ph1">`myCustomer`</ph> objects, the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AddNew%2A&gt;</ph> method should add a new <ph id="ph3">`myCustomer`</ph> object to the list.</source>
          <target state="translated">Ad esempio, se si dispone di una raccolta di <ph id="ph1">`myCustomer`</ph> oggetti, il <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AddNew%2A&gt;</ph> metodo aggiunge un nuovo <ph id="ph3">`myCustomer`</ph> oggetto all'elenco.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.AddNew">
          <source>If the objects in this list implement the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> interface, calling the <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject.CancelEdit%2A&gt;</ph> method should discard an object, not add it to the list, when the object was created using the <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList.AddNew%2A&gt;</ph> method.</source>
          <target state="translated">Se gli oggetti in questo elenco implementano il <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> interfaccia, chiamata il <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject.CancelEdit%2A&gt;</ph> metodo è necessario annullare un oggetto, non aggiungerlo all'elenco, quando l'oggetto è stato creato utilizzando il <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList.AddNew%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.AddNew">
          <source>The object should only be added to the list when the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated">L'oggetto deve essere aggiunto solo all'elenco quando il <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.AddNew">
          <source>Therefore, you must sychronize the object and the list carefully.</source>
          <target state="translated">Di conseguenza, è necessario sincronizzare l'oggetto e l'elenco con attenzione.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.AddNew">
          <source>When this method is called, you should raise a <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedType.ItemAdded&gt;</ph> enumeration carrying the appropriate index.</source>
          <target state="translated">Quando viene chiamato questo metodo, è necessario generare un <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> evento con il <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedType.ItemAdded&gt;</ph> enumerazione l'indice appropriato.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.AddNew">
          <source>The added row is in a state where hitting Esc on a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control can remove the new row.</source>
          <target state="translated">La riga aggiunta è in uno stato in cui premendo Esc una <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> controllo è possibile rimuovere la nuova riga.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.AddNew">
          <source>Raising the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedType.ItemAdded&gt;</ph> enumeration a second time on this row indicates that the item is now a normal row (not in new state).</source>
          <target state="translated">Generazione di <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> evento con il <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedType.ItemAdded&gt;</ph> enumerazione una seconda volta su questa riga indica che l'elemento è ora una riga normale (non in stato nuovo).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.AddNew">
          <source><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.AllowNew" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.AllowNew" /&gt;</ph> è <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IBindingList.AllowEdit">
          <source>Gets whether you can update items in the list.</source>
          <target state="translated">Indica se è possibile aggiornare gli elementi dell'elenco.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.AllowEdit">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if you can update the items in the list; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se è possibile aggiornare gli elementi dell'elenco, in caso contrario <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IBindingList.AllowNew">
          <source>Gets whether you can add items to the list using <ph id="ph1">&lt;see cref="M:System.ComponentModel.IBindingList.AddNew" /&gt;</ph>.</source>
          <target state="translated">Indica se è possibile aggiungere elementi all'elenco utilizzando il metodo <ph id="ph1">&lt;see cref="M:System.ComponentModel.IBindingList.AddNew" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.AllowNew">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if you can add items to the list using <ph id="ph2">&lt;see cref="M:System.ComponentModel.IBindingList.AddNew" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se è possibile aggiungere elementi all'elenco utilizzando il metodo <ph id="ph2">&lt;see cref="M:System.ComponentModel.IBindingList.AddNew" /&gt;</ph>, in caso contrario <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.AllowNew">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">`true`</ph>, this property returns <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType&gt;</ph> è <ph id="ph3">`true`</ph>, questa proprietà restituisce <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IBindingList.AllowRemove">
          <source>Gets whether you can remove items from the list, using <ph id="ph1">&lt;see cref="M:System.Collections.IList.Remove(System.Object)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /&gt;</ph>.</source>
          <target state="translated">Indica se è possibile rimuovere elementi dall'elenco utilizzando il metodo <ph id="ph1">&lt;see cref="M:System.Collections.IList.Remove(System.Object)" /&gt;</ph> o il metodo <ph id="ph2">&lt;see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.AllowRemove">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if you can remove items from the list; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se è possibile rimuovere elementi dall'elenco, in caso contrario <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.AllowRemove">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">`true`</ph>, this property returns <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType&gt;</ph> è <ph id="ph3">`true`</ph>, questa proprietà restituisce <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.AllowRemove">
          <source>If <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IList.Remove%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType&gt;</ph> throw a <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A&gt;</ph> restituisce <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IList.Remove%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph4">&lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType&gt;</ph> generano un <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to sort by.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> in base al quale effettuare l'ordinamento.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ListSortDirection" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.ComponentModel.ListSortDirection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
          <source>Sorts the list based on a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> and a <ph id="ph2">&lt;see cref="T:System.ComponentModel.ListSortDirection" /&gt;</ph>.</source>
          <target state="translated">Ordina l'elenco in base a un oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> e a un oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.ListSortDirection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
          <source>If items are added or removed, these items are placed in the order of the sort.</source>
          <target state="translated">Se gli elementi vengono aggiunti o rimossi, questi elementi vengono inseriti nell'ordine dell'ordinamento.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
          <source>This method is supported if <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> is <ph id="ph2">`true`</ph>; otherwise, this method throws a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Questo metodo è supportato se <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> è <ph id="ph2">`true`</ph>; in caso contrario, questo metodo genera un <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
          <source><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /&gt;</ph> è <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
          <source>The implementation of this method should raise a <ph id="ph1">&lt;see cref="E:System.ComponentModel.IBindingList.ListChanged" /&gt;</ph> event with the <ph id="ph2">&lt;see cref="F:System.ComponentModel.ListChangedType.Reset" /&gt;</ph> enumeration.</source>
          <target state="translated">L'implementazione di questo metodo deve generare un <ph id="ph1">&lt;see cref="E:System.ComponentModel.IBindingList.ListChanged" /&gt;</ph> evento con il <ph id="ph2">&lt;see cref="F:System.ComponentModel.ListChangedType.Reset" /&gt;</ph> enumerazione.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to search on.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> in base al quale effettuare la ricerca.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <source>The value of the <bpt id="p1">&lt;c&gt;</bpt>property<ept id="p1">&lt;/c&gt;</ept> parameter to search for.</source>
          <target state="translated">Valore del parametro <bpt id="p1">&lt;c&gt;</bpt>property<ept id="p1">&lt;/c&gt;</ept> da ricercare.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <source>Returns the index of the row that has the given <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Consente di restituire l'indice della riga che presenta il dato oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <source>The index of the row that has the given <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Indice della riga che presenta il dato oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <source>This method will select the first row where the value of the <ph id="ph1">`property`</ph> parameter equals the value of the <ph id="ph2">`key`</ph> parameter.</source>
          <target state="translated">Questo metodo verrà selezionata la prima riga in cui il valore della <ph id="ph1">`property`</ph> parametro è uguale al valore del <ph id="ph2">`key`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <source>This method is supported if <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSearching%2A&gt;</ph> is <ph id="ph2">`true`</ph>, otherwise this method throws a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Questo metodo è supportato se <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSearching%2A&gt;</ph> è <ph id="ph2">`true`</ph>, in caso contrario questo metodo genera un <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.Find%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come implementare il <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.Find%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSearching" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSearching" /&gt;</ph> è <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IBindingList.IsSorted">
          <source>Gets whether the items in the list are sorted.</source>
          <target state="translated">Indica se gli elementi dell'elenco sono ordinati.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.IsSorted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /&gt;</ph> has been called and <ph id="ph3">&lt;see cref="M:System.ComponentModel.IBindingList.RemoveSort" /&gt;</ph> has not been called; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se è stato chiamato il metodo <ph id="ph2">&lt;see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /&gt;</ph> e non il metodo <ph id="ph3">&lt;see cref="M:System.ComponentModel.IBindingList.RemoveSort" /&gt;</ph>, in caso contrario <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.IsSorted">
          <source>This property is supported if <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> is <ph id="ph2">`true`</ph>; otherwise, this property throws a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Questa proprietà è supportata se <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> è <ph id="ph2">`true`</ph>; in caso contrario, questa proprietà genera un <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.IsSorted">
          <source>If <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.IsSorted%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, items are added or removed in the order of the sort.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.IsSorted%2A&gt;</ph> restituisce <ph id="ph2">`true`</ph>, gli elementi vengono aggiunti o rimossi sequenza di ordinamento.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IBindingList.IsSorted">
          <source><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /&gt;</ph> è <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.IBindingList.ListChanged">
          <source>Occurs when the list changes or an item in the list changes.</source>
          <target state="translated">Si verifica quando viene modificato l'elenco o un elemento dell'elenco.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.IBindingList.ListChanged">
          <source>This event is raised only if the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Questo evento viene generato solo se il <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A&gt;</ph> proprietà <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to remove from the indexes used for searching.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> da rimuovere dagli indici utilizzati per la ricerca.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> from the indexes used for searching.</source>
          <target state="translated">Consente di rimuovere l'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> dagli indici utilizzati per la ricerca.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
          <source>The list must support this method.</source>
          <target state="translated">L'elenco deve supportare questo metodo.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
          <source>However, support for this method can be a nonoperation.</source>
          <target state="translated">Tuttavia, il supporto per questo metodo non può essere un'operazione.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.RemoveSort">
          <source>Removes any sort applied using <ph id="ph1">&lt;see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /&gt;</ph>.</source>
          <target state="translated">Consente di rimuovere qualsiasi ordinamento applicato utilizzando il metodo <ph id="ph1">&lt;see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.RemoveSort">
          <source>This property is supported if <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> is <ph id="ph2">`true`</ph>; otherwise, this property throws a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Questa proprietà è supportata se <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> è <ph id="ph2">`true`</ph>; in caso contrario, questa proprietà genera un <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.IBindingList.RemoveSort">
          <source>When you call this method, you should raise a <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedType.Reset&gt;</ph> enumeration.</source>
          <target state="translated">Quando si chiama questo metodo, è necessario generare un <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> evento con il <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedType.Reset&gt;</ph> enumerazione.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.IBindingList.RemoveSort">
          <source><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /&gt;</ph> è <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IBindingList.SortDirection">
          <source>Gets the direction of the sort.</source>
          <target state="translated">Ottiene la direzione dell'ordinamento.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.SortDirection">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ListSortDirection" /&gt;</ph> values.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.ComponentModel.ListSortDirection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.SortDirection">
          <source>This property is supported if <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> is <ph id="ph2">`true`</ph>; otherwise, this property throws a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Questa proprietà è supportata se <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> è <ph id="ph2">`true`</ph>; in caso contrario, questa proprietà genera un <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IBindingList.SortDirection">
          <source><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /&gt;</ph> è <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IBindingList.SortProperty">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that is being used for sorting.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> che viene utilizzato per l'ordinamento.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.SortProperty">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that is being used for sorting.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> che viene utilizzato per l'ordinamento.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.SortProperty">
          <source>This property is supported if <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> is <ph id="ph2">`true`</ph>; otherwise, this property throws a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Questa proprietà è supportata se <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> è <ph id="ph2">`true`</ph>; in caso contrario, questa proprietà genera un <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IBindingList.SortProperty">
          <source><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /&gt;</ph> è <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IBindingList.SupportsChangeNotification">
          <source>Gets whether a <ph id="ph1">&lt;see cref="E:System.ComponentModel.IBindingList.ListChanged" /&gt;</ph> event is raised when the list changes or an item in the list changes.</source>
          <target state="translated">Indica se viene generato un evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.IBindingList.ListChanged" /&gt;</ph> quando viene modificato l'elenco o un elemento dell'elenco.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.SupportsChangeNotification">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a <ph id="ph2">&lt;see cref="E:System.ComponentModel.IBindingList.ListChanged" /&gt;</ph> event is raised when the list changes or when an item changes; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se viene generato un evento <ph id="ph2">&lt;see cref="E:System.ComponentModel.IBindingList.ListChanged" /&gt;</ph> quando viene modificato l'elenco o un elemento dell'elenco, in caso contrario <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.SupportsChangeNotification">
          <source>Objects in the list must notify the list when they change, so the list can raise a <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event.</source>
          <target state="translated">Gli oggetti dell'elenco devono segnalare all'elenco quando vengono modificati, pertanto l'elenco può generare un <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IBindingList.SupportsSearching">
          <source>Gets whether the list supports searching using the <ph id="ph1">&lt;see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Indica se l'elenco supporta la ricerca con il metodo <ph id="ph1">&lt;see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.SupportsSearching">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the list supports searching using the <ph id="ph2">&lt;see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'elenco supporta la ricerca con il metodo <ph id="ph2">&lt;see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /&gt;</ph>, in caso contrario <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.SupportsSearching">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSearching%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come implementare il <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.SupportsSearching%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IBindingList.SupportsSorting">
          <source>Gets whether the list supports sorting.</source>
          <target state="translated">Indica se l'elenco supporta l'ordinamento.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.SupportsSorting">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the list supports sorting; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'elenco supporta l'ordinamento, in caso contrario <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IBindingList.SupportsSorting">
          <source>If this property is <ph id="ph1">`true`</ph>, then <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.IsSorted%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList.SortProperty%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ComponentModel.IBindingList.SortDirection%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ComponentModel.IBindingList.ApplySort%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.ComponentModel.IBindingList.RemoveSort%2A&gt;</ph> are supported.</source>
          <target state="translated">Se questa proprietà è <ph id="ph1">`true`</ph>, quindi <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.IsSorted%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList.SortProperty%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ComponentModel.IBindingList.SortDirection%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ComponentModel.IBindingList.ApplySort%2A&gt;</ph>, e <ph id="ph6">&lt;xref:System.ComponentModel.IBindingList.RemoveSort%2A&gt;</ph> sono supportati.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>