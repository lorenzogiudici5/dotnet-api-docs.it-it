<Type Name="ICancelAddNew" FullName="System.ComponentModel.ICancelAddNew">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a90ef799e4d00c36c06e1d73fd90e9c03baeab9" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37692956" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICancelAddNew" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICancelAddNew" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ICancelAddNew" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICancelAddNew" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICancelAddNew" />
  <TypeSignature Language="F#" Value="type ICancelAddNew = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="02fd5-101">Aggiunge funzionalità transazionali al momento dell'aggiunta di un nuovo elemento a un insieme.</span>
      <span class="sxs-lookup">
        <span data-stu-id="02fd5-101">Adds transactional capability when adding a new item to a collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02fd5-102">Il <xref:System.ComponentModel.ICancelAddNew> interfaccia consente a una raccolta aggiungere un nuovo elemento in una modalità estendibile.</span><span class="sxs-lookup"><span data-stu-id="02fd5-102">The <xref:System.ComponentModel.ICancelAddNew> interface enables a collection to add a new item in an extensible way.</span></span> <span data-ttu-id="02fd5-103">Il nuovo elemento può successivamente eseguire il commit o rollback.</span><span class="sxs-lookup"><span data-stu-id="02fd5-103">The new item subsequently can be committed or rolled back.</span></span> <span data-ttu-id="02fd5-104">Il <xref:System.ComponentModel.IBindingList.AddNew%2A> metodo della raccolta viene utilizzato per aggiungere temporaneamente l'elemento, che viene successivamente in transazioni tramite le operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="02fd5-104">The <xref:System.ComponentModel.IBindingList.AddNew%2A> method of the collection is used to tentatively add the item, which is subsequently transacted through the following operations:</span></span>  
  
-   <span data-ttu-id="02fd5-105">Il <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> metodo eseguirà il commit in modo esplicito l'aggiunta in sospeso.</span><span class="sxs-lookup"><span data-stu-id="02fd5-105">The <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> method will explicitly commit the pending addition.</span></span>  
  
-   <span data-ttu-id="02fd5-106">Esecuzione di un'altra operazione di raccolta, ad esempio un inserimento, rimozione o spostamento eseguirà il commit in modo implicito l'aggiunta in sospeso.</span><span class="sxs-lookup"><span data-stu-id="02fd5-106">Performing another collection operation, such as an insertion, removal, or move will implicitly commit the pending addition.</span></span>  
  
-   <span data-ttu-id="02fd5-107">Il <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> metodo eseguirà il rollback dell'operazione di aggiunta se non è già stato eseguito il commit.</span><span class="sxs-lookup"><span data-stu-id="02fd5-107">The <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> method will roll back the pending addition if it has not already been committed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02fd5-108">In alcuni scenari, ad esempio Windows Form data binding complesso, è possibile che venga visualizzato l'insieme <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> o <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> chiama per elementi diversi dall'elemento appena aggiunto.</span><span class="sxs-lookup"><span data-stu-id="02fd5-108">In some scenarios, such as Windows Forms complex data binding, the collection may receive <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> or <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> calls for items other than the newly added item.</span></span> <span data-ttu-id="02fd5-109">(Ogni elemento è in genere è una riga in una vista dati). Ignora queste chiamate; annullare o eseguire il commit del nuovo elemento solo quando viene specificato l'indice dell'elemento.</span><span class="sxs-lookup"><span data-stu-id="02fd5-109">(Each item is typically a row in a data view.) Ignore these calls; cancel or commit the new item only when that item's index is specified.</span></span>  
  
 <span data-ttu-id="02fd5-110">Sono disponibili due modelli che consente l'aggiunta di transazionale di un elemento a una raccolta con associazione a dati:</span><span class="sxs-lookup"><span data-stu-id="02fd5-110">There are two models that allow transactional addition of an item to a data-bound collection:</span></span>  
  
-   <span data-ttu-id="02fd5-111">Il modello precedente si basa direttamente su una raccolta che implementa il <xref:System.ComponentModel.IBindingList> interfaccia ed è associato ai dati direttamente tramite il <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="02fd5-111">The older model relies directly on a collection that implements the <xref:System.ComponentModel.IBindingList> interface and is data-bound directly using the <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="02fd5-112">Il <xref:System.Windows.Forms.CurrencyManager.AddNew%2A>, <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, e <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> metodi del <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> classe sono responsabili per il supporto transazionale per l'aggiunta di nuovi elementi.</span><span class="sxs-lookup"><span data-stu-id="02fd5-112">The <xref:System.Windows.Forms.CurrencyManager.AddNew%2A>, <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, and <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> methods of the <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> class are responsible for transactional support for adding new items.</span></span> <span data-ttu-id="02fd5-113">Tuttavia, questa funzionalità dipende dagli elementi che supportano il comportamento transazionale tramite il <xref:System.ComponentModel.IEditableObject> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="02fd5-113">However, this functionality depends upon the items supporting transactional behavior through the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="02fd5-114">Se gli elementi non supportano questa interfaccia, sempre l'elemento verrà aggiunto all'elenco, indipendentemente dalle chiamate successive a <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="02fd5-114">If the items do not support this interface, the item will always be added to the list, regardless of subsequent calls to <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>.</span></span>  
  
-   <span data-ttu-id="02fd5-115">Il modello più recente supporta uno scenario di associazione dati più affidabile tramite il tipo generico <xref:System.ComponentModel.BindingList%601> classe che implementa le <xref:System.ComponentModel.IBindingList> e <xref:System.ComponentModel.ICancelAddNew> interfacce.</span><span class="sxs-lookup"><span data-stu-id="02fd5-115">The newer model supports a more robust data-binding scenario through the generic <xref:System.ComponentModel.BindingList%601> class, which implements the <xref:System.ComponentModel.IBindingList> and <xref:System.ComponentModel.ICancelAddNew> interfaces.</span></span> <span data-ttu-id="02fd5-116">In questo caso, il supporto transazionale viene gestito dal <xref:System.ComponentModel.BindingList%601> raccolta direttamente.</span><span class="sxs-lookup"><span data-stu-id="02fd5-116">In this case, the transactional support is managed by the <xref:System.ComponentModel.BindingList%601> collection directly.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : int -&gt; unit" Usage="iCancelAddNew.CancelNew itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">
          <span data-ttu-id="02fd5-117">Indice dell'elemento precedentemente aggiunto all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02fd5-117">The index of the item that was previously added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02fd5-118">Elimina dalla raccolta un nuovo elemento in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02fd5-118">Discards a pending new item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02fd5-119">Il <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> metodo esegue il rollback di un'operazione di aggiunta (<xref:System.ComponentModel.IBindingList.AddNew%2A>) di un elemento aggiunto in precedenza alla raccolta nella posizione `itemIndex`.</span><span class="sxs-lookup"><span data-stu-id="02fd5-119">The <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> method rolls back a pending addition (<xref:System.ComponentModel.IBindingList.AddNew%2A>) of an item previously added to the collection at position `itemIndex`.</span></span> <span data-ttu-id="02fd5-120">Il parametro di indice è necessario perché alcuni nuovi elementi possono essere contemporaneamente in sospeso.</span><span class="sxs-lookup"><span data-stu-id="02fd5-120">The index parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="EndNew">
      <MemberSignature Language="C#" Value="public void EndNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member EndNew : int -&gt; unit" Usage="iCancelAddNew.EndNew itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">
          <span data-ttu-id="02fd5-121">Indice dell'elemento precedentemente aggiunto all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02fd5-121">The index of the item that was previously added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02fd5-122">Esegue il commit di un nuovo elemento in sospeso nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02fd5-122">Commits a pending new item to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02fd5-123">Il <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> esegue il commit di un'operazione di aggiunta (<xref:System.ComponentModel.IBindingList.AddNew%2A>) di un elemento aggiunto in precedenza alla raccolta nella posizione `itemIndex`.</span><span class="sxs-lookup"><span data-stu-id="02fd5-123">The <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> commits a pending addition (<xref:System.ComponentModel.IBindingList.AddNew%2A>) of an item previously added to the collection at position `itemIndex`.</span></span> <span data-ttu-id="02fd5-124">Il parametro di indice è necessario perché alcuni nuovi elementi possono essere contemporaneamente in sospeso.</span><span class="sxs-lookup"><span data-stu-id="02fd5-124">The index parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      </Docs>
    </Member>
  </Members>
</Type>