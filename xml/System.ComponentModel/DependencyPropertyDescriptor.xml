<Type Name="DependencyPropertyDescriptor" FullName="System.ComponentModel.DependencyPropertyDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9129b71e3d1a09bda039373e58cb4b2bbe82f076" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37693583" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DependencyPropertyDescriptor : System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DependencyPropertyDescriptor extends System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DependencyPropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependencyPropertyDescriptor&#xA;Inherits PropertyDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyDescriptor sealed : System::ComponentModel::PropertyDescriptor" />
  <TypeSignature Language="F#" Value="type DependencyPropertyDescriptor = class&#xA;    inherit PropertyDescriptor" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.PropertyDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4917f-101">Fornisce un'estensione di <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rappresenta le caratteristiche aggiuntive di una proprietà di dipendenza.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4917f-101">Provides an extension of <see cref="T:System.ComponentModel.PropertyDescriptor" /> that accounts for the additional property characteristics of a dependency property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-102">Questa classe viene utilizzata principalmente dalle applicazioni della finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="4917f-102">This class is primarily used by designer applications.</span></span> <span data-ttu-id="4917f-103">Queste applicazioni potrebbe essere necessario segnalare le caratteristiche delle proprietà di dipendenza tramite finestre delle proprietà o altri strumenti usati per la modifica i valori delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="4917f-103">These applications may need to report the dependency property characteristics through property windows or other tools used for editing property values.</span></span>  
  
 <span data-ttu-id="4917f-104">Per controllare una proprietà specifica per determinare se ha <xref:System.ComponentModel.DependencyPropertyDescriptor> disponibili per essere utilizzato come un <xref:System.ComponentModel.PropertyDescriptor>, chiamare <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType>, o <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4917f-104">In order to check a specific property to determine whether it has <xref:System.ComponentModel.DependencyPropertyDescriptor> available to serve as a <xref:System.ComponentModel.PropertyDescriptor>, call either <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType>, or <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4917f-105">Se entrambi i metodi restituiscono `null`, quindi la proprietà non è una proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="4917f-105">If either method returns `null`, then the property is not a dependency property.</span></span> <span data-ttu-id="4917f-106">Se il metodo restituisce un valore valido <xref:System.ComponentModel.DependencyPropertyDescriptor> , la proprietà è una proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="4917f-106">If the method returns a valid <xref:System.ComponentModel.DependencyPropertyDescriptor> , then the property is a dependency property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddValueChanged">
      <MemberSignature Language="C#" Value="public override void AddValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddValueChanged : obj * EventHandler -&gt; unit&#xA;override this.AddValueChanged : obj * EventHandler -&gt; unit" Usage="dependencyPropertyDescriptor.AddValueChanged (component, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="4917f-107">Componente per il quale aggiungere il gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-107">The component to add the handler for.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="4917f-108">Delegato da aggiungere come listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-108">The delegate to add as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-109">Consente ad altri oggetti di ricevere una notifica quando la proprietà viene modificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-109">Enables other objects to be notified when this property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.DependencyPropertyDescriptor.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-110">Ottiene l'insieme di attributi per questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-110">Gets the collection of attributes for this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-111">Insieme <see cref="T:System.ComponentModel.AttributeCollection" /> di attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-111">The <see cref="T:System.ComponentModel.AttributeCollection" /> collection of attributes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public override bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member CanResetValue : obj -&gt; bool&#xA;override this.CanResetValue : obj -&gt; bool" Usage="dependencyPropertyDescriptor.CanResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="4917f-112">Componente di cui eseguire il test di reimpostazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-112">The component to test for reset capability.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-113">Restituisce un valore che indica se la reimpostazione di un oggetto ne modifica il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-113">Returns whether resetting an object changes its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4917f-114">
            <see langword="true" /> se reimpostando il componente varia il relativo valore, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-114">
              <see langword="true" /> if resetting the component changes its value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-115">Questo metodo si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-115">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public override string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Category" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="System.ComponentModel.DependencyPropertyDescriptor.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-116">Ottiene il nome della categoria alla quale appartiene il membro, come specificato in <see cref="T:System.ComponentModel.CategoryAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-116">Gets the name of the category that the member belongs to, as specified in the <see cref="T:System.ComponentModel.CategoryAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-117">Nome della categoria alla quale appartiene il membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-117">The name of the category to which the member belongs.</span>
          </span>
          <span data-ttu-id="4917f-118">Se non esiste alcun attributo <see cref="T:System.ComponentModel.CategoryAttribute" />, il nome della categoria verrà impostato sulla categoria predefinita <see langword="Misc" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-118">If there is no <see cref="T:System.ComponentModel.CategoryAttribute" />, the category name is set to the default category, <see langword="Misc" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-119">Questa proprietà si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-119">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public override Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ComponentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentType : Type" Usage="System.ComponentModel.DependencyPropertyDescriptor.ComponentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-120">Ottiene il tipo di componente a cui è associata la proprietà in questione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-120">Gets the type of the component this property is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-121">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente a cui questa proprietà è associata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-121">A <see cref="T:System.Type" /> that represents the type of component this property is bound to.</span>
          </span>
          <span data-ttu-id="4917f-122">Quando vengono richiamati <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> o <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />, l'oggetto specificato potrebbe essere un'istanza di questo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-122">When <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> are invoked, the object specified might be an instance of this type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-123">Questa proprietà si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-123">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Converter As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::TypeConverter ^ Converter { System::ComponentModel::TypeConverter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.ComponentModel.TypeConverter" Usage="System.ComponentModel.DependencyPropertyDescriptor.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-124">Ottiene il convertitore di tipi di questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-124">Gets the type converter for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-125">Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> che viene utilizzato per convertire l'oggetto <see cref="T:System.Type" /> della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-125">A <see cref="T:System.ComponentModel.TypeConverter" /> that is used to convert the <see cref="T:System.Type" /> of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-126">Questa proprietà può essere `null` nei casi in cui l'attribuito <xref:System.ComponentModel.TypeConverter> non è una classe pubblica.</span><span class="sxs-lookup"><span data-stu-id="4917f-126">This property may be `null` in cases where the attributed <xref:System.ComponentModel.TypeConverter> is not a public class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependencyProperty : System.Windows.DependencyProperty" Usage="System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-127">Restituisce l'identificatore della proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-127">Returns the dependency property identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-128">Identificatore della proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-128">The dependency property identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-129">Questa proprietà può essere `null` se un <xref:System.ComponentModel.DependencyPropertyDescriptor> è stata creata l'istanza per una proprietà che non è una proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="4917f-129">This property may be `null` if a <xref:System.ComponentModel.DependencyPropertyDescriptor> instance was created for a property that is not a dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public override string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.ComponentModel.DependencyPropertyDescriptor.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-130">Ottiene la descrizione del membro, come specificato in <see cref="T:System.ComponentModel.DescriptionAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-130">Gets the description of the member, as specified in the <see cref="T:System.ComponentModel.DescriptionAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-131">Descrizione del membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-131">The description of the member.</span>
          </span>
          <span data-ttu-id="4917f-132">Se non esiste alcun attributo <see cref="T:System.ComponentModel.DescriptionAttribute" />, il valore della proprietà viene impostato su quello predefinito, ovvero una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-132">If there is no <see cref="T:System.ComponentModel.DescriptionAttribute" />, the property value is set to the default, which is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-133">Questa proprietà si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-133">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerCoerceValueCallback">
      <MemberSignature Language="C#" Value="public System.Windows.CoerceValueCallback DesignerCoerceValueCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.CoerceValueCallback DesignerCoerceValueCallback" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property DesignerCoerceValueCallback As CoerceValueCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::CoerceValueCallback ^ DesignerCoerceValueCallback { System::Windows::CoerceValueCallback ^ get(); void set(System::Windows::CoerceValueCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DesignerCoerceValueCallback : System.Windows.CoerceValueCallback with get, set" Usage="System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.CoerceValueCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-134">Ottiene o imposta un callback utilizzato nelle finestre di progettazione per modificare il valore effettivo di una proprietà di dipendenza, prima che tale valore venga memorizzato nel motore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-134">Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-135">Callback utilizzato nelle finestre di progettazione per modificare il valore effettivo di una proprietà di dipendenza, prima che tale valore venga memorizzato nel motore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-135">A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeOnly">
      <MemberSignature Language="C#" Value="public override bool DesignTimeOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DesignTimeOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeOnly : bool" Usage="System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-136">Indica se questo membro deve essere impostato soltanto in fase di progettazione, come specificato in <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-136">Gets whether this member should be set only at design time, as specified in the <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-137">
            <see langword="true" /> se il membro deve essere impostato soltanto in fase di progettazione, <see langword="false" /> se il membro può essere impostato in fase di esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-137">
              <see langword="true" /> if this member should be set only at design time; <see langword="false" /> if the member can be set during run time.</span>
          </span>
          <span data-ttu-id="4917f-138">Se non esiste alcun attributo <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, il valore restituito sarà quello predefinito, ovvero <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-138">If there is no <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, the return value is the default, which is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-139">Questa proprietà si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-139">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public override string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.ComponentModel.DependencyPropertyDescriptor.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-140">Ottiene il nome che può essere visualizzato in una finestra, quale una finestra delle proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-140">Gets the name that can be displayed in a window, such as a Properties window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-141">Nome da visualizzare per la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-141">The name to display for the property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-142">Questa proprietà si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-142">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DependencyProperty.Name" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool&#xA;override this.Equals : obj -&gt; bool" Usage="dependencyPropertyDescriptor.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="4917f-143">Oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> da confrontare con l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-143">The <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-144">Verifica l'uguaglianza tra due istanze di <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-144">Compares two <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> instances for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4917f-145">
            <see langword="true" /> se i valori sono equivalenti, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-145">
              <see langword="true" /> if the values are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromName">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-146">Restituisce <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per un nome di proprietà specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-146">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromName(string name, class System.Type ownerType, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromName (name As String, ownerType As Type, targetType As Type) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromName(System::String ^ name, Type ^ ownerType, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="static member FromName : string * Type * Type -&gt; System.ComponentModel.DependencyPropertyDescriptor" Usage="System.ComponentModel.DependencyPropertyDescriptor.FromName (name, ownerType, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4917f-147">Nome registrato di una proprietà di dipendenza o di una proprietà associata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-147">The registered name of a dependency property or an attached property.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="4917f-148">
            <see cref="T:System.Type" /> dell'oggetto proprietario della definizione di proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-148">The <see cref="T:System.Type" /> of the object that owns the property definition.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="4917f-149">
            <see cref="T:System.Type" /> dell'oggetto per cui si desidera impostare la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-149">The <see cref="T:System.Type" /> of the object you want to set the property for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-150">Restituisce <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per un nome di proprietà specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-150">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4917f-151">Oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-151">The requested <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-152">Il `name` può fare riferimento a una proprietà di dipendenza o una proprietà associata ed è il `name` parametro passato al <xref:System.Windows.DependencyProperty.Register%2A> o <xref:System.Windows.DependencyProperty.RegisterAttached%2A> chiamata che ha definito le proprietà in questione.</span><span class="sxs-lookup"><span data-stu-id="4917f-152">The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question.</span></span> <span data-ttu-id="4917f-153">`ownerType` rappresenta il tipo di oggetto a cui appartiene la proprietà, anche in questo caso come passato a <xref:System.Windows.DependencyProperty.Register%2A> o <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span><span class="sxs-lookup"><span data-stu-id="4917f-153">`ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span></span> <span data-ttu-id="4917f-154">`targetType` è il tipo di oggetto che si desidera impostare la proprietà.</span><span class="sxs-lookup"><span data-stu-id="4917f-154">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="4917f-155">Per le proprietà di dipendenza `ownerType` e `targetType` sono dello stesso tipo.</span><span class="sxs-lookup"><span data-stu-id="4917f-155">For dependency properties, `ownerType` and `targetType` are the same type.</span></span> <span data-ttu-id="4917f-156">Per le proprietà associate in genere differiscono.</span><span class="sxs-lookup"><span data-stu-id="4917f-156">For attached properties they usually differ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType, bool ignorePropertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromName(string name, class System.Type ownerType, class System.Type targetType, bool ignorePropertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromName (name As String, ownerType As Type, targetType As Type, ignorePropertyType As Boolean) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromName(System::String ^ name, Type ^ ownerType, Type ^ targetType, bool ignorePropertyType);" />
      <MemberSignature Language="F#" Value="static member FromName : string * Type * Type * bool -&gt; System.ComponentModel.DependencyPropertyDescriptor" Usage="System.ComponentModel.DependencyPropertyDescriptor.FromName (name, ownerType, targetType, ignorePropertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="ignorePropertyType" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4917f-157">Nome registrato di una proprietà di dipendenza o di una proprietà associata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-157">The registered name of a dependency property or an attached property.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="4917f-158">
            <see cref="T:System.Type" /> dell'oggetto proprietario della definizione di proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-158">The <see cref="T:System.Type" /> of the object that owns the property definition.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="4917f-159">
            <see cref="T:System.Type" /> dell'oggetto per cui si desidera impostare la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-159">The <see cref="T:System.Type" /> of the object you want to set the property for.</span>
          </span>
        </param>
        <param name="ignorePropertyType">
          <span data-ttu-id="4917f-160">Specifica di ignorare il tipo di proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-160">Specifies to ignore the property type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-161">Restituisce <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per un nome di proprietà specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-161">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4917f-162">Oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-162">The requested <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-163">Il `name` può fare riferimento a una proprietà di dipendenza o una proprietà associata ed è il `name` parametro passato al <xref:System.Windows.DependencyProperty.Register%2A> o <xref:System.Windows.DependencyProperty.RegisterAttached%2A> chiamata che ha definito le proprietà in questione.</span><span class="sxs-lookup"><span data-stu-id="4917f-163">The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question.</span></span> <span data-ttu-id="4917f-164">`ownerType` rappresenta il tipo di oggetto a cui appartiene la proprietà, anche in questo caso come passato a <xref:System.Windows.DependencyProperty.Register%2A> o <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span><span class="sxs-lookup"><span data-stu-id="4917f-164">`ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span></span> <span data-ttu-id="4917f-165">`targetType` è il tipo di oggetto che si desidera impostare la proprietà.</span><span class="sxs-lookup"><span data-stu-id="4917f-165">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="4917f-166">Per le proprietà di dipendenza `ownerType` e `targetType` sono dello stesso tipo.</span><span class="sxs-lookup"><span data-stu-id="4917f-166">For dependency properties, `ownerType` and `targetType` are the same type.</span></span> <span data-ttu-id="4917f-167">Per le proprietà associate in genere differiscono.</span><span class="sxs-lookup"><span data-stu-id="4917f-167">For attached properties they usually differ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromProperty">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-168">Restituisce <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> in base a un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> o a un tipo specificati, a seconda della firma utilizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-168">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> based either on a provided <see cref="T:System.ComponentModel.PropertyDescriptor" /> or a provided type, depending on the signature used.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromProperty(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromProperty (property As PropertyDescriptor) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromProperty(System::ComponentModel::PropertyDescriptor ^ property);" />
      <MemberSignature Language="F#" Value="static member FromProperty : System.ComponentModel.PropertyDescriptor -&gt; System.ComponentModel.DependencyPropertyDescriptor" Usage="System.ComponentModel.DependencyPropertyDescriptor.FromProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="4917f-169">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da verificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-169">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-170">Restituisce <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-170">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4917f-171">Se la proprietà descritta da <paramref name="property" /> è una proprietà di dipendenza, restituisce un oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-171">If the property described by <paramref name="property" /> is a dependency property, returns a valid <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          </span>
          <span data-ttu-id="4917f-172">In caso contrario, restituisce <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-172">Otherwise, returns a <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-173">Questo metodo è il metodo principale usato dalle applicazioni della finestra di progettazione per ottenere un <xref:System.ComponentModel.DependencyPropertyDescriptor> sulla base della verifica tutte le proprietà per un <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-173">This method is the primary method used by designer applications to obtain a <xref:System.ComponentModel.DependencyPropertyDescriptor> on basis of checking all properties for a <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.Windows.DependencyProperty dependencyProperty, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromProperty(class System.Windows.DependencyProperty dependencyProperty, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromProperty(System::Windows::DependencyProperty ^ dependencyProperty, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="static member FromProperty : System.Windows.DependencyProperty * Type -&gt; System.ComponentModel.DependencyPropertyDescriptor" Usage="System.ComponentModel.DependencyPropertyDescriptor.FromProperty (dependencyProperty, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty">
          <span data-ttu-id="4917f-174">Identificatore della proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-174">The identifier for a dependency property.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="4917f-175">Tipo di oggetto su cui viene impostata la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-175">The type of the object where the property is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-176">Restituisce un oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per una proprietà di dipendenza e un tipo di destinazione specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-176">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided dependency property and target type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4917f-177">Oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per la proprietà di dipendenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-177">A <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for the provided dependency property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-178">Il `dependencyProperty` può fare riferimento a una proprietà di dipendenza o una proprietà associata.</span><span class="sxs-lookup"><span data-stu-id="4917f-178">The `dependencyProperty` may refer to a dependency property or an attached property.</span></span> <span data-ttu-id="4917f-179">`targetType` è il tipo di oggetto che si desidera impostare la proprietà.</span><span class="sxs-lookup"><span data-stu-id="4917f-179">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="4917f-180">Per le proprietà di dipendenza, il tipo è equivalente al <xref:System.Windows.DependencyProperty.OwnerType%2A> per il `dependencyProperty`.</span><span class="sxs-lookup"><span data-stu-id="4917f-180">For dependency properties, that type is equivalent to the <xref:System.Windows.DependencyProperty.OwnerType%2A> for the `dependencyProperty`.</span></span> <span data-ttu-id="4917f-181">Per le proprietà associate il `targetType` è in genere un altro <xref:System.Windows.DependencyObject> tipo.</span><span class="sxs-lookup"><span data-stu-id="4917f-181">For attached properties the `targetType` is typically some other <xref:System.Windows.DependencyObject> type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChildProperties (instance As Object, filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member GetChildProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetChildProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="dependencyPropertyDescriptor.GetChildProperties (instance, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="4917f-182">Componente per il quale ottenere le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-182">A component to get the properties for.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="4917f-183">Matrice di tipo <see cref="T:System.Attribute" /> da utilizzare come filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-183">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-184">Restituisce un valore <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-184">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4917f-185">Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà che corrispondono agli attributi specificati per lo specifico componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-185">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-186">Questo metodo si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-186">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public override object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="abstract member GetEditor : Type -&gt; obj&#xA;override this.GetEditor : Type -&gt; obj" Usage="dependencyPropertyDescriptor.GetEditor editorBaseType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">
          <span data-ttu-id="4917f-187">Il tipo base di editor, utilizzato per distinguere i numerosi editor supportati da una proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-187">The base type of editor, which is used to differentiate between multiple editors that a property supports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-188">Ottiene un editor del tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-188">Gets an editor of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4917f-189">Istanza del tipo di editor richiesto oppure <see langword="null" /> se non viene trovato un editor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-189">An instance of the requested editor type, or <see langword="null" /> if an editor cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-190">Questo metodo si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-190">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int&#xA;override this.GetHashCode : unit -&gt; int" Usage="dependencyPropertyDescriptor.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4917f-191">Restituisce il codice hash per questo oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-191">Returns the hash code for this <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4917f-192">Codice hash di un intero con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-192">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-193">Il codice hash per <xref:System.ComponentModel.DependencyPropertyDescriptor> si basa sull'identificatore per una proprietà di dipendenza sia del tipo in cui è impostato.</span><span class="sxs-lookup"><span data-stu-id="4917f-193">The hash code for <xref:System.ComponentModel.DependencyPropertyDescriptor> is based both on the identifier for a dependency property and on the type on which it is set.</span></span> <span data-ttu-id="4917f-194">Questa implementazione assicura che un <xref:System.ComponentModel.DependencyPropertyDescriptor> non restituisce in modo corretto lo stesso codice hash per le proprietà che vengono ereditate dalle classi derivate molte possibili o per le proprietà in caso contrario, nuovo assegnati tramite il sistema di proprietà.</span><span class="sxs-lookup"><span data-stu-id="4917f-194">This implementation assures that a <xref:System.ComponentModel.DependencyPropertyDescriptor> does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (component As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj&#xA;override this.GetValue : obj -&gt; obj" Usage="dependencyPropertyDescriptor.GetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="4917f-195">Istanza del componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-195">The component instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-196">Restituisce il valore corrente della proprietà su un componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-196">Resturns the current value of the property on a component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4917f-197">Valore richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-197">The requested value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-198">Questo metodo si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-198">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttached { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttached : bool" Usage="System.ComponentModel.DependencyPropertyDescriptor.IsAttached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-199">Ottiene un valore che indica se la proprietà è registrata come proprietà associata e viene usata attraverso un utilizzo associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-199">Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-200">
            <see langword="true" /> Se la proprietà è una proprietà associata. in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-200">
              <see langword="true" /> if the property is an attached property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowsable">
      <MemberSignature Language="C#" Value="public override bool IsBrowsable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowsable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsBrowsable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowsable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBrowsable : bool" Usage="System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-201">Ottiene un valore che indica il valore di <see cref="T:System.ComponentModel.BrowsableAttribute" /> sulla proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-201">Gets a value that indicates the value of the <see cref="T:System.ComponentModel.BrowsableAttribute" /> on the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-202">
            <see langword="true" /> se <see cref="T:System.ComponentModel.BrowsableAttribute" /> è stato specificato sulla proprietà; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-202">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.BrowsableAttribute" /> was specified on the property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-203">Questa proprietà si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-203">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalizable">
      <MemberSignature Language="C#" Value="public override bool IsLocalizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalizable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsLocalizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocalizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocalizable : bool" Usage="System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-204">Ottiene un valore che indica se la proprietà deve essere localizzata, come specificato in <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-204">Gets a value indicating whether this property should be localized, as specified in the <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-205">
            <see langword="true" /> se il membro è contrassegnato con il costruttore <see cref="T:System.ComponentModel.LocalizableAttribute" /> del valore true; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-205">
              <see langword="true" /> if the member is marked with the <see cref="T:System.ComponentModel.LocalizableAttribute" /> constructor of the value true; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-206">Questa proprietà si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-206">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-207">Ottiene un valore che indica se questa proprietà è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-207">Gets a value indicating whether this property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-208">
            <see langword="true" /> se la proprietà è di sola lettura, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-208">
              <see langword="true" /> if the property is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-209">Questa proprietà si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-209">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 <span data-ttu-id="4917f-210">Le proprietà di dipendenza vengono registrate come di sola lettura mediante le chiamate di metodo specifico e per convenzione il [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] proprietà wrapper che vengono visualizzate mediante reflection e i descrittori di proprietà deve essere anche sola lettura.</span><span class="sxs-lookup"><span data-stu-id="4917f-210">Dependency properties are registered as read-only using particular method calls, and by convention the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] wrapper properties that are the properties viewed by reflection and the descriptors must also be read-only.</span></span> <span data-ttu-id="4917f-211">Tuttavia, poiché si tratta di una convenzione e non un requisito per la compilazione, si potrebbe voler controllare il dipendenza proprietà identificatore sola lettura dello stato.</span><span class="sxs-lookup"><span data-stu-id="4917f-211">However, since this is a convention and not a requirement to compile, you might want to double check the dependency property identifier read-only state.</span></span> <span data-ttu-id="4917f-212">A tale scopo, ottenere l'identificatore (<xref:System.Windows.DependencyProperty>) un valore per questo <xref:System.ComponentModel.DependencyPropertyDescriptor> e quindi controllare il valore di <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="4917f-212">To do this, get the identifier (<xref:System.Windows.DependencyProperty>) value for this <xref:System.ComponentModel.DependencyPropertyDescriptor> and then check the value of <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</span></span> <span data-ttu-id="4917f-213">Si noti che il <xref:System.Windows.DependencyProperty.ReadOnly%2A> è sull'identificatore stesso, non di metadati.</span><span class="sxs-lookup"><span data-stu-id="4917f-213">Note that the <xref:System.Windows.DependencyProperty.ReadOnly%2A> is on the identifier itself, not metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As PropertyMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyMetadata ^ Metadata { System::Windows::PropertyMetadata ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Windows.PropertyMetadata" Usage="System.ComponentModel.DependencyPropertyDescriptor.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-214">Ottiene i metadati associati alla proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-214">Gets the metadata associated with the dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-215">Metadati della proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-215">The dependency property metadata.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-216">Il valore può essere `null` se non sono presenti metadati o se la proprietà non è una proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="4917f-216">The value can be `null` if there is  no metadata or if the property is not a dependency property.</span></span>  
  
 <span data-ttu-id="4917f-217">I metadati con i concetti corrispondenti negli [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] attributi vengono nuovamente esposti come attributi nella <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A> raccolta.</span><span class="sxs-lookup"><span data-stu-id="4917f-217">Metadata that has matching concepts in [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] attributes is re-exposed as attributes in the <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public override Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.ComponentModel.DependencyPropertyDescriptor.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-218">Ottiene l'oggetto <see cref="T:System.Type" /> rappresentato della proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-218">Gets the represented <see cref="T:System.Type" /> of the dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-219">Il <see cref="T:System.Type" /> della proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-219">The <see cref="T:System.Type" /> of the dependency property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-220">Questa proprietà restituisce il <xref:System.Type> registrato con la proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="4917f-220">This property returns the <xref:System.Type> that the dependency property was registered with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveValueChanged">
      <MemberSignature Language="C#" Value="public override void RemoveValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveValueChanged : obj * EventHandler -&gt; unit&#xA;override this.RemoveValueChanged : obj * EventHandler -&gt; unit" Usage="dependencyPropertyDescriptor.RemoveValueChanged (component, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="4917f-221">Componente per il quale aggiungere il gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-221">The component to add the handler for.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="4917f-222">Delegato da aggiungere come listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-222">The delegate to add as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-223">Consente ad altri oggetti di ricevere una notifica quando la proprietà viene modificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-223">Enables other objects to be notified when this property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-224">Questo metodo si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-224">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public override void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member ResetValue : obj -&gt; unit&#xA;override this.ResetValue : obj -&gt; unit" Usage="dependencyPropertyDescriptor.ResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="4917f-225">Componente con il valore di proprietà da reimpostare sul valore predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-225">The component with the property value that is to be reset to the default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-226">Reimposta il valore predefinito per questa proprietà del componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-226">Resets the value for this property of the component to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-227">Questo metodo si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-227">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetValue(System::Object ^ component, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit&#xA;override this.SetValue : obj * obj -&gt; unit" Usage="dependencyPropertyDescriptor.SetValue (component, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="4917f-228">Componente con il valore di proprietà da impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-228">The component with the property value that is to be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4917f-229">Nuovo valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-229">The new value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-230">Imposta un valore diverso del componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-230">Sets the value of the component to a different value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-231">Questo metodo si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-231">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public override bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; bool&#xA;override this.ShouldSerializeValue : obj -&gt; bool" Usage="dependencyPropertyDescriptor.ShouldSerializeValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="4917f-232">Componente con la proprietà di cui verificare la persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-232">The component with the property to be examined for persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4917f-233">Indica se il valore della proprietà deve essere conservato dai processi di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-233">Indicates whether the value of this property needs to be persisted by serialization processes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4917f-234">
            <see langword="true" /> se la proprietà deve essere conservata, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-234">
              <see langword="true" /> if the property should be persisted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeEvents">
      <MemberSignature Language="C#" Value="public override bool SupportsChangeEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsChangeEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeEvents : bool" Usage="System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4917f-235">Indica se le notifiche delle modifiche dei valori per questa proprietà possono avere origine all'esterno del descrittore della proprietà, ad esempio nel componente stesso, oppure se le notifiche avranno origine solo da chiamate dirette a <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-235">Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4917f-236">
            <see langword="true" /> se le notifiche per questa proprietà possono avere origine all'esterno del descrittore della proprietà, ad esempio nel componente stesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-236">
              <see langword="true" /> if notifications for this property may originate from outside the property descriptor, such as from the component itself.</span>
          </span>
          <span data-ttu-id="4917f-237">
            <see langword="false" /> se le notifiche avranno origine solo da chiamate dirette a <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-237">
              <see langword="false" /> if notifications will only originate from direct calls made to <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4917f-238">Ad esempio, per il `true` caso, il componente può implementare il <xref:System.ComponentModel.INotifyPropertyChanged> interfaccia o che siano presenti esplicita `propertyName.Changed` eventi per questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="4917f-238">For example, for the `true` case, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `propertyName.Changed` event for this property.</span></span>  
  
 <span data-ttu-id="4917f-239">Questa proprietà si basa su sottostante <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="4917f-239">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="dependencyPropertyDescriptor.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4917f-240">Converte il valore dell'istanza corrente nell'equivalente rappresentazione di stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-240">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4917f-241">Restituisce il valore <see cref="P:System.ComponentModel.MemberDescriptor.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4917f-241">Returns the <see cref="P:System.ComponentModel.MemberDescriptor.Name" /> value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>