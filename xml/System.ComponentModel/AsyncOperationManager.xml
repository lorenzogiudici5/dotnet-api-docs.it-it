<Type Name="AsyncOperationManager" FullName="System.ComponentModel.AsyncOperationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef3ff2be0b739ae6608fa83642c39187f3fd5b90" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39773663" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AsyncOperationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AsyncOperationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncOperationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type AsyncOperationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6eb82-101">Fornisce la gestione della concorrenza per le classi che supportano le chiamate asincrone.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6eb82-101">Provides concurrency management for classes that support asynchronous method calls.</span>
      </span>
      <span data-ttu-id="6eb82-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6eb82-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eb82-103">Se la classe deve ottenere un comportamento asincrono in base al [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), si verificheranno alcuni problemi di gestione della concorrenza.</span><span class="sxs-lookup"><span data-stu-id="6eb82-103">If your class needs to provide asynchronous behavior according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you will encounter a number of concurrency management issues.</span></span> <span data-ttu-id="6eb82-104">Tra questi è il requisito per garantire che i gestori eventi vengono chiamati su un thread o contesto adeguato al modello di applicazione (ad esempio, le applicazioni Windows Forms, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applicazioni, applicazioni console e così via).</span><span class="sxs-lookup"><span data-stu-id="6eb82-104">Among these is the requirement to ensure that event handlers are called on a thread or context that is appropriate for the application model (for example, Windows Forms applications, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applications, console applications, and so on).</span></span> <span data-ttu-id="6eb82-105">Il <xref:System.ComponentModel.AsyncOperationManager> fornisce un modo pratico per creare una classe che viene eseguito correttamente con tutti i modelli di applicazione supportati per il [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="6eb82-105">The <xref:System.ComponentModel.AsyncOperationManager> provides a convenient way to create a class that runs properly under all application models supported by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="6eb82-106">Il <xref:System.ComponentModel.AsyncOperationManager> classe dispone di un metodo, ovvero <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, che restituisce un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> che può essere utilizzato per tenere traccia della durata di una particolare attività asincrona.</span><span class="sxs-lookup"><span data-stu-id="6eb82-106">The <xref:System.ComponentModel.AsyncOperationManager> class has one method, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, which returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that can be used to track the duration of a particular asynchronous task.</span></span> <span data-ttu-id="6eb82-107">Il <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> per un'attività può essere utilizzato per avvisare i client quando un'attività viene completata.</span><span class="sxs-lookup"><span data-stu-id="6eb82-107">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for a task can be used to alert clients when a task completes.</span></span> <span data-ttu-id="6eb82-108">Può essere utilizzato anche per pubblicare gli aggiornamenti dello stato e i risultati incrementali senza interrompere l'operazione.</span><span class="sxs-lookup"><span data-stu-id="6eb82-108">It can also be used to post progress updates and incremental results without terminating the operation.</span></span>  
  
 <span data-ttu-id="6eb82-109">Per altre informazioni sull'implementazione di classi asincroni, vedere [implementazione del modello asincrono basato su eventi](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="6eb82-109">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6eb82-110">Esempio di codice seguente illustra l'uso di <xref:System.ComponentModel.AsyncOperationManager> classe per creare una classe che supporta operazioni asincrone per qualsiasi modello di applicazione.</span><span class="sxs-lookup"><span data-stu-id="6eb82-110">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager> class to create a class that supports asynchronous operations for any application model.</span></span> <span data-ttu-id="6eb82-111">Viene illustrato come implementare una classe che consente di verificare un numero per determinare se si tratta di un numero primo.</span><span class="sxs-lookup"><span data-stu-id="6eb82-111">It shows how to implement a class that tests a number to determine whether it is prime.</span></span> <span data-ttu-id="6eb82-112">Questo calcolo può richiedere tempi lunghe, quindi viene eseguito in un thread separato.</span><span class="sxs-lookup"><span data-stu-id="6eb82-112">This calculation can be time consuming, so it is done on a separate thread.</span></span> <span data-ttu-id="6eb82-113">Report stato di avanzamento, risultati incrementali e le notifiche di completamento vengono gestite dal <xref:System.ComponentModel.AsyncOperation> classe, che assicura che i gestori eventi del client vengano chiamati nel thread appropriato o contesto.</span><span class="sxs-lookup"><span data-stu-id="6eb82-113">Progress reports, incremental results, and completion notifications are handled by the <xref:System.ComponentModel.AsyncOperation> class, which ensures that the client's event handlers are called on the proper thread or context.</span></span>  
  
 <span data-ttu-id="6eb82-114">Per un listato di codice completo, vedere [procedura: implementare un componente che supporta il modello asincrono basato su eventi](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="6eb82-114">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="6eb82-115">Per un listato di codice completo di un form di client, vedere [procedura: implementare un Client del modello asincrono basato su eventi](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="6eb82-115">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
  <Members>
    <Member MemberName="CreateOperation">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AsyncOperation CreateOperation (object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AsyncOperation CreateOperation(object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOperation (userSuppliedState As Object) As AsyncOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AsyncOperation ^ CreateOperation(System::Object ^ userSuppliedState);" />
      <MemberSignature Language="F#" Value="static member CreateOperation : obj -&gt; System.ComponentModel.AsyncOperation" Usage="System.ComponentModel.AsyncOperationManager.CreateOperation userSuppliedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userSuppliedState">
          <span data-ttu-id="6eb82-116">Oggetto utilizzato per associare informazioni sullo stato del client, ad esempio un ID attività, a un'operazione asincrona specifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6eb82-116">An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6eb82-117">Restituisce un oggetto <see cref="T:System.ComponentModel.AsyncOperation" /> per rilevare la durata di una particolare operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6eb82-117">Returns an <see cref="T:System.ComponentModel.AsyncOperation" /> for tracking the duration of a particular asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6eb82-118">Un oggetto <see cref="T:System.ComponentModel.AsyncOperation" /> utilizzabile per tenere traccia della durata di una chiamata asincrona a un metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6eb82-118">An <see cref="T:System.ComponentModel.AsyncOperation" /> that you can use to track the duration of an asynchronous method invocation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eb82-119">Il <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> metodo restituisce un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> che è possibile usare per tenere traccia della durata di una determinata operazione asincrona e per avvisare il modello di applicazione al termine dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="6eb82-119">The <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that you can use to track the duration of a particular asynchronous operation and to alert the application model when the operation completes.</span></span> <span data-ttu-id="6eb82-120">È anche possibile usarlo per pubblicare gli aggiornamenti dello stato e i risultati incrementali senza interrompere l'operazione.</span><span class="sxs-lookup"><span data-stu-id="6eb82-120">You can also use it to post progress updates and incremental results without terminating the operation.</span></span> <span data-ttu-id="6eb82-121">Il <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> eseguirà correttamente il marshalling di queste chiamate per il thread o contesto corretto per il modello di applicazione.</span><span class="sxs-lookup"><span data-stu-id="6eb82-121">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> will correctly marshal these calls to the appropriate thread or context for the application model.</span></span>  
  
 <span data-ttu-id="6eb82-122">Se si implementa una classe che supporta il modello asincrono basato su eventi, la classe deve chiamare <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> ogni volta che il *NomeMetodo* `Async` viene chiamato il metodo.</span><span class="sxs-lookup"><span data-stu-id="6eb82-122">If you implement a class that supports the Event-based Asynchronous Pattern, your class should call <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> each time your *MethodName*`Async` method is called.</span></span> <span data-ttu-id="6eb82-123">L'applicazione client che effettua chiamate al metodo può usare il `userSuppliedState` parametro per identificare in modo univoco ogni chiamata, in modo da distinguere gli eventi generati durante l'esecuzione dell'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="6eb82-123">The client application that makes calls to the method can use the `userSuppliedState` parameter to uniquely identify each invocation, so as to distinguish events raised during the execution of the asynchronous operation.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6eb82-124">Il codice client deve fornire un valore univoco per il `userSuppliedState` parametro.</span><span class="sxs-lookup"><span data-stu-id="6eb82-124">Client code must provide a unique value for the `userSuppliedState` parameter.</span></span> <span data-ttu-id="6eb82-125">ID attività non univoco potrebbe causare l'implementazione segnalare lo stato di avanzamento e altri eventi in modo non corretto.</span><span class="sxs-lookup"><span data-stu-id="6eb82-125">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="6eb82-126">Il codice deve verificare la presenza di un ID attività non univoci e generare un <xref:System.ArgumentException?displayProperty=nameWithType> se viene rilevata.</span><span class="sxs-lookup"><span data-stu-id="6eb82-126">Your code should check for a non-unique task ID and throw an <xref:System.ArgumentException?displayProperty=nameWithType> if one is detected.</span></span>  
  
 <span data-ttu-id="6eb82-127">Il codice deve rilevare ogni <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> restituito da <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> e usare l'oggetto nell'operazione asincrona sottostante corrispondente per pubblicare gli aggiornamenti e terminare l'operazione.</span><span class="sxs-lookup"><span data-stu-id="6eb82-127">Your code should track every <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> returned by <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> and use the object in the corresponding underlying asynchronous operation to post updates and terminate the operation.</span></span> <span data-ttu-id="6eb82-128">Questa verifica può essere semplice come passare il <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> come parametro tra i delegati.</span><span class="sxs-lookup"><span data-stu-id="6eb82-128">This tracking can be as simple as passing the <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> as a parameter among delegates.</span></span> <span data-ttu-id="6eb82-129">Nelle progettazioni più sofisticate, la classe può gestire una raccolta di <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> oggetti, aggiungere oggetti all'avvio delle attività e rimuoverli quando le attività vengono completate o annullate.</span><span class="sxs-lookup"><span data-stu-id="6eb82-129">In more sophisticated designs, your class can maintain a collection of <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objects, adding objects when tasks are started and removing them when tasks are completed or canceled.</span></span> <span data-ttu-id="6eb82-130">Questo approccio consente di verificare la presenza di univoco `userSuppliedState` parametro valori ed è il metodo da usare quando si lavora con le classi che supportano più chiamate simultanee.</span><span class="sxs-lookup"><span data-stu-id="6eb82-130">This approach allows you to check for unique `userSuppliedState` parameter values, and is the method you should use when working with classes that support multiple concurrent invocations.</span></span>  
  
 <span data-ttu-id="6eb82-131">Per altre informazioni sull'implementazione di classi asincroni, vedere [implementazione del modello asincrono basato su eventi](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="6eb82-131">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6eb82-132">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> metodo per creare un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> per rilevare la durata delle operazioni asincrone.</span><span class="sxs-lookup"><span data-stu-id="6eb82-132">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for tracking the duration of asynchronous operations.</span></span> <span data-ttu-id="6eb82-133">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.AsyncOperationManager> classe.</span><span class="sxs-lookup"><span data-stu-id="6eb82-133">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public static System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext with get, set" Usage="System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6eb82-134">Ottiene o imposta il contesto di sincronizzazione per l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6eb82-134">Gets or sets the synchronization context for the asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6eb82-135">Il contesto di sincronizzazione per l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6eb82-135">The synchronization context for the asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6eb82-136">L'implementazione predefinita è l'implementazione a thread libero.</span><span class="sxs-lookup"><span data-stu-id="6eb82-136">The default implementation is the free-threaded implementation.</span></span>  
  
 <span data-ttu-id="6eb82-137">Un thread deve impostare il <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> proprietà `null` per rilasciare la factory modello di threading Free al termine, altrimenti non verrà eliminato mai la factory.</span><span class="sxs-lookup"><span data-stu-id="6eb82-137">A thread should set the <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> property to `null` to release the free-threaded factory when it is done, or else its factory will never be disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="6eb82-138">Per impostare il contesto di sincronizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6eb82-138">for setting the synchronization context.</span>
          </span>
          <span data-ttu-id="6eb82-139">Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6eb82-139">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="6eb82-140">Stato associato:</span>
          <span class="sxs-lookup">
            <span data-stu-id="6eb82-140">Associated state:</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>