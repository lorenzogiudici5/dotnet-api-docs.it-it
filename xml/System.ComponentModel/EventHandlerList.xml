<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventHandlerList.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c48ff1d7ee9359d5d8dd27cf3cddfb01b217c8ea.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c48ff1d7ee9359d5d8dd27cf3cddfb01b217c8ea</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EventHandlerList">
          <source>Provides a simple list of delegates.</source>
          <target state="translated">Fornisce un semplice elenco di delegati.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EventHandlerList">
          <source>This class cannot be inherited.</source>
          <target state="translated">Questa classe non può essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventHandlerList">
          <source>This class uses a linear search algorithm to find entries in the list of delegates.</source>
          <target state="translated">Questa classe utilizza un algoritmo di ricerca lineare per trovare le voci dell'elenco di delegati.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventHandlerList">
          <source>A linear search algorithm is inefficient when working with a large number of entries.</source>
          <target state="translated">Algoritmo di ricerca lineare è inefficiente quando si lavora con un numero elevato di voci.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventHandlerList">
          <source>Therefore, when you have a large list, finding entries is slow.</source>
          <target state="translated">Pertanto, quando si dispone di un elenco di grandi dimensioni, ricerca di voci è lenta.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventHandlerList">
          <source>For an example of using an <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph>, see <bpt id="p1">[</bpt>How to: Handle Multiple Events Using Event Properties<ept id="p1">](~/docs/standard/events/how-to-handle-multiple-events-using-event-properties.md)</ept>.</source>
          <target state="translated">Per un esempio dell'utilizzo di un <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph>, vedere <bpt id="p1">[</bpt>procedura: gestire più eventi usando proprietà evento<ept id="p1">](~/docs/standard/events/how-to-handle-multiple-events-using-event-properties.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventHandlerList.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)">
          <source>The object that owns the event.</source>
          <target state="translated">Oggetto a cui appartiene l'evento.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)">
          <source>The delegate to add to the list.</source>
          <target state="translated">Delegato da aggiungere all'elenco.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)">
          <source>Adds a delegate to the list.</source>
          <target state="translated">Consente di aggiungere un delegato all'elenco.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
          <source>The list to add.</source>
          <target state="translated">Elenco da aggiungere.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
          <source>Adds a list of delegates to the current list.</source>
          <target state="translated">Aggiunge un elenco di delegati all'elenco corrente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventHandlerList.Dispose">
          <source>Disposes the delegate list.</source>
          <target state="translated">Elimina l'elenco di delegati.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventHandlerList.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph>.</source>
          <target state="translated">Chiamare il metodo <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList.Dispose%2A&gt;</ph> dopo aver terminato di utilizzare l'oggetto <ph id="ph2">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventHandlerList.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph> in an unusable state.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList.Dispose%2A&gt;</ph> lascia l'oggetto <ph id="ph2">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph> in una condizione di inutilizzabilità.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventHandlerList.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph> so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">Dopo la chiamata <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList.Dispose%2A&gt;</ph>, è necessario rilasciare tutti i riferimenti al <ph id="ph2">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph> in modo che la memoria occupata può essere recuperata tramite garbage collection.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventHandlerList.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph>.</source>
          <target state="translated">Chiamare sempre il metodo <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList.Dispose%2A&gt;</ph> prima di rilasciare l'ultimo riferimento a <ph id="ph2">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventHandlerList.Dispose">
          <source>Otherwise, the resources the <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph> is using will not be freed until garbage collection calls the <ph id="ph2">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph> object's destructor.</source>
          <target state="translated">In caso contrario, le risorse di <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph> non è verranno liberate finché garbage collection di <ph id="ph2">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph> distruttore dell'oggetto.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
          <source>An object to find in the list.</source>
          <target state="translated">Oggetto da trovare nell'elenco.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
          <source>Gets or sets the delegate for the specified object.</source>
          <target state="translated">Ottiene o imposta il delegato dell'oggetto specificato.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
          <source>The delegate for the specified key, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if a delegate does not exist.</source>
          <target state="translated">Il delegato della chiave specificata oppure <ph id="ph1">&lt;see langword="null" /&gt;</ph> se non esiste un delegato.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
          <source>When the key is not found in the list and you provide a delegate to set the value of the key, then the key is added to the top of the list and assigned to the delegate as its value.</source>
          <target state="translated">Quando la chiave non viene trovata nell'elenco e si fornisce un delegato per impostare il valore della chiave, quindi la chiave viene aggiunta all'inizio dell'elenco e assegnata al delegato come valore.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
          <source>The object that owns the event.</source>
          <target state="translated">Oggetto a cui appartiene l'evento.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
          <source>The delegate to remove from the list.</source>
          <target state="translated">Delegato da rimuovere dall'elenco.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
          <source>Removes a delegate from the list.</source>
          <target state="translated">Consente di rimuovere un delegato dall'elenco.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>