<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PropertyChangedEventManager.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56aae41e7944e7d685cc2eef3a014b5ba8653ed9b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6aae41e7944e7d685cc2eef3a014b5ba8653ed9b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyChangedEventManager">
          <source>Provides a <ph id="ph1">&lt;see cref="T:System.Windows.WeakEventManager" /&gt;</ph> implementation so that you can use the "weak event listener" pattern to attach listeners for the <ph id="ph2">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event.</source>
          <target state="translated">Fornisce un'implementazione <ph id="ph1">&lt;see cref="T:System.Windows.WeakEventManager" /&gt;</ph> per consentire di utilizzare il modello "listener di eventi deboli" per allegare listener per l'evento <ph id="ph2">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyChangedEventManager">
          <source>In order to be listeners in this pattern, your listener objects must implement <ph id="ph1">&lt;xref:System.Windows.IWeakEventListener&gt;</ph>.</source>
          <target state="translated">Per poter essere listener in questo modello, è necessario implementare gli oggetti listener <ph id="ph1">&lt;xref:System.Windows.IWeakEventListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyChangedEventManager">
          <source>You do not need to implement <ph id="ph1">&lt;xref:System.Windows.IWeakEventListener&gt;</ph> on the class that is the source of the events.</source>
          <target state="translated">Non è necessario implementare <ph id="ph1">&lt;xref:System.Windows.IWeakEventListener&gt;</ph> nella classe che rappresenta l'origine degli eventi.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>The source object that the raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event.</source>
          <target state="translated">Oggetto di sorgente che genera l'evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>The delegate that handles the <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event.</source>
          <target state="translated">Delegato che gestisce l'evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>The name of the property that exists on <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> upon which to listen for changes.</source>
          <target state="translated">Nome della proprietà che esiste in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> su cui ascoltare le modifiche.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>Set to <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph> to indicate "any property".</source>
          <target state="translated">Impostare su <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph> per indicare "qualsiasi proprietà".</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>Adds the specified event handler, which is called when specified source raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event for the specified property.</source>
          <target state="translated">Aggiunge il gestore eventi specificato, che viene chiamato quando l'origine specificata genera l'evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> per la proprietà specificata.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>Use this method to specify the event handler you want to use to subscribe to the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> event..</source>
          <target state="translated">Utilizzare questo metodo per specificare il gestore eventi che si desidera utilizzare per sottoscrivere l'evento <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>When you use this method, your listener object does not need to implement the <ph id="ph1">&lt;xref:System.Windows.IWeakEventListener&gt;</ph> interface.</source>
          <target state="translated">Quando si utilizza questo metodo, l'oggetto listener non deve implementare l'interfaccia <ph id="ph1">&lt;xref:System.Windows.IWeakEventListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>More than one method is associated with <ph id="ph1">&lt;paramref name="handler" /&gt;</ph>.</source>
          <target state="translated">Più di un metodo è associato a <ph id="ph1">&lt;paramref name="handler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
          <source>The object with the event.</source>
          <target state="translated">Oggetto con l'evento.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
          <source>The object to add as a listener.</source>
          <target state="translated">Oggetto da aggiungere come listener.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
          <source>The name of the property that exists on <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> upon which to listen for changes.</source>
          <target state="translated">Nome della proprietà che esiste in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> su cui ascoltare le modifiche.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
          <source>Set to <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph> to indicate "any property".</source>
          <target state="translated">Impostare su <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph> per indicare "qualsiasi proprietà".</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
          <source>Adds the specified listener to the list of listeners on the specified source.</source>
          <target state="translated">Aggiunge il listener specificato all'elenco dei listener sull'origine specificata.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
          <source>Returns a new object to contain listeners to the <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event.</source>
          <target state="translated">Restituisce un nuovo oggetto per contenere i listener per l'evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
          <source>A new object to contain listeners to the <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event.</source>
          <target state="translated">Nuovo oggetto per contenere i listener per l'evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <source>Source object to remove all listeners from.</source>
          <target state="translated">Oggetto di origine dal quale rimuovere tutti i listener.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <source>The data to purge.</source>
          <target state="translated">Dati da cancellare.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <source>This is expected to be a <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.HybridDictionary" /&gt;</ph>.</source>
          <target state="translated">È previsto che sia un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.HybridDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <source>Set to <ph id="ph1">&lt;see langword="true" /&gt;</ph> to stop listening and to completely remove all data.</source>
          <target state="translated">Impostare su <ph id="ph1">&lt;see langword="true" /&gt;</ph> per interrompere l'ascolto e rimuovere completamente tutti i dati.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <source>Removes listeners that are no longer active from the data for the provided source.</source>
          <target state="translated">Rimuove i listener che non sono più attivi dai dati per l'origine fornita.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if some entries were removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se alcune voci sono state rimosse, in caso contrario <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>The source object that the raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event.</source>
          <target state="translated">Oggetto di sorgente che genera l'evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>The delegate that handles the <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event.</source>
          <target state="translated">Delegato che gestisce l'evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>The name of the property that exists on <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> upon which to stop listening for changes.</source>
          <target state="translated">Nome della proprietà che esiste in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> su cui interrompere l'ascolto delle modifiche.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>Set to <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph> to indicate "any property".</source>
          <target state="translated">Impostare su <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph> per indicare "qualsiasi proprietà".</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>Removes the specified event handler from the specified source.</source>
          <target state="translated">Rimuove il gestore eventi specificato dall'origine specificata.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
          <source>More than one method is associated with <ph id="ph1">&lt;paramref name="handler" /&gt;</ph>.</source>
          <target state="translated">Più di un metodo è associato a <ph id="ph1">&lt;paramref name="handler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
          <source>The object to remove the listener from.</source>
          <target state="translated">Oggetto da cui rimuovere il listener.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
          <source>The listener to remove.</source>
          <target state="translated">Il listener da rimuovere.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
          <source>The name of the property that exists on <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> upon which to stop listening for changes.</source>
          <target state="translated">Nome della proprietà che esiste in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> su cui interrompere l'ascolto delle modifiche.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
          <source>Set to <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph> to indicate "any property".</source>
          <target state="translated">Impostare su <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph> per indicare "qualsiasi proprietà".</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
          <source>Removes the specified listener from the list of listeners on the provided source.</source>
          <target state="translated">Rimuove il listener specificato dall'elenco di listener sull'origine fornita.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
          <source>The object on which to start listening for <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</source>
          <target state="translated">Oggetto sul quale avviare l'ascolto dell'evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
          <source>Begins listening for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event on the provided source.</source>
          <target state="translated">Avvia l'ascolto dell'evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> sull'origine fornita.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
          <source>This does not specify a property; once the event manager is started, all properties on the source will have <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> notification enabled.</source>
          <target state="translated">Non specifica una proprietà. una volta avviato il gestore degli eventi, disporrà di tutte le proprietà dell'origine <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> attivata la notifica.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
          <source>The source object on which to stop listening for <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</source>
          <target state="translated">Oggetto di origine sul quale interrompere l'ascolto di <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
          <source>Stops listening for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event on the provided source.</source>
          <target state="translated">Interrompe l'ascolto dell'evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> sull'origine fornita.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>