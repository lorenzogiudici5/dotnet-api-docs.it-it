<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LicenseException.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e17db79ab1a3f82c5c245927abf11f77f5494cda.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e17db79ab1a3f82c5c245927abf11f77f5494cda</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.LicenseException">
          <source>Represents the exception thrown when a component cannot be granted a license.</source>
          <target state="translated">Rappresenta l'eccezione generata quando non può essere concessa un licenza a un componente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=nameWithType&gt;</ph> method throws <ph id="ph2">&lt;xref:System.ComponentModel.LicenseException&gt;</ph> when a component cannot obtain a valid license.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=nameWithType&gt;</ph> genererà <ph id="ph2">&lt;xref:System.ComponentModel.LicenseException&gt;</ph> quando un componente non è possibile ottenere una licenza valida.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>This occurs when a component is either not licensed, or is licensed but cannot be granted a valid license.</source>
          <target state="translated">Questo errore si verifica quando un componente utente non dispone di licenza, o è concesso in licenza, ma non è possibile concedere una licenza valida.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>For more information on licensing, see <bpt id="p1">[</bpt>How to: License Components and Controls<ept id="p1">](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulle licenze, vedere <bpt id="p1">[</bpt>come: licenza componenti e controlli<ept id="p1">](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>The following code example shows how to catch a <ph id="ph1">&lt;xref:System.ComponentModel.LicenseException&gt;</ph> and interpret its content.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come intercettare un <ph id="ph1">&lt;xref:System.ComponentModel.LicenseException&gt;</ph> e interpretare il contenuto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>In the sample, the application calls the <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager.Validate%2A&gt;</ph> method for a <ph id="ph2">&lt;xref:System.Windows.Forms.Form?displayProperty=nameWithType&gt;</ph> that is not licensed.</source>
          <target state="translated">Nell'esempio, l'applicazione chiama il <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager.Validate%2A&gt;</ph> metodo per un <ph id="ph2">&lt;xref:System.Windows.Forms.Form?displayProperty=nameWithType&gt;</ph> che non è concesso in licenza.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>Upon catching the exception, the sample fetches the respective error message, the type of component that was not granted a license, the stack trace, and the origin of the exception.</source>
          <target state="translated">All'intercettazione dell'eccezione, nell'esempio viene recuperato il messaggio di errore, il tipo di componente che non è stata concessa una licenza, la traccia dello stack e l'origine dell'eccezione.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>This example requires that you have specified the <ph id="ph1">&lt;xref:System.ComponentModel.LicenseProvider&gt;</ph> by marking the <ph id="ph2">&lt;xref:System.Windows.Forms.Form?displayProperty=nameWithType&gt;</ph> with a <ph id="ph3">&lt;xref:System.ComponentModel.LicenseProviderAttribute&gt;</ph> attribute.</source>
          <target state="translated">Nell'esempio si presuppone di aver specificato il <ph id="ph1">&lt;xref:System.ComponentModel.LicenseProvider&gt;</ph> contrassegnando il <ph id="ph2">&lt;xref:System.Windows.Forms.Form?displayProperty=nameWithType&gt;</ph> con un <ph id="ph3">&lt;xref:System.ComponentModel.LicenseProviderAttribute&gt;</ph> attributo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.LicenseException">
          <source>For more information on how to do this, see the <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager&gt;</ph> class.</source>
          <target state="translated">Per ulteriori informazioni su come eseguire questa operazione, vedere la <ph id="ph1">&lt;xref:System.ComponentModel.LicenseManager&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.LicenseException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component that was not granted a license.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che rappresenta il tipo di componente a cui non è stata concessa una licenza.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> class for the type of component that was denied a license.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> per il tipo di componente a cui è stata negata una licenza.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to be used for deserialization.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> da utilizzare per la deserializzazione.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination to be used for deserialization.</source>
          <target state="translated">Destinazione da utilizzare per la deserializzazione.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> class with the given <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> con gli oggetti <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> specificati.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component that was not granted a license.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che rappresenta il tipo di componente a cui non è stata concessa una licenza.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)">
          <source>The instance of the component that was not granted a license.</source>
          <target state="translated">Istanza del componente a cui non è stata concessa la licenza.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> class for the type and the instance of the component that was denied a license.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> per il tipo e l'istanza del componente a cui è stata negata una licenza.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component that was not granted a license.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che rappresenta il tipo di componente a cui non è stata concessa una licenza.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)">
          <source>The instance of the component that was not granted a license.</source>
          <target state="translated">Istanza del componente a cui non è stata concessa la licenza.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)">
          <source>The exception message to display.</source>
          <target state="translated">Il messaggio di eccezione da visualizzare.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> class for the type and the instance of the component that was denied a license, along with a message to display.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> per il tipo e l'istanza del componente a cui è stata negata la licenza, insieme a un messaggio da visualizzare.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component that was not granted a license.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che rappresenta il tipo di componente a cui non è stata concessa una licenza.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
          <source>The instance of the component that was not granted a license.</source>
          <target state="translated">Istanza del componente a cui non è stata concessa la licenza.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
          <source>The exception message to display.</source>
          <target state="translated">Il messaggio di eccezione da visualizzare.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that represents the original exception.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> che rappresenta l'eccezione originale.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> class for the type and the instance of the component that was denied a license, along with a message to display and the original exception thrown.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.LicenseException" /&gt;</ph> per il tipo e l'istanza del componente a cui è stata negata una licenza, insieme a un messaggio da visualizzare e all'eccezione originale generata.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to be used for deserialization.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> da utilizzare per la deserializzazione.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination to be used for deserialization.</source>
          <target state="translated">Destinazione da utilizzare per la deserializzazione.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with information about the exception.</source>
          <target state="translated">Imposta l'oggetto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> con le informazioni sull'eccezione.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.LicenseException.LicensedType">
          <source>Gets the type of the component that was not granted a license.</source>
          <target state="translated">Ottiene il tipo del componente a cui non è stata concessa una licenza.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.LicenseException.LicensedType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component that was not granted a license.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che rappresenta il tipo di componente a cui non è stata concessa una licenza.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>