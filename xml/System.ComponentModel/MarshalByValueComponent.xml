<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MarshalByValueComponent.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5418bc3bc7751079647fd030bd42bf451d7759600.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">418bc3bc7751079647fd030bd42bf451d7759600</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.MarshalByValueComponent">
          <source>Implements <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> and provides the base implementation for remotable components that are marshaled by value (a copy of the serialized object is passed).</source>
          <target state="translated">Implementa l'interfaccia <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> e fornisce l'implementazione base per i componenti definibili in modalità remota di cui viene effettuato il marshalling in base al valore (viene passata una copia dell'oggetto serializzato).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.MarshalByValueComponent">
          <source>A component can be contained in a container.</source>
          <target state="translated">Un componente può essere contenuto in un contenitore.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.MarshalByValueComponent">
          <source>For each component in a container, the container creates a site that it uses to manage the component.</source>
          <target state="translated">Per ogni componente in un contenitore, il contenitore viene creato un sito che viene utilizzato per gestire il componente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.MarshalByValueComponent">
          <source>The component interacts with its container primarily through a container-provided <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>, which is a repository of container-specific, per-component information.</source>
          <target state="translated">Il componente interagisce con il relativo contenitore principalmente tramite un fornito dal contenitore <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>, ovvero un repository di informazioni specifici per i contenitori, per ogni componente.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.MarshalByValueComponent">
          <source>When you inherit from this class, you can override the <ph id="ph1">&lt;see cref="M:System.ComponentModel.MarshalByValueComponent.Dispose" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.ComponentModel.MarshalByValueComponent.Site" /&gt;</ph>, and the <ph id="ph3">&lt;see cref="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" /&gt;</ph> methods.</source>
          <target state="translated">Quando si eredita da questa classe, è possibile eseguire l'override di <ph id="ph1">&lt;see cref="M:System.ComponentModel.MarshalByValueComponent.Dispose" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.ComponentModel.MarshalByValueComponent.Site" /&gt;</ph>e <ph id="ph3">&lt;see cref="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" /&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.#ctor">
          <source>A component can be contained in a container.</source>
          <target state="translated">Un componente può essere contenuto in un contenitore.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.#ctor">
          <source>For each component in a container, the container creates a site that it uses to manage the component.</source>
          <target state="translated">Per ogni componente in un contenitore, il contenitore viene creato un sito che viene utilizzato per gestire il componente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.#ctor">
          <source>The component interacts with its container primarily through a container-provided <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>, which is a repository of container-specific, per-component information.</source>
          <target state="translated">Il componente interagisce con il relativo contenitore principalmente tramite un fornito dal contenitore <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>, ovvero un repository di informazioni specifici per i contenitori, per ogni componente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.MarshalByValueComponent.Container">
          <source>Gets the container for the component.</source>
          <target state="translated">Ottiene il contenitore del componente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Container">
          <source>An object implementing the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> interface that represents the component's container, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the component does not have a site.</source>
          <target state="translated">Oggetto che implementa l'interfaccia <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> che rappresenta il contenitore del componente oppure <ph id="ph2">&lt;see langword="null" /&gt;</ph> se il componente non dispone di un sito.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.MarshalByValueComponent.DesignMode">
          <source>Gets a value indicating whether the component is currently in design mode.</source>
          <target state="translated">Ottiene un valore che indica se il componente è in modalità progettazione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.DesignMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the component is in design mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il componente è in modalità progettazione, in caso contrario <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.DesignMode">
          <source>If the component does not have a site, this method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se il componente non dispone di un sito, questo metodo restituisce sempre <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.MarshalByValueComponent">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph>.</source>
          <target state="translated">Rilascia le risorse usate da <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph>.</source>
          <target state="translated">Rilascia tutte le risorse usate da <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>.</source>
          <target state="translated">Chiamare il metodo <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph> dopo aver terminato di utilizzare l'oggetto <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> in an unusable state.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph> lascia l'oggetto <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> in una condizione di inutilizzabilità.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> was occupying.</source>
          <target state="translated">Dopo la chiamata <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph>, è necessario rilasciare tutti i riferimenti al <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> in modo che il garbage collector può recuperare la memoria che di <ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> occupata.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementazione di un metodo Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>.</source>
          <target state="translated">Chiamare sempre il metodo <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph> prima di rilasciare l'ultimo riferimento a <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> dell'oggetto <ph id="ph2">`Finalize`</ph> non viene richiamato dal Garbage Collector.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate da <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph> e, facoltativamente, le risorse gestite.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">`Dispose()`</ph> (metodo) e <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> richiama il metodo protetto <ph id="ph2">`Dispose(Boolean)`</ph> metodo con il <ph id="ph3">`disposing`</ph> parametro impostato su <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> richiama <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> impostato su <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> references.</source>
          <target state="translated">Quando il <ph id="ph1">`disposing`</ph> parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> riferimenti.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">`Dispose()`</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> prestare attenzione a non fare riferimento a oggetti che sono stati eliminati in una precedente chiamata a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su come implementare <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>si esegue l'override del metodo Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.MarshalByValueComponent.Disposed">
          <source>Adds an event handler to listen to the <ph id="ph1">&lt;see cref="E:System.ComponentModel.MarshalByValueComponent.Disposed" /&gt;</ph> event on the component.</source>
          <target state="translated">Aggiunge un gestore eventi per restare in attesa dell'evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.MarshalByValueComponent.Disposed" /&gt;</ph> sul componente.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.MarshalByValueComponent.Events">
          <source>Gets the list of event handlers that are attached to this component.</source>
          <target state="translated">Ottiene l'elenco dei gestori eventi allegati a questo componente.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Events">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> that provides the delegates for this component.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> che fornisce i delegati per questo componente.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Consente a un oggetto di effettuare un tentativo di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da Garbage Collection.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of service you want.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che rappresenta il tipo di servizio desiderato.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)">
          <source>Gets the implementer of the <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>.</source>
          <target state="translated">Ottiene l'implementatore dell'interfaccia <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the implementer of the <ph id="ph2">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che rappresenta l'implementatore di <ph id="ph2">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)">
          <source>For more information on designer services you can use, see <bpt id="p1">[</bpt>Design-Time Architecture<ept id="p1">](http://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui servizi della finestra di progettazione è possibile utilizzare, vedere <bpt id="p1">[</bpt>architettura della fase di progettazione<ept id="p1">](http://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.MarshalByValueComponent.Site">
          <source>Gets or sets the site of the component.</source>
          <target state="translated">Ottiene o imposta il sito del componente.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Site">
          <source>An object implementing the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> interface that represents the site of the component.</source>
          <target state="translated">Oggetto che implementa l'interfaccia <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> che rappresenta il sito del componente.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Site">
          <source>A valid value for this property - that is, the value is not <ph id="ph1">`null`</ph>, indicates that the component has been added to a container.</source>
          <target state="translated">Un valore valido per questa proprietà, ovvero il valore non è <ph id="ph1">`null`</ph>, indica che il componente è stato aggiunto a un contenitore.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Site">
          <source>When the value of this property is <ph id="ph1">`null`</ph>, the property indicates that the component is being removed from a container.</source>
          <target state="translated">Quando il valore di questa proprietà è <ph id="ph1">`null`</ph>, la proprietà indica che il componente viene rimosso da un contenitore.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Site">
          <source>However, this property does not remove the component from the container.</source>
          <target state="translated">Tuttavia, questa proprietà non rimuove il componente dal contenitore.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Site">
          <source>To change this behavior, inherit from this class and get and set in this property.</source>
          <target state="translated">Per modificare questo comportamento, ereditare da questa classe e ottenere e impostare questa proprietà.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any.</source>
          <target state="translated">Restituisce un oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che contiene il nome dell'eventuale oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>This method should not be overridden.</source>
          <target state="translated">Questo metodo non deve essere sottoposto a override.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenente il nome dell'oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, se presente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is unnamed.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> se l'oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> è senza nome.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> may or may not have a name.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> può o non può avere un nome.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>If a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is given a name, the name is unique among other <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> objects within its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">Se un <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> viene assegnato un nome, il nome è univoco tra gli altri <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> oggetti all'interno di relativo <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> stores the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>'s name.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> archivia il <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>del nome.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> can only have a <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> if it has been added to an <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> and the <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> assigns an <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> to it.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> può avere solo un <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> se è stato aggiunto un <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> e <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> assegna un <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> a esso.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>