<Type Name="ITypedList" FullName="System.ComponentModel.ITypedList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa1d975469cbb2c8aef9b0292567601e5016ea4c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36702187" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypedList" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypedList" />
  <TypeSignature Language="F#" Value="type ITypedList = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0a471-101">Fornisce le funzionalità per scoprire lo schema di un elenco associabile, in cui le proprietà disponibili per l'associazione differiscono dalle proprietà pubbliche dell'oggetto verso cui effettuare l'associazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a471-101">Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a471-102">Utilizzare questa interfaccia se, ad esempio, utilizza un <xref:System.Data.DataView> oggetto che rappresenta un `customer` tabella, si desidera eseguire il binding alle proprietà `customer` dell'oggetto che il <xref:System.Data.DataView> rappresenta, non le proprietà del <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="0a471-102">Use this interface if, for instance, you are using a <xref:System.Data.DataView> object that represents a `customer` table, you want to bind to the properties on the `customer` object that the <xref:System.Data.DataView> represents, not the properties of the <xref:System.Data.DataView>.</span></span>  
  
 <span data-ttu-id="0a471-103">Questa interfaccia non è richiesta per il supporto in fase di progettazione di un elenco associabile.</span><span class="sxs-lookup"><span data-stu-id="0a471-103">This interface is not required for design-time support of a bindable list.</span></span>  
  
 <span data-ttu-id="0a471-104">Associazione ai dati può verificarsi in fase di esecuzione o in una finestra di progettazione, ma sono presenti regole per entrambi.</span><span class="sxs-lookup"><span data-stu-id="0a471-104">Binding to data can occur either at run time or in a designer, but there are rules for both.</span></span> <span data-ttu-id="0a471-105">In fase di esecuzione, è possibile associare ai dati in una qualsiasi delle operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="0a471-105">At run time, you can bind to data in any of the following:</span></span>  
  
-   <xref:System.Array>  
  
-   <span data-ttu-id="0a471-106">Responsabile dell'implementazione di <xref:System.Collections.IList>, purché l'implementatore abbia un oggetto fortemente tipizzato <xref:System.Collections.IList.Item%2A> proprietà (vale a dire, il <xref:System.Type> non sia <xref:System.Object>).</span><span class="sxs-lookup"><span data-stu-id="0a471-106">Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>).</span></span> <span data-ttu-id="0a471-107">È possibile farlo eseguendo l'implementazione predefinita di <xref:System.Collections.IList.Item%2A> privato.</span><span class="sxs-lookup"><span data-stu-id="0a471-107">You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private.</span></span> <span data-ttu-id="0a471-108">Se si desidera creare un <xref:System.Collections.IList> che segue le regole di una raccolta fortemente tipizzata, è necessario derivare <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="0a471-108">If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.</span></span>  
  
-   <span data-ttu-id="0a471-109">Responsabile dell'implementazione di <xref:System.ComponentModel.ITypedList>.</span><span class="sxs-lookup"><span data-stu-id="0a471-109">Implementer of <xref:System.ComponentModel.ITypedList>.</span></span>  
  
 <span data-ttu-id="0a471-110">Nella finestra di progettazione, è possibile inizializzare l'associazione a <xref:System.ComponentModel.Component> oggetti seguendo le stesse regole.</span><span class="sxs-lookup"><span data-stu-id="0a471-110">In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.</span></span>  
  
 <span data-ttu-id="0a471-111">Per ulteriori informazioni sull'associazione a un'origine dati, vedere il <xref:System.Windows.Forms.Binding?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="0a471-111">For more information on binding to a data source, see the <xref:System.Windows.Forms.Binding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a471-112">Esempio di codice seguente viene illustrato come implementare il <xref:System.ComponentModel.ITypedList> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="0a471-112">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList> interface.</span></span> <span data-ttu-id="0a471-113">Un tipo generico denominato `SortableBindingList` deriva le <xref:System.ComponentModel.BindingList%601> classe e implementa il <xref:System.ComponentModel.ITypedList> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="0a471-113">A generic type named `SortableBindingList` derives from the <xref:System.ComponentModel.BindingList%601> class and implements the <xref:System.ComponentModel.ITypedList> interface.</span></span> <span data-ttu-id="0a471-114">Per un elenco di codice completo, vedere [procedura: implementare l'interfaccia ITypedList](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span><span class="sxs-lookup"><span data-stu-id="0a471-114">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#1)]
 [!code-vb[System.ComponentModel.ITypedList#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iTypedList.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="0a471-115">Matrice di oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> da individuare come associabili nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a471-115">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the collection as bindable.</span>
          </span>
          <span data-ttu-id="0a471-116">Può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a471-116">This can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a471-117">Restituisce l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> che rappresenta le proprietà di ogni elemento usato per associare i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a471-117">Returns the <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a471-118">L'oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> che rappresenta le proprietà di ogni elemento usato per associare i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a471-118">The <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a471-119">Se il `listAccessors` parametro non è `null`, in genere contiene un descrittore di proprietà che identifica un elenco dei contenitori da recuperare per l'oggetto che implementa <xref:System.ComponentModel.ITypedList>.</span><span class="sxs-lookup"><span data-stu-id="0a471-119">If the `listAccessors` parameter is not `null`, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <xref:System.ComponentModel.ITypedList>.</span></span> <span data-ttu-id="0a471-120">Ad esempio, un <xref:System.Data.DataSet> che contiene due tabelle, `myCustomers` e `myOrders`, con una relazione tra di essi chiamato `myCustOrders`.</span><span class="sxs-lookup"><span data-stu-id="0a471-120">For example, a <xref:System.Data.DataSet> containing two tables, `myCustomers` and `myOrders`, with a relationship between them called `myCustOrders`.</span></span> <span data-ttu-id="0a471-121">Se si crea un <xref:System.Data.DataView> oggetto e visualizzarne `myCustomers`, quindi chiamare il <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> metodo con `null` restituisce i descrittori di proprietà per le colonne in `myCustomers`.</span><span class="sxs-lookup"><span data-stu-id="0a471-121">If you create a <xref:System.Data.DataView> object to view `myCustomers`, then calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with `null` returns the property descriptors for the columns in `myCustomers`.</span></span> <span data-ttu-id="0a471-122">Di conseguenza, uno dei descrittori di proprietà restituito è un descrittore di proprietà per `myCustOrders`, chiamare solo come il <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> metodo con una matrice delle funzioni di accesso di elenco che contiene i descrittori di proprietà per `myCustOrders` restituirà i descrittori di proprietà per `myOrders`.</span><span class="sxs-lookup"><span data-stu-id="0a471-122">As a result, one of the returned property descriptors is a property descriptor for `myCustOrders`, just as calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with a list accessor array containing the property descriptors for `myCustOrders` will return the property descriptors for `myOrders`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a471-123">Esempio di codice seguente viene illustrato come implementare il <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="0a471-123">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method.</span></span> <span data-ttu-id="0a471-124">Per un elenco di codice completo, vedere [procedura: implementare l'interfaccia ITypedList](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span><span class="sxs-lookup"><span data-stu-id="0a471-124">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#3)]
 [!code-vb[System.ComponentModel.ITypedList#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="iTypedList.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="0a471-125">Matrice di oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" />, di cui viene restituito il nome dell'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a471-125">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects, for which the list name is returned.</span>
          </span>
          <span data-ttu-id="0a471-126">Può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a471-126">This can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a471-127">Restituisce il nome dell'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a471-127">Returns the name of the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a471-128">Il nome dell'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a471-128">The name of the list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a471-129">Questo metodo viene utilizzato solo in fase di progettazione framework e da obsoleta <xref:System.Windows.Forms.DataGrid> controllo.</span><span class="sxs-lookup"><span data-stu-id="0a471-129">This method is used only in the design-time framework and by the obsolete <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a471-130">Esempio di codice seguente viene illustrato come implementare il <xref:System.ComponentModel.ITypedList.GetListName%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="0a471-130">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList.GetListName%2A> method.</span></span> <span data-ttu-id="0a471-131">Per un elenco di codice completo, vedere [procedura: implementare l'interfaccia ITypedList](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span><span class="sxs-lookup"><span data-stu-id="0a471-131">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#4)]
 [!code-vb[System.ComponentModel.ITypedList#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
  </Members>
</Type>