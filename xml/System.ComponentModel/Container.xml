<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Container.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59fa6bbbc17aa353499d9fe0e1402c1a610c8f597.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fa6bbbc17aa353499d9fe0e1402c1a610c8f597</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Container">
          <source>Encapsulates zero or more components.</source>
          <target state="translated">Consente di incapsulare zero o più componenti.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> class is the default implementation for the <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> interface.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> classe è l'implementazione predefinita per il <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>Containers are objects that encapsulate and track zero or more components.</source>
          <target state="translated">I contenitori sono oggetti che incapsulano e tenere traccia di zero o più componenti.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>In this context, containment refers to logical containment, not visual containment.</source>
          <target state="translated">In questo contesto, indipendenza fa riferimento di tipo logico, il contenimento non visivo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>You can use components and containers in a variety of scenarios, including scenarios that are both visual and not visual.</source>
          <target state="translated">È possibile utilizzare i componenti e contenitori in un'ampia gamma di scenari, inclusi gli scenari non visual sia visual.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>The components in a container are tracked in a first-in, first-out list, which also defines the order of the components within the container.</source>
          <target state="translated">I componenti in un contenitore vengono tenuta traccia in un first-in First-Out elenco, che definisce anche l'ordine dei componenti all'interno del contenitore.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>Added components are appended to the end of the list.</source>
          <target state="translated">I componenti aggiunti vengono aggiunti alla fine dell'elenco.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Container">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">Aggiunge un oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>The component to add.</source>
          <target state="translated">Componente da aggiungere.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">Aggiunge l'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> specificato alla raccolta <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>The component is unnamed.</source>
          <target state="translated">Non è stato assegnato alcun nome al componente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">Questo metodo può essere sottoposto a override da una classe derivata.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>The new <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is added to the end of the list.</source>
          <target state="translated">Il nuovo <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> viene aggiunto alla fine dell'elenco.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>The component to add.</source>
          <target state="translated">Componente da aggiungere.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>The unique, case-insensitive name to assign to the component.</source>
          <target state="translated">Nome univoco, senza distinzione tra maiuscole e minuscole, da assegnare al componente.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, which leaves the component unnamed.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>. In questo caso, non viene assegnato alcun nome al componente.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> and assigns it a name.</source>
          <target state="translated">Consente di aggiungere l'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> specificato all'oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> e assegnargli un nome.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">Questo metodo può essere sottoposto a override da una classe derivata.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>The new <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is added to the end of the list.</source>
          <target state="translated">Il nuovo <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> viene aggiunto alla fine dell'elenco.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not unique.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> non è univoco.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Container.Components">
          <source>Gets all the components in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">Ottiene tutti i componenti presenti in <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Container.Components">
          <source>A collection that contains the components in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">Insieme che contiene i componenti presenti in <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Container.Components">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">Questo metodo può essere sottoposto a override da una classe derivata.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Container.Components">
          <source>The components in the collection are stored in the same order as they were added to the <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated">I componenti nella raccolta vengono archiviati nello stesso ordine man mano che sono stati aggiunti per il <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> to create a site for.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> per il quale creare un sito.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>The name to assign to <bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept>, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to skip the name assignment.</source>
          <target state="translated">Nome da assegnare al <bpt id="p1">&lt;c&gt;</bpt>componente<ept id="p1">&lt;/c&gt;</ept> oppure <ph id="ph1">&lt;see langword="null" /&gt;</ph> per non assegnare alcun nome.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>Creates a site <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the given <ph id="ph2">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> and assigns the given name to the site.</source>
          <target state="translated">Consente di creare un sito <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> per un determinato oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> e assegnargli un nome.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>The newly created site.</source>
          <target state="translated">Sito appena creato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>If the <ph id="ph1">`name`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.IComponent&gt;</ph> is added to the <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph> without an identifying name.</source>
          <target state="translated">Se il <ph id="ph1">`name`</ph> parametro è <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.IComponent&gt;</ph> viene aggiunto al <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph> senza un nome significativo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">Questo metodo può essere sottoposto a override da una classe derivata.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>Implementers that need to override the <ph id="ph1">&lt;xref:System.ComponentModel.Container.CreateSite%2A&gt;</ph> method can provide a custom implementation through a class that implements the <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> interface.</source>
          <target state="translated">I responsabili dell'implementazione che è necessario eseguire l'override di <ph id="ph1">&lt;xref:System.ComponentModel.Container.CreateSite%2A&gt;</ph> metodo può fornire un'implementazione personalizzata tramite una classe che implementa il <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Container">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">Rilascia le risorse usate da <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">Rilascia tutte le risorse usate da <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated">Chiamare il metodo <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> dopo aver terminato di utilizzare l'oggetto <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> in an unusable state.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> lascia l'oggetto <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> in una condizione di inutilizzabilità.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph> was occupying.</source>
          <target state="translated">Dopo la chiamata <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph>, è necessario rilasciare tutti i riferimenti al <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> in modo che il garbage collector può recuperare la memoria che di <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph> occupata.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementazione di un metodo Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated">Chiamare sempre il metodo <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> prima di rilasciare l'ultimo riferimento a <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> dell'oggetto <ph id="ph2">`Finalize`</ph> non viene richiamato dal Garbage Collector.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>, and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate dall'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> e, facoltativamente, le risorse gestite.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">`Dispose`</ph> (metodo) e <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> richiama il metodo protetto <ph id="ph2">`Dispose(Boolean)`</ph> metodo con il <ph id="ph3">`disposing`</ph> parametro impostato su <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> richiama <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> impostato su <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> references.</source>
          <target state="translated">Quando il <ph id="ph1">`disposing`</ph> parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> riferimenti.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">`Dispose`</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> prestare attenzione a non fare riferimento a oggetti che sono stati eliminati in una precedente chiamata a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su come implementare <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>si esegue l'override del metodo Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Finalize">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated">Rilascia risorse non gestite ed esegue altre operazioni di pulizia prima che la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> venga recuperata tramite Garbage Collection.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue l'override del metodo <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.</source>
          <target state="translated">Il codice dell'applicazione non deve chiamare questo metodo. un oggetto <ph id="ph1">`Finalize`</ph> metodo viene richiamato automaticamente durante l'operazione di garbage collection, a meno che la finalizzazione del garbage collector non è stata disabilitata da una chiamata al <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>metodi Finalize e distruttori<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>la pulizia di risorse non gestite<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, e <bpt id="p3">[</bpt>si esegue l'override del metodo Finalize<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the service to retrieve.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del servizio da recuperare.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>Gets the service object of the specified type, if it is available.</source>
          <target state="translated">Ottiene l'oggetto servizio del tipo specificato, se disponibile.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> implementing the requested service, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the service cannot be resolved.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che implementa il servizio richiesto, oppure <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è possibile trovare il servizio.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>The default implementation of this method returns the current instance of the class if <ph id="ph1">`service`</ph> is an <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>; otherwise, it returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">L'implementazione predefinita di questo metodo restituisce l'istanza corrente della classe se <ph id="ph1">`service`</ph> è un <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>; in caso contrario, restituisce <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>You can override this method to provide a custom implementation to return a service object.</source>
          <target state="translated">È possibile eseguire l'override di questo metodo per fornire un'implementazione personalizzata per restituire un oggetto servizio.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Per altre informazioni, vedere il metodo <ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
          <source>The component to remove.</source>
          <target state="translated">Componente da rimuovere.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
          <source>Removes a component from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">Rimuove un componente da <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">Questo metodo può essere sottoposto a override da una classe derivata.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)">
          <source>The component to remove.</source>
          <target state="translated">Componente da rimuovere.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)">
          <source>Removes a component from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> without setting <ph id="ph2">&lt;see cref="P:System.ComponentModel.IComponent.Site" /&gt;</ph> to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Rimuove un componente da <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> senza impostare <ph id="ph2">&lt;see cref="P:System.ComponentModel.IComponent.Site" /&gt;</ph> su <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Container.RemoveWithoutUnsiting%2A&gt;</ph> method cleans up the site as usual, but it does not set the component's <ph id="ph2">&lt;xref:System.ComponentModel.IComponent.Site%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Container.RemoveWithoutUnsiting%2A&gt;</ph> metodo pulisce il sito come di consueto, ma non imposta il componente <ph id="ph2">&lt;xref:System.ComponentModel.IComponent.Site%2A&gt;</ph> proprietà <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>The named component.</source>
          <target state="translated">Componente denominato.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>The component name to validate.</source>
          <target state="translated">Nome del componente da convalidare.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>Determines whether the component name is unique for this container.</source>
          <target state="translated">Determina se il nome del componente è univoco per questo contenitore.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Container.ValidateName%2A&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.ComponentModel.Container.Add%2A&gt;</ph> method to determine if the name of the <ph id="ph3">`component`</ph> being added is unique for this <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Container.ValidateName%2A&gt;</ph> metodo viene chiamato dal <ph id="ph2">&lt;xref:System.ComponentModel.Container.Add%2A&gt;</ph> per determinare se il nome del <ph id="ph3">`component`</ph> da aggiungere è univoco per questo oggetto <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>If the <ph id="ph1">`name`</ph> parameter is not <ph id="ph2">`null`</ph> and is not unique, an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">Se il <ph id="ph1">`name`</ph> parametro non è <ph id="ph2">`null`</ph> e non è univoco, un <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not unique.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> non è univoco.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>