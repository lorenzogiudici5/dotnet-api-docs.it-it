<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventDescriptor.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c154d70129679b536dc9cabf03a9b5cd88593d4f1f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d70129679b536dc9cabf03a9b5cd88593d4f1f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EventDescriptor">
          <source>Provides information about an event.</source>
          <target state="translated">Include informazioni su un evento.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> è costituito da un nome, gli attributi, il componente associato all'evento, il delegato dell'evento, il tipo del delegato, e se il delegato multicast.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> provides the following <ph id="ph2">`abstract`</ph> properties and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> fornisce le seguenti <ph id="ph2">`abstract`</ph> proprietà e metodi:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.ComponentType%2A&gt;</ph> contains the type of the component this event is declared on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.ComponentType%2A&gt;</ph> contiene il tipo del componente di che questo evento viene dichiarato.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.EventType%2A&gt;</ph> contains the type of delegate for the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.EventType%2A&gt;</ph> contiene il tipo di delegato per l'evento.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.IsMulticast%2A&gt;</ph> contains a value indicating whether the event delegate is a multicast delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.IsMulticast%2A&gt;</ph> contiene un valore che indica se il delegato dell'evento è un delegato multicast.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A&gt;</ph> binds the event to a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A&gt;</ph> Associa l'evento a un componente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A&gt;</ph> unbinds the delegate from the component so that the delegate no longer receives events from the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A&gt;</ph> Disassocia il delegato dal componente in modo che il delegato non riceve più gli eventi dal componente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>For more information about events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sugli eventi, vedere <bpt id="p1">[</bpt>la gestione e generazione di eventi<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla reflection, vedere gli argomenti in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>The following code example is built upon the example in the <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente è basato sull'esempio nel <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>It prints the information (category, description, and display name) of each event on a button in a text box.</source>
          <target state="translated">Stampa le informazioni (categoria, la descrizione e nome visualizzato) di ciascun evento su un pulsante in una casella di testo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>It requires that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textbox1`</ph> have been instantiated on a form.</source>
          <target state="translated">È necessario che <ph id="ph1">`button1`</ph> e <ph id="ph2">`textbox1`</ph> sia stata creata un'istanza in un form.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EventDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> that contains the name of the event and its attributes.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> che contiene il nome dell'evento e i relativi attributi.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class with the name and attributes in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> con il nome e gli attributi nell'oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> that has the name of the member and its attributes.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> che ha il nome del membro e i relativi attributi.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array with the attributes you want to add to this event description.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> con gli attributi che si desidera aggiungere alla descrizione dell'evento.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class with the name in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the attributes in both the <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph> array.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> con il nome nell'oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> specificato e gli attributi nell'oggetto <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> e nella matrice <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>This constructor appends the attributes in the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> array to the attributes in the <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.</source>
          <target state="translated">Questo costruttore aggiunge gli attributi di <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> matrice agli attributi di <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
          <source>The name of the event.</source>
          <target state="translated">Nome dell'evento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that contains the event attributes.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenente gli attributi dell'evento.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class with the specified name and attribute array.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> con il nome specificato e la matrice degli attributi.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>A component that provides events to the delegate.</source>
          <target state="translated">Componente che fornisce eventi al delegato.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>A delegate that represents the method that handles the event.</source>
          <target state="translated">Delegato che rappresenta il metodo con cui viene gestito l'evento.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>When overridden in a derived class, binds the event to the component.</source>
          <target state="translated">Quando è sottoposto a override in una classe derivata, consente di associare l'evento al componente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">In genere, questo metodo viene implementato tramite reflection.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla reflection, vedere gli argomenti in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>For more information about delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui delegati, vedere <bpt id="p1">[</bpt>la gestione e generazione di eventi<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>When you override this method, it should add the delegate to the component's event list by invoking the appropriate <bpt id="p1">&lt;c&gt;</bpt>add_myHandler<ept id="p1">&lt;/c&gt;</ept> method.</source>
          <target state="translated">Quando si esegue l'override di questo metodo, è necessario aggiungere il delegato all'elenco degli eventi del componente richiamando appropriata <bpt id="p1">&lt;c&gt;</bpt>add_myHandler<ept id="p1">&lt;/c&gt;</ept> metodo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventDescriptor.ComponentType">
          <source>When overridden in a derived class, gets the type of component this event is bound to.</source>
          <target state="translated">Quando è sottoposto a override in una classe derivata, consente di ottenere il tipo di componente a cui l'evento è associato.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.ComponentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component the event is bound to.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che rappresenta il tipo di componente a cui l'evento è associato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.ComponentType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">In genere, questa proprietà viene implementata tramite reflection.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventDescriptor.EventType">
          <source>When overridden in a derived class, gets the type of delegate for the event.</source>
          <target state="translated">Quando è sottoposto a override in una classe derivata, consente di ottenere il tipo di delegato dell'evento.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.EventType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of delegate for the event.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che rappresenta il tipo di delegato dell'evento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.EventType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">In genere, questa proprietà viene implementata tramite reflection.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.</source>
          <target state="translated">Quando è sottoposto a override in una classe derivata, consente di ottenere un valore che indica se il delegato dell'evento è di tipo multicast.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event delegate is multicast; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il delegato dell'evento è multicast; in caso contrario,<ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">In genere, questa proprietà viene implementata tramite reflection.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>A multicast delegate differs from a regular delegate in that it can contain references to more than just one method.</source>
          <target state="translated">Un delegato multicast differisce da un normale delegato può contenere riferimenti a più di un metodo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear.</source>
          <target state="translated">Metodi di un delegato multicast vengono eseguiti in modo sincrono quando il delegato viene richiamato, nell'ordine in cui appaiono.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.</source>
          <target state="translated">Se uno dei metodi di chiamata genera un'eccezione, il delegato viene interrotta e l'eccezione viene propagata al chiamante del delegato.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The component that the delegate is bound to.</source>
          <target state="translated">Il componente al quale è associato il delegato.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The delegate to unbind from the component.</source>
          <target state="translated">Il delegato da separare dal componente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.</source>
          <target state="translated">Quando è sottoposto a override in una classe derivata, consente di separare il delegato dal componente in modo che il delegato non riceva più eventi dal componente.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">In genere, questo metodo viene implementato tramite reflection.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>For more information, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere gli argomenti di <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>For more information about delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui delegati, vedere <bpt id="p1">[</bpt>la gestione e generazione di eventi<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>When you override this method, it should remove the delegate from the component's event list by invoking the appropriate <bpt id="p1">&lt;c&gt;</bpt>remove_myHandler<ept id="p1">&lt;/c&gt;</ept> method.</source>
          <target state="translated">Quando si esegue l'override di questo metodo, è necessario rimuovere il delegato dall'elenco degli eventi del componente richiamando appropriata <bpt id="p1">&lt;c&gt;</bpt>remove_myHandler<ept id="p1">&lt;/c&gt;</ept> metodo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>