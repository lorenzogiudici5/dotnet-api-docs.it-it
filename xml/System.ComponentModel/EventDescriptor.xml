<Type Name="EventDescriptor" FullName="System.ComponentModel.EventDescriptor">
  <TypeSignature Language="C#" Value="public abstract class EventDescriptor : System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EventDescriptor extends System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.EventDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EventDescriptor&#xA;Inherits MemberDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventDescriptor abstract : System::ComponentModel::MemberDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MemberDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ef5c1-101">Include informazioni su un evento.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-101">Provides information about an event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef5c1-102">Un <xref:System.ComponentModel.EventDescriptor> è costituito da un nome, gli attributi, il componente associato all'evento, il delegato dell'evento, il tipo del delegato, e se il delegato multicast.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-102">An <xref:System.ComponentModel.EventDescriptor> consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.</span></span>  
  
 <span data-ttu-id="ef5c1-103"><xref:System.ComponentModel.EventDescriptor> fornisce le seguenti `abstract` proprietà e metodi:</span><span class="sxs-lookup"><span data-stu-id="ef5c1-103"><xref:System.ComponentModel.EventDescriptor> provides the following `abstract` properties and methods:</span></span>  
  
-   <span data-ttu-id="ef5c1-104"><xref:System.ComponentModel.EventDescriptor.ComponentType%2A> contiene il tipo del componente di che questo evento viene dichiarato.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-104"><xref:System.ComponentModel.EventDescriptor.ComponentType%2A> contains the type of the component this event is declared on.</span></span>  
  
-   <span data-ttu-id="ef5c1-105"><xref:System.ComponentModel.EventDescriptor.EventType%2A> contiene il tipo di delegato per l'evento.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-105"><xref:System.ComponentModel.EventDescriptor.EventType%2A> contains the type of delegate for the event.</span></span>  
  
-   <span data-ttu-id="ef5c1-106"><xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> contiene un valore che indica se il delegato dell'evento è un delegato multicast.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-106"><xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> contains a value indicating whether the event delegate is a multicast delegate.</span></span>  
  
-   <span data-ttu-id="ef5c1-107"><xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> Associa l'evento a un componente.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-107"><xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> binds the event to a component.</span></span>  
  
-   <span data-ttu-id="ef5c1-108"><xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> Disassocia il delegato dal componente in modo che il delegato non riceve più gli eventi dal componente.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-108"><xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> unbinds the delegate from the component so that the delegate no longer receives events from the component.</span></span>  
  
 <span data-ttu-id="ef5c1-109">Per ulteriori informazioni sugli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ef5c1-109">For more information about events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span> <span data-ttu-id="ef5c1-110">Per ulteriori informazioni sulla reflection, vedere gli argomenti in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span><span class="sxs-lookup"><span data-stu-id="ef5c1-110">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef5c1-111">Esempio di codice seguente è basato sull'esempio nel <xref:System.ComponentModel.EventDescriptorCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-111">The following code example is built upon the example in the <xref:System.ComponentModel.EventDescriptorCollection> class.</span></span> <span data-ttu-id="ef5c1-112">Stampa le informazioni (categoria, la descrizione e nome visualizzato) di ciascun evento su un pulsante in una casella di testo.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-112">It prints the information (category, description, and display name) of each event on a button in a text box.</span></span> <span data-ttu-id="ef5c1-113">È necessario che `button1` e `textbox1` sia stata creata un'istanza in un form.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-113">It requires that `button1` and `textbox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[EventDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/EventDescriptor/CPP/eventdescriptor.cpp#1)]
 [!code-csharp[EventDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/EventDescriptor/CS/eventdescriptor.cs#1)]
 [!code-vb[EventDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/EventDescriptor/VB/eventdescriptor.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ef5c1-114">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.EventDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-114">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (System.ComponentModel.MemberDescriptor descr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::ComponentModel::MemberDescriptor ^ descr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="descr"><span data-ttu-id="ef5c1-115">Un oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che contiene il nome dell'evento e i relativi attributi.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-115">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that contains the name of the event and its attributes.</span></span></param>
        <summary><span data-ttu-id="ef5c1-116">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.EventDescriptor" /> con il nome e gli attributi nell'oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-116">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the name and attributes in the specified <see cref="T:System.ComponentModel.MemberDescriptor" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::ComponentModel::MemberDescriptor ^ descr, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="descr"><span data-ttu-id="ef5c1-117">Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che ha il nome del membro e i relativi attributi.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-117">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that has the name of the member and its attributes.</span></span></param>
        <param name="attrs"><span data-ttu-id="ef5c1-118">Matrice <see cref="T:System.Attribute" /> con gli attributi che si desidera aggiungere alla descrizione dell'evento.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-118">An <see cref="T:System.Attribute" /> array with the attributes you want to add to this event description.</span></span></param>
        <summary><span data-ttu-id="ef5c1-119">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.EventDescriptor" /> con il nome nell'oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> specificato e gli attributi nell'oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> e nella matrice <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-119">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the name in the specified <see cref="T:System.ComponentModel.MemberDescriptor" /> and the attributes in both the <see cref="T:System.ComponentModel.MemberDescriptor" /> and the <see cref="T:System.Attribute" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef5c1-120">Questo costruttore aggiunge gli attributi di <xref:System.Attribute> matrice agli attributi di <xref:System.ComponentModel.MemberDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-120">This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (string name, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::String ^ name, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ef5c1-121">Nome dell'evento.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-121">The name of the event.</span></span></param>
        <param name="attrs"><span data-ttu-id="ef5c1-122">Matrice di tipo <see cref="T:System.Attribute" /> contenente gli attributi dell'evento.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-122">An array of type <see cref="T:System.Attribute" /> that contains the event attributes.</span></span></param>
        <summary><span data-ttu-id="ef5c1-123">Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.EventDescriptor" /> con il nome specificato e la matrice degli attributi.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-123">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the specified name and attribute array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public abstract void AddEventHandler (object component, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventHandler(object component, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddEventHandler (component As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddEventHandler(System::Object ^ component, Delegate ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="ef5c1-124">Componente che fornisce eventi al delegato.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-124">A component that provides events to the delegate.</span></span></param>
        <param name="value"><span data-ttu-id="ef5c1-125">Delegato che rappresenta il metodo con cui viene gestito l'evento.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-125">A delegate that represents the method that handles the event.</span></span></param>
        <summary><span data-ttu-id="ef5c1-126">Quando è sottoposto a override in una classe derivata, consente di associare l'evento al componente.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-126">When overridden in a derived class, binds the event to the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef5c1-127">In genere, questo metodo viene implementato tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-127">Typically, this method is implemented through reflection.</span></span> <span data-ttu-id="ef5c1-128">Per ulteriori informazioni sulla reflection, vedere gli argomenti in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span><span class="sxs-lookup"><span data-stu-id="ef5c1-128">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="ef5c1-129">Per ulteriori informazioni sui delegati, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ef5c1-129">For more information about delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="ef5c1-130">Quando si esegue l'override di questo metodo, è necessario aggiungere il delegato all'elenco degli eventi del componente richiamando appropriata <c>add_myHandler</c> metodo.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-130">When you override this method, it should add the delegate to the component's event list by invoking the appropriate <c>add_myHandler</c> method.</span></span></para>
        </block>
        <altmember cref="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public abstract Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ComponentType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef5c1-131">Quando è sottoposto a override in una classe derivata, consente di ottenere il tipo di componente a cui l'evento è associato.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-131">When overridden in a derived class, gets the type of component this event is bound to.</span></span></summary>
        <value><span data-ttu-id="ef5c1-132">Un oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente a cui l'evento è associato.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-132">A <see cref="T:System.Type" /> that represents the type of component the event is bound to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef5c1-133">In genere, questa proprietà viene implementata tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-133">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.EventType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public abstract Type EventType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EventType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.EventType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EventType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ EventType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef5c1-134">Quando è sottoposto a override in una classe derivata, consente di ottenere il tipo di delegato dell'evento.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-134">When overridden in a derived class, gets the type of delegate for the event.</span></span></summary>
        <value><span data-ttu-id="ef5c1-135">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di delegato dell'evento.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-135">A <see cref="T:System.Type" /> that represents the type of delegate for the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef5c1-136">In genere, questa proprietà viene implementata tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-136">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.ComponentType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      </Docs>
    </Member>
    <Member MemberName="IsMulticast">
      <MemberSignature Language="C#" Value="public abstract bool IsMulticast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMulticast" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsMulticast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsMulticast { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef5c1-137">Quando è sottoposto a override in una classe derivata, consente di ottenere un valore che indica se il delegato dell'evento è di tipo multicast.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-137">When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.</span></span></summary>
        <value>
          <span data-ttu-id="ef5c1-138"><see langword="true" /> se il delegato dell'evento è multicast; in caso contrario,<see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-138"><see langword="true" /> if the event delegate is multicast; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef5c1-139">In genere, questa proprietà viene implementata tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-139">Typically, this property is implemented through reflection.</span></span>  
  
 <span data-ttu-id="ef5c1-140">Un delegato multicast differisce da un normale delegato può contenere riferimenti a più di un metodo.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-140">A multicast delegate differs from a regular delegate in that it can contain references to more than just one method.</span></span> <span data-ttu-id="ef5c1-141">Metodi di un delegato multicast vengono eseguiti in modo sincrono quando il delegato viene richiamato, nell'ordine in cui appaiono.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-141">Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear.</span></span> <span data-ttu-id="ef5c1-142">Se uno dei metodi di chiamata genera un'eccezione, il delegato viene interrotta e l'eccezione viene propagata al chiamante del delegato.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-142">If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.EventType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.ComponentType" />
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public abstract void RemoveEventHandler (object component, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventHandler(object component, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveEventHandler (component As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveEventHandler(System::Object ^ component, Delegate ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="ef5c1-143">Il componente al quale è associato il delegato.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-143">The component that the delegate is bound to.</span></span></param>
        <param name="value"><span data-ttu-id="ef5c1-144">Il delegato da separare dal componente.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-144">The delegate to unbind from the component.</span></span></param>
        <summary><span data-ttu-id="ef5c1-145">Quando è sottoposto a override in una classe derivata, consente di separare il delegato dal componente in modo che il delegato non riceva più eventi dal componente.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-145">When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef5c1-146">In genere, questo metodo viene implementato tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-146">Typically, this method is implemented through reflection.</span></span> <span data-ttu-id="ef5c1-147">Per ulteriori informazioni, vedere gli argomenti di [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span><span class="sxs-lookup"><span data-stu-id="ef5c1-147">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="ef5c1-148">Per ulteriori informazioni sui delegati, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ef5c1-148">For more information about delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="ef5c1-149">Quando si esegue l'override di questo metodo, è necessario rimuovere il delegato dall'elenco degli eventi del componente richiamando appropriata <c>remove_myHandler</c> metodo.</span><span class="sxs-lookup"><span data-stu-id="ef5c1-149">When you override this method, it should remove the delegate from the component's event list by invoking the appropriate <c>remove_myHandler</c> method.</span></span></para>
        </block>
        <altmember cref="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      </Docs>
    </Member>
  </Members>
</Type>