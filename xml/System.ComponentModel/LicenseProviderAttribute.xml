<Type Name="LicenseProviderAttribute" FullName="System.ComponentModel.LicenseProviderAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a11a3e970914fa130bfd14a526eb69764892e9e7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LicenseProviderAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LicenseProviderAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseProviderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LicenseProviderAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicenseProviderAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4d7aa-101">Consente di specificare l'oggetto <see cref="T:System.ComponentModel.LicenseProvider" /> da utilizzare con una classe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4d7aa-101">Specifies the <see cref="T:System.ComponentModel.LicenseProvider" /> to use with a class.</span>
      </span>
      <span data-ttu-id="4d7aa-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4d7aa-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d7aa-103">Quando si crea un componente che si desidera concedere in licenza, è necessario specificare il <xref:System.ComponentModel.LicenseProvider> contrassegnando il componente con un <xref:System.ComponentModel.LicenseProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="4d7aa-103">When you create a component that you want to license, you must specify the <xref:System.ComponentModel.LicenseProvider> by marking the component with a <xref:System.ComponentModel.LicenseProviderAttribute>.</span></span>  
  
 <span data-ttu-id="4d7aa-104">Utilizzare il <xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A> proprietà da ottenere il <xref:System.Type> del <xref:System.ComponentModel.LicenseProvider>.</span><span class="sxs-lookup"><span data-stu-id="4d7aa-104">Use the <xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A> property to get the <xref:System.Type> of the <xref:System.ComponentModel.LicenseProvider>.</span></span>  
  
 <span data-ttu-id="4d7aa-105">Per altre informazioni sugli attributi, vedere [Attributi](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="4d7aa-105">For more information about attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span> <span data-ttu-id="4d7aa-106">Per ulteriori informazioni sulle licenze, vedere [come: licenza componenti e controlli](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span><span class="sxs-lookup"><span data-stu-id="4d7aa-106">For more information about licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d7aa-107">Il <xref:System.Security.Permissions.HostProtectionAttribute> attributo applicato a questa classe ha i seguenti elementi <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> valore della proprietà: <xref:System.Security.Permissions.HostProtectionResource.SharedState>.</span><span class="sxs-lookup"><span data-stu-id="4d7aa-107">The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>.</span></span> <span data-ttu-id="4d7aa-108">L'oggetto <xref:System.Security.Permissions.HostProtectionAttribute> non influisce sulle applicazioni desktop, che in genere vengono avviate facendo doppio clic sull'icona, digitando un comando oppure immettendo un URL in un browser.</span><span class="sxs-lookup"><span data-stu-id="4d7aa-108">The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).</span></span> <span data-ttu-id="4d7aa-109">Per ulteriori informazioni, vedere il <xref:System.Security.Permissions.HostProtectionAttribute> classe o [programmazione in SQL Server e attributi di protezione Host](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span><span class="sxs-lookup"><span data-stu-id="4d7aa-109">For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d7aa-110">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.ComponentModel.LicFileLicenseProvider> come provider di licenze per `MyControl`.</span><span class="sxs-lookup"><span data-stu-id="4d7aa-110">The following code example uses the <xref:System.ComponentModel.LicFileLicenseProvider> as the license provider for `MyControl`.</span></span>  
  
 [!code-cpp[Classic LicenseProviderAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LicenseProviderAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LicenseProviderAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LicenseProviderAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic LicenseProviderAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LicenseProviderAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4d7aa-111">L'esempio di codice successiva crea un'istanza di `MyControl` classe.</span><span class="sxs-lookup"><span data-stu-id="4d7aa-111">The next code example creates an instance of the `MyControl` class.</span></span> <span data-ttu-id="4d7aa-112">Quindi, ottiene gli attributi per la classe e viene stampato il nome del provider di licenza usato da `myNewControl`.</span><span class="sxs-lookup"><span data-stu-id="4d7aa-112">Then, it gets the attributes for the class, and prints the name of the license provider used by `myNewControl`.</span></span>  
  
 [!code-cpp[Classic LicenseProviderAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LicenseProviderAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic LicenseProviderAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LicenseProviderAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic LicenseProviderAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LicenseProviderAttribute Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseContext" />
    <altmember cref="T:System.ComponentModel.LicenseException" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4d7aa-113">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseProviderAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-113">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseProviderAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseProviderAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseProviderAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseProviderAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4d7aa-114">Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseProviderAttribute" /> senza un provider di licenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-114">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseProviderAttribute" /> class without a license provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseProviderAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseProviderAttribute(System::String ^ typeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="4d7aa-115">Nome completo della classe del provider di licenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-115">The fully qualified name of the license provider class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4d7aa-116">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseProviderAttribute" /> con il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-116">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseProviderAttribute" /> class with the specified type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseProviderAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseProviderAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4d7aa-117">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo della classe del provider di licenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-117">A <see cref="T:System.Type" /> that represents the type of the license provider class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4d7aa-118">Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseProviderAttribute" /> con il tipo specificato di provider di licenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-118">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseProviderAttribute" /> class with the specified type of license provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.LicenseProviderAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.LicenseProviderAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.LicenseProviderAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As LicenseProviderAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::LicenseProviderAttribute ^ Default;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.LicenseProviderAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d7aa-119">Consente di specificare il valore predefinito, ovvero nessun provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-119">Specifies the default value, which is no provider.</span>
          </span>
          <span data-ttu-id="4d7aa-120">Questo campo <see langword="static" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-120">This <see langword="static" /> field is read-only.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4d7aa-121">Altro oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-121">Another object to compare to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4d7aa-122">Indica se questa istanza e un oggetto specificato sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-122">Indicates whether this instance and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4d7aa-123">
            <see langword="true" /> se <paramref name="value" /> è uguale all'istanza. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-123">
              <see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseProviderAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4d7aa-124">Restituisce il codice hash per l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-124">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4d7aa-125">Codice hash per l'oggetto <see cref="T:System.ComponentModel.LicenseProviderAttribute" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-125">A hash code for the current <see cref="T:System.ComponentModel.LicenseProviderAttribute" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LicenseProvider">
      <MemberSignature Language="C#" Value="public Type LicenseProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type LicenseProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseProviderAttribute.LicenseProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LicenseProvider As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ LicenseProvider { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d7aa-126">Ottiene il provider di licenza che deve essere utilizzato con la classe associata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-126">Gets the license provider that must be used with the associated class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d7aa-127">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo del provider di licenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-127">A <see cref="T:System.Type" /> that represents the type of the license provider.</span>
          </span>
          <span data-ttu-id="4d7aa-128">Il valore predefinito è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-128">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseProviderAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d7aa-129">Indica un ID univoco per questo tipo di attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-129">Indicates a unique ID for this attribute type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d7aa-130">ID univoco per questo tipo di attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d7aa-130">A unique ID for this attribute type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>