<Type Name="IWebPartField" FullName="System.Web.UI.WebControls.WebParts.IWebPartField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="87a1a33ef4ce71dda5fb35ef08bca985c1e1b62a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37538357" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebPartField" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartField" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartField" />
  <TypeSignature Language="F#" Value="type IWebPartField = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce un'interfaccia provider per la connessione di due controlli server tramite un singolo campo di dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa interfaccia è progettata per essere usato con le connessioni Web part. In una connessione Web part, due controlli server che si trovano in un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona stabilire una connessione e condivisione di dati, con un controllo che funge da consumer e l'altro controllo che funge da provider. Il meccanismo di condivisione dei dati in una connessione Web part è un'istanza di interfaccia, il provider assegna ai consumer tramite un metodo di callback. Per stabilire una connessione, il consumer e provider devono entrambi funziona con lo stesso tipo di interfaccia per la condivisione dei dati. Se il consumer non riconosce il tipo di interfaccia inviato dal provider, è comunque possibile connettere i controlli tramite un trasformatore (un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> oggetto) che converte l'istanza dell'interfaccia inviato dal provider in un tipo che il consumer riconosce. Per informazioni dettagliate sulle connessioni, vedere <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> e [panoramica delle connessioni Web part](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).  
  
 Il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> è un'interfaccia di provider inclusa con il controllo Web part impostato come un'interfaccia standard per la creazione di connessioni basate su un campo dati. È anche possibile creare interfacce personalizzate da usare con le connessioni Web part, ma in molte applicazioni Web basate sui dati è utile creare le connessioni basate su una riga comune (per informazioni dettagliate, vedere la <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface), tabella (per informazioni dettagliate, vedere il <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfaccia), o un campo di dati di origine, tramite il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia. In una connessione normale, una <xref:System.Web.UI.WebControls.WebParts.WebPart> controllare ad agire come un provider implementa il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> l'interfaccia e fornire un'istanza dell'interfaccia agli utenti in un metodo di callback speciali. Ad esempio, il provider potrebbe implementare un <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia per un campo nella tabella delle informazioni sull'utente che contiene i dati di codice postale dell'utente Web. Un altro <xref:System.Web.UI.WebControls.WebParts.WebPart> controllano che agisce come un consumer potrebbe definire un metodo speciale per ricevere l'istanza dell'interfaccia, è stato possibile estrarre i dati, codice postale e cercare e visualizzare informazioni meteorologiche in base al codice postale.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia contiene due membri esposti. Il <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> proprietà restituisce informazioni sullo schema relative al campo dati incapsulato in un <xref:System.ComponentModel.PropertyDescriptor> oggetto. Il <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> metodo dichiara un metodo che usa un implementatore (ad esempio, un controllo provider) per recuperare campo dati dell'istanza dell'interfaccia quando viene richiamato il metodo di callback.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare una connessione tra due controlli tramite statica il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia. L'esempio di codice è costituito da tre parti:  
  
-   Codice sorgente per custom due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli che possono creare una connessione usando il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia, con un controllo che funge da provider, l'altro che funge da consumer.  
  
-   Una pagina Web che ospita i controlli e dichiara di connessione statica in un formato di persistenza.  
  
-   Descrizione di ciò che accade quando viene eseguito il codice di esempio.  
  
 La prima parte dell'esempio di codice è il codice sorgente per i due controlli personalizzati. È prima di tutto il codice per il provider che implementa il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia. Per semplicità, nell'esempio, il provider crea una tabella con alcuni dati, piuttosto che ci si connette a un database. Il `GetConnectionInterface` metodo serve come punto di connessione del provider, il metodo di callback che restituisce l'istanza dell'interfaccia al consumer. Il consumer, recupera l'istanza dell'interfaccia del provider nel relativo metodo denominato `SetConnectionInterface`, che è contrassegnato con un `ConnectionConsumer` attributo. Dopo aver recuperato l'istanza dell'interfaccia, il consumer, nel relativo `OnPreRender` (metodo), chiama l'implementazione del <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> metodo del provider, per recuperare i dati effettivi.  
  
 Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Questo esempio di codice Usa la compilazione dinamica. Per una procedura dettagliata che illustra come eseguire la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 La seconda parte dell'esempio di codice è la pagina Web che dichiara di connessione statica e contiene i controlli. Nella parte superiore della pagina è un `Register` direttiva che dichiara lo spazio dei nomi del codice sorgente contenuto nella directory App_Code. La connessione viene dichiarata utilizzando un `<asp:webpartconnection>` elemento. I controlli consumer e provider personalizzati vengono dichiarati un `<zonetemplate>` elemento all'interno di un' `<asp:webpartzone>` elemento, che è necessario per poter essere in grado di connettersi (devono risiedere in una zona da cui eredita il <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> classe).  
  
 [!code-aspx-csharp[WebParts_IWebPartField_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartField_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/Defaultvb.aspx#1)]  
  
 Caricare la pagina in un browser. Controllo consumer consente di visualizzare i dati forniti dal campo specificato, che rende disponibili tramite un'istanza del provider di <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName="GetFieldValue">
      <MemberSignature Language="C#" Value="public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFieldValue(class System.Web.UI.WebControls.WebParts.FieldCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFieldValue (callback As FieldCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFieldValue(System::Web::UI::WebControls::WebParts::FieldCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValue : System.Web.UI.WebControls.WebParts.FieldCallback -&gt; unit" Usage="iWebPartField.GetFieldValue callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.FieldCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Delegato <see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" /> contenente l'indirizzo di un metodo che riceve i dati.</param>
        <summary>Restituisce il valore del campo utilizzato dall'interfaccia come base di una connessione tra due controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per recuperare i valori dei campi dati passati dall'interfaccia.  
  
   
  
## Examples  
 Esempio di codice seguente illustra l'implementazione e dell'utilizzo di <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> (metodo). L'esempio completo è illustrato nella panoramica della classe per il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia. Il controllo provider implementa il <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> metodo, che restituisce il valore di un campo specifico nella tabella dati. Il controllo consumer chiama il <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> metodo nella relativa `OnPreRender` metodo, in modo che il valore dei dati possa essere scritte nella pagina.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ Schema { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptor" Usage="System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le informazioni sullo schema per un campo dati utilizzato per condividere i dati tra due controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che descrive le informazioni sullo schema per il campo dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà fornisce informazioni sulle proprietà per i dati passati dall'interfaccia. Controlli di trasformatore e un consumer possono eseguire una query per ottenere informazioni sul tipo di contenuto, questa proprietà e altri dettagli del campo contenuto nel <xref:System.Web.UI.WebControls.WebParts.IWebPartField> istanza interfaccia inviata da un provider.  
  
   
  
## Examples  
 Esempio di codice seguente illustra l'implementazione e dell'utilizzo di <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> proprietà. L'esempio completo è illustrato nella panoramica della classe per il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia. Il controllo provider implementa il <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> proprietà. Quindi, nel relativo `GetFieldValue` metodo, viene utilizzata la proprietà per recuperare il valore del campo.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>