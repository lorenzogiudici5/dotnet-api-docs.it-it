<Type Name="IWebPartField" FullName="System.Web.UI.WebControls.WebParts.IWebPartField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e394a26b3c9c60bd5b01ccbaf7ae38a6ac135251" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590205" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebPartField" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartField" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce un'interfaccia provider per la connessione di due controlli server tramite un singolo campo di dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa interfaccia è progettata per essere utilizzato con le connessioni Web part. In una connessione Web part, due controlli server che risiedono in un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona stabilire una connessione e condividono dati, con un controllo che funge da consumer e l'altro controllo che funge da provider. Il meccanismo per la condivisione dei dati in una connessione Web part è un'istanza di interfaccia, viene utilizzato il provider al consumer tramite un metodo di callback. Per stabilire una connessione, il consumer e provider devono utilizzare entrambi con lo stesso tipo di interfaccia per la condivisione dei dati. Se il consumer non riconosce il tipo di interfaccia inviato dal provider, è comunque possibile connettere i controlli tramite un trasformatore (un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> oggetto) che converte l'istanza dell'interfaccia inviata dal provider in un tipo che il consumer riconosce. Per informazioni dettagliate sulle connessioni, vedere <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> e [Cenni preliminari sulle connessioni di Web part](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).  
  
 Il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> è un'interfaccia del provider inclusa con il controllo di Web part come interfaccia standard per la creazione di connessioni basate su un campo dati. È inoltre possibile creare interfacce personalizzate da utilizzare con le connessioni Web part, ma in molte applicazioni Web basate sui dati è utile creare le connessioni basate su una riga comune (per informazioni dettagliate, vedere il <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface), tabella (per informazioni dettagliate, vedere il <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Interface), o un campo dati di origine, utilizzando il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia. In una normale connessione, un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllare agisce come un provider implementa il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> l'interfaccia e fornire un'istanza dell'interfaccia ai consumer in un metodo di callback speciale. Ad esempio, il provider potrebbe implementare un <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia per un campo nella tabella delle informazioni sull'utente che contiene i dati di codice postale dell'utente Web. Un altro <xref:System.Web.UI.WebControls.WebParts.WebPart> controllare agisce come un consumer, potrebbe definire un metodo speciale per ricevere l'istanza dell'interfaccia, Impossibile estrarre i dati, il codice postale e cercare e visualizzare informazioni meteorologiche in base al codice postale.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia dispone di due membri esposti. Il <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> restituisce informazioni sullo schema relative al campo dati incapsulato in un <xref:System.ComponentModel.PropertyDescriptor> oggetto. Il <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> metodo dichiara un metodo che utilizza un responsabile dell'implementazione (ad esempio un controllo provider) per recuperare i dati dei campi dell'istanza dell'interfaccia quando viene richiamato il metodo di callback.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come creare una connessione statica tra due controlli utilizzando il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia. L'esempio di codice è costituito da tre parti:  
  
-   Codice sorgente per due personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli che possono creare una connessione utilizzando il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia, con un controllo che funge da provider, l'altro che funge da consumer.  
  
-   Una pagina Web che ospita i controlli e dichiara la connessione statica nel formato di persistenza.  
  
-   Una descrizione di ciò che accade quando viene eseguito il codice di esempio.  
  
 La prima parte dell'esempio di codice è il codice sorgente per i due controlli personalizzati. È prima di tutto il codice per il provider che implementa il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia. Per semplicità, nell'esempio, il provider crea una tabella con alcuni dati invece di connettersi a un database. Il `GetConnectionInterface` metodo serve come punto di connessione del provider, il metodo di callback che restituisce l'istanza di interfaccia al consumer. Il consumer, recupera l'istanza dell'interfaccia del provider nel relativo metodo denominato `SetConnectionInterface`, che è contrassegnato con un `ConnectionConsumer` attributo. Dopo aver recuperato l'istanza dell'interfaccia utente, nel relativo `OnPreRender` metodo chiama l'implementazione del <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> metodo del provider, per recuperare i dati effettivi.  
  
 Per eseguire l'esempio di codice, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato dinamicamente in fase di esecuzione. Nell'esempio viene utilizzata la compilazione dinamica. Per una procedura dettagliata viene illustrato come compilare, vedere [procedura dettagliata: sviluppo e l'utilizzo di un controllo personalizzato](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 La seconda parte dell'esempio di codice è la pagina Web che dichiara la connessione statica e contiene i controlli. Nella parte superiore della pagina è un `Register` direttiva che dichiara lo spazio dei nomi del codice sorgente incluso nella directory App_Code. La connessione viene dichiarata utilizzando un `<asp:webpartconnection>` elemento. I controlli di consumer e provider personalizzati vengono dichiarati un `<zonetemplate>` elemento all'interno di un `<asp:webpartzone>` elemento, è necessario per poter essere in grado di connettersi (devono risiedere all'interno di una zona da cui eredita il <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> classe).  
  
 [!code-aspx-csharp[WebParts_IWebPartField_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartField_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/Defaultvb.aspx#1)]  
  
 Caricare la pagina in un browser. Il controllo consumer Visualizza i dati forniti dal campo specificato, il provider rende disponibili tramite un'istanza di <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName="GetFieldValue">
      <MemberSignature Language="C#" Value="public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFieldValue(class System.Web.UI.WebControls.WebParts.FieldCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFieldValue (callback As FieldCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFieldValue(System::Web::UI::WebControls::WebParts::FieldCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.FieldCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Delegato <see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" /> contenente l'indirizzo di un metodo che riceve i dati.</param>
        <summary>Restituisce il valore del campo utilizzato dall'interfaccia come base di una connessione tra due controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per recuperare i valori dei campi dati passati dall'interfaccia.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'implementazione e dell'utilizzo di <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> metodo. L'esempio completo è illustrato nella panoramica di classe per il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia. Il controllo provider implementa il <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> (metodo), restituendo il valore di un campo specifico nella tabella di dati. Il controllo consumer chiama il <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> metodo nel relativo `OnPreRender` (metodo), in modo che il valore dei dati è possibile scrivere la pagina.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ Schema { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le informazioni sullo schema per un campo dati utilizzato per condividere i dati tra due controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che descrive le informazioni sullo schema per il campo dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà fornisce informazioni sulle proprietà per i dati passati dall'interfaccia. Controlli trasformatore e consumer possono eseguire una query per ottenere informazioni sul tipo di contenuto, e altri dettagli del campo contenuto nel <xref:System.Web.UI.WebControls.WebParts.IWebPartField> inviata da un provider dell'istanza di interfaccia.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'implementazione e dell'utilizzo di <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> proprietà. L'esempio completo è illustrato nella panoramica di classe per il <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaccia. Il controllo provider implementa il <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> proprietà. Quindi, nel relativo `GetFieldValue` metodo, viene utilizzata la proprietà per recuperare il valore del campo.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>