<Type Name="CatalogZone" FullName="System.Web.UI.WebControls.WebParts.CatalogZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37e85f2a562ac9e4c866a8070ae59f8dd1633f5d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585574" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogZone extends System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZone" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogZone&#xA;Inherits CatalogZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZone : System::Web::UI::WebControls::WebParts::CatalogZoneBase" />
  <TypeSignature Language="F#" Value="type CatalogZone = class&#xA;    inherit CatalogZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Funge da controllo primario nell'insieme di controlli web part per l'hosting dei controlli <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> in una pagina Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 All'interno del set di controllo di Web part, una zona è un'area in una pagina Web contenente i controlli Web part. Viene creata una zona Web part da un controllo zona, ovvero un tipo di <xref:System.Web.UI.WebControls.CompositeControl> progettato per contenere altri controlli. Le funzioni principali di una zona sono per disporre i controlli in che esso contenute e per fornire una comune interfaccia utente (UI) per i controlli. Per informazioni generali sulle aree e come vengono usati in applicazioni Web part, vedere l'argomento base <xref:System.Web.UI.WebControls.WebParts.WebZone> (classe), e [Web Parts Control Set Overview](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668).  
  
 Una funzionalità chiave dei controlli Web part è che consentono agli utenti finali di modificare le pagine Web (o personalizzare) in base alle sue preferenze e salvare le impostazioni personalizzate per le sessioni future del browser. Un aspetto della modifica delle pagine Web part include la possibilità di aggiungere <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli o altri controlli server a una pagina Web part. Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo fornisce un elenco o un catalogo di controlli che gli utenti possono aggiungere a una pagina.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo è uno dei più importanti di controlli nel gruppo di controlli Web part. Deriva dal <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> classe e la maggior parte del relativo funzionamento è ereditata da quella classe. Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe essenzialmente aggiunge alla classe di base un modello di zona è un'implementazione del <xref:System.Web.UI.ITemplate> interfaccia. Il modello di zona consente agli sviluppatori di aggiungere in modo dichiarativo <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli a una zona in un formato di persistenza di pagina.  
  
> [!IMPORTANT]
>  A <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zona può contenere solo <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli e invece <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli possono risiedere solo in aree che derivano dal <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class, ad esempio <xref:System.Web.UI.WebControls.WebParts.CatalogZone>.  
  
 Un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo diventa visibile solo quando un utente passa alla modalità di visualizzazione catalogo una pagina Web (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>). Un catalogo può contenere diversi tipi di <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli. Ogni <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controllo è un tipo di contenitore che contiene i controlli server gli utenti possono aggiungere alla pagina. Il <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli variano in base alla provengano dei controlli server che contengono. Nella tabella seguente sono riepilogate le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli forniti con il set di controlli Web part e, per ogni controllo, il tipo di server controlli che contiene.  
  
|Control|Descrizione|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Mantiene i riferimenti ai controlli che sono stati chiusi in una pagina. Questi controlli possono essere riaperte (aggiunto nuovamente alla pagina) da parte degli utenti.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Contiene riferimenti a controlli che vengono dichiarati in un catalogo di Web part nel markup della pagina Web. Questi controlli possono essere aggiunti a una pagina Web da parte degli utenti.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Fornisce l'interfaccia utente per un utente di caricare un file di definizione (un file XML con una. Estensione di Web part e un formato che contiene le informazioni sullo stato) per un controllo a un catalogo, in modo che il controllo può essere aggiunto a una pagina Web.|  
  
 Poiché il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe aggiunge solo un modello di zona per il comportamento della relativa classe base, ha alcuni membri. Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> costruttore è un costruttore predefinito; in questo modo è possibile inizializzare una nuova istanza della <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe. Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> proprietà recupera o imposta un riferimento di <xref:System.Web.UI.ITemplate> oggetto che contiene i controlli per la zona. Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> metodo è critico. Viene eseguito l'override del metodo di base per creare la raccolta di tutti i <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli contenuti nel modello di zona.  
  
> [!NOTE]
>  I pulsanti di <xref:System.Web.UI.WebControls.WebParts.CatalogZone> dell'interfaccia utente richiedono script sul lato client per poter funzionare correttamente. Se lo scripting è disabilitato nel browser, l'utente non sarà in grado di eseguire azioni mediante i <xref:System.Web.UI.WebControls.WebParts.CatalogZone> dell'interfaccia utente.  
  
## <a name="accessibility"></a>Accessibilità  
 Il codice sottoposto a rendering per impostazione predefinita per questo controllo potrebbe non essere conforme agli standard di accessibilità, ad esempio le linee guida priorità 1 Web Content Accessibility Guidelines 1.0 (WCAG). Per informazioni dettagliate sul supporto di accessibilità per questo controllo, vedere [controlli ASP.NET e l'accessibilità](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato l'utilizzo di strumenti dichiarativo e programmatico del <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo. L'esempio di codice è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione della pagina Web.  
  
-   Un file con il codice sorgente per un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo e un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo che viene importato dal catalogo e aggiunto alla pagina Web.  
  
-   Una pagina Web che dichiara il controllo utente e l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo.  
  
-   Una spiegazione su come eseguire l'esempio.  
  
 La prima parte di questo esempio di codice è il controllo utente che consente agli utenti di modificare la modalità di visualizzazione in una pagina Web. Per informazioni dettagliate sulle modalità di visualizzazione e una descrizione del codice sorgente in questo controllo, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/displaymodemenucs.ascx#7)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/displaymodemenuvb.ascx#7)]  
  
 La seconda parte dell'esempio di codice contiene il codice per l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogZone> e <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. Il codice per il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo di seguito viene illustrato come ereditare il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe e personalizzare le relative proprietà impostando alcune proprietà valori predefiniti nel costruttore. Il codice sorgente viene inoltre illustrato come creare un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> classe denominata `TextDisplayWebPart`. Si tratta del controllo associato con il. File di descrizione di Web part da importare come parte di questo esempio di codice. Dopo aver importato il file di descrizione usando il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo nella pagina Web, sarà possibile aggiungere il `TextDisplayWebPart` controllo alla pagina, completamente preconfigurata come specificato nel file di descrizione.  
  
 Ad esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Nell'esempio viene utilizzata la compilazione dinamica, perciò, se si desidera eseguire l'esempio in questo modo, assegnare un nome file del codice sorgente e aggiungerlo a una sottocartella App_Code della directory radice dell'applicazione Web. Per una procedura dettagliata che illustra entrambi i metodi di compilazione, vedere [procedura dettagliata: sviluppo e un controllo del Server Web personalizzato utilizzato](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 La terza parte dell'esempio di codice è la pagina Web contenente i controlli. Contiene un `Register` direttiva per il controllo utente e un altro per il file di origine con i controlli personalizzati. Si noti che nella seconda direttiva non assegnare un nome dell'assembly, poiché l'esempio non utilizza un assembly, viene utilizzata la compilazione dinamica con il codice sorgente inserito nella sottocartella App_Code. La pagina Web dichiara un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> (controllo) e nel relativo elemento figlio `<zonetemplate>` elemento, dichiara un <xref:System.Web.UI.WebControls.BulletedList> controllo. Mentre questo è un controllo ASP.NET standard, avere le funzionalità Web part in fase di esecuzione, perché il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo esegue il wrapping qualsiasi controllo server inserito in un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> dell'oggetto, in modo che possano partecipare altri controlli server Web Applicazioni di parti. Inoltre dichiarata in quest'area è l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo denominato `TextDisplayWebPart`. Si noti che questo controllo ha un attributo di `ExportMode="All"` viene dichiarato. In questo modo è possibile esportare una. File di descrizione di Web part che contiene i valori delle proprietà del controllo, che possono essere importati da altri utenti per aggiungere il controllo preconfigurato ad altre pagine Web.  
  
> [!NOTE]
>  Per consentire agli utenti di un'applicazione Web part per esportare un file di descrizione per <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, è anche necessario abilitare la funzionalità di esportazione dell'applicazione Web tramite l'aggiunta di un `enableExport="true"` attributo di `<webParts>` elemento (che è un figlio della `<system.web>`elemento) nel file Web. config. L'esportazione è disattivata per impostazione predefinita, se l'esportazione non ancora abilitata per l'applicazione, modificare il file Web. config e attivarla.  
  
 La pagina Web dichiara inoltre l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo e, in essa contenute, una `<zonetemplate>` elemento che contiene un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. L'utente utilizzerà questo controllo in fase di esecuzione per importare il. File di descrizione delle Web part per l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo.  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogzonevb.aspx#2)]  
  
 A questo punto eseguire l'esempio di codice. Caricare la pagina Web in un browser. Il primo passaggio consiste nell'esportare una. File di descrizione delle Web part per il `TextDisplayWebPart` controllo. Fare clic sul menu dei verbi di controllo personalizzato (rappresentato da una freccia verso il basso nella barra del titolo) e fare clic su **esportare**. Seguire le istruzioni per salvare un file di descrizione per il controllo. Aprire il. Descrizione di Web part in un editor di file e modificare il valore del testo di proprietà del titolo. Trovare il `<property>` elemento con l'attributo `name="Title"`e modificare il testo del titolo che è contenuto tra l'apertura e chiusura `<property>` tag. Chiudere la pagina Web e modificare l'origine della pagina in un editor. Eliminare il `<aspSample:TextDisplayWebPart>` controllo elemento di dichiarazione, quindi salvare e chiudere il file.  
  
 Caricare la pagina Web nuovamente in un browser. Il `TextDisplayWebPart` controllo non deve essere visualizzati, perché è stato rimosso. Usare la **modalità di visualizzazione** controllo elenco a discesa e selezionare **catalogo** per passare alla modalità di catalogo. Si noti che l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogZone> verrà visualizzato un controllo, insieme con il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Fare clic sui **Sfoglia** per individuare il. File di descrizione delle Web part che è stato esportato per la `TextDisplayWebPart` controllo. È possibile fare clic **caricare**, selezionare la casella di controllo accanto al controllo importato e fare clic su **Add** per aggiungerlo alla pagina. Fare clic su **catalogo Chiudi** per restituire la pagina sulla normale modalità browse. Il controllo importato dovrebbe essere visualizzato nella pagina e il titolo visualizzato nella barra del titolo del controllo deve essere il testo del titolo è stato aggiunto per il. File di descrizione delle Web part.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">per il funzionamento in un ambiente host. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; valore autorizzazione: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <block subset="none" type="overrides">
      <para>È possibile creare personalizzato <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> classi se si desidera più controllo sul rendering e il comportamento dell'interfaccia utente del catalogo. Se non è necessaria offrire agli utenti del controllo con la possibilità di aggiungere <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controlla in modo dichiarativo, quindi è possibile ereditare direttamente la <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> classe. Se si desidera abilitare i controlli da aggiungere in modo dichiarativo, il sistema più semplice è da cui ereditare il <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> classe, in quanto fornisce il modello di zona essenziale.  Se si eredita dal <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> (classe), è possibile eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /> metodo e utilizzare il metodo per aggiungere personalizzato <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controlli a un <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />, se si desidera maggiore controllo a livello di codice sull'aggiunta di personalizzati <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controlli in base al fuso .</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo implementa un modello di zona, in genere viene utilizzato in modo dichiarativo e raramente è necessario creare una nuova istanza della classe utilizzando il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> costruttore. Tuttavia, se si eredita dal <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe per creare un'area personalizzata, che potrebbe essere opportuno utilizzare il costruttore per inizializzare alcuni valori delle relative proprietà e personalizzarne l'aspetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo a livello di codice del <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> costruttore in un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo. Il costruttore viene utilizzato per inizializzare alcuni valori di proprietà predefiniti per il controllo. Il codice seguente mostra l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe con il costruttore dichiarato nella parte superiore. Per il codice completo e le istruzioni necessarie per configurare ed eseguire l'esempio, vedere la sezione di esempio nel <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Cenni preliminari sulla classe.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="override this.CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZone.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un'istanza di ogni tipo <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> dichiarato nella zona.</summary>
        <returns>Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> con riferimenti a tutti i controlli <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> della zona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> è un metodo critico poiché quando un utente passa da una pagina alla modalità di visualizzazione del catalogo, questo metodo crea tutti i <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli che costituiscono il catalogo Web part.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> metodo il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe fornito con le Web part di set di controlli può creare qualsiasi controllo server che eredita dal <xref:System.Web.UI.WebControls.WebParts.CatalogPart> classe. Pertanto, se si crea un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controllare e dichiararlo in una pagina all'interno di un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> (controllo), questo metodo creerà il controllo quando un utente passa la pagina sulla modalità di catalogo.  
  
 Per vari motivi, tuttavia, è possibile impostare controllo tramite la <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> metodo. È possibile creare solo determinati <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli. Ad esempio, si supponga di crea un set di personalizzata <xref:System.Web.UI.WebControls.WebParts.CatalogPart> i controlli che appartengono a un singolo prodotto o un'organizzazione e hanno un aspetto coerente. Se si desidera che gli sviluppatori di pagina deve essere limitato all'utilizzo di tali controlli personalizzati in un catalogo, quindi è necessario ereditare dal <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe, eseguire l'override di <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> (metodo) e consentire il metodo per creare solo i controlli dello stesso tipo dei controlli personalizzati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il controllo <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> corrente non dispone di alcun ID.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.CatalogZone))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un modello per inserire i controlli figlio in un controllo <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> nel formato di persistenza nella pagina.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.ITemplate" /> che funge da contenitore per i controlli figlio della zona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> proprietà fa riferimento a un modello di tipo <xref:System.Web.UI.ITemplate> che viene utilizzata per contenere il <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli della zona. Il modello di zona consente agli sviluppatori di pagina dichiarare il <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli da usare in un formato di persistenza, anziché dover creare tutti i controlli a livello di codice.  
  
 Funzione di accesso set per il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> chiamate a proprietà di <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> metodo, che impone la raccolta di <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli che vengono dichiarati nel modello di zona della pagina da aggiornare. In questo modo si garantisce che la raccolta di controlli a cui fanno riferimento l'area rimanga aggiornata ogni volta che un utente modifica i controlli dichiarati all'interno del modello nella pagina.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se si desidera creare un oggetto personalizzato <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> l'area, ma si prevede di creare le <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controlli a livello di codice, anziché consentendo agli sviluppatori di pagina dichiarare le variabili, è non necessario di zona il supporto del modello, è possibile ereditare direttamente dal <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> classe.</para>
        </block>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      </Docs>
    </Member>
  </Members>
</Type>