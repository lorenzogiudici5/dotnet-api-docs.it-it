<Type Name="CatalogZone" FullName="System.Web.UI.WebControls.WebParts.CatalogZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b4b9aeb1442e5af53e12483c8242162cd89e43d" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51904568" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogZone extends System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZone" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogZone&#xA;Inherits CatalogZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZone : System::Web::UI::WebControls::WebParts::CatalogZoneBase" />
  <TypeSignature Language="F#" Value="type CatalogZone = class&#xA;    inherit CatalogZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Funge da controllo primario nell'insieme di controlli web part per l'hosting dei controlli <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> in una pagina Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 All'interno del set di controllo Web part, una zona è un'area in una pagina Web contenente i controlli Web part. Viene creata una zona Web part da un controllo zona, ovvero un tipo di <xref:System.Web.UI.WebControls.CompositeControl> progettato per contenere altri controlli. Le funzioni principali di una zona sono a disposizione di controlli in che esso contenute e per fornire una comune interfaccia utente (UI) per i controlli. Per informazioni generali su zone e su come vengono usati nelle applicazioni Web part, vedere la base <xref:System.Web.UI.WebControls.WebParts.WebZone> (classe), e [preliminari di impostato sul controllo Web part](https://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668).  
  
 Una funzionalità chiave dei controlli Web part è che consente agli utenti finali di modificare le pagine Web (o Personalizza) in base alle preferenze e salvare le impostazioni personalizzate per le sessioni future del browser. Un aspetto della modifica delle pagine Web part include la possibilità di aggiungere <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli o altri controlli server a una pagina Web part. Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo fornisce un elenco o un catalogo di controlli che gli utenti possono aggiungere a una pagina.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo è uno dei controlli fondamentali nell'insieme di controlli Web part. Deriva dal <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> classe e la maggior parte del suo comportamento viene ereditato da tale classe. Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe essenzialmente aggiunge alla classe di base un modello di zona, ovvero un'implementazione del <xref:System.Web.UI.ITemplate> interfaccia. Il modello di zona consente agli sviluppatori di aggiungere in modo dichiarativo <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli a una zona in un formato di persistenza di pagina.  
  
> [!IMPORTANT]
>  Oggetto <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zona può contenere solo <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli e viceversa, <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli possono risiedere solo nelle aree da cui deriva il <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> classe, ad esempio <xref:System.Web.UI.WebControls.WebParts.CatalogZone>.  
  
 Oggetto <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo diventa visibile solo quando un utente passa alla modalità di visualizzazione catalogo una pagina Web (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>). Un catalogo può contenere diversi tipi di <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli. Ogni <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controllo è un tipo di contenitore che contiene i controlli server gli utenti possono aggiungere alla pagina. Il <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli variano in base alla provengano dei controlli server che contengono. La tabella seguente riepiloga il <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli forniti con il set di controlli Web part e, per ogni controllo, il tipo del server di controlli che contiene.  
  
|Control|Descrizione|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Mantiene i riferimenti ai controlli che sono stati chiusi in una pagina. Questi controlli possono essere riaperte (aggiunto nuovamente alla pagina) da parte degli utenti.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Contiene riferimenti ai controlli che vengono dichiarati in un catalogo di Web part nel markup di una pagina Web. Questi controlli possono essere aggiunti a una pagina Web da parte degli utenti.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Fornisce l'interfaccia utente per un utente caricare un file di definizione (un file XML con una. Estensione di Web part e un formato specificato che contiene le informazioni sullo stato) per un controllo a un catalogo, in modo che il controllo può essere aggiunto a una pagina Web.|  
  
 Poiché il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe aggiunge solo un modello di zona per il comportamento della relativa classe base, con alcuni membri. Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> costruttore è un costruttore predefinito; in tal modo è possibile inizializzare una nuova istanza del <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe. Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> proprietà ottiene o imposta un riferimento al <xref:System.Web.UI.ITemplate> oggetto che contiene i controlli per la zona. Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> metodo è fondamentale. Viene eseguito l'override del metodo base per creare la raccolta di tutti i <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli contenuti nel modello di zona.  
  
> [!NOTE]
>  I pulsanti di <xref:System.Web.UI.WebControls.WebParts.CatalogZone> dell'interfaccia utente richiede la creazione di script lato client per poter funzionare correttamente. Se lo scripting è disabilitato nel browser, l'utente non sarà in grado di eseguire azioni mediante i <xref:System.Web.UI.WebControls.WebParts.CatalogZone> dell'interfaccia utente.  
  
## <a name="accessibility"></a>Accessibilità  
 Il codice sottoposto a rendering per impostazione predefinita per questo controllo potrebbe non essere conforme agli standard di accessibilità, ad esempio le linee guida con priorità 1 Web Content accessibilità Guidelines 1.0 (WCAG). Per informazioni dettagliate sul supporto di accessibilità per questo controllo, vedere [controlli ASP.NET e l'accessibilità](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 Esempio di codice seguente illustra l'uso di strumenti dichiarativo e programmatico del <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo. L'esempio di codice è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione della pagina Web.  
  
-   Un file con il codice sorgente per una classe personalizzata <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo e un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo che viene importato dal catalogo e aggiunto alla pagina Web.  
  
-   Una pagina Web che consente di dichiarare il controllo utente e l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo.  
  
-   Una spiegazione su come eseguire l'esempio.  
  
 La prima parte di questo esempio di codice è il controllo utente che consente agli utenti di modificare la modalità di visualizzazione in una pagina Web. Per informazioni dettagliate sulle modalità di visualizzazione e una descrizione del codice sorgente in questo controllo, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/displaymodemenucs.ascx#7)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/displaymodemenuvb.ascx#7)]  
  
 La seconda parte dell'esempio di codice contiene il codice per l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogZone> e <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. Il codice per il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo di seguito viene illustrato da cui ereditare il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe e personalizzare le relative proprietà impostando alcune proprietà valori predefiniti nel costruttore. Il codice sorgente viene inoltre illustrato come creare una classe personalizzata <xref:System.Web.UI.WebControls.WebParts.WebPart> classe denominata `TextDisplayWebPart`. Si tratta del controllo associato ai. File di descrizione di Web part che verrà importato come parte di questo esempio di codice. Dopo aver importato il file di descrizione usando il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo della pagina Web, sarà possibile aggiungere il `TextDisplayWebPart` controllo alla pagina, completamente pre-configurata come specificato nel file di descrizione.  
  
 Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Questo esempio di codice Usa la compilazione dinamica, quindi se si desidera eseguire l'esempio in questo modo, assegnare un nome file del codice sorgente e aggiungerlo a una sottocartella App_Code della directory radice dell'applicazione Web. Per una procedura dettagliata che illustra entrambi i metodi per la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 La terza parte dell'esempio di codice è la pagina Web contenente i controlli. Contiene un `Register` direttiva per il controllo utente e l'altro per il file di origine con i controlli personalizzati. Si noti che nella seconda direttiva, non corrisponde all'assembly, poiché l'esempio non usa un assembly, la compilazione dinamica viene utilizzata con il codice sorgente inserito nella sottocartella App_Code. La pagina Web dichiara un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> (controllo), rispettando al relativo elemento figlio `<zonetemplate>` elemento dichiara un <xref:System.Web.UI.WebControls.BulletedList> controllo. Si tratta di un controllo ASP.NET standard, avranno tutte le funzionalità Web part in fase di esecuzione perché il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo esegue il wrapping di un controllo server inserito in un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> dell'oggetto, in modo che possano partecipare ad altri controlli server Web Applicazioni di parti. Inoltre dichiarata in quest'area è l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo denominato `TextDisplayWebPart`. Si noti che questo controllo ha un attributo di `ExportMode="All"` viene dichiarato. In questo modo è possibile esportare una. File di descrizione di Web part che contiene i valori delle proprietà del controllo, che può essere importato da altri utenti per aggiungere il controllo preconfigurato ad altre pagine Web.  
  
> [!NOTE]
>  Per consentire agli utenti di un'applicazione Web part per esportare un file di descrizione per <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, è anche necessario abilitare la funzionalità di esportazione dell'applicazione Web mediante l'aggiunta di un `enableExport="true"` dell'attributo di `<webParts>` elemento (che è un elemento figlio del `<system.web>`elemento) nel file Web. config. L'esportazione è disabilitata per impostazione predefinita, quindi se l'esportazione non è ancora abilitata per l'applicazione, modificare il file Web. config e installarlo ora.  
  
 La pagina Web dichiara anche l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo e, all'interno di esso, un' `<zonetemplate>` elemento contenente un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. L'utente userà questo controllo in fase di esecuzione per importare il. File di descrizione di Web part per l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo.  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogzonevb.aspx#2)]  
  
 Ora eseguire l'esempio di codice. Caricare la pagina Web in un browser. Il primo passaggio consiste nell'esportare una. File di descrizione di Web part per il `TextDisplayWebPart` controllo. Fare clic sul menu dei verbi di controllo personalizzato (rappresentato da una freccia verso il basso nella barra del titolo) e fare clic su **esportare**. Seguire le istruzioni per salvare un file di descrizione per il controllo. Aprire il. Descrizione di Web part in un editor di file e modificare il valore del testo di proprietà del titolo. Trovare il `<property>` elemento che dispone dell'attributo `name="Title"`e modificare il testo del titolo che è contenuto tra l'apertura e chiusura `<property>` tag. Chiudere la pagina Web e modificare l'origine della pagina in un editor. Eliminare il `<aspSample:TextDisplayWebPart>` controllo elemento di dichiarazione, quindi salvare e chiudere il file.  
  
 Caricare la pagina Web nuovamente in un browser. Il `TextDisplayWebPart` controllo non deve essere visualizzati, perché è stato rimosso. Usare la **modalità di visualizzazione** controllo elenco a discesa e selezionare **catalogo** per passare alla modalità di catalogo. Si noti che l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo viene visualizzato, insieme con il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Fare clic sui **esplorare** per individuare il. File di descrizione WebPart precedentemente esportato per la `TextDisplayWebPart` controllo. È possibile fare clic su **caricare**, selezionare la casella di controllo accanto al controllo importato e fare clic su **Add** per aggiungerlo alla pagina. Fare clic su **catalogo Chiudi** per restituire la pagina sulla normale modalità browse. Il controllo importato verranno visualizzati nella pagina e il titolo visualizzato nella barra del titolo del controllo deve essere il testo del titolo è stato aggiunto ai. File di descrizione di Web part.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">per il funzionamento in un ambiente host. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; valore autorizzazione: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <block subset="none" type="overrides">
      <para>È possibile creare personalizzato <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> classi se si desidera maggiore controllo sul rendering e il comportamento dell'interfaccia utente del catalogo. Se non è necessario fornire agli utenti del controllo con la possibilità di aggiungere <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controlla in modo dichiarativo, quindi è possibile ereditare direttamente dal <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> classe. Se si desidera abilitare i controlli da aggiungere in modo dichiarativo, il sistema più semplice consiste nell'ereditare dal <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> classe, poiché offre il modello di zona essenziali.  
  
Se si eredita dal <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> (classe), è possibile eseguire l'override la <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /> metodo e usare il metodo per aggiungere personalizzato <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controlli a un <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />, se si desidera maggiore controllo programmatico su aggiunta personalizzato <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controlli in base al fuso .</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668">Panoramica del Set controllo Web part</related>
    <related type="Article" href="https://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320">Personalizzazione di Web part</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché il <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo implementa un modello di zona, in genere viene utilizzato in modo dichiarativo e raramente sarà necessario creare una nuova istanza della classe utilizzando il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> costruttore. Tuttavia, se si eredita dal <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe per creare una zona personalizzata, è possibile utilizzare il costruttore per inizializzare alcuni dei valori delle proprietà e personalizzare l'aspetto del controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo a livello di codice del <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> costruttore in una classe personalizzata <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo. Il costruttore viene utilizzato per inizializzare alcuni valori di proprietà predefiniti per il controllo. Il codice seguente mostra l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe con costruttore dichiarato nella parte superiore. Per il codice completo e le istruzioni necessarie per configurare ed eseguire l'esempio, vedere la sezione di esempio nel <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Cenni preliminari sulla classe.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="override this.CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZone.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un'istanza di ogni tipo <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> dichiarato nella zona.</summary>
        <returns>Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> con riferimenti a tutti i controlli <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> della zona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> è un metodo critico perché quando un utente passa una pagina alla modalità di visualizzazione del catalogo, questo metodo crea tutte le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli che costituiscono il catalogo di Web part.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> metodo nella <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe fornita con le Web part di set di controlli è possibile creare qualsiasi controllo server da cui eredita il <xref:System.Web.UI.WebControls.WebParts.CatalogPart> classe. Pertanto, se si crea un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controllano e dichiararla in una pagina all'interno di un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo, questo metodo creerà il controllo quando un utente passa la pagina modalità di catalogo.  
  
 Per vari motivi, tuttavia, è possibile impostare controllo tramite la <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> (metodo). È possibile creare solo determinate <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli. Ad esempio, si supponga di crea un set di custom <xref:System.Web.UI.WebControls.WebParts.CatalogPart> i controlli che hanno un aspetto coerente e appartengono a un singolo prodotto o un'organizzazione. Se si desidera che gli sviluppatori di pagine deve essere limitato all'uso di tali controlli personalizzati in un catalogo, quindi è necessario ereditare dal <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe, eseguire l'override di <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> (metodo) e consentire che il metodo creare solo i controlli dello stesso tipo dei controlli personalizzati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il controllo <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> corrente non dispone di alcun ID.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.CatalogZone))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un modello per inserire i controlli figlio in un controllo <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> nel formato di persistenza nella pagina.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.ITemplate" /> che funge da contenitore per i controlli figlio della zona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> proprietà fa riferimento a un modello di tipo <xref:System.Web.UI.ITemplate> utilizzato per contenere il <xref:System.Web.UI.WebControls.WebParts.CatalogPart> i controlli della zona. Il modello di zona consente agli sviluppatori di pagina dichiarare il <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli da usare in un formato di persistenza, anziché dover creare tutti i controlli a livello di codice.  
  
 La funzione di accesso set per il <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> chiamate proprietà il <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> metodo, che impone la raccolta di <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlli dichiarati nel modello di zona nella pagina da aggiornare. Ciò garantisce che la raccolta di controlli fa riferimento l'area rimanga aggiornata ogni volta che un utente modifica i controlli dichiarati all'interno del modello nella pagina.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se si desidera creare una classe personalizzata <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> zona, ma si prevede di creare le <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controlla a livello di programmazione, anziché consentendo agli sviluppatori di pagina di dichiarare le variabili, è non necessario suddividere in zone il supporto del modello, è possibile ereditare direttamente dal <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> classe.</para>
        </block>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
  </Members>
</Type>