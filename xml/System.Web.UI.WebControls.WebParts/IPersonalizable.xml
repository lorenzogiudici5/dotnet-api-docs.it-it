<Type Name="IPersonalizable" FullName="System.Web.UI.WebControls.WebParts.IPersonalizable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f16c2b1e76c9b648c236812e7491d0fd55179e0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37595518" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersonalizable" />
  <TypeSignature Language="F#" Value="type IPersonalizable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce funzionalità di gestione aggiuntive per l'applicazione e l'estrazione dello stato di personalizzazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oltre a usare il `Personalizable` attributo nelle proprietà del controllo, è possibile anche implementare un controllo <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> per funzionalità di gestione aggiuntive per l'applicazione e l'estrazione dello stato di personalizzazione. Ad esempio, i controlli che devono gestire le informazioni sullo stato privato devono implementare questa interfaccia. I controlli che accedono ai dati personalizzati tramite meccanismi complessi, ad esempio soluzioni di cache personalizzata, il salvataggio permanente dei dati per sistemi mainframe o i servizi Web XML devono inoltre implementare questa interfaccia.  
  
> [!IMPORTANT]
>  Non aggiungere i tipi di base le classi definite nella directory App_Code e quindi affidarsi al meccanismo di serializzazione binaria predefinita. Elementi basati su App_Code non sono serializzabili in modo coerente binario dovuto al fatto che possono avere i nomi degli assembly di cui è stati modificati in momenti casuali nel tempo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interfaccia. L'esempio è costituito da una pagina aspx che fa riferimento a un controllo Web Part denominato `UrlListWebPart`. Il codice seguente è il file con estensione aspx per l'esempio.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 Il codice seguente è l'origine per l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Questo file deve essere inserito nella directory App_Code.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 Caricare la pagina in un browser. Digitare un nome per rappresentare un URL, quindi aggiungere un URL effettivo che inizia con `http://`, fare clic sui **Add** pulsante per aggiungere l'URL.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se i dati personalizzati gestiti da un controllo sono stati modificati.</summary>
        <value>
          <see langword="true" /> se i dati personalizzati gestiti con l'interfaccia <see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" /> sono stati modificati; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando i dati gestiti da un controllo sono stato modificato, il controllo è considerato "dirty". Un controllo deve restituire `true` se i dati personalizzati che gestisce tramite il <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interfaccia è stato modificato. Se un controllo viene restituito `true` da di questa proprietà, il controllo <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> implementazione del metodo dell'interfaccia viene chiamato durante l'estrazione del valore proprietà.  
  
> [!NOTE]
>  Questa proprietà è selezionata automaticamente dall'infrastruttura di personalizzazione durante le ultime fasi di elaborazione di una richiesta POST. Tuttavia, per le richieste GET, il valore restituito dal <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> proprietà non è selezionata. Dispone di un altro evento che ha causato il controllo essere considerato "dirty" per qualsiasi stato di controllo, non solo i dati gestiti da <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>: deve essere salvato. Se un controllo può come "modificati" durante una richiesta GET o se l'infrastruttura di personalizzazione in alcune condizioni limite molto specifici prende in considerazione un controllo "dirty" durante una richiesta GET, quindi <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> sarà sempre chiamato.  
  
 Un controllo può fare riferimento a esso associata <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo e verificare il <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> proprietà per determinare l'ambito corrente. Lo stato "dirty" di dati personalizzati di un controllo deve essere appropriato per l'ambito corrente.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> proprietà. La prima parte dell'esempio è la pagina Web che ospita un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 La seconda parte dell'esempio è il codice per l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo denominato `UrlListWebPart`. Questo file deve essere inserito nella directory App_Code per eseguire l'esempio. Si noti che il codice sorgente implementa il <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> proprietà.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 Caricare la pagina in un browser. Digitare un nome per rappresentare un URL, quindi aggiungere un URL effettivo che inizia con `http://`, fare clic sui **Add** pulsante per aggiungere l'URL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Load state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> che contiene dati personalizzati nell'ambito caricati dall'archivio dati sottostante.</param>
        <summary>Carica i dati personalizzati in un controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato su un controllo per consentire il caricamento di dati personalizzati in se stessa. Può inoltre restituire un valore che indica se uno stato del controllo personalizzato deve essere riscritte nell'archivio dati sottostante, indipendentemente dal fatto che sono stato modificato tutti gli altri dati di personalizzazione della pagina. Un controllo può impostare la propria proprietà personalizzate e svolgere aggiuntive per la logica interna in base ai valori contenuti nel dizionario di personalizzazione. Questo metodo viene chiamato dal controllo Web part impostato durante l'applicazione i dati di personalizzazione a un controllo.  
  
 È anche necessario essere consapevoli del comportamento di merge <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-con ambito rispetto a <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>-con ambito proprietà contenute nel <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> oggetto. Il `state` parametro contiene una rappresentazione di dati personalizzati che è stati caricati dall'archivio dati sottostante. Nelle <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> definire l'ambito, tutti i valori che sono state aggiunte in precedenza quando la pagina stessa era in <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> ambito sarà disponibile. Nelle <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> definire l'ambito, se un valore associato <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> ambito di personalizzazione è stato aggiunto quando la pagina era in un valore <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> ambito e un valore diverso quando la pagina era in <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> definire l'ambito, quindi sarebbe l'infrastruttura di personalizzazione includere solo il <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-valore nell'ambito (anziché il <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> valore dell'ambito) all'interno di `state` parametro.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione del <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> metodo in un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Per il codice completo necessario per eseguire questo esempio, vedere la sezione di esempio nel <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> Cenni preliminari sulla classe.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Save state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> che contiene dati personalizzati nell'ambito caricati dall'archivio dati sottostante.</param>
        <summary>Salva le proprietà personalizzate e le informazioni sullo stato interno nell'oggetto <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> del controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un controllo server può archiviare le proprietà personalizzate e proprie informazioni sullo stato interno di <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> specificato nella `state` parametro. Le informazioni vengono archiviate come una serie di coppie nome/valore. È responsabilità del controllo da usare per coppie nome/valore che può riconoscere durante le chiamate successive eseguite al controllo tramite la <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> (metodo).  
  
 Un controllo può fare riferimento a esso associata <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo e verificare il <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> oggetto per determinare l'ambito corrente. Informazioni sullo stato personalizzate devono essere appropriate per l'ambito corrente. Si noti che ogni <xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry> valore aggiunto per il <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> oggetto deve essere associato al valore di ambito appropriato, poiché l'infrastruttura di personalizzazione dipende da ciò quando si uniscono <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> e <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-con ambito di dati personalizzati prima di passarlo al <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> (metodo).  
  
 Quando si usa l'implementazione di ASP.NET standard delle Web part, i controlli devono assicurarsi che gli oggetti inseriti nel dizionario di stato possono essere serializzati da ASP.NET <xref:System.Web.UI.ObjectStateFormatter> classe. In pratica, ciò significa che i seguenti:  
  
-   I tipi primitivi di .NET Framework, stringhe e orientate alle raccolte di tipi .NET Framework, ad esempio matrici, elenchi di matrici, le tabelle hash e dizionari ibridi, vengono automaticamente serializzabili.  
  
-   Tipi personalizzati che forniscono le proprie <xref:System.ComponentModel.TypeConverter> classi in grado di serializzare e deserializzare da stringhe vengono considerate come serializzabile.  
  
-   Tipi personalizzati che possono essere serializzati dal <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> classe sono considerati serializzabile.  
  
> [!IMPORTANT]
>  Non aggiungere i tipi di base le classi definite nella directory App_Code e quindi affidarsi al meccanismo di serializzazione binaria predefinita. Elementi basati su App_Code non sono serializzabili in modo coerente binario dovuto al fatto che possono avere i nomi degli assembly di cui è stati modificati in momenti casuali nel tempo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'implementazione di <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> metodo in un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Per il codice completo necessario per eseguire questo esempio, vedere la sezione di esempio nel <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> Cenni preliminari sulla classe.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>