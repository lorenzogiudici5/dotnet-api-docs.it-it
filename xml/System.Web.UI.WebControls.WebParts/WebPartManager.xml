<Type Name="WebPartManager" FullName="System.Web.UI.WebControls.WebParts.WebPartManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8ac8212114f4727e8e0670a820a090d132b01b3" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52245769" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartManager extends System.Web.UI.Control implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartManager&#xA;Inherits Control&#xA;Implements INamingContainer, IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartManager : System::Web::UI::Control, System::Web::UI::INamingContainer, System::Web::UI::WebControls::WebParts::IPersonalizable" />
  <TypeSignature Language="F#" Value="type WebPartManager = class&#xA;    inherit Control&#xA;    interface INamingContainer&#xA;    interface IPersonalizable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IPersonalizable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ViewStateModeById</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Funge da classe centrale dell'insieme di controlli web part per la gestione di tutti i controlli web part, le funzionalità e gli eventi che si verificano in una pagina Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo agisce come l'hub o centro di controllo di un'applicazione Web part. Deve esistere un unico -<xref:System.Web.UI.WebControls.WebParts.WebPartManager> istanza del controllo in ogni pagina che usa i controlli Web part. Come per molti aspetti delle applicazioni, Web part di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo funziona solo con gli utenti autenticati. Inoltre, la relativa funzionalità funziona quasi interamente con i controlli server che risiedono in aree di Web part da cui ereditare il <xref:System.Web.UI.WebControls.WebParts.WebZone> classe. I controlli server che si trovano in una pagina di fuori di queste aree possono avere minimo della funzionalità Web part o l'interazione con il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo.  
  
 Come hub per la funzionalità di Web part in una pagina, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo esegue i tipi di attività descritto nella tabella seguente.  
  
|Categoria attività|Funzionamento del controllo|  
|-------------------|---------------------------|  
|I controlli Web part di rilevamento|Tiene traccia di molti tipi diversi di controlli in una pagina che forniscono funzionalità di Web part, tra cui <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, le connessioni, le zone e ad altri utenti.|  
|Aggiunta e rimozione di controlli Web part|Fornisce i metodi per l'aggiunta, eliminazione e la chiusura <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli in una pagina.|  
|Amministrazione delle connessioni|Consente di creare connessioni tra i controlli e consente di monitorare le connessioni, nonché le procedure di aggiunta e la loro rimozione.|  
|Personalizzazione dei controlli e le pagine|Consente agli utenti di spostare i controlli in posizioni diverse in una pagina e avvia le viste in cui gli utenti possono modificare l'aspetto, proprietà e il comportamento dei controlli. Mantiene le impostazioni di personalizzazione specifiche dell'utente in ogni pagina.|  
|Disattivazione/attivazione tra diverse visualizzazioni di pagina|Consente di alternare diverse viste specializzate della pagina, in modo che gli utenti possono eseguire determinate attività, ad esempio la modifica di layout di pagina o i controlli di modifica.|  
|Generazione di eventi del ciclo di vita Web part|Definisce generi e consente agli sviluppatori di gestire gli eventi del ciclo di vita dei controlli Web part, ad esempio quando i controlli sono da aggiungere, spostare, connesse o eliminato.|  
|Abilitazione di importazione ed esportazione dei controlli|Consente di esportare i flussi XML che contengono lo stato delle proprietà di <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli e consente agli utenti di importare i file per motivi di praticità nella personalizzazione di controlli complessi in altre pagine o siti.|  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe ha un ampio set di proprietà. Coerente con il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> ruolo di altri controlli di rilevamento, ha un numero di proprietà che fanno riferimento a raccolte di controlli Web part o altri oggetti di Web part speciali. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>, e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> proprietà vengono usate da tutte le raccolte di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo per il rilevamento e altro attività di gestione.  
  
 Un altro gruppo di proprietà contiene avvisi personalizzabili che si applicano in determinati scenari che si verificano in un'applicazione Web part. Sono inclusi i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>e il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe esegue l'override di alcune delle proprietà ereditate, usati da molti controlli server Web. Sono inclusi i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>, e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> proprietà.  
  
 Infine, vi è un gruppo di proprietà utile per accedere allo stato corrente dell'applicazione. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> proprietà indica la modalità di visualizzazione corrente che è in una pagina. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> proprietà indica se un controllo è autorizzato a eseguire il rendering lato client script, che è pertinente in situazioni in cui gli utenti si servono di browser con funzionalità diverse o disporre delle scripting disattivata. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> proprietà è utile per fare riferimento a una classe di utilità che contiene le chiamate a un numero di metodi Web part che vengono utilizzati per i casi di estendibilità. Nascondendo le chiamate a questi metodi in una classe separata (il <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> classe), il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> API della classe è stata semplificata. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> proprietà offre l'accesso agli oggetti di personalizzazione che archiviano le impostazioni di personalizzazione degli utenti e rendere persistenti i dati in un archivio permanente. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> proprietà indica quale <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo in una pagina è attualmente selezionato dall'utente o l'applicazione. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> proprietà indica se i dati di personalizzazione personalizzati su un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo è stato modificato.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo contiene cinque modalità di visualizzazione predefinite o viste di una pagina Web. Gli sviluppatori possono estendere questa funzionalità, la creazione di modalità di visualizzazione personalizzato estendendo i tipi, ad esempio la <xref:System.Web.UI.WebControls.WebParts.WebZone> classe o il <xref:System.Web.UI.WebControls.WebParts.ToolZone> classe. Gli utenti possono passare una pagina in diverse modalità di visualizzazione, a condizione che il tipo corretto di controlli che corrispondono a una determinata modalità di visualizzazione sono presenti in una pagina.  
  
> [!NOTE]
>  È possibile estendere questa funzionalità in modo che gli utenti possono passare in una modalità di visualizzazione personalizzato senza la necessità di una zona corrispondente nella pagina. Tuttavia, il comportamento predefinito è che le modalità di visualizzazione corrispondono alle zone.  
  
 Le modalità di visualizzazione standard sono rappresentate dai campi pubblici nel <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe. La tabella seguente riepiloga i campi e le modalità di visualizzazione che si riferiscono. Modalità di visualizzazione corrente di una pagina, come indicato in precedenza, è sempre fatto riferimento nel <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> impostato nella proprietà e il set delle modalità di visualizzazione che è possibile utilizzare in una pagina particolare, in base al tipo di aree che sono presenti nella pagina di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> proprietà.  
  
|Campo|Visualizzare i dettagli di modalità|  
|-----------|--------------------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>|La visualizzazione di utente normale di una pagina Web. il valore predefinito e più comuni modalità di visualizzazione.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>|La visualizzazione in cui gli utenti possono riordinare o eliminare i controlli per modificare il layout di pagina.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>|La vista in cui un'interfaccia utente di modifica (UI) diventa visibile; gli utenti possono modificare l'aspetto, proprietà e comportamento dei controlli che sono visibili nella modalità di visualizzazione normale.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>|La vista in cui un catalogo dell'interfaccia utente diventa visibile; gli utenti possono aggiungere controlli a una pagina da cataloghi dei controlli disponibili.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>|La vista in cui una connessione dell'interfaccia utente diventa visibile; gli utenti possono connettersi, gestire o interrompere le connessioni tra i controlli.|  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo contiene inoltre un numero di eventi che sono essenziali per il ciclo di vita di pagine Web part e controlli. Questi eventi forniscono un controllo a livello di codice preciso il comportamento dei controlli Web part. La maggior parte dei metodi riguardano direttamente <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli (o altri controlli server o utente che vengono inseriti nella <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone in modo che funzionano come <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli). Tuttavia, alcuni eventi relativi allo stato della pagina o le connessioni nella pagina. Nella tabella seguente elenca gli eventi disponibili e vengono riepilogati gli scopi.  
  
> [!NOTE]
>  In tutti i casi nella tabella seguente, la parola "control" fa riferimento a un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo o qualsiasi controllo server che si trova in una zona e viene eseguito il wrapping con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> oggetto in fase di esecuzione.  
  
|event|Descrizione|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>|Si verifica poco prima che un controllo viene aggiunto a una pagina per verificare che sia autorizzato.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>|Si verifica dopo che sono state attivate tutte le connessioni in una pagina.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>|Si verifica poco prima del processo di attivazione di tutte le connessioni in una pagina.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>|Si verifica dopo che è cambiata la modalità di visualizzazione corrente di una pagina.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>|Si verifica poco prima del processo di modifica delle modalità di visualizzazione della pagina.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>|Si verifica dopo la selezione di un controllo è stata annullata.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>|Si verifica poco prima del processo di annullamento della selezione di un controllo.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>|Si verifica dopo l'aggiunta di un controllo a una zona.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>|Si verifica poco prima del processo di aggiunta di un controllo a una zona.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>|Si verifica dopo che un controllo è stata chiusa (viene rimossa da una pagina).|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>|Si verifica poco prima della chiusura di un controllo del processo.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>|Si verifica dopo che un'istanza di un controllo dinamico (uno che è stato creato a livello di codice o aggiunti da un catalogo) è stata eliminata definitivamente.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>|Si verifica poco prima del processo di eliminazione di un controllo dinamico.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>|Si verifica dopo che un controllo è stato spostato all'interno dell'area o in un'altra area.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>|Si verifica poco prima del processo di spostamento di un controllo.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>|Si verifica dopo due controlli selezionati per la partecipazione in una connessione stabilita la connessione.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>|Si verifica poco prima del processo di connessione di due controlli.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>|Si verifica dopo due controlli connessi che sono state disconnesse.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>|Si verifica subito prima del processo di disconnessione due controlli.|  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo dispone di numerosi metodi per la gestione delle pagine Web part. Un ampio set di metodi, non elencati in questo caso, sono metodi i cui nomi assumono la forma di accensione*NomeEvento*. Questi metodi in genere generano gli eventi associati e fornire l'evento con un gestore di tipo <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>. La maggior parte di questi metodi può essere sottoposto a override dagli sviluppatori che ereditano dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe. Inoltre, gli sviluppatori di pagina possono fornire gestori personalizzati per gli eventi associati a questi metodi. Ad esempio, nel caso del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> evento, lo sviluppatore della pagina è stato possibile aggiungere un' `OnWebPartAdded` dell'attributo di `<asp:webpartmanager>` elemento nel markup di una pagina Web e assegnare quindi un metodo personalizzato assegnare un nome per l'attributo per la gestione personalizzata per l'evento. L'attributo corrisponde alla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> metodo e questo modello di base della gestione degli eventi funziona per la maggior parte degli eventi di Web part e i relativi metodi associati.  
  
 Inoltre, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo ha particolare, i metodi per l'attività di gestione <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli (e i controlli server o utente usati come <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli). Questi metodi includono <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>.  
  
 Un altro set di metodi è specializzato per le connessioni. Questo include, ad esempio i metodi <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.  
  
 Infine, alcune <xref:System.Web.UI.WebControls.WebParts.WebPartManager> metodi riguardano la funzionalità di personalizzazione. Sono incluse <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.  
  
 Per altre informazioni su altri <xref:System.Web.UI.WebControls.WebParts.WebPartManager> metodi che sono accessibili tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> proprietà, vedere la documentazione per il <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo dichiarativo e a livello di codice del <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo.  
  
 L'esempio di codice è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione in una pagina Web part.  
  
-   Una pagina Web contenente due custom <xref:System.Web.UI.WebControls.WebParts.WebPart> i controlli che possono essere connesse, e un `<asp:webpartmanager>` elemento.  
  
-   Un file di codice sorgente che contiene due personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli e un'interfaccia personalizzata.  
  
-   Spiegazione del funzionamento dell'esempio in un browser.  
  
 Il controllo utente dispone di un controllo elenco a discesa elenco che mostra le modalità di visualizzazione possibili in una pagina, in base ai controlli Web part presenti nella pagina. Nella pagina Web per questo esempio di codice, il controllo utente viene dichiarato immediatamente dopo il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> elemento nel markup della pagina ed è presente un `Register` direttiva nella parte superiore della pagina Web per registrare il controllo. Per informazioni dettagliate sulle modalità di visualizzazione e una descrizione del codice sorgente in questo controllo, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/DisplayModeMenuVB.ascx#6)]  
  
 Il markup dichiarativo per la pagina Web contiene `Register` direttive per il controllo utente e i controlli personalizzati. È presente un' `<asp:webpartmanager>` elemento, un `<asp:webpartzone>` elemento per contenere i controlli personalizzati e un `<asp:connectionszone>` elemento. La pagina contiene anche codice inline che gestisce gli eventi correlati alla connessione per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllare; è possibile visualizzare l'effetto di questo codice come si connettono o disconnettono controlli.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 La terza parte dell'esempio è il codice sorgente per i controlli. Si noti che sussiste un'interfaccia denominata `IZipCode`, e questa interfaccia viene implementata nel `ZipCodeWebPart` classe. Questa classe contiene un metodo di callback speciale denominato `ProvideIZipCode` che funge da provider. L'altro tipo, denominato `WeatherWebPart`, viene anche implementata con un metodo speciale denominato `GetIZipCode`, che consente il controllo di agire come un consumer di altro controllo.  
  
 Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Questo esempio di codice presuppone che sia stato compilato l'origine in un assembly e il `Register` direttiva nella pagina Web fa riferimento il nome dell'assembly. Per una procedura dettagliata che illustra come eseguire la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/ZipCodeComponent.vb#2)]  
  
 Una volta caricata la pagina Web in un browser, fare clic sui **modalità di visualizzazione** controllo elenco a discesa e selezionare **Connect** per passare alla pagina in modalità di connessione. La connessione utilizza la modalità di `<asp:connectionszone>` elemento che consentono di creare connessioni tra i controlli. Nella modalità di connessione, fare clic sulla freccia verso il basso nella barra del titolo del **CAP** per attivare il menu dei verbi di controllo e quindi fare clic su **Connect**. Quando la connessione dell'interfaccia utente viene visualizzato, scegliere il **creare una connessione a un Consumer** collegamento. Viene visualizzata una cella con un controllo elenco a discesa. Selezionare **controllo meteo** nell'elenco a discesa elenco, quindi fare clic su **Connect** per completare la connessione dei due controlli. Fare clic su **Close**e quindi utilizzare il **modalità di visualizzazione** elenco a discesa per restituire la pagina sulla normale modalità browse. È possibile immettere un codice postale, e il controllo consumer verrà aggiornato con il valore che immesso. Poiché il `ZipCode` proprietà è stata contrassegnata con il `Personalizable` attributo nel codice sorgente, il valore della proprietà verrà mantenuta tra le sessioni del browser, salvando in tal modo il valore immesso dall'utente. Un controllo consumer più sofisticato può prelevare le informazioni sul codice postale, cercare le informazioni sul meteo in base al codice e visualizzarlo a un utente.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Il <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> controllo è progettato per essere esteso. Poiché si tratta pertanto central per le applicazioni Web part, quando si desidera estendere un tipo specifico o di controllo nell'insieme di controlli Web part, in molti casi è necessario anche estendere il <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe, poiché è probabile che alcune proprietà o metodo che è necessario per rendere  il tipo personalizzato funziona nel contesto di un'applicazione Web part. Le Web part fare riferimento alla documentazione (vedere <see cref="N:System.Web.UI.WebControls.WebParts" />), quando si spiega come estendere una Web part digita, spesso menzioni quali azioni devono essere eseguite per estendere il <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe anche o viene descritto come estenderla mediante un esempio di codice.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.%23ctor%2A> costruttore inizializza diverse variabili importanti utilizzate dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Un'assegnazione che influisce direttamente sulla tutte le pagine Web part è il fatto che la modalità di visualizzazione pagina predefinito viene impostata su modalità browse (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateConnections">
      <MemberSignature Language="C#" Value="protected virtual void ActivateConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ActivateConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ActivateConnections ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ActivateConnections();" />
      <MemberSignature Language="F#" Value="abstract member ActivateConnections : unit -&gt; unit&#xA;override this.ActivateConnections : unit -&gt; unit" Usage="webPartManager.ActivateConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rende attive tutte le connessioni attualmente inattive in una pagina Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> metodo viene chiamato su ogni richiesta a una pagina per attivare le connessioni esistenti tra <xref:System.Web.UI.WebControls.WebParts.WebPart> e altri controlli server che risiedono <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone. In alcuni casi, ad esempio se si verifica un conflitto nelle connessioni in corso l'attivazione, questo metodo, a sua volta chiama il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metodo a terminare la connessione problematica. Durante il processo di disconnessione di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> viene generato l'evento. In genere gli sviluppatori possono annullare questo evento, ma nel caso in cui questo è un conflitto tra le connessioni che non può essere annullata, in quanto il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo deve risolvere il conflitto per completare il processo di attivazione delle connessioni. Per informazioni dettagliate, vedere <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPart AddWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPart ^ AddWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberSignature Language="F#" Value="member this.AddWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.AddWebPart (webPart, zone, zoneIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (oppure controllo server o controllo utente) da aggiungere a una pagina Web o da aprire in una pagina.</param>
        <param name="zone">Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> a cui viene aggiunto <paramref name="webPart" />.</param>
        <param name="zoneIndex">Integer che rappresenta la posizione ordinale occupata dall'oggetto <paramref name="webPart" /> in <paramref name="zone" />, relativa ad altri controlli presenti in <paramref name="zone" />.</param>
        <summary>Fornisce il metodo standard a livello di codice per aggiungere controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> a una pagina Web.</summary>
        <returns>Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> aggiunto alla pagina.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> metodo viene utilizzato sia per aggiungere dinamici nuovi <xref:System.Web.UI.WebControls.WebParts.WebPart> controlla a una pagina e a riaprire i controlli statici o dinamici che in precedenza sono stati chiusi in una pagina. Quando il metodo viene chiamato per aggiungere un nuovo controllo, viene effettivamente creata una copia del controllo a cui fa riferimento il `webPart` parametro. Viene generato un nuovo ID per la copia del controllo, in modo che gli sviluppatori devono fare riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo restituito dal metodo per ottenere il nuovo valore di ID. Quando il metodo viene chiamato per riaprire un controllo chiuso in precedenza, restituisce un riferimento diretto al controllo a cui fanno riferimento le `webPart` parametro.  
  
> [!IMPORTANT]
>  È consigliabile usare sempre il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> (metodo), anziché il <xref:System.Web.UI.ControlCollection.Add%2A> dell'insieme di controlli a cui fanno riferimento le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=nameWithType> proprietà, per aggiungere <xref:System.Web.UI.WebControls.WebParts.WebPart> controlla a livello di codice alla pagina, perché l'uso il <xref:System.Web.UI.ControlCollection.Add%2A> metodo genera un'eccezione. Per aggiungere un controllo che non è un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo (in altre parole, un controllo server che verrà eseguito il wrapping con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controllo in fase di esecuzione), è necessario chiamare prima il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metodo per creare il controllo e quindi chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> metodo da aggiungere il controllo. Per una dimostrazione di questo approccio, vedere la sezione esempio.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> metodo per aggiungere un controllo server a livello di codice a una pagina. Il markup della pagina contiene un oggetto vuoto `<asp:webpartzone>` elemento e un `<asp:webpartmanager>` elemento. La prima volta il **aggiungere calendario** viene fatto clic sul pulsante, il codice nel caso in cui gestore crea un <xref:System.Web.UI.WebControls.Calendar> controllo e lo aggiunge a una zona di un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> dell'oggetto, chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> (metodo).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> è <see langword="null" />.  
  
\- oppure - 
 <paramref name="zone" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="zone" /> non è registrato nell'insieme delle aree del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.  
  
\- oppure - 
 <paramref name="webPart" /> è già in <paramref name="zone" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore di <paramref name="zoneIndex" /> è minore di zero.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeWebPart">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthorizeWebPart As WebPartAuthorizationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventHandler ^ AuthorizeWebPart;" />
      <MemberSignature Language="F#" Value="member this.AuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler " Usage="member this.AuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene chiamato il metodo <see cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" /> per determinare se è possibile aggiungere a una pagina un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o un controllo server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> evento si verifica ogni volta che un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo viene aggiunto a una pagina. Esistono diversi scenari comuni in cui un controllo può essere aggiunto a una pagina. Per una descrizione completa di questi elementi, vedere la sezione Osservazioni per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> (metodo). Quando viene aggiunto un controllo, deve essere controllato per verificare se il <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> proprietà è stata impostata e, in questo caso, se il controllo è autorizzato a essere aggiunto alla pagina.  
  
 Gli sviluppatori possono creare i gestori eventi per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> evento, per fornire un filtro per i controlli. Se un controllo <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> valore della proprietà non soddisfa i criteri nel codice del gestore eventi, il controllo non viene aggiunto alla pagina.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare un gestore di evento personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> evento, che sostituisce automaticamente il valore predefinito <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> (metodo).  
  
 Il codice nel `mgr1_AuthorizeWebPart` metodo controlla se i controlli nella pagina hanno le rispettive <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> i valori delle proprietà è impostata su `user` e, in caso affermativo, restituisce `true`, che significa che saranno autorizzati e aggiunto alla pagina. Ciò presuppone che l'approccio predefinito consiste nel consentire agli utenti di visualizzare i controlli con una pagina nell'ambito di personalizzazione utente. Si noti, tuttavia, che nell'esempio uno dei controlli ha relativi <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> valore della proprietà è impostata su `admin`. Gli sviluppatori possono posizionare questo filtro su un controllo specializzato che è stato progettato per visualizzare solo gli utenti amministratori. Questo controllo avrà esito negativo durante il controllo dell'autorizzazione di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> evento e non verranno visualizzati. Si noti che i controlli che non dispongono di proprietà impostate siano visualizzati anche; Questi sono considerati non a far parte di uno scenario di filtro perché la loro <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> non vengono impostate proprietà.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="AvailableTransformers">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableTransformers As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ AvailableTransformers { System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableTransformers : System.Web.UI.WebControls.WebParts.TransformerTypeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di oggetti <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> disponibili per l'utilizzo nella creazione di connessioni Web part tra controlli server.</summary>
        <value>Classe <see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" /> che contiene un gruppo di oggetti <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà Usa il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> metodo per creare la raccolta. Per impostazione predefinita, legge i trasformatori dei disponibili dal file di configurazione dell'applicazione.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">Panoramica delle connessioni Web part</related>
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartConnecting(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartConnecting(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member BeginWebPartConnecting : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.BeginWebPartConnecting : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.BeginWebPartConnecting webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo per cui viene formata la connessione.</param>
        <summary>Avvia il processo di connessione di due controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> metodo esistente in modo che il processo di formare connessioni tra i controlli possa essere eseguito in più fasi distinte, fornendo agli sviluppatori un maggiore controllo sul processo di connessione. Il metodo esegue una serie di verifiche iniziali per garantire che `webPart` è in uno stato in cui legittimamente può essere creata una connessione. Se `webPart` passa tutti i controlli, quindi di impostarlo come il controllo attualmente selezionato (vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> proprietà), e il processo che esegue la connessione può continuare.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La modalità di visualizzazione corrente nella pagina non è <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="webPart" /> è chiuso.  
  
\- oppure - 
 <paramref name="webPart" /> non fa parte dell'insieme <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />.  
  
-oppure- 
 <paramref name="webPart" /> è uguale al controllo <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />.</exception>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori che desiderano estendere il <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> controllo potrebbe essere necessario eseguire l'override di questo metodo in una classe derivata. Un approccio potrebbe consistere per chiamare il metodo di base e quindi aggiungere alcune per la gestione personalizzata; In alternativa, è possibile personalizzare completamente il processo di avvio di una connessione tra controlli. Ad esempio, è possibile verificare che alcuni dati siano disponibili prima di creare la connessione.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartEditing(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartEditing(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member BeginWebPartEditing : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.BeginWebPartEditing : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.BeginWebPartEditing webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo da modificare.</param>
        <summary>Avvia il processo di modifica di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> metodo esistente in modo che il processo di modifica dei controlli può essere eseguito in fasi distinte, fornendo agli sviluppatori un maggiore controllo sul processo. Il metodo esegue una serie di verifiche iniziali per garantire che `webPart` è in uno stato in cui può essere modificato. Se `webPart` passa tutti i controlli, quindi di impostarlo come il controllo attualmente selezionato (vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> proprietà), e può continuare il processo di modifica.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La modalità di visualizzazione corrente nella pagina non è <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="webPart" /> è chiuso.  
  
\- oppure - 
 <paramref name="webPart" /> non fa parte dell'insieme <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />.  
  
-oppure- 
 <paramref name="webPart" /> è uguale al controllo <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BrowseDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ BrowseDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable BrowseDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta la modalità di visualizzazione predefinita per le pagine che contengono controlli Web part. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> campo fa riferimento a un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> oggetto che viene creato e contenuto di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Poiché si tratta di un oggetto statico, è possibile fare riferimento ad esso direttamente tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe senza la necessità di un'istanza del controllo.  
  
 Quando una pagina che contiene le Web part controlli carichi prima, si trova in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (modalità browse) per impostazione predefinita. Quando gli utenti stanno esplorando semplicemente come in una normale pagina Web, la pagina rimane in modalità browse. Se gli utenti desiderano personalizzare una pagina layout, controlli, aspetto o il comportamento, la pagina dovranno passare a una delle modalità di visualizzazione speciali disponibili tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come lavorare con i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> campo a livello di codice. Il codice consente di popolare un elenco di riepilogo a discesa con le modalità di visualizzazione supportate, che in questo caso sono esplorazione e progettazione. Si noti che, nel `Page_PreRender` metodo, il codice controlla se l'oggetto corrente <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> è impostata su <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>. In questo caso, `Label1` sarà visibile in caso contrario, `Label1` saranno nascoste.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/CS/wpmgrBrowseDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/VB/wpmgrBrowseDisplayModevb.aspx#1)]  
  
 Una volta caricata la pagina in un browser, si è in modalità browse per impostazione predefinita. Si noti che l'etichetta nella pagina che indica che è in modalità browse. Usare il controllo elenco a discesa per passare alla modalità progettazione. Si noti che, in base al codice il `Page_PreRender` metodo, l'etichetta ora è nascosto.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Modalità di visualizzazione delle pagine Web part</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verifica i controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> che prenderanno parte a una connessione per determinare se possono essere connessi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> metodo viene utilizzato per determinare se due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli possono essere connessi. Il metodo viene in genere utilizzato come un controllo condizionale prima della chiamata di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> (metodo).  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> metodo controlla una serie di criteri che devono essere soddisfatti prima di due controlli possono creare una connessione. Nell'elenco seguente sono riepilogati i criteri principali per stabilire una connessione. Se vengono soddisfatti tutti i criteri (oltre ad alcune condizioni interne aggiuntive), il metodo restituisce `true`, vale a dire che i controlli possono essere connesse:  
  
-   I controlli consumer e provider non possono essere `null`, e devono essere contenuti nella raccolta di controlli a cui fanno riferimento le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> proprietà.  
  
-   Il provider e l'utente non può essere lo stesso controllo. In altre parole un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo non è possibile connettersi a se stesso.  
  
-   Il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> oggetti (punti di connessione) per il provider e il consumer non possono essere `null`.  
  
-   Il provider e l'utente non può essere chiusa (né controllo <xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A> proprietà può essere `true`).  
  
-   Il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> proprietà del controllo del punto di connessione deve corrispondere al tipo del controllo del consumer e provider.  
  
-   Entrambi i punti di connessione devono essere abilitati (loro <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> metodi devono entrambe restituire `true`).  
  
-   Ogni punto di connessione necessario non tentare di creare più connessioni rispetto a quello specificato nel proprio <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> proprietà.  
  
-   Se un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> oggetto (convertitore) è necessaria per la connessione tra controlli incompatibili, non può essere `null`. Tuttavia, se i controlli sono già compatibili, deve essere la classe transformer `null`.  
  
-   Transformer (se usati) è necessario fare riferimento nel <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A> raccolta.  
  
-   Transformer (se usati) deve avere le interfacce che sono compatibili con il provider e i consumer in modo che è possibile trasformare i dati tra i due controlli. Le interfacce secondarie del consumer e provider devono anche essere compatibili.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberSignature Language="F#" Value="member this.CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint -&gt; bool" Usage="webPartManager.CanConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">Controllo che fornisce dati al controllo <paramref name="consumer" /> quando i controlli sono connessi.</param>
        <param name="providerConnectionPoint">Classe <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> che consente al controllo <paramref name="provider" /> di prendere parte a una connessione.</param>
        <param name="consumer">Controllo che riceve dati dal controllo <paramref name="provider" /> quando i controlli sono connessi.</param>
        <param name="consumerConnectionPoint">Classe <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> che funge da metodo di callback in modo che il controllo <paramref name="consumer" /> possa prendere parte a una connessione.</param>
        <summary>Verifica i controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> che prenderanno parte a una connessione per determinare se possono essere connessi, quando i controlli consumer e provider dispongono di interfacce compatibili e non è necessario un oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />.</summary>
        <returns>Valore Boolean che indica se i controlli <paramref name="provider" /> e <paramref name="consumer" /> possono essere connessi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per connettersi `provider` e `consumer` quando entrambi i controlli dispongono di connessione compatibili, tipi di punti in modo che un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> oggetto non è necessario. È possibile usare questo metodo per verificare che i due controlli possono essere connesso prima di chiamare <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> per creare una connessione a livello di codice.  
  
 Questo overload viene utilizzata la stessa implementazione come il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> overload del metodo, con la sola eccezione che questo overload non richiede un trasformatore.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare questo metodo.  
  
 L'esempio di codice è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione in una pagina Web part.  
  
-   Una pagina Web contenente due custom <xref:System.Web.UI.WebControls.WebParts.WebPart> i controlli che possono essere connesse, un' `<asp:webpartmanager>` elemento e la gestione degli eventi del codice che crea una connessione usando la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> (metodo).  
  
-   Un file di codice sorgente che contiene due personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli e un'interfaccia personalizzata.  
  
-   Spiegazione del funzionamento dell'esempio in un browser.  
  
 La prima parte dell'esempio di codice è il controllo utente per la modifica delle modalità di visualizzazione. È possibile ottenere il codice sorgente per il controllo utente dalla sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe. Per altre informazioni sulle modalità di visualizzazione e il funzionamento del controllo utente, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Il markup dichiarativo per la pagina Web contiene `Register` direttive per il controllo utente e i controlli personalizzati. È presente un' `<asp:webpartmanager>` elemento, un `<asp:webpartzone>` elemento per contenere i controlli personalizzati e un `<asp:connectionszone>` elemento. Si noti che il `Page_Load` metodo, il codice controlla se la connessione possa essere apportata e, in caso affermativo, definisce un provider, un consumer e i rispettivi punti di connessione e quindi aggiunge una nuova connessione al set di connessioni statiche a cui fanno riferimento le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>proprietà.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 La terza parte dell'esempio è il codice sorgente per i controlli. Contiene due personalizzata e un'interfaccia <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, uno che agisce come un provider e l'altro come un consumer. Perché hanno punti di connessione compatibili (entrambi riconosce il `IZipCode` interface), un trasformatore non è necessaria per stabilire la connessione. Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Per una procedura dettagliata che illustra come eseguire la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/ZipCodeComponent.vb#2)]  
  
 Una volta caricata la pagina Web in un browser, fare clic sui **modalità di visualizzazione** controllo elenco a discesa e selezionare **Connect** per passare alla pagina in modalità di connessione. La connessione utilizza la modalità di `<asp:connectionszone>` elemento che consentono di creare connessioni tra i controlli. Nella modalità di connessione, fare clic sulla freccia verso il basso nella barra del titolo del **CAP** per attivare il menu dei verbi di controllo e quindi fare clic su **Connect**. Dopo che viene visualizzata l'interfaccia utente (UI) di connessione, si noti che, per il codice contenuto in, è già stata creata una connessione di `Page_Load` (metodo).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberSignature Language="F#" Value="abstract member CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; bool&#xA;override this.CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; bool" Usage="webPartManager.CanConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">Controllo che fornisce dati al controllo <paramref name="consumer" /> quando i controlli sono connessi.</param>
        <param name="providerConnectionPoint">Classe <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> che funge da metodo di callback in modo che il controllo <paramref name="provider" /> possa prendere parte a una connessione.</param>
        <param name="consumer">Controllo che riceve dati dal controllo <paramref name="provider" /> quando i controlli sono connessi.</param>
        <param name="consumerConnectionPoint">Classe <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> che funge da metodo di callback in modo che il controllo <paramref name="consumer" /> possa prendere parte a una connessione.</param>
        <param name="transformer">Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> che consente la connessione tra un <paramref name="provider" /> incompatibile e un <paramref name="consumer" />.</param>
        <summary>Verifica i controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> che prenderanno parte a una connessione per determinare se è possibile connetterli e utilizza un oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> per creare la connessione tra un consumer incompatibile e un provider.</summary>
        <returns>Valore Boolean che indica se i controlli <paramref name="provider" /> e <paramref name="consumer" /> possono formare una connessione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per connettersi `provider` e `consumer` quando entrambi i controlli dispongono di connessione incompatibili scegliere i tipi, in modo che un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> oggetto è obbligatorio. È possibile usare questo metodo per verificare che i due controlli possono essere connesso prima di chiamare <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> per creare una connessione a livello di codice.  
  
 Questo overload viene utilizzata la stessa implementazione come il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29> overload del metodo, con la sola eccezione che necessita di un trasformatore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CatalogDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ CatalogDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable CatalogDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta la modalità di visualizzazione utilizzata per aggiungere a una pagina Web controlli server da un catalogo di controlli. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> campo fa riferimento a un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> oggetto che viene creato e contenuto di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Poiché si tratta di un oggetto statico, è possibile fare riferimento ad esso direttamente tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe senza la necessità di un'istanza del controllo.  
  
 Quando gli utenti vogliono aggiungere controlli a una pagina, se è disponibile un catalogo di controlli server, possono passare alla pagina <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> (modalità di catalogo), e viene visualizzata l'interfaccia utente di catalogo (UI). L'interfaccia utente per un catalogo di Web part viene fornito da un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> controllo della zona. Gli sviluppatori di aggiungeranno quest'area per la pagina in fase di progettazione e quindi aggiungeranno i controlli server all'area, in modo che gli utenti saranno in grado di aggiungere i controlli alle pagine in fase di esecuzione. Dopo che lo sviluppatore è aggiunto a questi controlli, modalità catalogo diventerà una modalità di visualizzazione supportate nella pagina di quanto i controlli necessari per abilitare la modalità di catalogo.  
  
 Quando un utente passa a una pagina per la modalità, la zona e tutti i controlli server che sono state aggiunte ad esso diventano visibili del catalogo e l'utente può selezionare i controlli dal catalogo per aggiungere alla pagina o rimuovere controlli della pagina. Dopo che i controlli sono stati aggiunti alla pagina, vengono visualizzati nella normale modalità di visualizzazione e la pagina viene aggiornata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come lavorare con i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> campo a livello di codice. Il codice consente di popolare un elenco di riepilogo a discesa con le modalità di visualizzazione supportate per la pagina, che in questo caso sono esplorazione, progettazione e catalogo. La modalità di catalogo è disponibile perché il `<asp:CatalogZone>` elemento e i relativi elementi figlio nella pagina Web. Si noti che, nel `Page_PreRender` metodo, il codice controlla se l'oggetto corrente <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> è impostata su <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>. In questo caso, `Label1` sarà visibile in caso contrario, `Label1` saranno nascoste.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/CS/wpmgrCatalogDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/VB/wpmgrCatalogDisplayModevb.aspx#1)]  
  
 Una volta caricata la pagina in un browser, si è in modalità browse per impostazione predefinita. Si noti che l'etichetta nella pagina è nascosta. Usare il controllo elenco a discesa per impostare la pagina modalità di catalogo. Si noti che, in base al codice il `Page_PreRender` metodo, l'etichetta è ora visibile. È possibile selezionare il controllo nel catalogo e aggiungerlo a una delle due aree della pagina.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Modalità di visualizzazione delle pagine Web part</related>
      </Docs>
    </Member>
    <Member MemberName="CheckRenderClientScript">
      <MemberSignature Language="C#" Value="protected virtual bool CheckRenderClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CheckRenderClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CheckRenderClientScript () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CheckRenderClientScript();" />
      <MemberSignature Language="F#" Value="abstract member CheckRenderClientScript : unit -&gt; bool&#xA;override this.CheckRenderClientScript : unit -&gt; bool" Usage="webPartManager.CheckRenderClientScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verifica le funzionalità del browser che esegue la richiesta e il valore della proprietà <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" /> per determinare se eseguire il rendering dello script client.</summary>
        <returns>Valore Boolean che indica se eseguire il rendering dello script client.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="CloseProviderWarning">
      <MemberSignature Language="C#" Value="public virtual string CloseProviderWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseProviderWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CloseProviderWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseProviderWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CloseProviderWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un avviso che viene visualizzato quando un utente chiude un controllo che funge da provider per altri controlli in una connessione.</summary>
        <value>Stringa che contiene il messaggio di avviso. Per impostazione predefinita viene visualizzato un messaggio specifico delle impostazioni cultura fornito da .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un utente chiude un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo, in genere viene visualizzato alcun messaggio. Per altre informazioni sul significato della chiusura di un controllo, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> (metodo).  
  
 Tuttavia, quando un controllo è connesso a un altro controllo e funge da provider di dati per l'altro controllo, viene visualizzato un messaggio di avviso predefinito quando un utente tenta di chiudere il controllo. Il messaggio indica agli utenti che un controllo provider è in fase di chiusura, che significa che controlla la connessione a questo provider come i consumer non saranno più possibile eventuali dati da utilizzare. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> proprietà consente agli sviluppatori di personalizzare il messaggio di avviso che viene visualizzato all'utente.  
  
 Se lo sviluppatore della pagina assegna un valore di stringa vuota o null per questa proprietà, non verrà visualizzato alcun messaggio di avviso quando un utente chiude un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo che funge da provider.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> proprietà gli utenti visualizzeranno un messaggio di avviso personalizzata.  
  
 L'esempio di codice è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione in una pagina Web part.  
  
-   Un file di codice sorgente che contiene due personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli e un'interfaccia personalizzata.  
  
-   Una pagina Web contenente due custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli che possono essere connessi e un `<asp:webpartmanager>` elemento.  
  
-   Spiegazione del funzionamento dell'esempio in un browser.  
  
 Il codice seguente contiene solo la parte pagina Web dell'esempio. È inoltre necessario il controllo utente personalizzato e il codice sorgente per i controlli personalizzati indicato in precedenza. Ottenere questi due elementi dalla sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe.  
  
 Il codice della pagina Web seguente viene illustrato come assegnare un messaggio di avviso personalizzata per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> proprietà nel markup dichiarativo di `<asp:webpartmanager>` elemento.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Una volta caricata la pagina Web in un browser, fare clic sui **modalità di visualizzazione** controllo elenco a discesa e selezionare **Connect** per passare alla pagina in modalità di connessione. La connessione utilizza la modalità di `<asp:connectionszone>` elemento che consentono di creare connessioni tra i controlli. Nella modalità di connessione, fare clic sulla freccia verso il basso nella barra del titolo del **CAP** per attivare il menu dei verbi di controllo e quindi fare clic su **Connect**. Quando viene visualizzato l'interfaccia utente (UI) di connessione, scegliere il **creare una connessione a un Consumer** collegamento. Viene visualizzata una cella con un controllo elenco a discesa. Selezionare **controllo meteo** nell'elenco a discesa elenco e fare clic su **Connect** per completare la connessione dei due controlli. Fare clic su **Close**e quindi utilizzare il **modalità di visualizzazione** elenco a discesa per restituire la pagina sulla normale modalità browse. Infine, fare clic sul menu dei verbi per il **CAP** controllo (ovvero il controllo provider in questo caso) e selezionare **Chiudi**. Il messaggio personalizzato assegnato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> proprietà viene visualizzata.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="CloseWebPart">
      <MemberSignature Language="C#" Value="public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.CloseWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.CloseWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o controllo server chiuso in un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</param>
        <summary>Chiude un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> in maniera tale che non ne viene eseguito il rendering in una pagina Web, ma che sia possibile riaprirlo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> metodo rimuove un <xref:System.Web.UI.WebControls.WebParts.WebPart> o altri server di controllo in modo che non viene eseguito il rendering della pagina Web che conteneva in origine. Il controllo chiuso viene aggiunto a un <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> oggetto, che mantiene un riferimento al controllo chiuso e offre la possibilità per il controllo per il ripristino della pagina. Una classe chiusa <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo viene comunque visualizzato nella raccolta cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> proprietà.  
  
 Chiusura di un controllo è diversa a eliminarlo. I controlli chiusi sono ancora disponibili per il ripristino a una pagina, ma un'istanza del controllo eliminati verrà rimosso definitivamente e non può più essere ripristinata. Indipendentemente dal fatto che un <xref:System.Web.UI.WebControls.WebParts.WebPart> o controllo server è statico (dichiarato nel markup di una pagina) o dinamico (aggiunto alla pagina a livello di codice o da un utente da un catalogo di Web part), può essere chiuso e riaperto in una pagina.  
  
 In genere, gli utenti possono chiudere un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo scegliendo il menu dei verbi e selezionando il verbo di chiusura. Un controllo può anche essere chiuso chiamando direttamente le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> metodo e passando un riferimento a `webPart`.  
  
 In una pagina in cui <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli sono stati chiusi, se uno sviluppatore dichiara un' `<asp:catalogzone>` elemento e in esso contenuti aggiunge un `<asp:pagecatalogpart>` elemento, fornisce un'interfaccia utente semplice (UI) per gli utenti a ripristinare i controlli chiusi alla pagina in fase di esecuzione. Gli utenti possono passare la pagina in modalità di visualizzazione del catalogo e i controlli chiusi verranno visualizzati all'interno del catalogo di pagina. Gli utenti possono selezionare i controlli chiusi e aggiungerli nuovamente alla pagina in qualsiasi posizione hanno l'esigenza di e quindi i controlli selezionati vengono ripristinati alla pagina e viene eseguito il rendering come di consueto.  
  
 Quando la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> viene chiamato, genera eventi diversi: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> (se sono presenti più controlli), e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> (se sono presenti controlli connessi). In genere gli sviluppatori possono annullare tali eventi, ma in alcuni casi non è possibile annullarle. Per informazioni dettagliate, vedere la documentazione per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>, e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> eventi.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>.  
  
 L'esempio di codice è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione pagina.  
  
-   Un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo.  
  
-   Una pagina Web.  
  
-   Spiegazione del funzionamento dell'esempio in un browser.  
  
 La prima parte dell'esempio di codice è il controllo utente per la modifica delle modalità di visualizzazione. È possibile ottenere il codice sorgente per il controllo utente dalla sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe. Per altre informazioni sulle modalità di visualizzazione e il funzionamento del controllo utente, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 La seconda parte dell'esempio di codice è l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. In questo esempio Usa l'approccio di compilazione dinamica; pertanto è disponibile alcuna `Assembly` attributo la `Register` direttiva per il controllo nella parte superiore della pagina Web. Per una procedura dettagliata che illustra come eseguire la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/textdisplaywebpart.vb#3)]  
  
 La terza parte dell'esempio di codice è la pagina Web. La pagina contiene un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zona, con una <`asp:pagecatalogpart>` elemento dichiarato all'interno di esso. Questo è ciò che conterrà chiuso <xref:System.Web.UI.WebControls.WebParts.WebPart> controllano e consentono agli utenti per aggiungerlo nuovamente alla pagina. Il `Button1_Click` metodo chiama direttamente il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> metodo per chiudere l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllare, anche se un utente può anche chiudere il controllo tramite il menu dei verbi.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/closeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/closeWebPartVB.aspx#1)]  
  
 Una volta caricata la pagina in un browser, chiudere l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo facendo clic sul menu dei verbi (il simbolo della freccia) l'intestazione del controllo e facendo clic su **chiudere**. Modificare ora la pagina modalità catalogo selezionando **Catalog** nel **modalità di visualizzazione** controllo elenco a discesa. Il catalogo di pagina viene visualizzata con il controllo chiuso. Selezionare la casella di controllo accanto al controllo chiusa, fare clic su **Add** per aggiungerlo alla pagina e quindi fare clic su **Chiudi** per restituire la pagina modalità di visualizzazione. Il controllo viene ripristinato alla pagina. Ora chiuderlo, ma questa volta facendo il **WebPart chiudere** pulsante.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="webPart" /> non è presente nell'insieme <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />.  
  
\- oppure - 
 <paramref name="webPart" /> è un controllo condiviso ed è già stato chiuso da un altro utente.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConnectDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ ConnectDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConnectDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta la modalità di visualizzazione utilizzata per visualizzare una speciale interfaccia utente che consenta agli utenti di gestire le connessioni tra controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> campo fa riferimento a un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> oggetto che viene creato e contenuto di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Poiché si tratta di un oggetto statico, è possibile fare riferimento ad esso direttamente tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe senza la necessità di un'istanza del controllo.  
  
 Quando gli utenti vogliono gestire le connessioni tra <xref:System.Web.UI.WebControls.WebParts.WebPart> ai controlli di una pagina Web, se un <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> zona è stata dichiarata nella pagina, possono passare la pagina nel <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> modalità. La modalità di connessione consente di visualizzare un'interfaccia utente speciale per la gestione delle connessioni, che include la possibilità di connettere o disconnettere i controlli e modificare i dettagli delle connessioni esistenti.  
  
 Se si desidera fornire agli utenti la possibilità di gestire le connessioni con l'interfaccia utente fornita dal set di controlli Web part, è necessario dichiarare un `<asp:connectionszone>` elemento nel markup di una pagina. A differenza degli altri tipi di elementi <xref:System.Web.UI.WebControls.WebParts.WebZone> zone, non è necessario aggiungere gli altri tag all'interno di questo elemento; è sufficiente dichiarare l'elemento di per sé.  
  
   
  
## Examples  
 Esempio di codice seguente illustra l'uso del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> modalità.  
  
 L'esempio di codice è costituito da tre parti:  
  
-   Un file di origine che contiene un'interfaccia e un custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli che possono creare una connessione.  
  
-   Una pagina Web che fornisce un'interfaccia utente di connessione e illustra l'uso di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> modalità.  
  
-   Una spiegazione su come eseguire l'esempio.  
  
 La prima parte dell'esempio di codice è un file di origine che contiene due personalizzata e un'interfaccia <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli che sono progettati in modo che possono essere connessi. Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Questo esempio di codice Usa l'approccio di compilazione dinamica. Per una procedura dettagliata che illustra come eseguire la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ZipCodeComponent.vb#2)]  
  
 La seconda parte dell'esempio è una pagina Web che ospita i controlli personalizzati. All'interno del server `<script>` i tag nella pagina sono diversi metodi che popolano un elenco di riepilogo a discesa con le modalità di visualizzazione disponibile nella pagina. Un utente può selezionare questi nell'elenco a discesa per modificare la modalità di visualizzazione della pagina. Una delle modalità di visualizzazione disponibile è connettersi in modalità di visualizzazione, in quanto un `<asp:connectionszone>` elemento viene dichiarato nel markup della pagina. Si noti che questo elemento non contiene altri elementi figlio. è disponibile solo per abilitare la gestione connessione dell'interfaccia utente per gli utenti.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> modalità viene visualizzata in questo esempio in due posizioni. Prima di tutto, nelle `Page_Init` metodo, la modalità di connessione viene aggiunto all'elenco di riepilogo delle modalità di visualizzazione, come il codice scorre la raccolta a cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> proprietà. Secondo, il `Page_PreRender` metodo controlla la modalità di visualizzazione corrente nella pagina e se è la modalità corrente <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>, viene visualizzato un messaggio un <xref:System.Web.UI.WebControls.Label> controllo.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ConnectDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ConnectDisplayModeVB.aspx#1)]  
  
 Una volta caricata la pagina in un browser, fare clic sull'elenco a discesa e selezionare **Connect** per impostare la pagina in modalità di connessione. Si noti che viene visualizzato un messaggio che informa che la pagina è in modalità di connessione. Il menu dei verbi (con il simbolo della freccia) fare clic nella barra del titolo di una delle <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli e quindi fare clic su **Connect** nel menu dei verbi. Dopo la connessione viene visualizzata l'interfaccia utente, fare clic sul collegamento per creare una connessione. Usare l'elenco a discesa all'interno della connessione dell'interfaccia utente che viene visualizzato, selezionare l'altro controllo che prenderà parte alla connessione, scegliere il **Connect** pulsante. Viene stabilita la connessione. Scegliere il **Chiudi** pulsante e quindi usare l'elenco a discesa nella parte superiore della pagina per restituire la pagina per esaminare la modalità di visualizzazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Modalità di visualizzazione delle pagine Web part</related>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ Connections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento all'insieme di tutte le connessioni correnti in una pagina Web.</summary>
        <value>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> che contiene un gruppo di oggetti <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> proprietà fornisce un modo per accedere al set corrente di connessioni in una pagina. L'insieme è di sola lettura, gli sviluppatori che desiderano modificare una connessione specifica dalla raccolta devono utilizzare <xref:System.Web.UI.WebControls.WebParts.WebPartManager> metodi, ad esempio <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.  
  
   
  
## Examples  
 Esempio di codice seguente illustra l'uso di strumenti dichiarativo e programmatico del <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo.  
  
 L'esempio di codice è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione in una pagina Web part.  
  
-   Una pagina Web contenente due custom <xref:System.Web.UI.WebControls.WebParts.WebPart> i controlli che possono essere connesse, e un `<asp:webpartmanager>` elemento.  
  
-   Un file di codice sorgente che contiene due personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli e un'interfaccia personalizzata.  
  
-   Spiegazione del funzionamento dell'esempio in un browser.  
  
 Il codice seguente contiene solo la parte pagina Web dell'esempio. È inoltre necessario il controllo utente personalizzato e il codice sorgente per i controlli personalizzati indicato in precedenza. Ottenere questi due elementi dalla sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe.  
  
 Il codice della pagina Web seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> proprietà a livello di codice per ottenere il conteggio di connessioni correnti in una pagina. Si noti che nel `<script>` sezione relativa ai tag, il codice per gestire due eventi per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllare gli accessi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> proprietà per ottenere il conteggio.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Una volta caricata la pagina Web in un browser, fare clic sui **modalità di visualizzazione** controllo elenco a discesa e selezionare **Connect** per passare alla pagina in modalità di connessione. La connessione utilizza la modalità di `<asp:connectionszone>` elemento che consentono di creare connessioni tra i controlli. Nella modalità di connessione, fare clic sulla freccia verso il basso nella barra del titolo del **CAP** per attivare il menu dei verbi di controllo e quindi fare clic su **Connect**. Dopo che l'interfaccia utente di connessione (UI) consente di visualizzare, fare clic sui **creare una connessione a un Consumer** collegamento. Viene visualizzata una cella con un controllo elenco a discesa. Selezionare **controllo meteo** nell'elenco a discesa elenco e fare clic su **Connect** per completare la connessione dei due controlli. Fare clic su **Close**e quindi utilizzare il **modalità di visualizzazione** elenco a discesa per restituire la pagina sulla normale modalità browse. Si noti che un'etichetta ora visualizza il numero di connessioni e il numero di <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. Se si restituisce ora per una modalità di connessione e scollegare i due controlli, quando si torna alla modalità visualizzazione contenuto dell'etichetta deve essere aggiornato e non vi sarà alcuna connessione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivated;" />
      <MemberSignature Language="F#" Value="member this.ConnectionsActivated : EventHandler " Usage="member this.ConnectionsActivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo che tutte le connessioni Web part correnti in una pagina sono state attivate e hanno avviato la condivisione dei dati tra i controlli consumer e provider coinvolti in ciascuna connessione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nel ciclo di vita delle connessioni, questo evento viene generato al termine del processo di caricamento una pagina. Si verifica anche dopo il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> evento, che indica solo che il <xref:System.Web.UI.WebControls.WebParts.WebPart> o controlli server coinvolti in una connessione specifica sono stati connessi. Nel caso in cui sono presenti più connessioni in una pagina, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> metodo indica che tutte le connessioni Web part valide in una pagina sono ora attivi e in grado di condividere i dati. Sapendo che tutte le connessioni siano attive, gli sviluppatori possono eseguire qualsiasi numero di attività, tra cui la notifica agli utenti dello stato di tutte le connessioni, notificando i controlli consumer per elaborare e visualizzare i dati dai propri provider e così via.  
  
 Questo evento è associato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A> metodo, che genera l'evento e consente agli sviluppatori di creare gestori personalizzati per l'evento.  
  
 Gli sviluppatori di pagine è possono creare un gestore personalizzato per l'evento aggiungendo il `OnConnectionsActivated` dell'attributo il `<asp:webpartmanager>` elemento nella pagina e quindi assegnando un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivating">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivating As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivating;" />
      <MemberSignature Language="F#" Value="member this.ConnectionsActivating : EventHandler " Usage="member this.ConnectionsActivating : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica durante il processo di attivazione di tutte le connessioni Web stabilite in una pagina Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nel ciclo di vita delle connessioni, questo evento si verifica quando una pagina viene completato il processo di caricamento, appena prima di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> viene chiamato il metodo. È diverso dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> evento, che implica una determinata connessione tra <xref:System.Web.UI.WebControls.WebParts.WebPart> o altri controlli server. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> evento si verifica quando tutte le possibili connessioni in una pagina sono state collegate e siano per essere attivato.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> evento è associato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> metodo, che genera l'evento. Gli sviluppatori di controlli che desiderano estendere il tipo di connessioni che possono essere aggiunti a una pagina è stato possibile eseguire l'override protetto <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> (metodo) e l'attivazione di altri tipi di connessioni.  
  
 Gli sviluppatori di pagine è possono creare un gestore personalizzato per l'evento aggiungendo il `OnConnectionsActivating` dell'attributo il `<asp:webpartmanager>` elemento nella pagina e quindi assegnando un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una connessione tra due controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (oppure altri controlli server in grado di formare connessioni) presenti in un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> metodo costituisce una connessione tra due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli che possono essere connessi. Prima di chiamare questo metodo per creare una connessione, è anche possibile chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> metodo in un controllo condizionale per garantire che i controlli soddisfino i requisiti per stabilire una connessione.  
  
> [!NOTE]
>  È anche possibile creare una connessione tra due controlli server che non sono <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. In generale, i due controlli dovrà essere controlli server personalizzati (ad esempio, i controlli che ereditano da <xref:System.Web.UI.WebControls.WebControl> o controlli server ASP.NET esistenti), in modo da poter aggiungere i membri necessari. I controlli sarebbe necessario inoltre soddisfare i requisiti specificati di seguito.  
  
 Qualsiasi tipo di scenario di connessione tra due controlli deve soddisfare i requisiti seguenti per essere in grado di connettersi:  
  
-   Ogni controllo si trova in un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona (non è necessario essere della stessa area).  
  
-   Come è implementato nell'insieme di controlli Web part, controllo provider in una connessione implementa un'interfaccia come un metodo pubblico che viene usato come callback per il provider e ha un `ConnectionProvider` attributo dei metadati del metodo per identificarla come una connessione del provider punto. Poiché il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> metodo che richiama i punti di connessione provider è virtuale, un oggetto derivato <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo non deve necessariamente usare lo stesso attributo di metadati.  
  
-   Come è implementato nell'insieme di controlli Web part, controllo consumer in una connessione include inoltre un metodo speciale che consente di ottenere un riferimento all'interfaccia viene esposta nel metodo di callback del provider e il consumer ha un `ConnectionConsumer` attributo dei metadati Scegliere il metodo per identificarla come una connessione consumer. Poiché il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> metodo che richiama i punti di connessione consumer è virtuale, un oggetto derivato <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo non deve necessariamente usare lo stesso attributo di metadati.  
  
-   I metodi di callback devono essere compatibili, in quanto il consumer può utilizzare il tipo di interfaccia fornito nel metodo di callback del provider (vale a dire che il consumer e provider possono condividere dati direttamente), o lo sviluppatore deve usare un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> oggetto trasformare i dati dal provider in un form che il consumer può utilizzare.  
  
    > [!IMPORTANT]
    >  Quando non è necessario un trasformatore, usare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29> overload del metodo. Quando è necessario un trasformatore, usare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> overload del metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberSignature Language="F#" Value="member this.ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection" Usage="webPartManager.ConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> il cui ruolo è fornire dati a un altro controllo connesso.</param>
        <param name="providerConnectionPoint">Metodo che funge da metodo di callback per la connessione. Poiché è implementato nel gruppo di controlli Web part, si tratta di un metodo pubblico in <paramref name="provider" /> contrassegnato con un attributo di metadati <see langword="ConnectionProvider" />.</param>
        <param name="consumer">Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> il cui ruolo è ricevere dati da <paramref name="provider" />, quindi di elaborarli o visualizzarli.</param>
        <param name="consumerConnectionPoint">Metodo che esegue la connessione con <paramref name="providerConnectionPoint" /> per ricevere i dati per la connessione. Poiché è implementato nel gruppo di controlli Web part, si tratta di un metodo pubblico in <paramref name="consumer" /> contrassegnato con un attributo di metadati <see langword="ConnectionConsumer" />.</param>
        <summary>Crea una connessione tra due controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> utilizzando solo i riferimenti ai controlli e i relativi oggetti <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> specificati.</summary>
        <returns>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> che contiene varie informazioni sul provider e sul consumer necessarie per la connessione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload viene utilizzato per connettere i controlli quando i punti di connessione sono sufficientemente compatibili che possano connettersi senza utilizzare un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> oggetto. Quando viene chiamato l'overload del metodo, semplicemente passa la chiamata per l'altra versione di overload del metodo e passa `null` per il parametro che richiede un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> oggetto.  
  
 Quando si tenta la connessione tra due controlli a livello di codice, è possibile usare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> metodo in un controllo condizionale per determinare se i controlli possono essere connessi direttamente.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare questo metodo per creare una connessione a livello di codice. Per il codice completo necessario per eseguire l'esempio, vedere la sezione di esempio di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe. Per questo esempio, è necessario il codice sorgente per il controllo utente che consente di modificare la modalità di visualizzazione della pagina e il codice sorgente per l'oggetto personalizzato due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli.  
  
 Il codice per la pagina Web che ospita i due controlli indicato di seguito. La pagina utilizza `Register` direttive nella parte superiore per dichiarare il controllo utente e i controlli personalizzati. I controlli personalizzati vengono fatto riferimento in modo dichiarativo all'interno un `<asp:webpartzone>` elemento. Il codice che gestisce il `Button1_Click` metodo crea una connessione tra i controlli usando le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> (metodo).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 Una volta caricata la pagina in un browser, fare clic sui **collegare i controlli Web part** pulsante in modo da formare la connessione. È quindi possibile immettere alcuni dati nella casella di testo e fare clic sui **immettere il codice postale di 5 cifre** pulsante per dimostrare che i controlli sono connessi e che i dati immessi nel primo controllo viene aggiornati al secondo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'insieme di insiemi dinamici del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> è in sola lettura.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberSignature Language="F#" Value="abstract member ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection&#xA;override this.ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection" Usage="webPartManager.ConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> il cui ruolo è fornire dati a un altro controllo connesso.</param>
        <param name="providerConnectionPoint">Metodo pubblico nel controllo <paramref name="provider" /> contrassegnato con l'attributo di metadati <see langword="ConnectionProvider" /> che funge da metodo di callback per la connessione.</param>
        <param name="consumer">Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> il cui ruolo è ricevere dati dal <paramref name="provider" /> o dal <paramref name="transformer" />, quindi di elaborarli o visualizzarli.</param>
        <param name="consumerConnectionPoint">Metodo pubblico nel controllo <paramref name="consumer" /> contrassegnato con l'attributo di metadati <see langword="ConnectionConsumer" /> che è connesso a <paramref name="providerConnectionPoint" /> per ricevere i dati per la connessione.</param>
        <param name="transformer">Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> che consente la connessione tra due controlli convertendo i dati dal controllo <paramref name="provider" /> in un formato che il controllo <paramref name="consumer" /> sia in grado di elaborare.</param>
        <summary>Crea una connessione tra due controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> utilizzando solo i riferimenti ai controlli, i relativi oggetti <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> specificati e un oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />.</summary>
        <returns>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> che contiene informazioni sul provider, sul consumer e sul trasformatore necessari per la connessione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload viene utilizzato per connettere i controlli quando i punti di connessione sono incompatibili. L'incompatibilità si verifica quando si `consumer` implementa un'interfaccia diversa rispetto a `provider` come punto di connessione. La classe transformer converte i dati in un tipo che può essere riconosciuto da `consumer`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le connessioni sono già state attivate in <see cref="E:System.Web.UI.Control.PreRender" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di tutti i controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, server o utente contenuti nelle aree <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> di una pagina Web e gestiti dal controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <value>Classe <see cref="T:System.Web.UI.ControlCollection" /> che contiene tutti gli elementi gestiti dal controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A> proprietà non fa riferimento gli altri controlli che fanno riferimento le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo, ad esempio i diversi controlli, zona <xref:System.Web.UI.WebControls.WebParts.EditorPart> o <xref:System.Web.UI.WebControls.WebParts.CatalogPart> i controlli e altri.  
  
 Questa proprietà viene utilizzata dal set di controlli Web part e nella maggior parte delle situazioni di sviluppo che non destinato a essere chiamato dal codice. Per questo motivo, anche se la proprietà è pubblica, è nascosto in IntelliSense. Gli sviluppatori che desiderano accedere alla raccolta di <xref:System.Web.UI.WebControls.WebParts.WebPart> o altri controlli server gestiti dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo deve utilizzare relativo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="CopyWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart CopyWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ CopyWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member CopyWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPart&#xA;override this.CopyWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.CopyWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o controllo server da copiare.</param>
        <summary>Utilizzato dall'insieme di controlli Web part per creare una copia di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o di un controllo server per aggiungere il controllo a una pagina Web.</summary>
        <returns>Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> da aggiungere a una pagina.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è possibile chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> metodo direttamente dal codice. Questo metodo viene chiamato internamente dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo come parte del processo di aggiunta di un nuovo dinamico <xref:System.Web.UI.WebControls.WebParts.WebPart> o controllo server a una pagina. Un controllo dinamico viene aggiunto a una pagina a livello di codice o tramite l'interfaccia utente Web part (UI), ad esempio da un utente aggiunge un controllo da un catalogo di controlli, invece di un controllo statico, che viene dichiarata direttamente nel markup di una pagina.  
  
> [!NOTE]
>  Il metodo può essere sottoposto a override in una classe derivata se vuole che gli sviluppatori abilitare il metodo gestire scenari di copia aggiuntivi. Per informazioni dettagliate, vedere la sezione Note per gli eredi.  
  
 Quando viene aggiunto un nuovo controllo dinamico, se si tratta di un <xref:System.Web.UI.WebControls.WebParts.WebPart> (controllo), il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> metodo restituisce una nuova istanza del controllo. Se il controllo da aggiungere è un altro tipo di controllo del server (ad esempio, un controllo utente, un controllo personalizzato o un controllo ASP.NET), il controllo sarà già stato incluso in un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> oggetto dal set di controlli Web part. Quando la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> metodo incontra un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> (controllo), restituisce una nuova istanza del <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controllo con una nuova istanza del controllo figlio eseguito il wrapping in esso contenuti.  
  
 Quando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> metodo crea una nuova copia di un controllo da restituire, ma reimposta anche i valori di tutte le proprietà sui rispettivi valori predefiniti. Si noti che, se si desidera conservare i valori delle proprietà personalizzabili e copiarle nella nuova istanza del controllo, è necessario chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A> anche metodo. Il passaggio finale svolte dai <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> consiste nel chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A> metodo per ottenere un nuovo ID per il controllo.  
  
> [!NOTE]
>  Poiché il metodo ottiene un nuovo ID per un controllo copiato, non basarsi su che fanno riferimento a un controllo dinamico che viene aggiunto a una pagina dall'ID originale. In alternativa, è necessario fare riferimento la nuova istanza del controllo restituito dal metodo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Il metodo è dichiarato come <see langword="virtual" /> in modo che gli sviluppatori possono ereditare dal <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe, l'override del metodo e fornire per conoscere altri scenari in cui è possibile creare copie dei controlli. Ad esempio, il metodo è stato possibile se lo si desidera venga visualizzato come input un controllo che è stato serializzato in un file XML. Il metodo è stato possibile deserializzare il file XML (se presente) e quindi chiamare il metodo di base per gestire i casi esistenti e per restituire una nuova istanza di un <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controllo.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAvailableTransformers">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAvailableTransformers () As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ CreateAvailableTransformers();" />
      <MemberSignature Language="F#" Value="abstract member CreateAvailableTransformers : unit -&gt; System.Web.UI.WebControls.WebParts.TransformerTypeCollection&#xA;override this.CreateAvailableTransformers : unit -&gt; System.Web.UI.WebControls.WebParts.TransformerTypeCollection" Usage="webPartManager.CreateAvailableTransformers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un gruppo di trasformatori specificato nel file di configurazione di un sito Web e lo aggiunge all'insieme di trasformatori a cui fa riferimento la proprietà <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />.</summary>
        <returns>Insieme di trasformatori specificati nel file di configurazione di un sito Web.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Questo metodo può essere sottoposto a override per aggiungere trasformatori aggiuntivi utilizzabili dall'applicazione. Ad esempio, è possibile scrivere il metodo per recuperare un elenco di trasformatori disponibili da un servizio Web.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="webPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'insieme di tutti i controlli gestiti dal controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> in una pagina Web. Questa classe non può essere ereditata.</summary>
        <returns>Classe <see cref="T:System.Web.UI.ControlCollection" /> composta da tutti i diversi controlli Web part gestiti dal controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Poiché questo metodo è protetto e bloccato, è visibile alle classi che ereditano dal <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe, ma non può essere sottoposto a override.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateDisplayModes">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDisplayModes () As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ CreateDisplayModes();" />
      <MemberSignature Language="F#" Value="abstract member CreateDisplayModes : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&#xA;override this.CreateDisplayModes : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="webPartManager.CreateDisplayModes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea il gruppo di tutte le modalità di visualizzazione possibili per un'applicazione Web part.</summary>
        <returns>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> che contiene tutte le modalità di visualizzazione supportate.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea l'elenco di tutte le possibili modalità di visualizzazione, non solo le modalità di visualizzazione supportate in una pagina particolare. Per altre informazioni sulle modalità di visualizzazione supportate, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> proprietà.  
  
 Per impostazione predefinita, il set di controlli Web part consente di creare il set seguente di modalità di visualizzazione da utilizzare nelle pagine Web part:  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>  
  
 Gli sviluppatori possono creare le modalità di visualizzazione personalizzata, con o senza aree personalizzate che derivano dal <xref:System.Web.UI.WebControls.WebParts.WebZone> o <xref:System.Web.UI.WebControls.WebParts.ToolZone> classi. Per creare una modalità di visualizzazione personalizzata, è necessario ereditare dal <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> (classe), e per aggiungere la modalità di visualizzazione come una modalità supportata in una pagina, è necessario ereditare dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe ed eseguire l'override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> (metodo).  
  
 Quando si aggiungono le modalità di visualizzazione mediante il <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A> metodo, è necessario aggiungerle nell'ordine che si desidera che vengano visualizzati in tutti i controlli dell'interfaccia utente (ad esempio un <xref:System.Web.UI.WebControls.ListBox> controllo) che forniscono agli utenti le modalità di visualizzazione possibili in una pagina.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A>.  
  
 L'esempio di codice è costituito da cinque parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione in una pagina Web part.  
  
-   Una pagina Web che ospita altri controlli.  
  
-   Un controllo utente che si trova in un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zona della pagina Web e consente all'utente di immettere e visualizzare il testo in un'etichetta.  
  
-   Un file di codice sorgente che contiene due controlli. Uno è una classe personalizzata <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo e l'altro è un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> oggetto da aggiungere alla modalità di visualizzazione predefinite della pagina.  
  
-   Un file di codice sorgente che contiene due personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli e un'interfaccia personalizzata.  
  
-   Spiegazione del funzionamento dell'esempio in un browser.  
  
 La prima parte dell'esempio di codice è il controllo utente per la modifica delle modalità di visualizzazione. È possibile ottenere il codice sorgente per il controllo utente dalla sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe. Per altre informazioni sulle modalità di visualizzazione e il funzionamento del controllo utente, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 La seconda parte dell'esempio è la pagina Web. Contiene due <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controlli, controlli utente e l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Si noti che il `Register` direttive nella parte superiore della pagina per fare riferimento ai controlli utente e lo spazio dei nomi per i controlli compilati.  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/createDisplayModeCS.aspx#1)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/createDisplayModeVB.aspx#1)]  
  
 La terza parte dell'esempio è il controllo utente per l'immissione e la visualizzazione di testo. Usa un <xref:System.Web.UI.WebControls.MultiView> controllo per creare più visualizzazioni dell'interfaccia utente. Una singola visualizzazione con il `Button1` pulsante, l'altra senza. Si noti che in sottoposto a override `OnPreRender` metodo, il codice controlla se la pagina è attualmente in modalità di visualizzazione personalizzata e, in questo caso, la prima visualizzazione del controllo utente, che include il pulsante. Se la pagina è non in modalità di visualizzazione personalizzata, ad esempio se la pagina è in modalità di esplorazione o la progettazione, il pulsante è nascosto.  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/TextDisplaycs.ascx#2)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/TextDisplayvb.ascx#2)]  
  
 Nella quarta parte dell'esempio è il file di origine per le due classi personalizzate. Si noti che l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe esegue l'override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> (metodo) e che chiama innanzitutto il metodo di base per aggiungere tutte le modalità di visualizzazione predefinito e quindi aggiunge la modalità di visualizzazione personalizzato. La classe di modalità di visualizzazione personalizzato, `InLineEditDisplayMode`, è sufficiente eredita da <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, imposta il nome della modalità di visualizzazione nel costruttore e quindi esegue l'override di un numero di proprietà base per definire le caratteristiche di visualizzazione personalizzata.  
  
 Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Per una procedura dettagliata che illustra come eseguire la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/CustomDisplayMode.cs#3)]
 [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/CustomDisplayMode.vb#3)]  
  
 Per eseguire l'esempio di codice, caricare la pagina in un browser. Si noti che la pagina è attualmente in modalità browse, e nessun pulsante è visibile. Usando il **modalità di visualizzazione** elenco a discesa del controllo di elenco, modificare la pagina **visualizzazione di modifica Inline** modalità e si noti che ora il `Button1` pulsante è visibile nel controllo utente inferiore. Aggiungere il testo e fare clic sul pulsante per aggiornare il controllo. Si noti che la visualizzazione delle pagine viene restituita alla modalità di visualizzazione, viene ora visualizzato il testo immesso, e il pulsante è nascosto, ancora una volta, poiché la pagina non è più in modalità di visualizzazione personalizzata.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Procedura dettagliata: Modifica della modalità di visualizzazione in una pagina Web part</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicConnectionID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicConnectionID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicConnectionID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicConnectionID () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicConnectionID();" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicConnectionID : unit -&gt; string&#xA;override this.CreateDynamicConnectionID : unit -&gt; string" Usage="webPartManager.CreateDynamicConnectionID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un valore univoco che funge da ID per una connessione dinamica.</summary>
        <returns>Stringa che contiene un ID univoco per una connessione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> metodo genera un valore GUID e lo converte in una stringa da usare come ID univoco per una connessione. Il metodo viene chiamato ogni volta che viene creata una connessione dinamica.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori possono eseguire l'override di questo metodo in un oggetto derivato <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe modificando l'implementazione per la generazione di un ID univoco.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicWebPartID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicWebPartID (Type webPartType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicWebPartID(class System.Type webPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicWebPartID (webPartType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicWebPartID(Type ^ webPartType);" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicWebPartID : Type -&gt; string&#xA;override this.CreateDynamicWebPartID : Type -&gt; string" Usage="webPartManager.CreateDynamicWebPartID webPartType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPartType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="webPartType">Classe <see cref="T:System.Type" /> del controllo per cui è stato generato un ID.</param>
        <summary>Genera un ID univoco per un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> dinamico.</summary>
        <returns>Stringa che contiene l'ID univoco di un controllo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli vengono aggiunti a una pagina Web, può essere statico (che significa che il controllo viene dichiarato nel markup della pagina) o dinamico (ovvero vengono aggiunti a livello di codice). In qualsiasi scenario in cui il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo sta creando nuovi controlli dinamici da aggiungere alla pagina, viene chiamato questo metodo per generare un ID univoco.  
  
 Il metodo è virtuale in modo che gli sviluppatori possono eseguirne l'override se desiderano fornire un'implementazione personalizzata per la generazione dell'ID.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPartType" /> è <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart(string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateErrorWebPart (originalID As String, originalTypeName As String, originalPath As String, genericWebPartID As String, errorMessage As String) As ErrorWebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::ErrorWebPart ^ CreateErrorWebPart(System::String ^ originalID, System::String ^ originalTypeName, System::String ^ originalPath, System::String ^ genericWebPartID, System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member CreateErrorWebPart : string * string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.ErrorWebPart&#xA;override this.CreateErrorWebPart : string * string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.ErrorWebPart" Usage="webPartManager.CreateErrorWebPart (originalID, originalTypeName, originalPath, genericWebPartID, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ErrorWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalID" Type="System.String" />
        <Parameter Name="originalTypeName" Type="System.String" />
        <Parameter Name="originalPath" Type="System.String" />
        <Parameter Name="genericWebPartID" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="originalID">Stringa che rappresenta l'ID del controllo non riuscito. Se l'errore interessa un controllo <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, l'ID è quello del relativo controllo server figlio.</param>
        <param name="originalTypeName">Stringa che rappresenta il nome dell'oggetto <see cref="T:System.Type" /> del controllo non riuscito. Se l'errore interessa un controllo <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, il nome del tipo è il tipo del relativo controllo server figlio.</param>
        <param name="originalPath">Stringa contenente il percorso di un controllo utente, se l'errore interessa un controllo <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> che contiene un controllo utente figlio.</param>
        <param name="genericWebPartID">Stringa che restituisce l'ID di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, se tale tipo di controllo era coinvolto nell'errore di caricamento o creazione di un controllo.</param>
        <param name="errorMessage">Stringa che contiene il messaggio di errore da visualizzare nella pagina.</param>
        <summary>Crea un controllo speciale che viene inserito in una pagina e visualizzato per gli utenti finali, quando un tentativo di caricare o creare un controllo dinamico <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> non riesce per qualche motivo.</summary>
        <returns>Classe <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> inserita in una pagina al posto di un controllo che non è stato possibile caricare o creare.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> metodo viene chiamato quando il controllo Web part set tenta di caricare o creare un'istanza di una dinamica <xref:System.Web.UI.WebControls.WebParts.WebPart> o controllo server che non riesce per qualche motivo. Il metodo crea un <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> assegna un messaggio di errore a tale oggetto e lo restituisce. Il <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> controllo viene inserito al posto del controllo non riuscito e il messaggio di errore viene visualizzato nella pagina.  
  
 Non è possibile chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> metodo direttamente dal codice. Tuttavia, è possibile ereditare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe ed estendere il metodo. Per informazioni dettagliate, vedere la sezione Note per gli eredi.  
  
 Gli utenti finali possono utilizzare un <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> controllare in una pagina gran parte come se fossero una normale <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Per rimuovere il messaggio di errore, è possibile chiudere il controllo scegliendo il verbo di chiusura, a questo punto verrà aggiunto il controllo a un <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> oggetto, così come qualsiasi altro controllo chiuso. Se un utente finale elimina un <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> controllo, il controllo server che non è riuscito a caricare verrà eliminato anche dalla pagina.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se si desidera personalizzare le informazioni restituite nel <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> (controllo), è possibile eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" /> metodo, chiamare il metodo di base, assegnare valori diversi per i parametri passati al metodo di base e quindi restituire il risultante <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />controllo. Ad esempio, se non si desidera che gli utenti finali vedano la <paramref name="originalPath" /> valore (in cui viene mostrato il percorso della directory virtuale di un controllo utente), quando si chiama il metodo di base è possibile passare una stringa vuota ("") per il parametro.  
  
È anche possibile personalizzare il comportamento del <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> stesso, controllo mediante eredità da quest'ultimo. Ad esempio, è possibile eseguire l'override relativo <see cref="P:System.Web.UI.WebControls.WebParts.Part.Title" /> o <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" /> proprietà.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePersonalization">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreatePersonalization () As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ CreatePersonalization();" />
      <MemberSignature Language="F#" Value="abstract member CreatePersonalization : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartPersonalization&#xA;override this.CreatePersonalization : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartPersonalization" Usage="webPartManager.CreatePersonalization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto di personalizzazione per inserirvi i dati di personalizzazione relativi alla pagina Web corrente.</summary>
        <returns>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> in cui inserire i dati di personalizzazione di un utente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A> metodo restituisce un oggetto per contenere e gestire le impostazioni di personalizzazione dell'utente per la pagina corrente. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo gestisce questo oggetto.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320">Panoramica sulla personalizzazione delle parti Web</related>
      </Docs>
    </Member>
    <Member MemberName="CreateWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::GenericWebPart ^ CreateWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member CreateWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart&#xA;override this.CreateWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="webPartManager.CreateWebPart control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Controllo server diverso da un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</param>
        <summary>Include un controllo server diverso da un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> in un oggetto <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, in modo che il controllo possa disporre della funzionalità Web part.</summary>
        <returns>Classe <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> che include <paramref name="control" /> e ne consente il funzionamento come controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> vero e proprio.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metodo è il meccanismo principale per l'abilitazione di controlli server che non sono <xref:System.Web.UI.WebControls.WebParts.WebPart> dovranno avere la stessa funzionalità un <xref:System.Web.UI.WebControls.WebParts.WebPart> (controllo) e quindi partecipare completamente le applicazioni Web part. Con questo metodo, gli sviluppatori notevolmente estenderà il numero di controlli server che possono utilizzare in un'applicazione Web part, poiché praticamente qualsiasi tipo di controllo del server, i controlli ASP.NET standard, controlli utente e controlli personalizzati, possono essere utilizzati.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo Usa anche questo metodo in due altri scenari per eseguire il wrapping di controlli server con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> oggetto. Quando gli utenti aggiungono i controlli server a una pagina mediante la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> il controllo, se il controllo importato non è un <xref:System.Web.UI.WebControls.WebParts.WebPart> (controllo), il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> viene chiamato il metodo. Inoltre, quando i controlli server vengono dichiarati in un formato di persistenza all'interno di un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona in una pagina Web, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> viene chiamato per tutti i controlli che non sono <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli.  
  
 Quando si aggiunge un controllo server a una zona a livello di programmazione, un approccio tipico consiste nell'usare la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metodo per eseguire il wrapping del controllo con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> dell'oggetto e quindi chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> per aggiungere il controllo all'insieme di tutti <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli della pagina, che fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> (metodo). Nel `Button2_Click method`, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metodo viene chiamato per eseguire il wrapping di un <xref:System.Web.UI.WebControls.Calendar> controllare con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> oggetto prima di aggiungerlo all'area.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Questo metodo può essere sostituito per usare un oggetto derivato <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> classe invece della classe di base fornita con le Web part di set di controlli.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWarning">
      <MemberSignature Language="C#" Value="public virtual string DeleteWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un messaggio di avviso personalizzato visualizzato dagli utenti finali quando eliminano un controllo.</summary>
        <value>Stringa che contiene il testo del messaggio di avviso. Il valore predefinito è un messaggio di avviso localizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un utente elimina un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo, in genere viene visualizzato un messaggio di avviso predefinite. L'utente viene informato quando viene eliminata l'istanza di un controllo, l'eliminazione è permanente. Lo sviluppatore della pagina potrà fornire agli utenti un modo per aggiungere una nuova istanza del controllo alla pagina (ad esempio tramite un catalogo di <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, o a livello di codice), ma verrà rimosso definitivamente l'istanza corrente di un controllo che viene eliminato. La finestra di dialogo che viene visualizzato l'avviso include un pulsante l'utente può annullare l'eliminazione, se lo si desidera.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> proprietà consente agli sviluppatori di impostare il messaggio di avviso che viene visualizzato all'utente.  
  
 Se lo sviluppatore della pagina assegna una stringa vuota ("") valore di questa proprietà, nella finestra di dialogo alcun messaggio di avviso verrà visualizzato quando un utente elimina un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> proprietà non viene visualizzata nel caso di statico <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli e controlli server. I controlli statici sono i controlli server che vengono dichiarati all'interno di un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona nel markup di una pagina Web. Poiché tali controlli sono statici, non possono essere eliminate, in modo che il messaggio di avviso di eliminazione non viene mai visualizzato in questo caso. Controlli statici possono essere chiusa dall'utente, ma un controllo chiuso viene aggiunto al catalogo di pagina, da cui può essere aggiunto alla pagina da un utente, mentre un controllo eliminato non può essere ripristinato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> proprietà in modo dichiarativo e a livello di codice.  
  
 Esistono quattro parti per l'esempio di codice:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione pagina.  
  
-   Un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo.  
  
-   Una pagina Web.  
  
-   Spiegazione del funzionamento dell'esempio in un browser.  
  
 La prima parte dell'esempio di codice è il controllo utente per la modifica delle modalità di visualizzazione. È possibile ottenere il codice sorgente per il controllo utente dalla sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe. Per altre informazioni sulle modalità di visualizzazione e il funzionamento del controllo utente, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 La seconda parte dell'esempio di codice è l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. In questo esempio Usa l'approccio di compilazione dinamica; pertanto è disponibile alcuna `Assembly` attributo la `Register` direttiva per il controllo nella parte superiore della pagina Web. Per una procedura dettagliata che illustra come eseguire la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/textdisplaywebpart.vb#3)]  
  
 La terza parte dell'esempio di codice è la pagina Web. La pagina contiene un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zona, con l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo dichiarato nella zona, in modo che un utente può aggiungerlo alla pagina in fase di esecuzione. Si noti che solo i controlli dinamici (controlli che vengono aggiunti a una pagina a livello di codice o da un catalogo come questo) possono essere eliminati da una pagina. Controlli statici (controlli che vengono dichiarati all'interno di un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona nel markup di una pagina) possono essere chiusi, ma non eliminati. Il `<asp:webpartmanager>` elemento dichiara un valore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> usando il `DeleteWarning` attributo. Il `Button1_Click` metodo assegna un altro valore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> proprietà.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/deleteWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/deleteWarningVB.aspx#1)]  
  
 Una volta caricata la pagina in un browser, è necessario aggiungere il <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo alla pagina. Usando il **modalità di visualizzazione** controllo elenco a discesa, selezionare la modalità catalogo. Quando viene visualizzato nel catalogo, selezionare la casella di controllo accanto al controllo personalizzato, fare clic su **Add** per aggiungerlo alla pagina e quindi fare clic su **Chiudi** per restituire la pagina modalità di visualizzazione. Ora che il controllo è visibile, è possibile eliminarlo. Usando il **modalità di visualizzazione** controllano anche in questo caso, passare alla modalità progettazione (è possibile eliminare i controlli in modalità browse). Fare clic sul menu dei verbi (il simbolo della freccia) nell'intestazione del <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo e selezionare **eliminare**. L'avviso che è nastavit il `DeleteWarning` attributo viene visualizzato. Fare clic su **annullare**. Fare clic sul pulsante con etichettato **Modifica Elimina avviso**, che viene modificato il valore della proprietà a livello di codice. Nel menu dei verbi nel controllo, selezionare **eliminare** anche in questo caso, si noti che questa volta viene visualizzato il messaggio di avviso.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWebPart">
      <MemberSignature Language="C#" Value="public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.DeleteWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.DeleteWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo server da eliminare.</param>
        <summary>Rimuove in modo permanente un'istanza dinamica di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> da una pagina Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> metodo di rimuovere definitivamente il controllo rappresentato dalla `webPart` parametro da una pagina. A differenza di un controllo chiuso, che viene aggiunto al <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> controllano e può essere aggiunto alla pagina, un'istanza del controllo eliminato non può essere aggiunta alla pagina di.  
  
> [!NOTE]
>  Implementato dal controllo Web part impostato, la possibilità per gli utenti di eliminare una dinamica <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo dipende l'utente e l'ambito di personalizzazione in cui il controllo è stato aggiunto a una pagina. Se il controllo viene aggiunto quando la pagina si trova in ambito condiviso (da un utente che dispone di autorizzazioni), quindi il controllo non può essere eliminato dai singoli utenti quando la pagina si trova nell'ambito di utente.  
  
 È possibile eliminare solo i controlli dinamici. Controlli dinamici vengono aggiunti a una pagina a livello di codice o da parte degli utenti aggiunta di controlli da un catalogo. Controlli statici vengono aggiunti a una pagina in modo dichiarativo nel markup o persistenza. Poiché i tag dichiarativi presenti in modo permanente nel markup, i controlli statici non possono essere eliminati, ma può essere chiuso e riaperto.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>. La prima volta il **Add Calendar** viene fatto clic sul pulsante, il codice nel caso in cui gestore crea un <xref:System.Web.UI.WebControls.Calendar> controllo e lo aggiunge a un'area come un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> oggetto. Poiché il controllo viene aggiunto a livello di codice, si tratta di un controllo dinamico e pertanto può essere eliminato. Quando un utente sceglie il **Elimina calendario** pulsante, il codice garantisce che esista il controllo e quindi eliminarlo chiamando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> (metodo).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="DesignDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesignDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DesignDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesignDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta la modalità di visualizzazione utilizzata per modificare il layout delle pagine Web che contengono controlli Web part. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> campo fa riferimento a un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> oggetto che viene creato e contenuto di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Poiché si tratta di un oggetto statico, è possibile fare riferimento ad esso direttamente tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe senza la necessità di un'istanza del controllo.  
  
 Quando una pagina che contiene le Web part controlli carichi prima, si trova in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (modalità browse) per impostazione predefinita. Quando gli utenti desiderano modificare il layout della pagina per lo spostamento dei controlli in aree diverse o all'interno delle aree corrente, è necessario passare prima pagina per <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> (modalità progettazione). Nella modalità progettazione, viene visualizzata l'interfaccia utente (UI) per le diverse aree e gli utenti possono trascinare i controlli per modificare il layout.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come lavorare con i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> campo a livello di codice. Il codice consente di popolare un elenco di riepilogo a discesa con le modalità di visualizzazione supportate per la pagina, che in questo caso sono esplorazione e progettazione. Si noti che, nel `Page_PreRender` metodo, il codice controlla se l'oggetto corrente <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> è impostata su <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>. In questo caso, `Label1` sarà visibile in caso contrario, `Label1` saranno nascoste.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/CS/wpmgrDesignDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/VB/wpmgrDesignDisplayModevb.aspx#1)]  
  
 Una volta caricata la pagina in un browser, si è in modalità browse per impostazione predefinita. Si noti che l'etichetta nella pagina è nascosta. Usare il controllo elenco a discesa per passare alla modalità progettazione. Si noti che, in base al codice il `Page_PreRender` metodo, l'etichetta è ora visibile.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Modalità di visualizzazione delle pagine Web part</related>
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebPart">
      <MemberSignature Language="C#" Value="protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DisconnectWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DisconnectWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.DisconnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.DisconnectWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> da disconnettere.</param>
        <summary>Rimuove un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o un controllo server in fase di chiusura o di eliminazione dalle connessioni a cui prende parte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metodo viene chiamato internamente dall'insieme quando un controllo viene chiuso in una pagina o eliminato da una pagina di controlli Web part. In questo caso, il metodo viene chiamato per rimuovere il controllo da tutte le connessioni in cui è interessato come consumer o provider. Se il controllo viene rimosso da qualsiasi connessione, questo metodo chiama anche il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metodo a terminare le connessioni in cui `webPart` si è occupato.  
  
 Quando la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> viene chiamato, genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> evento. In genere questo evento può essere annullato, ma in due casi che non può essere annullata. Un caso si verifica durante le richieste alla pagina, quando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> viene chiamato il metodo. Se si verifica un conflitto tra le connessioni esistenti, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metodo verrà richiamato per chiudere una delle connessioni in conflitto in questa istanza di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> evento non può essere annullato, in quanto il conflitto deve essere risolto.  
  
 Nel secondo caso si verifica quando un <xref:System.Web.UI.WebControls.WebParts.WebPart> o controllo server che è attualmente connesso è chiuso o eliminato. In questo caso, poiché il controllo viene rimosso dalla pagina, necessario terminare, pertanto per impostazione predefinita non è possibile annullare la connessione di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> evento per interrompere il processo di chiusura di una connessione. Per altre informazioni, vedere l'evento <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>. Utilizzare due custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, la pagina Web consente di creare una connessione tra i controlli facendo clic su un pulsante, mentre un altro pulsante consente di disconnettere i controlli. Se si chiude uno dei controlli, mentre la pagina è in modalità browse e i controlli sono connessi, un override del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metodo disconnette il controllo chiuso, termina la connessione e viene visualizzato un messaggio.  
  
 L'esempio di codice è costituito da quattro parti:  
  
-   Un controllo utente per la modifica delle modalità di visualizzazione.  
  
-   Un file di origine contenente custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli.  
  
-   Una pagina Web per ospitare i controlli.  
  
-   Spiegazione del funzionamento dell'esempio in un browser.  
  
 La prima parte dell'esempio di codice è il controllo utente per la modifica delle modalità di visualizzazione. È possibile ottenere il codice sorgente per il controllo utente dalla sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe. Per altre informazioni sulle modalità di visualizzazione e il funzionamento del controllo utente, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 La seconda parte è il file contenente il codice sorgente per l'oggetto personalizzato due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli che verranno connesso e una classe personalizzata <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Questo esempio Usa la compilazione dinamica, in modo che il `Register` direttiva che fa riferimento a questi componenti nella pagina Web viene dichiarata in modo appropriato nella parte superiore della pagina Web. Per una procedura dettagliata che illustra le opzioni di compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 Nel codice sorgente, si noti che il controllo ereditato `MyWebPartManager` che esegue l'override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> (metodo). Questo metodo controlla ogni connessione in una pagina per vedere se il controllo in fase di chiusura partecipa la connessione e, in caso affermativo, chiama il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metodo per terminare la connessione. Questa impostazione equivale all'implementazione di base del metodo nel <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Il metodo sottoposto a override consente quindi di personalizzare l'implementazione di base scrivendo un messaggio alla pagina.  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 La terza parte dell'esempio di codice è la pagina Web. Si noti che nella parte superiore, che contiene `Register` direttive per la registrazione del controllo utente e l'assembly compilato dinamicamente con la <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. La pagina contiene due metodi principali. Il `Button1_Click` metodo crea una connessione tra i controlli, mentre il `Button2_Click` metodo disconnette i controlli.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 Dopo il caricamento della pagina, fare clic sui **Connect** per connettere i controlli pulsante. Quindi fare clic sul menu dei verbi in uno dei controlli (la freccia rivolta verso il basso nell'intestazione del controllo) e selezionare **Chiudi** dal menu dei verbi. Quando si tenta di chiudere il controllo, viene chiamato il metodo sottoposto a override, la connessione viene terminata e il messaggio viene scritto per la pagina. Se si desidera reimpostare la pagina per ripristinare il controllo chiuso e sperimentare con le altre opzioni, fare clic sui **lo stato utente di reimpostazione** link per rimuovere i dati sulla personalizzazione e ripristinare lo stato originale della pagina.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebParts">
      <MemberSignature Language="C#" Value="public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectWebParts(class System.Web.UI.WebControls.WebParts.WebPartConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DisconnectWebParts (connection As WebPartConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DisconnectWebParts(System::Web::UI::WebControls::WebParts::WebPartConnection ^ connection);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectWebParts : System.Web.UI.WebControls.WebParts.WebPartConnection -&gt; unit&#xA;override this.DisconnectWebParts : System.Web.UI.WebControls.WebParts.WebPartConnection -&gt; unit" Usage="webPartManager.DisconnectWebParts connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Web.UI.WebControls.WebParts.WebPartConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> che rappresenta una connessione tra controlli server.</param>
        <summary>Esegue il processo di disconnessione dei controlli server connessi in una pagina Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metodo esegue il processo completo di chiusura di una connessione tra <xref:System.Web.UI.WebControls.WebParts.WebPart> o controlli server, quando si passa il `connection` parametro.  
  
 Questo metodo consente di disconnettere i controlli quando si inserisce un `<asp:connectionszone>` elemento in una pagina Web, per fornire un'interfaccia utente (UI) per la gestione delle connessioni. Quando una pagina è modalità di connessione (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>) ed esiste una connessione corrente, gli utenti possono selezionare un pulsante che chiama il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metodo per terminare la connessione.  
  
 È inoltre possibile chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metodo direttamente dal codice, se si desidera disconnettere i controlli a livello di codice e senza la necessità di aggiungere un `<asp:connectionszone>` elemento a una pagina.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>. Utilizzare due custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, la pagina Web consente di creare una connessione tra i controlli facendo clic su un pulsante, mentre un altro pulsante consente di disconnettere i controlli.  
  
 L'esempio di codice è costituito da quattro parti:  
  
-   Un controllo utente per la modifica delle modalità di visualizzazione.  
  
-   Un file di origine contenente custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli.  
  
-   Una pagina Web per ospitare i controlli.  
  
-   Spiegazione del funzionamento dell'esempio in un browser.  
  
 La prima parte dell'esempio di codice è il controllo utente per la modifica delle modalità di visualizzazione. È possibile ottenere il codice sorgente per il controllo utente dalla sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe. Per altre informazioni sulle modalità di visualizzazione e il funzionamento del controllo utente, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 La seconda parte è un file contenente il codice sorgente per l'oggetto personalizzato due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli che verranno connesso. Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Questo esempio Usa la compilazione dinamica, in modo che il `Register` direttiva che fa riferimento a questi componenti nella pagina Web viene dichiarata in modo appropriato nella parte superiore della pagina Web. Per una procedura dettagliata che illustra le opzioni di compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 La terza parte dell'esempio di codice è la pagina Web. Si noti che nella parte superiore, che contiene `Register` direttive per registrare il controllo utente e l'assembly compilato dinamicamente con la <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. La pagina contiene due metodi principali. Il `Button1_Click` metodo crea una connessione tra i controlli e la `Button2_Click` metodo disconnette i controlli.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 Dopo il caricamento della pagina, è possibile fare clic il **Connect** per connettere i controlli pulsante. Se immette del testo nel controllo casella di testo e quindi fare clic sui **invio** pulsante, verrà visualizzato il testo nel controllo connesso (non essere visualizzato se i controlli sono stati disconnessi). Se si sceglie il **Disconnect** pulsante, i controlli verranno disconnesso. È possibile verificare lo stato della connessione dei controlli usando il **modalità di visualizzazione** controllo elenco a discesa per passare alla pagina in **Connect** modalità. Dopo questa operazione, scegliere il menu dei verbi (rappresentato da una freccia) nella barra del titolo di uno dei controlli e selezionare il **Connect** elemento. Viene visualizzata la connessione dell'interfaccia utente; è disponibile perché è presente un `<asp:connectionszone>` elemento dichiarato nella pagina. È anche possibile connettere e disconnettere i controlli da questa interfaccia utente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connection" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="connection" />non è contenuto in <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> o <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> è di sola lettura.  
  
\- oppure - 
 <paramref name="connection" /> è già stato disconnesso da <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />.  
  
\- oppure - 
 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> è di sola lettura.  
  
\- oppure - 
 <paramref name="connection" /> è già stato disconnesso da <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />.</exception>
        <block subset="none" type="overrides">
          <para>È possibile eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" /> metodo se si desidera modificare l'implementazione predefinita per la disconnessione <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controlli. Se si esegue l'override del metodo e si desidera semplicemente aggiungere un'implementazione per il metodo esistente, è possibile chiamare il metodo di base prima di eseguire il proprio codice.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayMode As WebPartDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DisplayMode { System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ get(); void set(System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la modalità di visualizzazione attiva per una pagina Web che contiene controlli Web part.</summary>
        <value>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> che determina la modalità di visualizzazione di una pagina.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una pagina che contiene i controlli Web part è sempre in una delle diverse modalità di visualizzazione possibili. Per informazioni dettagliate sulle modalità di visualizzazione, vedere [Web Part Page Display Modes](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4).  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe crea le modalità di visualizzazione per una pagina Web. Utilizzo di base <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> (classe), il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo crea diversi oggetti in modalità di visualizzazione standard che possono essere utilizzati nelle pagine che contengono controlli Web part. Sono descritte in queste modalità di visualizzazione standard di <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Cenni preliminari sulla classe.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo gestisce anche le modalità di visualizzazione per pagine che utilizzano i controlli Web part. Usando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> proprietà, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo mantiene un riferimento alla modalità di visualizzazione corrente in una pagina. È anche possibile usare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> proprietà per passare una modalità di visualizzazione diverse. Per un esempio di modifica delle modalità di visualizzazione in una pagina che usa i controlli Web part, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Come parte di gestire la modalità di visualizzazione, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo fornisce anche eventi e gestori di eventi relativi alla modalità di visualizzazione, ad esempio il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> metodo e il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> (metodo). Questi metodi offrono un meccanismo per la personalizzazione del comportamento di una pagina e anche per l'aggiunta di una modalità di visualizzazione personalizzato.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra utilizzabili a livello del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> proprietà. Dopo il caricamento della pagina in un browser, è possibile utilizzare i pulsanti nella parte inferiore della pagina per cambiare la modalità di visualizzazione. La pagina è in modalità browse per impostazione predefinita al momento del caricamento. Se si passa alla modalità di progettazione, è possibile trascinare i controlli server da un'area a altra o disporre di due controlli all'interno di una zona. Se si passa alla modalità di modifica, è possibile fare clic sul menu dei verbi nell'intestazione di uno dei controlli server, selezionare **modifica**e modificare il controllo usando l'interfaccia utente modifica fornita (UI).  
  
> [!NOTE]
>  Il passaggio tra modalità di visualizzazione in un'applicazione Web part è molto comune, e si potrebbe voler fornire un modo coerente e riutilizzabile per eseguire questa operazione in tutte le pagine che contengono controlli Web part. Per un esempio di un controllo utente che modifica modalità di visualizzazione e che possa essere riutilizzato in più pagine, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/CS/wpmgrDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/VB/wpmgrDisplayModevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> assegnato alla proprietà è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> assegnato alla proprietà non fa parte delle modalità di visualizzazione supportate.  
  
\- oppure - 
L'oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> assegnato alla proprietà è disabilitato.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Modalità di visualizzazione delle pagine Web part</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Procedura dettagliata: Modifica della modalità di visualizzazione in una pagina Web part</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanged As WebPartDisplayModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventHandler ^ DisplayModeChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler " Usage="member this.DisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo la modifica della modalità di visualizzazione corrente in una pagina Web part.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modalità di visualizzazione sono parte integrante delle applicazioni Web part. Quando gli utenti passano a una modalità di visualizzazione diverse in una pagina Web, la pagina richiederà spesso un aspetto molto diverso, a seconda dello scopo della nuova modalità di visualizzazione. Dopo che è stata modificata una modalità di visualizzazione, potrebbe essere necessario apportare alcune modifiche nell'interfaccia utente (UI), ad esempio nascondere o mostrare determinati controlli, modifica dell'aspetto degli elementi dell'interfaccia utente selezionati e così via.  
  
> [!NOTE]
>  Per altre informazioni sulle modalità di visualizzazione, vedere [Web Part Page Display Modes](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). Per altre informazioni sull'utilizzo degli eventi, vedere [procedura: usare eventi in un'applicazione Web Form](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanging As WebPartDisplayModeCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventHandler ^ DisplayModeChanging;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler " Usage="member this.DisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando, in una pagina Web, un utente sceglie un verbo che avvia il processo di passaggio a una modalità di visualizzazione diversa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modalità di visualizzazione sono parte integrante delle applicazioni Web part. Quando gli utenti passano a una modalità di visualizzazione diverse in una pagina Web, la pagina richiederà spesso un aspetto molto diverso, a seconda dello scopo della nuova modalità di visualizzazione. Dopo che un utente avvia il processo di modifica a una nuova modalità di visualizzazione facendo clic su un verbo, si potrebbe voler apportare alcune modifiche nell'interfaccia utente (UI) utilizzando il <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A> proprietà per determinare quale sarà la nuova modalità di visualizzazione e quindi la modifica dell'interfaccia utente diverse elementi di conseguenza. Un modo utile per eseguire questa operazione è eseguire l'override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> metodo per personalizzare l'interfaccia utente.  
  
> [!NOTE]
>  Per altre informazioni sulle modalità di visualizzazione, vedere [Web Part Page Display Modes](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). Per altre informazioni sull'utilizzo degli eventi, vedere [procedura: usare eventi in un'applicazione Web Form](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ DisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayModes : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme in sola lettura di tutte le modalità di visualizzazione associate a un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <value>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> che contiene il gruppo di oggetti <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> associati al controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> riferimenti a proprietà tutti associati a modalità di visualizzazione, diversamente dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> proprietà, che fa riferimento solo alle modalità di visualizzazione disponibili (supportato) nella pagina corrente.  
  
 Due delle modalità di visualizzazione specificato, esplorazione e progettazione, sono sempre supportati in una pagina. Le altre tre modalità di visualizzazione, modifica, catalogo e le connessioni, sono supportate solo quando una pagina con il tipo corrispondente della zona necessario per la modalità di visualizzazione particolare a funzionare. Ad esempio, se la pagina non contiene un' <xref:System.Web.UI.WebControls.WebParts.EditorZone> zona, la modalità di visualizzazione di modifica viene visualizzato nella raccolta cui fa il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> proprietà, ma non sarà presente nella raccolta cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo a livello di codice del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> proprietà. Il codice utilizza questa proprietà per popolare l'elenco con tutte le modalità di visualizzazione disponibile nell'insieme di controlli Web part, anche quelli che non sono supportati nella pagina corrente. In questo caso, il catalogo e connettere display non sono supportate, perché i relativi richiesto zone non presenti nella pagina.  
  
 Gli altri tre modalità: di visualizzazione esplorazione, progettazione e modifica, sono supportati nella pagina. Modificare la modalità è supportata perché la pagina contiene un <xref:System.Web.UI.WebControls.WebParts.EditorZone> , durante l'esplorazione della zona e sono sempre supportate le modalità di progettazione.  
  
 Una volta caricata la pagina in un browser, è possibile usare il controllo elenco a discesa per passare dalla modalità di visualizzazione alla modalità di progettazione e quindi la modalità di modifica. In modalità di modifica, è possibile fare clic sul menu a discesa dei verbi nell'intestazione di uno dei controlli server e selezionare **modifica** la modifica del controllo. Si noti che se si seleziona **Catalog** oppure **Connect** nell'elenco a discesa elenco, viene generato un errore di pagina.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/CS/wpmgrDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/VB/wpmgrDisplayModesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Modalità di visualizzazione delle pagine Web part</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Procedura dettagliata: Modifica della modalità di visualizzazione in una pagina Web part</related>
      </Docs>
    </Member>
    <Member MemberName="DynamicConnections">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DynamicConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ DynamicConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicConnections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di tutte le connessioni dinamiche attualmente presenti in una pagina Web.</summary>
        <value>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> che contiene riferimenti a tutte le connessioni dinamiche in una pagina.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le connessioni dinamiche sono creati a livello di programmazione, anziché in modo statico. Connessioni statiche vengono create con la loro dichiarazione nel markup di una pagina Web Form. Le connessioni dinamiche vengono create a livello di codice o da un utente che ha creato una connessione usando l'interfaccia utente di connessione (UI).  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> insieme, sebbene sia di sola lettura ed è possibile modificarne il contenuto, forniscono accesso programmatico a ogni oggetto di connessione dinamica.  
  
> [!NOTE]
>  Per eseguire operazioni comuni, ad esempio la connessione o disconnessione <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, gli sviluppatori devono usare i metodi pubblici nel <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe, ad esempio <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, anziché tentare di modificare direttamente connessione gli oggetti di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> raccolta.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="EditDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ EditDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta la modalità di visualizzazione in cui gli utenti finali possono modificare i controlli server. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> campo fa riferimento a un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> oggetto che viene creato e contenuto di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Poiché si tratta di un oggetto statico, è possibile fare riferimento ad esso direttamente tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe senza la necessità di un'istanza del controllo.  
  
 Quando una pagina che contiene le Web part controlli carichi prima, si trova in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (modalità browse) per impostazione predefinita. Quando gli utenti desiderano modificare o modificare un controllo server, è necessario passare prima pagina per <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> (modalità di modifica). In secondo luogo, è necessario selezionare un controllo server specifico da modificare, scegliendo il verbo di modifica del menu dei verbi nell'intestazione del controllo. Dopo il controllo è in modalità di modifica, viene visualizzata l'interfaccia utente di modifica (UI) per la modifica del controllo selezionato.  
  
 Per abilitare la modalità di modifica in una pagina, la pagina deve contenere almeno un <xref:System.Web.UI.WebControls.WebParts.EditorZone> controlli di zona che include uno o più di modifica forniti, ad esempio il <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> controllo o controlli di modifica personalizzati.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come lavorare con i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> campo a livello di codice. Il codice consente di popolare un elenco di riepilogo a discesa con le modalità di visualizzazione supportate per la pagina, che in questo caso sono esplorazione, progettazione e modifica. Per supportare la modifica, un `<asp:EditorZone>` elemento è presente nella pagina. Si noti che, nel `Page_PreRender` metodo, il codice controlla se l'oggetto corrente <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> è impostata su <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>. In questo caso, `Label1` sarà visibile in caso contrario, `Label1` saranno nascoste.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/CS/wpmgrEditDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/VB/wpmgrEditDisplayModevb.aspx#1)]  
  
 Una volta caricata la pagina in un browser, si è in modalità browse per impostazione predefinita. Si noti che l'etichetta nella pagina è nascosta. Usare il controllo elenco a discesa per passare alla pagina modalità di modifica. Si noti che, in base al codice il `Page_PreRender` metodo, l'etichetta è ora visibile. Scegliere il **modifica** verbo nel menu dei verbi in uno dei controlli, per abilitare la modifica di tale controllo specifico.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Modalità di visualizzazione delle pagine Web part</related>
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public virtual bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che determina se lo script lato client è abilitato nella pagina Web che contiene un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <value>Valore Boolean che indica se lo script client può essere eseguito nella pagina. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> proprietà fornisce un modo per gli sviluppatori disabilitare gli script client. È possibile disabilitare lo script per motivi di sicurezza client o per garantire che tutti gli utenti di una pagina avrà un'esperienza utente simile, anche se usano diversi browser.  
  
 È possibile disabilitare client scripting mediante l'aggiunta di un `EnableClientScript` dell'attributo di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> elemento in una pagina Web, come la seguente riga di codice dichiarativo:  
  
 `<asp:webpartmanager id="manager" runat="server"`  
  
 `EnableClientScript="false" />`  
  
 Gli sviluppatori possono inoltre eliminare questa proprietà tramite l'eredità dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classi e impostando il valore predefinito valore `false`.  
  
 Il set di controlli Web part utilizza per fornire alcuni dei client dell'interfaccia utente (UI) e funzioni di personalizzazione di script client. Se si disabilita client scripting, Web part controlli continuano a funzionare, ma alcune funzionalità sono disabilitate. La possibilità di trascinare i controlli in aree diverse è disabilitata, oltre alla possibilità di eseguire il rendering dei verbi in un menu elenco a discesa nella barra del titolo di un controllo (i verbi vengono invece visualizzati come collegamenti nella barra del titolo del controllo).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica l'abilitazione dell'utilizzo dei temi in una pagina Web.</summary>
        <value>Valore Boolean che indica se i temi sono abilitati. <see langword="true" /> in tutti i casi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control esegue l'override della base <xref:System.Web.UI.Control.EnableTheming%2A> per garantire che restituisce sempre un valore della proprietà `true`. Ciò avviene perché l'insieme di controlli richiede l'utilizzo dei temi per eseguire il rendering le Web part consente di controllare che le Web part sono controlli figlio del <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo e che costituiscono l'interfaccia utente (UI) di una pagina Web. Ad esempio, vengono utilizzati per eseguire il rendering le varie zone e i controlli che si trovano in aree, inclusi i diversi tipi di controlli parte (i controlli che ereditano dal <xref:System.Web.UI.WebControls.WebParts.Part> classe), controlli utente, i controlli server ASP.NET e server personalizzato controlli.  
  
 Anche se sottoposto a override <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A> proprietà viene implementata come proprietà di lettura/scrittura in base alle relative proprietà di base, non è possibile impostare la proprietà, perché per impostazione predefinita deve sempre restituire un valore di `true`. Se si prova a impostare la proprietà, un <xref:System.NotSupportedException> viene generata un'eccezione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">È stato effettuato un tentativo di impostare il valore della proprietà.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartConnecting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartConnecting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartConnecting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartConnecting();" />
      <MemberSignature Language="F#" Value="abstract member EndWebPartConnecting : unit -&gt; unit&#xA;override this.EndWebPartConnecting : unit -&gt; unit" Usage="webPartManager.EndWebPartConnecting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Completa il processo di connessione di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> a un altro controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> metodo termina il processo di connessione una <xref:System.Web.UI.WebControls.WebParts.WebPart> a un altro controllo. Si tratta della controparte per la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> (metodo).  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> metodo assicura che l'oggetto di personalizzazione fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> proprietà è modificabile, condizione necessaria perché la formazione di una connessione è a sua volta un tipo di personalizzazione. Il metodo assicura quindi che il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> l'oggetto non è `null`e infine viene chiamato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il controllo a cui fa riferimento la proprietà <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> è <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori che desiderano estendere il <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> controllo potrebbe essere necessario eseguire l'override di questo metodo in una classe derivata. Un approccio potrebbe consistere per chiamare il metodo di base e quindi aggiungere alcune per la gestione personalizzata oppure si potrebbe voler personalizzare completamente l'intero processo di completamento di una connessione tra controlli.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartEditing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartEditing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartEditing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartEditing();" />
      <MemberSignature Language="F#" Value="abstract member EndWebPartEditing : unit -&gt; unit&#xA;override this.EndWebPartEditing : unit -&gt; unit" Usage="webPartManager.EndWebPartEditing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Completa il processo di modifica di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> metodo termina il processo di modifica un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Si tratta della controparte per la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> (metodo).  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> metodo assicura che l'oggetto di personalizzazione fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> proprietà è modificabile, che è necessaria perché la modifica di un controllo è un processo che richiede modifiche di personalizzazione. Il metodo assicura quindi che il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> l'oggetto non è `null`, in modo che attualmente selezionato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo può cambiare e infine viene chiamato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il controllo a cui fa riferimento la proprietà <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> è <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori che desiderano estendere il <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> controllo potrebbe essere necessario eseguire l'override di questo metodo in una classe derivata. Un approccio potrebbe consistere per chiamare il metodo di base e quindi aggiungere alcune per la gestione personalizzata oppure si potrebbe voler personalizzare completamente l'intero processo di completamento di modifica di un controllo. Ad esempio, nel metodo di override, è possibile chiamare innanzitutto il metodo di base e quindi aggiungere un codice che determina quali modifiche sono state apportate e consente di visualizzare l'elenco delle modifiche all'utente finale come un messaggio di conferma.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="ExportSensitiveDataWarning">
      <MemberSignature Language="C#" Value="public virtual string ExportSensitiveDataWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExportSensitiveDataWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExportSensitiveDataWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ExportSensitiveDataWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExportSensitiveDataWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo di un messaggio di avviso che viene visualizzato quando l'utente tenta di esportare dati di stato sensibili da un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Stringa che contiene il messaggio di avviso. Il messaggio predefinito è un valore specifico delle impostazioni cultura fornito in .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un utente tenta di esportare i dati di stato sensibili da un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo, se i dati in fase di esportazione proviene da un membro che è stato contrassegnato come riservato nel codice sorgente, all'utente in una finestra di messaggio che comunica che viene visualizzato un messaggio di avviso i dati sensibili viene esportati e fornisce la possibilità di annullare l'esportazione. Gli sviluppatori possono contrassegnare i dati di un determinato membro impostando il `isSensitive` parametro del `[Personalizable]` dell'attributo `true` sul membro. Per altre informazioni su questo attributo e un parametro, vedere il <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> classe.  
  
> [!IMPORTANT]
>  Quando si usa la funzionalità di esportazione di Web part, i dati sensibili possono essere potenzialmente esportati a utenti non autorizzati. Per informazioni dettagliate su come proteggere contro questa minaccia, vedere [proteggere le pagine Web part](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 Ogni volta che gli utenti tentano di esportazione, viene visualizzato il messaggio predefinito. Tuttavia, assegnando un valore per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> proprietà, è possibile fornire un messaggio di avviso personalizzate.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo dichiarativo del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> proprietà.  
  
 Il codice per la pagina Web seguente usa uno standard <xref:System.Web.UI.WebControls.BulletedList> controllano e lo inserisce in una zona. Il controllo sarà incluso in un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controllo in fase di esecuzione che consentono di agire come un vero e proprio <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Per rendere il controllo può essere esportata, un' `ExportMode` attributo viene aggiunto al `<asp:bulletedlist>` elemento e il valore dell'attributo è impostato su <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>, il che significa che i dati sensibili e non sensibili può essere esportato. Si noti inoltre che nel `<asp:webpartmanager>` elemento, il `ExportSensitiveDataWarning` attributo viene assegnato un valore personalizzato.  
  
 Si noti che per l'esempio di codice funzioni, è disponibile un'impostazione che è necessario aggiungere nel file Web. config per consentire l'esportazione di file di descrizione di Web part. Assicurarsi di avere un file Web. config nella stessa directory della pagina Web per questo esempio di codice. All'interno di `<system.web>` sezione, assicurarsi che vi sia un `<webParts>` elemento con un `enableExport` attributo impostato su `true`, come nel markup seguente.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/CS/wpmgrExportSensitiveWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/VB/wpmgrExportSensitiveWarningVB.aspx#1)]  
  
 Una volta caricata la pagina in un browser, scegliere il menu dei verbi (rappresentato da una freccia verso il basso) nella barra del titolo del controllo che contiene i collegamenti. Nel menu dei verbi, selezionare **esportare**e notare che viene visualizzata una finestra di messaggio con il messaggio di avviso personalizzata. Se si desidera continuare con l'esportazione, fare clic su **OK**, che consentirà di salvare una copia locale di un file di descrizione XML con tutti i dati relativi al controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="ExportWebPart">
      <MemberSignature Language="C#" Value="public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExportWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member ExportWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Xml.XmlWriter -&gt; unit&#xA;override this.ExportWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Xml.XmlWriter -&gt; unit" Usage="webPartManager.ExportWebPart (webPart, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo da cui verranno esportati i dati.</param>
        <param name="writer">Classe <see cref="T:System.Xml.XmlWriter" /> che scrive i dati esportati da <paramref name="webPart" /> in un file di descrizione XML.</param>
        <summary>Crea un file di descrizione XML che contiene i dati dello stato e i dati di proprietà relativi a un controllo server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> metodo assembla i vari dati di stato e di proprietà da `webPart` in un file XML. I dati includono informazioni relative al controllo stesso, inclusi assembly, i dati sullo stato e i dati della proprietà. L'utente che avvia l'esportazione può salvare il file XML al disco nel computer locale o in rete. Gli altri utenti quindi possono importare il file di descrizione in una pagina diversa o un sito Web e applicare i dati di stato e di proprietà in un'istanza diversa di `webPart`. Fornisce un meccanismo rapido e comodo per gli utenti di condividere e riutilizzare le proprie impostazioni dei controlli server e fornisce inoltre agli sviluppatori un modo per controllare l'aspetto e il comportamento dei controlli esportati e importati.  
  
 Proprietà `webPart` non vengono esportati per impostazione predefinita. Per abilitare l'esportazione di una proprietà, è necessario contrassegnarla con il `[Personalizable]` attributo nel codice sorgente. È anche possibile contrassegnare una proprietà può essere esportata come contenente dati sensibili, impostando il `isSensitive` parametro il `[Personalizable]` dell'attributo `true`. Per impostazione predefinita `isSensitive` è `false`. Gli sviluppatori possono impostare il parametro `true` per indicare che i dati sono riservati.  
  
 Per abilitare `webPart` per l'esportazione, lo sviluppatore imposta relativi <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> valore della proprietà a una delle due <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All> (che include tutte le proprietà personalizzabili e sensibili), o a <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, che consente di esportare tutti gli elementi tranne le proprietà dipendenti .  
  
> [!IMPORTANT]
>  Consentire agli utenti di esportare i dati dai controlli e per importare dati in altri controlli, comporta alcuni rischi di protezione. Gli sviluppatori devono usare l'approccio illustrato in precedenza per proteggere dati riservati e se si desidera evitare il rischio di esposizione dei dati completamente, dovranno non abilitare l'esportazione in `webPart` affatto. Per informazioni dettagliate sui problemi di sicurezza di Web part, vedere [proteggere le pagine Web part](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> è <see langword="null" />.  
  
\- oppure - 
 <paramref name="writer" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="webPart" /> non è contenuto nell'insieme dei controlli a cui fa riferimento <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />.  
  
\- oppure - 
La proprietà <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" /> di <paramref name="webPart" /> è impostata su un valore <see cref="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None" />, che indica la disabilitazione dell'esportazione per <paramref name="webPart" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2">Protezione di Web part pagine</related>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="webPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sottoposto a override per impedire l'impostazione dello stato attivo sul controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, in quanto non dispone di interfaccia utente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Focus%2A> metodo esegue l'override della base <xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType> metodo e genera un'eccezione se il chiamante chiama il metodo. Poiché il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo non dispone di alcuna interfaccia utente e non è mai visibile agli utenti, è possibile non consentire mai lo stato attivo deve essere impostato su se stesso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Un chiamante tenta di chiamare il metodo <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" />, che non è supportato in un controllo non dotato di interfaccia utente.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ConsumerConnectionPointCollection ^ GetConsumerConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetConsumerConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&#xA;override this.GetConsumerConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" Usage="webPartManager.GetConsumerConnectionPoints webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo server che funge da consumer in una connessione.</param>
        <summary>Recupera l'insieme di oggetti <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> che possono fungere da punti di connessione da un controllo server che funge da consumer all'interno di una connessione Web part.</summary>
        <returns>Classe <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" /> che contiene tutti i punti di connessione del consumer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sempre una connessione Web part prevede esattamente due controlli, uno che agisce come provider di dati, l'altro che funge da consumer di dati. Ogni controllo deve avere uno o più metodi che sono definiti come punti di connessione. Nel caso di un controllo consumer, i relativi punti di connessione sono <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> oggetti. Il recupero dei punti di connessione del consumer è un passaggio necessario formare una connessione Web part.  
  
 Un consumer deve sempre avere almeno un punto di connessione sia in grado di stabilire una connessione. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> metodo controlla un controllo consumer e recupera una raccolta di tutti i relativi punti di connessione. Se un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo non dispone di alcun punto di connessione, il metodo restituisce una raccolta vuota.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>.  
  
 L'esempio di codice è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione in una pagina Web part.  
  
-   Una pagina Web contenente due custom <xref:System.Web.UI.WebControls.WebParts.WebPart> i controlli che possono essere connesse, e un `<asp:webpartmanager>` elemento.  
  
-   Un file di codice sorgente che contiene due personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli e un'interfaccia personalizzata.  
  
-   Spiegazione del funzionamento dell'esempio in un browser.  
  
 La prima parte dell'esempio di codice è il controllo utente per la modifica delle modalità di visualizzazione. È possibile ottenere il codice sorgente per il controllo utente dalla sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe. Per altre informazioni sulle modalità di visualizzazione e il funzionamento del controllo utente, vedere l'argomento [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Il markup dichiarativo per la pagina Web contiene `Register` direttive per il controllo utente e i controlli personalizzati. È presente un' `<asp:webpartmanager>` elemento, un `<asp:webpartzone>` elemento per contenere i controlli personalizzati e un `<asp:connectionszone>` elemento. Si noti che il `Page_Load` metodo, il codice verifica se una connessione già esiste e, in caso contrario, definisce un provider, un consumer e i rispettivi punti di connessione e quindi aggiunge una nuova connessione al set di connessioni statiche fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> proprietà. Si noti che il <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> oggetto che viene recuperato usando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> metodo viene quindi passato al <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> metodo per determinare se è possibile creare una connessione tra i due controlli.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 La terza parte dell'esempio è il codice sorgente per i controlli. È possibile ottenere tale codice e le istruzioni per la compilazione, la sezione relativa agli esempi del <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe.  
  
 Una volta caricata la pagina Web in un browser, fare clic sui **modalità di visualizzazione** controllo elenco a discesa e selezionare **Connect** per passare alla pagina in modalità di connessione. La connessione utilizza la modalità di `<asp:connectionszone>` elemento che consentono di creare connessioni tra i controlli. Nella modalità di connessione, fare clic sulla freccia verso il basso nella barra del titolo del **CAP** per attivare il menu dei verbi di controllo e quindi fare clic su **Connect**. Dopo che viene visualizzata l'interfaccia utente (UI) di connessione, si noti che, per il codice contenuto in, è già stata creata una connessione di `Page_Load` (metodo). Se si torna a questa pagina in una sessione del browser successive, questa connessione statica sarà già stata stabilita e non dovranno essere ricreate ogni volta che viene caricata la pagina.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentWebPartManager">
      <MemberSignature Language="C#" Value="public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::WebControls::WebParts::WebPartManager ^ GetCurrentWebPartManager(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="static member GetCurrentWebPartManager : System.Web.UI.Page -&gt; System.Web.UI.WebControls.WebParts.WebPartManager" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">Pagina Web che contiene un'istanza del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</param>
        <summary>Recupera un riferimento all'istanza corrente del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> in una pagina.</summary>
        <returns>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> che fa riferimento all'istanza corrente del controllo in una pagina.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> metodo è utile nei contesti in cui si desidera recuperare un riferimento all'oggetto corrente <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. È uno scenario comune in cui questa situazione si verifica se si scrive un controllo personalizzato che non è possibile sapere quali l'ID del durante lo sviluppo di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo nella relativa pagina sarà.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> metodo è statico e pertanto è possibile chiamarlo direttamente senza la necessità di un'istanza di un <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo.  
  
 Alcuni controlli nella Web part controllano di set, ad esempio <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, dispongono di un <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> proprietà che può recuperare un riferimento all'oggetto corrente <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Di conseguenza, quando si usano tali controlli, è consigliabile utilizzare questa proprietà per recuperare un riferimento.  
  
 Se si scrive il codice in un contesto in cui si conosce l'ID del <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllare, ad esempio la scrittura di codice inline all'interno di una pagina Web, è più semplice ed efficace per fare riferimento direttamente al <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo usando il relativo ID.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A>. L'esempio è costituito da due parti: un controllo server personalizzato e una pagina Web che ospita il controllo.  
  
 L'oggetto personalizzato <xref:System.Web.UI.WebControls.Label> controlli utilizza il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> metodo per recuperare l'ID del <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo sulla pagina corrente e quindi Visualizza l'ID.  
  
 [!code-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/MyManagerIDLabel.cs#2)]
 [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/MyManagerIDLabel.vb#2)]  
  
 Esempio di codice seguente fornisce la pagina Web che ospita il controllo in un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zona.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/getCurrentWPManagerCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/getcurrentWPManagervb.aspx#1)]  
  
 Una volta caricata la pagina in un browser, si noti che l'ID dell'oggetto corrente <xref:System.Web.UI.WebControls.WebParts.WebPartManager> viene visualizzato all'interno del controllo <xref:System.Web.UI.WebControls.Label> controllo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="page" /> è <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayTitle">
      <MemberSignature Language="C#" Value="protected internal virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetDisplayTitle(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetDisplayTitle(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayTitle : System.Web.UI.WebControls.WebParts.WebPart -&gt; string&#xA;override this.GetDisplayTitle : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartManager.GetDisplayTitle webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo per cui il metodo restituisce il valore di <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />.</param>
        <summary>Ottiene una stringa che contiene il valore relativo alla proprietà <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <returns>Stringa contenente il valore calcolato della proprietà <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> per <paramref name="webPart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ottiene il valore calcolato della <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> proprietà `webPart`. Quando gli sviluppatori non assegnano un valore per il <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> proprietà di un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo, questo metodo produce il valore da visualizzare come titolo. Il valore calcolato per i controlli senza nome è costituito da un numero aggiunto a una stringa, con il numero che indica la sequenza di un controllo all'interno della zona corrente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="webPart" /> non è presente nell'insieme <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />.</exception>
        <block subset="none" type="overrides">
          <para>Questo metodo può essere sottoposto a override per modificare la modalità di calcolo del titolo visualizzato.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="GetExportUrl">
      <MemberSignature Language="C#" Value="public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetExportUrl(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetExportUrl(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.GetExportUrl : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartManager.GetExportUrl webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> in fase di esportazione.</param>
        <summary>Ottiene il percorso virtuale relativo e la stringa di query che fanno parte della richiesta di esportazione di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> da parte di un utente.</summary>
        <returns>Stringa che contiene il percorso virtuale relativo e la stringa di query che formano la richiesta di esportazione di un controllo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A> metodo è un percorso virtuale relativo al percorso del server della pagina che contiene il controllo, oltre il valore di stringa di query che forma la richiesta di esportazione è inviata al server. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A> metodo codifica la stringa prima di consentire alla richiesta da inviare, per proteggersi dagli attacchi di script dannosi.  
  
> [!NOTE]
>  Per altre informazioni sulla sicurezza delle applicazioni Web part, vedere [proteggere le pagine Web part](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="GetGenericWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::GenericWebPart ^ GetGenericWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetGenericWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="webPartManager.GetGenericWebPart control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Controllo server presente in una classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> e che viene incluso come controllo figlio di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> in fase di esecuzione.</param>
        <summary>Ottiene un riferimento all'istanza del controllo <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> che contiene un controllo server.</summary>
        <returns>Controllo <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> che include <paramref name="control" /> come controllo figlio. Il metodo restituisce <see langword="null" /> se <paramref name="control" /> non è incluso in un controllo <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In generale, esistono due categorie di controlli che gli sviluppatori di inserire in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone per partecipare alle applicazioni Web part: <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli che ereditano dal <xref:System.Web.UI.WebControls.WebParts.WebPart> classe di base e altri controlli server, che possono essere standard I controlli ASP.NET, i controlli personalizzati o controlli utente. Quando uno di questi controlli è posizionato in una <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona, il controllo presenta le funzionalità di un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Oggetto <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo dispone di per sé questa funzionalità, ma non degli altri tipi di controlli server. Per abilitare gli altri controlli server fungere <xref:System.Web.UI.WebControls.WebParts.WebPart> controlla quando vengono posizionati un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona, ASP.NET esegue il wrapping con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controllo. Poiché il <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controllo eredita direttamente dai <xref:System.Web.UI.WebControls.WebParts.WebPart> (classe), fornisce i relativi controlli figlio con le funzionalità di Web part true.  
  
 Spesso in fase di esecuzione, potrebbe essere necessario agli sviluppatori di pagine ottenere un riferimento al <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controllo contenente uno dei controlli server in una zona. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> metodo consente di recuperare un riferimento al <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> (metodo). L'esempio di codice contiene un <xref:System.Web.UI.WebControls.Calendar> controllo dichiarati all'interno di un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zona. Il `Button1_Click` metodo stampa prima di tutto l'ID del <xref:System.Web.UI.WebControls.Calendar> controllo a un'etichetta e quindi Usa le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> metodo per recuperare un riferimento al <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controllo che esegue il wrapping del calendario. L'ID del <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controllo e l'ID del controllo figlio (ovvero il <xref:System.Web.UI.WebControls.Calendar> controllo), sono visualizzati entrambi in un secondo controllo label.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/CS/getGenericWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/VB/getGenericWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ProviderConnectionPointCollection ^ GetProviderConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&#xA;override this.GetProviderConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" Usage="webPartManager.GetProviderConnectionPoints webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo server che funge da provider in una connessione.</param>
        <summary>Recupera l'insieme di oggetti <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> che possono fungere da punti di connessione da un controllo server che funge da provider all'interno di una connessione Web part.</summary>
        <returns>Classe <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" /> che contiene tutti i punti di connessione del provider.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sempre una connessione Web part prevede esattamente due controlli, uno che agisce come provider di dati, l'altro che funge da consumer di dati. Ogni controllo deve avere uno o più metodi che sono definiti come punti di connessione. Nel caso di un controllo provider, i relativi punti di connessione sono <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> oggetti.  
  
 Un provider deve sempre avere almeno un punto di connessione sia in grado di stabilire una connessione. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> metodo controlla un controllo provider e recupera una raccolta di tutti i relativi punti di connessione. Il recupero dei punti di connessione del provider è un passaggio necessario formare una connessione Web part.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.  
  
 L'esempio è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione in una pagina Web part.  
  
-   Una pagina Web contenente due custom <xref:System.Web.UI.WebControls.WebParts.WebPart> i controlli che possono essere connesse, e un `<asp:webpartmanager>` elemento.  
  
-   Un file di codice sorgente che contiene due personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli e un'interfaccia personalizzata.  
  
-   Spiegazione del funzionamento dell'esempio in un browser.  
  
 La prima parte dell'esempio di codice è il controllo utente per la modifica delle modalità di visualizzazione. È possibile ottenere il codice sorgente per il controllo utente dalla sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe. Per altre informazioni sulle modalità di visualizzazione e il funzionamento del controllo utente, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Il markup dichiarativo per la pagina Web contiene `Register` direttive per il controllo utente e i controlli personalizzati. È presente un' `<asp:webpartmanager>` elemento, un `<asp:webpartzone>` elemento per contenere i controlli personalizzati e un `<asp:connectionszone>` elemento. Si noti che il `Page_Load` metodo, il codice verifica se una connessione già esiste e, in caso contrario, definisce un provider, un consumer e i rispettivi punti di connessione e quindi aggiunge una nuova connessione al set di connessioni statiche fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> proprietà. Si noti che il <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> oggetto che viene recuperato usando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> metodo viene quindi passato al <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> metodo per determinare se è possibile creare una connessione tra i due controlli.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 La terza parte dell'esempio è il codice sorgente per i controlli. È possibile ottenere tale codice e le istruzioni per la compilazione, la sezione relativa agli esempi del <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe.  
  
 Una volta caricata la pagina Web in un browser, fare clic sui **modalità di visualizzazione** controllo elenco a discesa e selezionare **Connect** per passare alla pagina in modalità di connessione. La connessione utilizza la modalità di `<asp:connectionszone>` elemento che consentono di creare connessioni tra i controlli. Nella modalità di connessione, fare clic sulla freccia verso il basso nella barra del titolo del **CAP** per attivare il menu dei verbi di controllo e quindi fare clic su **Connect**. Dopo che viene visualizzata l'interfaccia utente (UI) di connessione, si noti che, per il codice contenuto in, è già stata creata una connessione di `Page_Load` (metodo). Se si torna a questa pagina in una sessione del browser successive, questa connessione statica sarà già stata stabilita e non dovranno essere ricreate ogni volta che viene caricata la pagina.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="ImportWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart ImportWebPart(class System.Xml.XmlReader reader, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportWebPart (reader As XmlReader, ByRef errorMessage As String) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ ImportWebPart(System::Xml::XmlReader ^ reader, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member ImportWebPart : System.Xml.XmlReader *  -&gt; System.Web.UI.WebControls.WebParts.WebPart&#xA;override this.ImportWebPart : System.Xml.XmlReader *  -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.ImportWebPart (reader, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">Classe <see cref="T:System.Xml.XmlReader" /> che legge i dati di stato e di proprietà dal file di descrizione XML importato.</param>
        <param name="errorMessage">Classe <see cref="T:System.String" /> visualizzata dall'utente se si verifica un errore durante l'importazione.</param>
        <summary>Importa un file di descrizione XML che contiene i dati di stato e di proprietà per un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> e applica i dati al controllo.</summary>
        <returns>Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (o controllo server incluso in una classe <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> e quindi considerato come un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />) a cui fa riferimento il file di descrizione XML importato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> metodo Importa file di descrizione XML che è stato creato con il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> metodo per un controllo server. Non è il controllo effettivo del server che viene importato, ma solo il file di descrizione contenente i dati di stato e di proprietà relative al controllo. Il controllo e l'assembly cui viene fatto riferimento nel file di descrizione deve essere già disponibili nel server in cui un utente tenta di importare il file di descrizione.  
  
 Per abilitare l'importazione di un controllo, uno sviluppatore deve aggiungere un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo nella pagina in cui l'importazione verrà abilitata. All'interno della zona, un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo deve essere aggiunto. Questo controllo fornisce una finestra di dialogo che consente agli utenti di esplorare e individuare il file di descrizione da importare.  
  
 Dopo che un utente trova un file di descrizione e ha iniziato l'importazione, il file di descrizione viene letto dalla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> (metodo). Se non sono presenti errori e se vengono rilevati l'assembly e il controllo, il controllo server viene aggiunto al catalogo all'interno di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo e i vari dati di proprietà e lo stati specificati nel file di descrizione vengono applicate al controllo. L'utente può quindi selezionare il controllo e aggiungerlo alla pagina.  
  
> [!IMPORTANT]
>  Ad esempio la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> metodo, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> metodo presenta alcuni potenziali rischi di protezione. Dal momento che implica l'importazione di dati in un sito Web, un utente malintenzionato può provare a inserire i dati errati o script nel file di descrizione che viene importato. A questo punto i dati errati possono essere visualizzate in una pagina o in un database, o è stato possibile eseguire lo script inserito. Per una panoramica dei potenziali rischi associati all'importazione di file di descrizione e metodi per evitare tali rischi, vedere [proteggere le pagine Web part](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.EndOfStreamException">
          <paramref name="reader" /> non è in grado di leggere il file.  
  
\- oppure - 
 <paramref name="reader" />era necessario per visualizzare un messaggio di errore di importazione ma non è stato trovato nel file.  
  
\- oppure - 
 <paramref name="reader" /> ha raggiunto la fine del file senza trovare l'elemento XML che contiene i dati esportati.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2">Protezione di Web part pagine</related>
      </Docs>
    </Member>
    <Member MemberName="Internals">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Internals As WebPartManagerInternals" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ Internals { System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Internals : System.Web.UI.WebControls.WebParts.WebPartManagerInternals" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManagerInternals</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento alla classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />, utilizzata per combinare e separare un insieme di metodi la cui implementazione vera e propria avviene nella classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, ma sono soprattutto utili per gli sviluppatori dei controlli.</summary>
        <value>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" /> mediante cui una classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> può fare riferimento ai vari metodi separati nella classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> proprietà espone l'API per la chiamata in un set di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> metodi che vengono utilizzati soprattutto nei casi di estendibilità.  
  
 Sono progettati per usare questi metodi interni di accedervi tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> proprietà. Poiché la proprietà è protetto, è possibile solo accedere e chiamare i metodi all'interno di un'istanza del <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> ereditando dalla classe di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe.  
  
> [!NOTE]
>  Questa proprietà è nascosto in IntelliSense in [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]. Tuttavia, in un oggetto derivato <xref:System.Web.UI.WebControls.WebParts.WebPartManager> (classe), è comunque possibile accedere la proprietà e i relativi membri diversi.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAuthorized">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o un altro controllo server può essere aggiunto a una pagina.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La flessibilità della funzionalità di Web part è la possibilità di aggiungere i controlli server nelle pagine Web in fase di esecuzione. Esistono una serie di scenari comuni in cui un server di controllo (che può essere personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo, un controllo server personalizzato, un controllo utente o un controllo ASP.NET) può essere aggiunto.  
  
 Nei seguenti scenari comuni, controllo set tentativi di aggiungere i controlli server a una pagina Web part e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metodo viene chiamato per autorizzarle:  
  
-   Quando viene aggiunto un controllo server dichiarandolo nel markup di una pagina Web all'interno di un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona.  
  
-   Quando un controllo server viene aggiunto a livello di codice a una zona.  
  
-   Quando un utente importa un controllo server nel catalogo di controlli Web part.  
  
-   Quando un oggetto esistente controllo server viene caricato dall'archivio dati di personalizzazione.  
  
-   Quando un controllo server viene aggiunto a un <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> controllo per renderlo disponibile in un catalogo di controlli server.  
  
 In ogni scenario in cui vengono aggiunti controlli, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metodo viene chiamato per assicurarsi che siano stati soddisfatti tutti i criteri di autorizzazione per consentire un controllo da aggiungere. Quando un controllo viene autorizzato, viene aggiunto in genere come lo sarebbe se si è verificato alcun filtro. Quando un controllo non è autorizzato, il set di controlli Web part può rispondere in diversi modi, a seconda del contesto. Il set di controlli possibile esito negativo aggiungere una parte non autorizzata (se non è necessario informare l'utente), è possibile visualizzare un messaggio di errore o è possibile aggiungere un'istanza del <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> classe come segnaposto. Questo oggetto segnaposto non è visibile nella pagina, ma è visibile nel codice sorgente della pagina per indicare che è stato escluso un controllo non autorizzato.  
  
 Il determinante della autorizzazioni se un controllo è il filtro di autorizzazione. Un filtro di autorizzazione è una funzionalità nell'insieme di controlli Web part che consente agli sviluppatori di escludere da una pagina tutti i controlli che non soddisfano i criteri specificati.  
  
 Per creare un filtro, gli sviluppatori devono eseguire due operazioni. In primo luogo, è necessario assegnare un valore stringa (il valore può essere arbitrario) per il <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> proprietà della ognuno <xref:System.Web.UI.WebControls.WebParts.WebPart> si intende utilizzare nello scenario di controllo. Oltre ad assegnare un valore per questa proprietà per gli altri tipi di controlli server che non sono <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, perché se vengono inseriti nel <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, tali controlli sono inclusi in un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controllo in fase di esecuzione e il controllo eredita il <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> proprietà.  
  
 Il secondo passaggio necessario per la creazione di un filtro è su override la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> metodo, o per creare un gestore eventi per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> evento. In questi metodi, uno sviluppatore può verificare i <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> proprietà, e se il valore indica che il controllo non deve essere autorizzato, lo sviluppatore garantisce che il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metodo restituisce un valore di `false`.  
  
> [!NOTE]
>  Per esempi di codice e una descrizione di come configurare un filtro personalizzato mediante il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metodo, vedere gli argomenti per gli overload del metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAuthorized(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAuthorized(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.IsAuthorized : System.Web.UI.WebControls.WebParts.WebPart -&gt; bool" Usage="webPartManager.IsAuthorized webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o un altro controllo server di cui vengono verificate le autorizzazioni.</param>
        <summary>Esegue i passaggi iniziali della procedura di determinazione delle autorizzazioni per un controllo da aggiungere a una pagina.</summary>
        <returns>Valore Boolean che indica se è possibile aggiungere <paramref name="webPart" /> a una pagina.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> è il metodo iniziale chiamato dal controllo Web part impostato per verificare le autorizzazioni per un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Accetta `webPart` come parametro e inizia un processo che determina se il controllo verrà aggiunto a una pagina. Chiamare questo metodo direttamente dal codice quando è necessario determinare se un controllo specificato è autorizzato.  
  
 Questo metodo esegue le attività iniziali per determinare se il controllo eredita dal <xref:System.Web.UI.WebControls.WebParts.WebPart> classe oppure è un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controllare e, in questo caso, quale tipo di controllo figlio contiene. Per completare l'attività di autorizzazione, viene chiamato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload di metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29> metodo dal codice per determinare se un controllo è autorizzato a essere aggiunto a una pagina.  
  
 L'esempio di codice è costituito da tre parti:  
  
-   Una classe personalizzata <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo che esegue l'override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> (metodo).  
  
-   Una pagina Web che consente di creare un filtro per un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo.  
  
-   Una spiegazione su come eseguire l'esempio di codice.  
  
 Questo esempio di codice Usa un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo che esegue l'override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload di metodo per la gestione personalizzata del <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> proprietà. Questo controllo Verifica presenza di un valore proprietà `admin` e, se il valore è presente, autorizza il controllo. Se un controllo ha un valore diverso, non è autorizzata; i controlli senza il valore della proprietà ha l'autorizzazione, anche perché si presume che non siano parte dello scenario di filtro.  
  
 Per questo esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Questo esempio di codice Usa il metodo di compilazione dinamici. Per una procedura dettagliata che illustra come eseguire la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 La seconda parte dell'esempio di codice crea un filtro in grado di escludere un controllo. La pagina Web seguente include tre controlli server ASP.NET in un `<asp:webpartzone>` elemento. Si noti che i controlli primi e secondo hanno loro <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> impostate su valori diversi e il terzo non assegna la proprietà. Questo valore di autorizzazione può essere controllato in fase di esecuzione e il controllo può essere aggiunto alla pagina se il filtro corrisponde ai criteri impostati dallo sviluppatore. Si noti anche che il `Page_Load` metodo, il codice chiama il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29> metodo per determinare se i controlli sono autorizzati, e se in tal caso, imposta ogni controllo <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> proprietà.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 Si noti che per l'esempio di codice funzioni, è necessario aggiungere un'impostazione nel file Web. config per consentire l'esportazione di file di descrizione di Web part. Assicurarsi di avere un file Web. config nella stessa directory della pagina Web per questo esempio di codice. All'interno di `<system.web>` sezione, assicurarsi che vi sia un `<webParts>` elemento con un `enableExport` attributo impostato su `true`, come nel markup seguente.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Una volta caricata la pagina in un browser, si noti che viene visualizzato il primo controllo, perché soddisfa i criteri per il metodo sottoposto a override. Il secondo controllo non viene aggiunto alla pagina, poiché essa viene esclusa dal filtro. Il terzo controllo viene aggiunto, perché non aveva relativo <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> set di proprietà. Si noti che se si fa clic sull'icona di menu dei verbi sulla barra del titolo di uno dei due controlli, entrambi possono essere esportato perché le rispettive <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> sono stati assegnati i valori delle proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> è <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>Questo metodo viene chiamato direttamente dal codice. Se si desidera ottenere maggiore controllo a livello di codice tramite il processo di autorizzazione, è possibile eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" /> overload di metodo.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAuthorized(class System.Type type, string path, string authorizationFilter, bool isShared) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAuthorized(Type ^ type, System::String ^ path, System::String ^ authorizationFilter, bool isShared);" />
      <MemberSignature Language="F#" Value="abstract member IsAuthorized : Type * string * string * bool -&gt; bool&#xA;override this.IsAuthorized : Type * string * string * bool -&gt; bool" Usage="webPartManager.IsAuthorized (type, path, authorizationFilter, isShared)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="authorizationFilter" Type="System.String" />
        <Parameter Name="isShared" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">Oggetto <see cref="T:System.Type" /> del controllo per cui viene verificata l'autorizzazione.</param>
        <param name="path">Percorso applicazione relativo del file di origine per il controllo di cui è in corso l'autorizzazione, se si tratta di un controllo utente.</param>
        <param name="authorizationFilter">Valore di stringa arbitrario assegnato alla proprietà <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" /> di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, utilizzato per verificare se un controllo può essere aggiunto a una pagina.</param>
        <param name="isShared">Indica se il controllo di cui viene verificata l'autorizzazione è un controllo condiviso, ovvero è visibile a molti o tutti gli utenti dell'applicazione e il valore della relativa proprietà <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" /> è impostato su <see langword="true" />.</param>
        <summary>Esegue i passaggi finali della procedura di determinazione delle autorizzazioni per un controllo da aggiungere a una pagina.</summary>
        <returns>Valore Boolean che indica se un controllo dispone dell'autorizzazione all'aggiunta a una pagina.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload del metodo esegue i passaggi finali della determinazione delle autorizzazioni da aggiungere a una pagina di un controllo. Il metodo assicura che `type` è un tipo valido e che `path` ha un valore solo se il controllo in fase di verifica è un controllo utente. Viene quindi chiamato il critici <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> metodo, che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> evento.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metodo per determinare se un controllo è autorizzato a essere aggiunto a una pagina.  
  
 Il primo passaggio consiste nel creare un filtro in grado di escludere un controllo. La pagina Web seguente include tre controlli server ASP.NET in un `<asp:webpartzone>` elemento. Si noti che i controlli primi e secondo hanno loro <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> impostate su valori diversi e il terzo non assegna la proprietà. Questo valore di autorizzazione può essere controllato in fase di esecuzione e il controllo può essere aggiunto alla pagina se il filtro corrisponde ai criteri impostati dallo sviluppatore.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 Il secondo passaggio consiste nel sostituire la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> (metodo) e creare la gestione filtri di autorizzazione personalizzata. Si noti che il codice controlla se la proprietà ha un valore, in modo che qualsiasi controllo che non viene assegnato il <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> proprietà verrà aggiunti automaticamente. Se un controllo dispone di un filtro, restituisce il codice `true` solo se il valore del filtro è uguale a `admin`. Ciò viene illustrato un semplice meccanismo che è possibile usare per la visualizzazione di alcuni controlli a determinati utenti, a seconda del ruolo. Mentre un esempio completo usando ruoli esula dall'ambito di questo argomento, è possibile usare la stessa logica del metodo sottoposto a override nell'esempio di codice, ad eccezione del fatto che è possibile controllare se l'utente corrente è un ruolo che corrisponde al valore di filtro di autorizzazione e quindi aggiungere il controllo solo per tale utente. Ciò consentirebbe di creare pagine in cui alcuni utenti visualizzeranno tutti i controlli e altri utenti potranno visualizzare solo i controlli selezionati. Si tratta di come potrebbe apparire la logica che controlla il filtro se si utilizzano i ruoli:  
  
```vb  
If Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  
  return True  
Else  
  return False  
End If  
```  
  
```csharp  
if(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  
    return true;  
else  
    return false;  
```  
  
 Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Questo esempio di codice Usa il metodo di compilazione dinamici. Per una procedura dettagliata che illustra come eseguire la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 Una volta caricata la pagina in un browser, si noti che viene visualizzato il primo controllo, perché soddisfa i criteri per il metodo sottoposto a override. Il secondo controllo non viene aggiunto alla pagina, poiché il valore del filtro viene escluso. Il terzo controllo viene aggiunto, perché non aveva relativo <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> set di proprietà. Se si modifica il valore della proprietà del secondo controllo corrisponde a quello del primo controllo e quindi eseguire nuovamente la pagina, viene aggiunto anche il secondo controllo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> è un controllo utente e <paramref name="path" /> è <see langword="null" /> o una stringa vuota ("").  
  
\- oppure - 
 <paramref name="type" /> non è un controllo utente e a <paramref name="path" /> è assegnato un valore.</exception>
        <block subset="none" type="overrides">
          <para>Questo metodo può essere sottoposto a override tramite l'eredità dal <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe, se si desidera fornire una gestione aggiuntiva nella verifica dell'autorizzazione. Si potrebbe voler eseguire l'override del metodo per individuare determinati valori <paramref name="authorizationFilter" /> parametro e in base al valore, restituisce un valore booleano che determina se il controllo verrà aggiunto a una pagina.  
  
Per gli sviluppatori che desiderano anche verificare la presenza di filtri di autorizzazione e la gestione personalizzata di pagine è disponibile un'opzione per eseguire questa inline in una pagina aspx o in un file code-behind, senza la necessità di ereditare da tutte le classi. È possibile dichiarare un gestore eventi alternativo nella pagina per il <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" /> metodo del <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> controllo. Per altre informazioni ed esempi, vedere il <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" /> (metodo).</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="IsCustomPersonalizationStateDirty">
      <MemberSignature Language="C#" Value="protected virtual bool IsCustomPersonalizationStateDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsCustomPersonalizationStateDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsCustomPersonalizationStateDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomPersonalizationStateDirty : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se sono state apportate modifiche alla personalizzazione che hanno effetto sui dettagli di personalizzazione a livello di pagina gestiti dal controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <value>Valore Boolean che indica se sono state apportate modifiche alla personalizzazione. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controlli utilizza il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> internamente per rilevare se i dati di personalizzazione a livello di pagina che gestisce proprietà è stata modificata. I dati sulla personalizzazione vengono modificati quando gli utenti eseguono azioni a livello di pagina, ad esempio aggiungendo o rimuovendo <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, la connessione o disconnessione di controlli, la modifica del layout della pagina tramite lo spostamento dei controlli e altre azioni.  
  
> [!NOTE]
>  Gli utenti possono anche eseguire personalizzazioni a livello di controllo, che indica che essi apportare modifiche di personalizzazione a un controllo specifico, e le modifiche interessano solo tale controllo. Un esempio potrebbe essere il controllo di modifica e modifica il testo del titolo o il colore di sfondo. Personalizzazione a livello di controllo non influisce sui dati di personalizzazione a livello di pagina rilevati dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> (controllo), quindi la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> valore della proprietà non viene modificato in `true` al momento della personalizzazione a livello di controllo.  
  
 Anche se il metodo è protetto e non è accessibile direttamente da un chiamante, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> proprietà sono accessibili direttamente dai chiamanti, e restituisce il valore di questa proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.PersonalizationState.IsDirty" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.PersonalizationState.SetDirty" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="webPartManager.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Contiene i dati di stato permanenti da caricare.</param>
        <summary>Carica i dati di stato del controllo salvati da una precedente richiesta della pagina e deve essere ripristinato alla richiesta successiva.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A> metodo è utile per il ripristino dei dati di proprietà che devono essere resa persistente durante i postback di una pagina, anche quando il <xref:System.Web.UI.Control.EnableViewState%2A> è impostata su `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> non è un oggetto <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> valido.</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit&#xA;override this.LoadCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="webPartManager.LoadCustomPersonalizationState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> che contiene i dati sullo stato da caricare.</param>
        <summary>Archivia i dati di personalizzazione che sono stati passati al controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> dagli oggetti di personalizzazione da usare in un secondo momento durante il processo di inizializzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A> metodo fornisce i dati di stato salvato sotto forma di un <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> oggetto. Questi dati vengono infine utilizzati per caricare i dati sulla personalizzazione di controlli Web part e per eseguire altre attività di inizializzazione.  
  
> [!NOTE]
>  Questo metodo viene chiamato da una sequenza di metodi che inizia quando la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A> metodo richiede inizialmente associato <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> oggetto da fornire ai dati sulla personalizzazione di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo.  
  
 È possibile chiamare questo metodo direttamente dal codice. Tuttavia, è possibile chiamare direttamente le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A> metodo, che a sua volta chiama il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A> metodo e restituisce i dati sulla personalizzazione.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori possono eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> metodo in un oggetto derivato <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="MediumPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MediumPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MediumPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MediumPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MediumPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MediumPermissionSet : System.Security.PermissionSet" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Security.PermissionSet" /> che concede solo l'autorizzazione <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> e l'autorizzazione <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</summary>
        <value>Oggetto <see cref="T:System.Security.PermissionSet" /> che concede solo l'autorizzazione <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> e l'autorizzazione <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.PermissionSet> oggetto restituito da questa proprietà viene utilizzata durante l'importazione per la deserializzazione di tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimalPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MinimalPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MinimalPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MinimalPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimalPermissionSet : System.Security.PermissionSet" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Security.PermissionSet" /> che concede solo l'autorizzazione <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> e l'autorizzazione <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</summary>
        <value>Ottiene un oggetto <see cref="T:System.Security.PermissionSet" /> che concede solo l'autorizzazione <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> e l'autorizzazione <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.PermissionSet> oggetto restituito da questa proprietà viene utilizzato durante l'importazione di tutti gli elementi ad eccezione del fatto digitare la deserializzazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveWebPart">
      <MemberSignature Language="C#" Value="public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberSignature Language="F#" Value="abstract member MoveWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; unit&#xA;override this.MoveWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; unit" Usage="webPartManager.MoveWebPart (webPart, zone, zoneIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o altro controllo server di cui viene eseguito lo spostamento.</param>
        <param name="zone">Zona <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> di destinazione per lo spostamento di <paramref name="webPart" />.</param>
        <param name="zoneIndex">Integer che indica l'indice del parametro <paramref name="webPart" /> relativo ad altri controlli all'interno del parametro <paramref name="zone" />.</param>
        <summary>Sposta un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o un controllo server da un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> a un'altra o in una nuova posizione all'interno della stessa area.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controlli utilizza il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metodo spostare `webPart` in una nuova posizione nella stessa area o in un'area diversa. È possibile chiamare questo metodo direttamente dal codice e viene anche richiamato quando un utente si sposta un controllo in una nuova posizione utilizzando diverse opzioni nell'interfaccia utente Web part (UI).  
  
 Una serie di condizioni deve essere soddisfatti prima `webPart` può essere spostato, e la maggior parte di questi elementi sono indicata da elementi elencati nella sezione delle eccezioni di questo argomento. Se `webPart` non è stata inclusa in un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona per cominciare, non può essere spostato in una zona.  
  
 Dopo che sono state soddisfatte le condizioni, la sequenza di azioni seguente si verifica per spostare `webPart`:  
  
1.  Il metodo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> genera l'evento <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>.  
  
2.  `webPart` viene rimosso dal relativo fuso orario corrente (se necessario) e aggiunto alla nuova area o nella nuova posizione all'interno dell'area corrente.  
  
3.  Il metodo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> genera l'evento <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>.  
  
4.  Il `zoneIndex` di ogni <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo nelle aree di origine e di destinazione viene reimpostato in modo da riflettere lo spostamento del controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metodo direttamente dal codice per spostare un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo da un'area a altra.  
  
 L'esempio di codice è costituito da tre parti:  
  
-   Un controllo utente per la modifica delle modalità di visualizzazione.  
  
-   Una pagina Web per ospitare i controlli.  
  
-   Una spiegazione su come eseguire l'esempio di codice.  
  
 La prima parte dell'esempio di codice è il controllo utente per la modifica delle modalità di visualizzazione. È possibile ottenere il codice sorgente per il controllo utente dalla sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe. Per altre informazioni sulle modalità di visualizzazione e il funzionamento del controllo utente, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 La seconda parte dell'esempio è una pagina Web che contiene due aree, ognuno dei quali contiene due controlli server. Quando un utente fa clic il **WebPart spostare** pulsante della pagina, il codice nel `Button1_Click` metodo consente di spostare un controllo dalla zona prima in una nuova posizione nella seconda area. Si noti che il codice deve chiamare prima il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> metodo per recuperare il <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> oggetto che esegue il wrapping di `list1` controllo. Questa operazione è necessaria perché il primo parametro del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metodo richiede un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllano, mentre `list1` è un controllo server ASP.NET.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/CS/MoveWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/VB/MoveWebPartVB.aspx#1)]  
  
 Dopo il caricamento della pagina, fare clic sui **WebPart spostare** pulsante e il controllo che contiene i collegamenti verrà spostato in corrispondenza della posizione al centro della seconda area. Lo spostamento del controllo viene eseguito a livello di codice chiamando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> (metodo). È anche possibile usare la **modalità di visualizzazione** controllo elenco a discesa per passare alla pagina in modalità di progettazione e in modalità progettazione, è possibile trascinare i controlli in aree diverse o posizioni diverse nelle stesse aree. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metodo viene chiamato anche dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo per gestire tali avviata dall'utente viene spostato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="webPart" /> non è contenuto nell'insieme <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.  
  
\- oppure - 
 <paramref name="zone" /> non è contenuto nell'insieme <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" /> del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.  
  
\- oppure - 
L'area a cui fa riferimento la proprietà <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Zone" /> del controllo <paramref name="webPart" /> è <see langword="null" />, che indica che <paramref name="webPart" /> non è attualmente contenuto in un'area.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> o <paramref name="zone" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="zoneIndex" /> è minore di zero.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizeWebPart">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizeWebPart(class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizeWebPart (e As WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizeWebPart(System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs -&gt; unit&#xA;override this.OnAuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs -&gt; unit" Usage="webPartManager.OnAuthorizeWebPart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" /> in cui sono contenuti i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" /> e richiama un gestore per l'evento, se presente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> metodo viene chiamato dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metodo, quando un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo è in corso selezionato per l'autorizzazione da aggiungere a una pagina. Quando la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> viene chiamato, genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> evento, e se è presente un metodo del gestore dell'evento, richiama il gestore.  
  
 Il processo di autorizzazione <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli costituisce un'importante funzionalità di Web part. Ogni <xref:System.Web.UI.WebControls.WebParts.WebPart> o un controllo server che viene aggiunto a una zona dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo passa attraverso un processo di autorizzazione per determinare se il controllo può essere aggiunto. Per impostazione predefinita, il set di controlli Web part non fornisce i criteri di filtro per impedire l'aggiunta a una zona di controlli. Ma il set di controlli forniscono i meccanismi necessari agli sviluppatori di creare i propri criteri di filtro. Tramite questi meccanismi, è possibile creare scenari di filtro personalizzati. Ad esempio, è possibile creare un filtro in modo che, se un utente è incluso un ruolo di amministratore, alcuni controlli potrebbero essere aggiunti a una zona quando viene eseguito il rendering della pagina e se l'utente è in un ruolo utente, tali controlli non verrebbero aggiunti.  
  
 I meccanismi per il filtraggio dei controlli durante il processo di autorizzazione sono il <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> proprietà sul <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> metodi e il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> evento sul <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo.  
  
 Per creare un filtro, esistono essenzialmente due attività. In primo luogo, si assegna stringhe per il <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> proprietà della ognuno <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo che si desidera filtrare. Questi valori stringa possono essere arbitrari, ma devono contenere i criteri che si desidera filtrare. Ad esempio, se si desidera un determinato controllo da aggiungere a un'area solo se un amministratore visualizza la pagina, quindi è possibile assegnare un valore stringa `admin` alla proprietà. È quindi possibile usare la funzionalità di ruoli ASP.NET e aggiungere tutti gli utenti del sito a diversi ruoli come amministratore, manager e utente. Durante il caricamento di una pagina, il codice di filtro verifica il ruolo di un utente, confrontarlo con il valore del filtro di autorizzazione su un controllo viene selezionato e se, ad esempio, l'utente è in un ruolo di amministratore e impostare il controllo <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> valore da `admin`, è stato possibile aggiungere il controllo.  
  
 Il secondo passaggio nella creazione di un filtro consiste nello scrivere codice per verificare i <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> i valori delle proprietà in <xref:System.Web.UI.WebControls.WebParts.WebPart> controlla e determinare se ogni controllo è autorizzato prima di essere aggiunto alla propria zona. Sono disponibili due opzioni per la posizione in cui inserire il codice di questo filtro. La prima opzione è l'opzione preferita per gli sviluppatori di pagine. È possibile creare un metodo per gestire il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> evento direttamente nel codice di script server della pagina Web o in un file di separazione del codice. Associare il metodo dell'evento aggiungendo il `OnAuthorizeWebPart` dell'attributo al tag per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllare nella pagina, come illustrato nel codice di markup di esempio seguente.  
  
```  
<asp:webpartmanager id="manager1" runat="server"   
   OnAuthorizeWebPart="manager1_AuthorizeWebPart" />  
```  
  
 Tutto il metodo personalizzato deve eseguire operazioni è controllare ogni <xref:System.Web.UI.WebControls.WebParts.WebPart> di controllo per i criteri di filtro e quindi, in base ai risultati, assegnare un valore booleano per la <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> proprietà del <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs> oggetto per indicare se il <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo può essere aggiunto. Il codice nella sezione esempio illustra come eseguire questa operazione.  
  
 La seconda opzione per la posizione in cui inserire il codice di filtro consiste nell'ereditare dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> classe ed eseguire l'override di un metodo per controllare i criteri di filtro. I due metodi è possibile eseguire l'override per questo scopo sono le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> metodo o il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> (metodo). Anche se entrambi i metodi funzionerebbero, nella maggior parte dei casi è preferibile eseguire l'override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metodo, perché consente di aumentare il controllo a livello di codice tramite il processo di autorizzazione intero, mentre il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> metodo esegue solo un'attività specifica , che consiste nel generare l'evento e controllo per un gestore. Per un esempio di codice di una classe personalizzata <xref:System.Web.UI.WebControls.WebParts.WebPartManager> che esegue l'override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metodo, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> overload del metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare un gestore di evento personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> evento, in modo che il gestore può fornire codice di filtro personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> (metodo). In questo esempio sarebbe un modo comune per uno sviluppatore di pagine fornire uno scenario di filtro e l'autorizzazione di <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli da aggiungere a una pagina.  
  
 Nella pagina Web, si noti che il `<asp:webpartmanager>` elemento presenta il `OnAuthorizeWebPart` attributo con il nome del gestore dell'evento assegnato a esso. Il metodo controlla se i controlli nella pagina hanno le rispettive <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> i valori di proprietà impostati `admin` e, in caso affermativo, restituisce `true`, che significa che saranno autorizzati e aggiunto alla pagina.  
  
> [!NOTE]
>  Si noti che i controlli che non è assegnato qualsiasi valore di <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> proprietà vengono aggiunti anche, perché questi sono considerati non deve per essere parte di uno scenario di filtro. Il risultato sarà un approccio comune in uno scenario di filtro: alcuni controlli vengono filtrati e ad altri utenti non sarebbe, in quanto si presume che sia disponibile per tutti gli utenti.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 Poiché l'impostazione degli utenti nei ruoli non rientra nell'ambito di questo argomento, questo esempio di codice non controlla i ruoli utente nelle operazioni di filtro. Tuttavia, lo scenario di filtro dei controlli in base ai ruoli utente è probabilmente uno degli usi più comuni di questa funzionalità di filtro. Se si dispone dei ruoli del sito e si desidera controllare i ruoli utente in questo metodo per filtrare i controlli, il metodo sarebbe il seguente blocco di codice (e l'approccio più semplice nell'esempio di codice precedente, che non utilizza i ruoli).  
  
```vb  
Protected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  
  As Object, ByVal e As WebPartAuthorizationEventArgs)  
  
  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  
    If Roles.IsUserInRole(Page.User.Identity.Name, _  
      e.AuthorizationFilter) Then  
  
      e.IsAuthorized = True  
    Else  
      e.IsAuthorized = False  
    End If  
  End If  
  
End Sub  
```  
  
```csharp  
protected void mgr1_AuthorizeWebPart(object sender,   
  WebPartAuthorizationEventArgs e)  
{  
  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  
  {  
    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  
      e.IsAuthorized = true;  
    else  
      e.IsAuthorized = false;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionsActivated : EventArgs -&gt; unit&#xA;override this.OnConnectionsActivated : EventArgs -&gt; unit" Usage="webPartManager.OnConnectionsActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" /> che indica che una pagina e i relativi controlli sono stati caricati e che sono state attivate le connessioni nella pagina per avviare la condivisione dei dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A> metodo che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> evento dopo che una pagina ha completato il processo di caricamento. Il metodo fornisce un modo per aggiungere un gestore per l'evento.  
  
 Gli sviluppatori di pagine è possono aggiungere un gestore personalizzato per l'evento mediante l'aggiunta di un `OnConnectionsActivated` dell'attributo di `<asp:webpartmanager>` elemento in una pagina e quindi assegnando un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori possono eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" /> metodo in un oggetto derivato <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivating">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivating (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivating(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivating (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivating(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionsActivating : EventArgs -&gt; unit&#xA;override this.OnConnectionsActivating : EventArgs -&gt; unit" Usage="webPartManager.OnConnectionsActivating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" /> che indica che una pagina e i relativi controlli sono stati caricati e che il processo di attivazione delle connessioni può iniziare.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> metodo che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> evento, che offre agli sviluppatori con un meccanismo per la personalizzazione a livello di codice il processo di attivazione di connessioni.  
  
 Gli sviluppatori di pagine è possono aggiungere un gestore personalizzato per l'evento mediante l'aggiunta di un `OnConnectionsActivating` dell'attributo di `<asp:webpartmanager>` elemento in una pagina e quindi assegnando un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori possono eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" /> metodo in un oggetto derivato <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanged(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanged (e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanged(System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="webPartManager.OnDisplayModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> che contiene i dati dell'evento associati alla modalità di visualizzazione modificata.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> per indicare che il controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> ha completato il processo di passaggio da una modalità di visualizzazione a un'altra in una pagina Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> metodo nella relativa base costituiscono semplicemente la generazione di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> evento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È possibile eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" /> (metodo). Ad esempio, dopo una modifica della modalità di visualizzazione, si potrebbe voler modificare alcuni elementi dell'aspetto dell'interfaccia utente (UI), a seconda che visualizzano la modalità è inclusa nel <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs.OldDisplayMode" /> proprietà. Oppure si potrebbe voler alcune parti del contenuto, visualizzare o nascondere un determinato controllo.  
  
Quando si esegue l'override del metodo, si dovrebbe normalmente chiamare il metodo di base come ultimo passaggio del metodo sottoposto a override, in modo che il codice personalizzato viene eseguito per primo e ultimo, viene generato l'evento che indica che è stato completato il passaggio della modalità.</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanging(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanging (e As WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanging(System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs -&gt; unit" Usage="webPartManager.OnDisplayModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Classe <see cref="T:System.EventArgs" /> che contiene i dati dell'evento associati alla modalità di visualizzazione in corso di modifica.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" /> per indicare che il controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> sta eseguendo il passaggio da una modalità di visualizzazione a un'altra in una pagina Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> metodo nella relativa base costituiscono semplicemente la generazione di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging> evento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È possibile eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" /> (metodo). Ad esempio, come una modalità di visualizzazione in fase di modifica, è possibile controllare quale sarà la nuova modalità di visualizzazione (usando il <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode" /> proprietà) e modificare un elemento nell'interfaccia utente (UI) basato su quale sarà la nuova modalità di visualizzazione. Se si disponeva di una modalità di visualizzazione personalizzata, è possibile rendere visibili alcuni controlli se la modalità personalizzata si intende usare la nuova modalità di visualizzazione.  
  
Quando si esegue l'override di questo metodo, è in genere deve chiamare il metodo di base come primo passaggio del metodo sottoposto a override, in modo che l'evento viene generato per indicare che una modalità di visualizzazione sta per cambiare. Quindi, il codice personalizzato può apportare modifiche nell'interfaccia utente (UI) prima che la nuova modalità di visualizzazione viene effettivamente visualizzata.</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="webPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.Init" />, che è il primo evento del ciclo di vita del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A> metodo chiama il metodo di base, che genera il <xref:System.Web.UI.Control.Init> evento per il controllo e quindi esegue diversi passaggi preparatori, ad esempio verificare che sia presente solo un'istanza del <xref:System.Web.UI.WebControls.WebParts.WebPartManager> in una pagina di controllo e il caricamento dati sulla personalizzazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Esiste un altro controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> sulla pagina.</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="webPartManager.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.PreRender" />, che si verifica poco prima del rendering di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> in una pagina Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender%2A> metodo chiama il metodo di base, che genera il <xref:System.Web.UI.Control.PreRender> controlla l'evento per il controllo e quindi registra alcuni script client che sono necessari nelle pagine che contengono Web part.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanged(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanged (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanged(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnSelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnSelectedWebPartChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />, che si verifica dopo la nuova selezione o l'annullamento della selezione del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> metodo che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> evento, che è in genere un punto nel tempo in cui uno sviluppatore potrebbe voler modificare l'aspetto dell'interfaccia utente (UI). Ad esempio, quando un nuovo <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo è selezionato, il controllo Web part set cambia il rendering del controllo appena selezionato. Dopo la selezione di un controllo è deselezionata, il rendering viene restituito al normale.  
  
 Dopo che un utente seleziona un determinato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo per la modifica, la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> viene chiamato il metodo. Quando l'utente ha completato la modifica del controllo e viene chiusa, in modo che la selezione del controllo è deselezionata, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> metodo viene chiamato nuovamente.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Sono disponibili diverse opzioni relative al <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> evento, per consentire agli sviluppatori di personalizzare il rendering che si verifica dopo che il controllo selezionato è stato modificato. Nel codice dichiarativo, all'interno di <see langword="&lt;asp:webpartmanager&gt;" /> è possibile impostare l'elemento di <see langword="OnSelectedWebPartChanged" /> attributo e assegnargli il nome di un metodo personalizzato. Nel metodo personalizzato, è possibile modificare il rendering dei controlli selezionati quando si verifica l'evento. Un'altra opzione consiste nell'ereditare dal <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe ed eseguire l'override del metodo. Una terza opzione consiste nel personalizzare il rendering a livello di area. ad esempio, è possibile ereditare dal <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> classe ed eseguire l'override relativo <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" /> (metodo), per personalizzare il rendering dei controlli selezionati e cancellata durante il processo di modifica.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanging(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanging (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanging(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnSelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnSelectedWebPartChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />, che si verifica durante il processo di modifica del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> correntemente selezionato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> metodo che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> evento si verifica durante il processo di modifica <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo attualmente selezionato.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo Usa questo metodo e l'evento associato, per fornire un'opportunità per annullare un processo in cui il controllo selezionato in fase di modifica. Ad esempio, il metodo viene chiamato all'interno di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> metodo e all'interno il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> metodo per fornire un modo per annullare il processo di. Se un utente sceglie il verbo di annullamento in un controllo in fase di modifica, il controllo non è più selezionato e le modifiche non vengono salvate, in quanto il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> metodo consente di annullamento delle modifiche.  
  
> [!NOTE]
>  Il metodo viene chiamato in modo analogo durante i metodi che avviano e terminano il processo di connessione una <xref:System.Web.UI.WebControls.WebParts.WebPart> a un altro controllo, per consentire l'annullamento di tale processo.  
  
 Gli sviluppatori di pagina possono creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> eventi aggiungendo il `OnSelectedWebPartChanging` dell'attributo il `<asp:webpartmanager>` elemento nel markup della pagina dichiarativo e assegna all'attributo il nome di un metodo personalizzato.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="webPartManager.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dati dell'evento associati alla rimozione del controllo.</param>
        <summary>Genera l'evento di base <see cref="E:System.Web.UI.Control.Unload" /> e rimuove l'istanza di <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> da una pagina Web.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdded(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdded (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdded(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />, che si verifica dopo l'aggiunta di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> a una pagina.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> metodo viene chiamato durante il processo di aggiunta di un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo (o un altro controllo server che viene aggiunto a un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona) a una pagina.  
  
 Gli sviluppatori di pagina possono creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> eventi aggiungendo il `OnWebPartAdded` dell'attributo il <`asp:webpartmanager>` elemento e l'assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdding">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdding(class System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdding (e As WebPartAddingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdding(System::Web::UI::WebControls::WebParts::WebPartAddingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs -&gt; unit&#xA;override this.OnWebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs -&gt; unit" Usage="webPartManager.OnWebPartAdding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />, che si verifica durante il processo di aggiunta di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (o di un controllo server o utente) a un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> metodo che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> evento per indicare che un controllo è in corso l'aggiunta. Il metodo fornisce anche l'opzione per annullare il processo di aggiunta. Se il controllo viene aggiunto correttamente, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> evento segue.  
  
 Gli sviluppatori di pagina possono fornire un gestore personalizzato per l'evento associato mediante l'aggiunta di `OnWebPartAdding` dell'attributo di `<asp:webpartmanager>` elemento in una pagina Web e quindi assegnando un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori che creano derivati <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classi possono eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" /> metodo per personalizzare la gestione dell'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosed(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosed (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosed(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" /> per segnalare che un controllo è stato rimosso dalla pagina.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> metodo che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> evento per indicare che un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo (o un altro controllo server o utente) è stato chiuso correttamente in una pagina.  
  
 Per chiudere un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo significa per rimuoverlo da una pagina in modo che ne non viene eseguito il rendering e inserirlo in una speciale oggetto contenitore anche definito in un catalogo. In un catalogo, che corrisponde alla <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> controllare, mantiene i riferimenti a chiuso <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli per ogni pagina. Se un <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> controllo viene dichiarato in una pagina all'interno di un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zona, gli utenti possono impostarla sulla modalità di visualizzazione del catalogo e aggiungere alla pagina di tutti i controlli che in precedenza sono stati chiusi.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> metodo fornisce un'opportunità per gli sviluppatori creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> evento. Gli sviluppatori di pagine è possono aggiungere un gestore personalizzato per l'evento mediante l'aggiunta di un `OnWebPartClosed` dell'attributo di `<asp:webpartmanager>` elemento in una pagina e quindi assegnando un nome di metodo personalizzato per l'attributo. Un'attività utile che uno sviluppatore può eseguire in questo metodo è un segnaposto al posto del controllo chiuso viene visualizzato, completare con una descrizione comando che informi gli utenti come aggiungere il controllo torna alla pagina.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosing(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosing (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosing(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnWebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />, che si verifica durante il processo di rimozione di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o di un controllo server da una pagina.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> metodo che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> evento per indicare che un controllo è in corso è chiuso o rimosso da una pagina. Il metodo fornisce anche l'opzione per annullare il processo di chiusura. Se il controllo viene rimosso correttamente dalla pagina, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> evento segue.  
  
 Gli sviluppatori di pagina possono fornire un gestore personalizzato per l'evento associato mediante l'aggiunta di `OnWebPartClosinging` dell'attributo di `<asp:webpartmanager>` elemento in una pagina Web e quindi assegnando un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori che creano derivati <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classi possono eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" /> metodo per personalizzare la gestione dell'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleted(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleted (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleted(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />, che si verifica dopo l'eliminazione permanente di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> da una pagina.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A> metodo viene chiamato durante il processo di eliminazione di un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo (o un altro controllo server che viene aggiunto a un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona) da una pagina.  
  
 Gli sviluppatori di pagina possono creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> eventi aggiungendo il `OnWebPartDeleted` dell'attributo il <`asp:webpartmanager>` elemento e l'assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleting(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleting (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleting(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnWebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />, che indica il processo di eliminazione di un controllo dinamico <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (o di un controllo server o utente contenuto in un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Solo dinamico <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli possono essere eliminati e, quando viene eliminato un controllo, l'istanza del controllo verrà rimosso definitivamente da una pagina e non può essere ripristinato. Dinamica <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli sono quelli che vengono aggiunti a livello di codice o da un catalogo di Web part, a differenza dei controlli statici che vengono dichiarati nel markup di una pagina Web.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> metodo che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> evento per indicare che un controllo è in corso di eliminazione definitivamente dalla relativa area. Il metodo fornisce anche la possibilità di annullare il processo di eliminazione. Se il controllo viene eliminato dalla pagina, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> evento segue.  
  
 Gli sviluppatori di pagina possono fornire un gestore personalizzato per l'evento associato mediante l'aggiunta di `OnWebPartDeleting` dell'attributo di `<asp:webpartmanager>` elemento in una pagina Web e quindi assegnando un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori che creano derivati <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classi possono eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" /> metodo per personalizzare la gestione dell'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoved(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoved (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoved(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartMoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />, che si verifica dopo lo spostamento di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> in una posizione diversa in una pagina.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> metodo che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> evento alla fine del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metodo, che assicura che il processo di spostamento di un controllo sia completato prima che qualsiasi codice nell'evento di esecuzione del gestore.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> evento viene generato quando un controllo viene trasferito all'interno della relativa area o in un'altra area e non è importante se lo spostamento viene eseguito a livello di codice o da un utente trascina il controllo.  
  
 Gli sviluppatori di pagina possono creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> eventi aggiungendo il `OnWebPartMoved` dell'attributo il <`asp:webpartmanager>` elemento e l'assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoving(class System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoving (e As WebPartMovingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoving(System::Web::UI::WebControls::WebParts::WebPartMovingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs -&gt; unit&#xA;override this.OnWebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs -&gt; unit" Usage="webPartManager.OnWebPartMoving e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />, che indica il processo di spostamento di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o di un controllo server o utente presente in un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> metodo che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> evento si verifica quando un <xref:System.Web.UI.WebControls.WebParts.WebPart> o altro controllo server è stato spostato all'interno dell'area o in un'altra area. Il metodo fornisce anche la possibilità di annullare il processo di spostamento. Se lo spostamento viene completato correttamente, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> evento segue.  
  
 Gli sviluppatori di pagina possono fornire un gestore personalizzato per l'evento associato mediante l'aggiunta di `OnWebPartMoving` dell'attributo di `<asp:webpartmanager>` elemento in una pagina Web e quindi assegnando un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori che creano derivati <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classi possono eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" /> metodo per personalizzare la gestione dell'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit&#xA;override this.OnWebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsConnected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />, che si verifica dopo la creazione di una connessione tra controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> genera l'evento corrispondente alla fine del metodo di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> (metodo), garantendo che i passaggi necessari per la connessione tra due controlli vengono completati prima che venga eseguito qualsiasi codice nel gestore dell'evento.  
  
 Il metodo consente di controllare a livello di codice il processo di creazione di connessioni e l'evento associato è un punto pratico in corrispondenza del quale aggiornare l'interfaccia utente (UI) o notificare all'utente che è stata stabilita una connessione.  
  
 Gli sviluppatori di pagina possono creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> eventi aggiungendo il `OnWebPartsConnected` dell'attributo il <`asp:webpartmanager>` elemento e l'assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit&#xA;override this.OnWebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsConnecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />, che si verifica durante il processo di creazione di una connessione tra due controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o controlli server o utente contenuti in un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> metodo che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> evento si verifica durante il tentativo di stabilire una connessione di due controlli. Il metodo offre la possibilità di annullare il tentativo di connessione. Se la connessione ha esito positivo, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> evento segue.  
  
 Gli sviluppatori di pagina possono fornire un gestore personalizzato per l'evento associato mediante l'aggiunta di `OnWebPartsConnecting` dell'attributo di `<asp:webpartmanager>` elemento in una pagina Web e quindi assegnando un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori che creano derivati <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classi possono eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" /> metodo per personalizzare la gestione dell'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit&#xA;override this.OnWebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsDisconnected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />, che si verifica dopo che una connessione tra controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> è terminata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> genera l'evento corrispondente alla fine del metodo di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metodo, che esegue il processo di terminazione di una connessione tra due controlli.  
  
 Il metodo consente di controllare a livello di codice il processo di chiusura di una connessione, in modo che gli sviluppatori possono informare l'utente, apportare modifiche all'interfaccia utente (UI) o apportare altre modifiche all'applicazione.  
  
 Gli sviluppatori di pagina possono creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> eventi aggiungendo il `OnWebPartsDisconnected` dell'attributo il <`asp:webpartmanager>` elemento e l'assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit&#xA;override this.OnWebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsDisconnecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />, che indica il processo di chiusura di una connessione tra due controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o controlli server o utente presenti in un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> metodo che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> evento che si verifica quando due controlli termina una connessione. Il metodo offre la possibilità di annullare il processo di disconnessione. Se la connessione viene rimossa correttamente il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> evento segue.  
  
 Gli sviluppatori di pagina possono fornire un gestore personalizzato per l'evento associato mediante l'aggiunta di `OnWebPartsDisconnecting` dell'attributo di `<asp:webpartmanager>` elemento in una pagina Web e quindi assegnando un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori che creano derivati <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classi possono eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" /> metodo per personalizzare la gestione dell'evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="Personalization">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Personalization As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ Personalization { System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Personalization : System.Web.UI.WebControls.WebParts.WebPartPersonalization" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento a un oggetto che contiene dati di personalizzazione per una pagina Web.</summary>
        <value>Valore <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> che contiene i dati di personalizzazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> proprietà fornisce un modo per accedere la <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> oggetto associato a una pagina tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Utilizzo di questa proprietà, è possibile accedere ai diversi membri dell'oggetto di personalizzazione. Ad esempio, è possibile usare il <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> metodo per l'ambito di personalizzazione della pagina da condiviso a un ambito di utente, o viceversa. È inoltre possibile scoprire l'ambito di personalizzazione corrente della pagina, se la personalizzazione è abilitata anche nella pagina, il provider viene utilizzato per i dati sulla personalizzazione e altro ancora.  
  
 Si noti che i dati a cui fanno riferimento le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> proprietà è solo dati di personalizzazione a livello di pagina che viene rilevati dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. I dati sulla personalizzazione di specifica del controllo, ad esempio i valori delle proprietà personalizzabili nei <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, è non fa parte di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> proprietà.  
  
> [!NOTE]
>  Per altre informazioni sulla personalizzazione di Web part, vedere [Cenni preliminari sulla personalizzazione di parti Web](https://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> proprietà a livello di codice.  
  
 La pagina Web seguente consente a un utente di immettere la modalità di modifica per modificare alcuni aspetti del <xref:System.Web.UI.WebControls.Calendar> controllo. Il **Attiva/Disattiva ambito** pulsante Attiva la pagina di utente o un ambito di personalizzazione condivisa. Il **Edit Mode** e **Browse Mode** pulsanti ogni impostarla sulla modalità di visualizzazione appropriata. Si noti che nel `<script>` sezione del file, due dei metodi di gestione degli eventi impiegano del tag di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> proprietà a cui accedere utili membri dell'oggetto sottostante. In particolare, questi metodi usano il <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> metodo e il <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> proprietà nell'oggetto di cui si accede tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> proprietà.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Personalization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/CS/wpmgrPersonalizationCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Personalization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/VB/wpmgrPersonalizationVB.aspx#1)]  
  
 Per l'esempio di codice per l'esecuzione, è necessario abilitare anche uno o più utenti di personalizzare le pagine in ambito condiviso. Aggiungere una voce al file Web. config, all'interno di `<system.web>` sezione simile alla seguente markup riportato di seguito.  
  
```  
<webParts>  
  <personalization>  
    <authorization>  
      <allow  
        users="[Replace the text and brackets with a user name or   
           group.]"  
        roles="admin"   
        verbs="enterSharedScope"  />  
    </authorization>  
  </personalization>  
</webParts>   
```  
  
 Una volta caricata la pagina in un browser, fare clic sui **Attiva/Disattiva ambito** pulsante e notare che la pagina ora indica l'ambito condiviso. Fare clic su **Edit Mode** per modificare la modalità di visualizzazione, fare clic sul menu dei verbi di controllo visibile e selezionare **modificare** dal menu di scelta. Si noti che viene visualizzata l'interfaccia utente (UI) per entrambi i controlli di modifica. A questo punto fare clic su **Browse Mode** per tornare alla visualizzazione normale. Se la pagina si trova nell'ambito condiviso, fare clic su **Attiva/Disattiva ambito** nuovamente per verificare che la pagina si trova nell'ambito di utente. Successivamente, seguire la stessa procedura per modificare di nuovo il controllo, ma si noti che ora nell'interfaccia utente di modifica, la <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> controllo non viene visualizzato. Ciò avviene perché questo controllo funziona solo quando la pagina si trova nell'ambito di personalizzazione condivisa.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320">Panoramica sulla personalizzazione delle parti Web</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScript">
      <MemberSignature Language="C#" Value="protected virtual void RegisterClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RegisterClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RegisterClientScript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RegisterClientScript();" />
      <MemberSignature Language="F#" Value="abstract member RegisterClientScript : unit -&gt; unit&#xA;override this.RegisterClientScript : unit -&gt; unit" Usage="webPartManager.RegisterClientScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente al controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> di generare script lato client utilizzato per varie funzioni di personalizzazione, come il trascinamento di controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> in una pagina Web.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webPartManager.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Classe <see cref="T:System.Web.UI.HtmlTextWriter" /> che riceve il contenuto del controllo da scrivere nella pagina.</param>
        <summary>Sottoposto a override per impedire il rendering di contenuti da parte del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="webPartManager.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva i dati dello stato relativi al controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> in modo da ripristinare i dati per future richieste nella pagina Web che contiene il controllo.</summary>
        <returns>Classe <see cref="T:System.Object" /> che contiene i dati del controllo salvati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A> metodo salva i dati per le proprietà che devono essere resa persistente postback di pagina, anche quando il <xref:System.Web.UI.Control.EnableViewState%2A> è impostata su `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SaveCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SaveCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SaveCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member SaveCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit&#xA;override this.SaveCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="webPartManager.SaveCustomPersonalizationState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> che contiene i dati sullo stato da caricare.</param>
        <summary>Salva i dati di stato della personalizzazione gestiti dal controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, in modo che sia possibile ricaricarli ogni volta che si esegue il caricamento della pagina.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A> metodo è fondamentale nel processo di personalizzazione, perché consente le impostazioni utente personalizzate devono essere archiviati per sessioni future del browser e le visite a una pagina. Il metodo salva i dati relativi allo stato della personalizzazione personalizzati, che includono elementi come il seguente: dinamica <xref:System.Web.UI.WebControls.WebParts.WebPart> o controlli server che sono stati aggiunti a una pagina o eliminati da una pagina; i controlli che sono stati spostati in una pagina e le connessioni dinamiche con stato creata o eliminata.  
  
 È possibile chiamare questo metodo direttamente dal codice. È possibile, tuttavia, chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> , che a sua volta chiama questo metodo per salvare i dati sulla personalizzazione.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori possono eseguire l'override di questo metodo in un oggetto derivato <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe per personalizzare il processo di salvataggio dei dati sulla personalizzazione.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedWebPart As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ SelectedWebPart { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPart : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o a un altro controllo server correntemente selezionato per la modifica o la creazione di una connessione a un altro controllo.</summary>
        <value>Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> correntemente selezionato per la modifica o la formazione di una connessione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> proprietà restituisce un riferimento a un <xref:System.Web.UI.WebControls.WebParts.WebPart> o un altro controllo server correntemente selezionato per la modifica o per la creazione di una connessione a un altro controllo.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo fornisce diversi metodi ed eventi utili per la gestione del processo di selezione di un controllo. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> evento si verifica solo dopo aver selezionato un controllo, ma prima che vengano apportate modifiche. Per eseguire alcune azioni sul controllo dopo che è selezionato, eseguire l'override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> (metodo). Ad esempio, si potrebbe voler modificare l'aspetto di un controllo è selezionato, ma non è stato modificato, per evidenziare visivamente il controllo selezionato.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> evento si verifica subito dopo il controllo selezionato è stato modificato. Per eseguire alcune azioni sul controllo dopo che è stata modificata, eseguire l'override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanged As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ SelectedWebPartChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.SelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo che la selezione di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> è cambiata ed è stata spostata a un altro controllo in una pagina Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento può essere utilizzato in combinazione con il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> metodo per modificare l'interfaccia utente (UI) di un controllo selezionato. Ad esempio, se l'utente passa la pagina alla modalità progettazione (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>) e quindi seleziona una <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo con l'intenzione di trascinarlo in una nuova posizione, è spesso necessario modificare il rendering del controllo selezionato, ad esempio modificando il colore del relativo bordo o sfondo mentre è selezionato.  
  
> [!NOTE]
>  Per altre informazioni sull'utilizzo degli eventi, vedere [procedura: usare eventi in un'applicazione Web Form](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanging As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ SelectedWebPartChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.SelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica durante il processo di modifica del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o del controllo server correntemente selezionato in una pagina Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento può essere utilizzato in combinazione con la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> (metodo). Gli sviluppatori di pagina possono creare un gestore eventi all'interno del codice mediante l'aggiunta di `OnSelectedWebPartChanging` dell'attributo di `<asp:webpartmanager>` elemento in una pagina e impostando il valore dell'attributo sul nome di un metodo personalizzato che gestirà l'evento.  
  
 Questo evento viene generato durante il processo di inizia o termina una connessione tra controlli e, quando inizia e termina una modifica di un controllo. Per informazioni dettagliate, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> (metodo).  
  
 In genere, quando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> evento viene generato come risultato diretto di un'azione dell'utente che le modifiche apportate al controllo selezionato, l'evento può essere annullata. Tuttavia, vi è uno scenario in cui l'evento non può essere annullato. Se un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controllo viene eliminato, il <xref:System.Web.UI.WebControls.WebParts.WebPart> tutti i controlli in esso contenuti devono essere chiusi, in caso contrario, potrebbe essere orfani. In questo caso il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo chiude il <xref:System.Web.UI.WebControls.WebParts.WebPart> , non l'utente ed è necessario determinare a quale controllo attualmente selezionato e su quando modificare la selezione senza possibilità di interruzione, in modo da poter completare il processo di pulizia tutti i controlli. Pertanto, per impostazione predefinita il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> metodo non può essere annullato in questo scenario. Per un evento correlato che può essere annullato, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="protected void SetPersonalizationDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPersonalizationDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPersonalizationDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPersonalizationDirty();" />
      <MemberSignature Language="F#" Value="member this.SetPersonalizationDirty : unit -&gt; unit" Usage="webPartManager.SetPersonalizationDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta un flag che indica che i dati della personalizzazione personalizzati del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> sono stati modificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A> metodo imposta un flag che determina i componenti sulla personalizzazione nell'insieme per salvare i dati di aggiornamento sulla personalizzazione di controlli Web part. Per altre informazioni sugli scenari che possono causare modifiche ai dati sulla personalizzazione rilevati dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllano, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A> metodo non può essere chiamato direttamente dal codice e non può essere sottoposto a override, in quanto viene usato internamente dal controllo Web part impostato come parte della funzionalità di personalizzazione di Web part.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Il metodo può essere chiamato da un oggetto derivato <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe. Questa operazione è utile se si desidera personalizzare la personalizzazione di componenti di controllo Web part impostano e pertanto è necessario controllare il processo di impostazione dei flag per i dati sulla personalizzazione.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedWebPart">
      <MemberSignature Language="C#" Value="protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetSelectedWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetSelectedWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.SetSelectedWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.SetSelectedWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o controllo server selezionato.</param>
        <summary>Imposta il valore della proprietà <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> su un valore uguale a quello del controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> correntemente selezionato o del controllo server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A> metodo viene chiamato durante i processi che iniziano o terminano la modifica del controllo specificato dal `webPart` parametro e quelli che iniziare o terminare una connessione che includa `webPart`.  
  
 All'inizio dei processi di connessione e modifica, `webPart` è il controllo che è stato selezionato per la modifica o di immettere una connessione.  
  
 Alla fine dei processi, modifica e di connessione `null` viene passato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A> (metodo), che comporta il controllo attualmente selezionato non è più selezionato.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa vuota ("") per evitare l'applicazione di interfacce al controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <value>Stringa vuota che impedisce l'assegnazione di un'interfaccia al controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> override di proprietà ereditata <xref:System.Web.UI.Control.SkinID%2A?displayProperty=nameWithType> proprietà per evitare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo, che è un controllo invisibile, dall'utilizzo di interfacce. L'implementazione della proprietà impedisce l'assegnazione restituendo sempre una stringa vuota da un'interfaccia di `get` funzione di accesso e genera sempre un'eccezione se viene eseguito un tentativo per impostare un valore nel `set` della funzione di accesso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">È stato effettuato un tentativo di impostare il valore della proprietà.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento all'insieme di tutti gli oggetti <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> in una pagina Web definiti come connessioni statiche.</summary>
        <value>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> che contiene tutte le connessioni statiche presenti nella pagina.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> proprietà viene usata dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo per monitorare e gestire tutte le connessioni statiche in una pagina. Una connessione statica, a differenza di una connessione dinamica, non dovrà essere aggiunta a una pagina ogni volta che viene eseguito il rendering della pagina.  
  
 La raccolta cui fa riferimento questa proprietà contiene tutte le connessioni statiche presenti nella pagina, se vengono creati a livello di codice o specificati con un `<asp:webpartconnection>` elemento nel markup della pagina.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra utilizzabili a livello del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> proprietà.  
  
 L'esempio di codice è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione in una pagina Web part.  
  
-   Un file di codice sorgente che contiene due personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli e un'interfaccia personalizzata.  
  
-   Una pagina Web contenente due custom <xref:System.Web.UI.WebControls.WebParts.WebPart> i controlli che possono essere connesse, e un `<asp:webpartmanager>` elemento.  
  
-   Spiegazione del funzionamento dell'esempio in un browser.  
  
 Il codice seguente contiene solo la parte pagina Web dell'esempio. È necessario anche ottenere le prime due parti di esempio, ovvero il controllo utente personalizzato e il codice sorgente per i controlli personalizzati e all'interfaccia, la sezione relativa agli esempi del <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe. Questo argomento illustra anche le opzioni per la compilazione di <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli.  
  
 La terza parte dell'esempio di codice è la pagina Web. Il markup dichiarativo per la pagina contiene `Register` direttive per il controllo utente e i controlli personalizzati. È presente un' `<asp:webpartmanager>` elemento, un `<asp:webpartzone>` elemento per contenere i controlli personalizzati e un `<asp:connectionszone>` elemento. Si noti che il `Page_Load` metodo, il codice verifica se una connessione già esiste e, in caso contrario, definisce un provider, un consumer e i rispettivi punti di connessione e quindi aggiunge una nuova connessione al set di connessioni statiche fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> proprietà.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Una volta caricata la pagina Web in un browser, fare clic sui **modalità di visualizzazione** controllo elenco a discesa e selezionare **Connect** per passare alla pagina in modalità di connessione. La connessione utilizza la modalità di `<asp:connectionszone>` elemento che consentono di creare connessioni tra i controlli. Nella modalità di connessione, fare clic sulla freccia verso il basso nella barra del titolo del **CAP** per attivare il menu dei verbi di controllo e quindi fare clic su **Connect**. Dopo che viene visualizzata l'interfaccia utente (UI) di connessione, si noti che, per il codice contenuto in, è già stata creata una connessione di `Page_Load` (metodo). Se si torna a questa pagina in una sessione del browser successive, questa connessione statica sarà già stata stabilita e non dovranno essere ricreate ogni volta che viene caricata la pagina.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="SupportedDisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedDisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ SupportedDisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedDisplayModes : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme in sola lettura di tutte le modalità di visualizzazione disponibili in una particolare pagina Web.</summary>
        <value>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> che contiene l'insieme degli oggetti <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> disponibili in una specifica pagina Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> proprietà contiene solo le modalità di visualizzazione che sono effettivamente disponibili in una pagina, in base ai tipi di controlli di zona presenti nella pagina.  
  
> [!NOTE]
>  Modalità di visualizzazione può essere disabilitata e quando una modalità di visualizzazione è disabilitata, non viene aggiunto per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> raccolta, anche quando il tipo di area che supporta tale modalità di visualizzazione corrispondente è presente nella pagina.  
  
 Modalità di progettazione e la modalità Browse sono sempre supportati. Le modalità di visualizzazione che possono variare sono la modifica, catalogo e le modalità di connessione. Ognuna di queste modalità di visualizzazione è associata a un tipo particolare di <xref:System.Web.UI.WebControls.WebParts.ToolZone> controllo. La presenza di tale zona opportunamente tipizzato in una pagina Web che fa sì che una specifica modalità di visualizzazione da aggiungere alla raccolta di cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> proprietà. Ad esempio, se una pagina Web contiene un' <xref:System.Web.UI.WebControls.WebParts.EditorZone> zona ma non un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> della zona, quindi la modalità di visualizzazione di modifica è una delle modalità supportate in questa pagina, ma la modalità di visualizzazione del catalogo non è supportata.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> della proprietà è diverso dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> proprietà, che fa riferimento a una raccolta contenente tutte le modalità di visualizzazione disponibili per l'oggetto corrente <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllare, anche quelli che non sono supportati in una pagina particolare.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo a livello di codice del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> proprietà. Il codice utilizza questa proprietà per popolare l'elenco con solo le modalità di visualizzazione disponibili nella pagina Web corrente.  
  
 Sono supportate tre modalità di visualizzazione in questa pagina: esplorazione, progettazione e la modifica. Le prime due sono sempre disponibili e la modalità di modifica è disponibile in questo esempio di codice perché la pagina contiene un <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo. Il catalogo e stabilire la connessione non vengono mostrate le modalità di visualizzazione perché le aree corrispondenti non sono presenti in questa pagina.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/CS/wpmgrSuppDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/VB/wpmgrSuppDisplayModesvb.aspx#1)]  
  
 Una volta caricata la pagina in un browser, è possibile usare il controllo elenco a discesa per passare dalla modalità di visualizzazione alla modalità di progettazione e quindi la modalità di modifica. In modalità di modifica, è possibile fare clic sul menu a discesa dei verbi nell'intestazione di uno dei controlli server e selezionare **modifica** la modifica del controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Modalità di visualizzazione delle pagine Web part</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsDirty As Boolean Implements IPersonalizable.IsDirty" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::WebParts::IPersonalizable::IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se i dati di stato personalizzati della personalizzazione gestiti dal controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> sono stati modificati in una pagina Web.</summary>
        <value>Valore Boolean che indica se i dati di stato della personalizzazione sono stati modificati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> proprietà fornisce un modo per i chiamanti determinare se i dati gestiti da lo stato di personalizzazione di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo è stato modificato. Quando gli utenti personalizzano dettagli a livello di pagina, ad esempio la modifica di layout di pagina, la creazione o l'eliminazione delle connessioni e aggiungendo o eliminando i controlli, i dati sulla personalizzazione gestiti dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllare le modifiche. Si tratta di un metodo pass-through che restituisce ai chiamanti il valore dell'elemento protetto <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> proprietà, che non sono direttamente accessibili dai chiamanti.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> proprietà non indica se i valori delle proprietà personalizzabili o le singole proprietà che influiscono sull'aspetto di singoli <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, sono stati modificati. Personalizzazione a livello di controllo verrà rilevata singolarmente per ogni controllo. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> proprietà indica solo se i dati di personalizzazione che è a livello di pagina ed è gestito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo è stato modificato.  
  
 Nell'elenco seguente vengono descritti alcuni casi comuni di personalizzazione che possono provocare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> per restituire un valore della proprietà `true`, a indicare che il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo dispone di alcuni dati di personalizzazione modificati:  
  
-   Chiusura di un valore statico <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo (o controllo server o utente) in una pagina.  
  
-   Il ripristino di un valore statico chiuso <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo dal catalogo a una pagina.  
  
-   Spostamento di un controllo all'interno dell'area o in un'altra area.  
  
-   Aggiunta di un controllo da un catalogo di <xref:System.Web.UI.WebControls.WebParts.WebPart> o controlli server o aggiunta di un controllo a livello di codice.  
  
-   Creazione di una connessione tra due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, a livello di codice o tramite l'interfaccia utente di connessione (UI).  
  
-   L'eliminazione di una connessione tra due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, a livello di codice o tramite l'interfaccia utente di connessione.  
  
 Per accedere a questo valore della proprietà, è necessario eseguire il cast di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> istanza del controllo per il <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interfaccia; è possibile quindi vengono letti il <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> valore della proprietà.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un uso semplificato della <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> proprietà, alcune comuni di personalizzazione della pagina che indica le istanze che provocano un <xref:System.Web.UI.WebControls.WebParts.WebPartManager> la modifica dei dati sulla personalizzazione del controllo.  
  
 L'esempio di codice è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare la modalità di visualizzazione in una pagina che contiene i controlli Web part.  
  
-   Un file di origine che contiene il codice per l'installazione personalizzata due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli che possono essere connessi e un'interfaccia.  
  
-   Una pagina Web che ospita tutti i controlli.  
  
-   Spiegazione del funzionamento dell'esempio di codice.  
  
 La prima parte dell'esempio di codice è il controllo utente per la modifica delle modalità di visualizzazione. È possibile ottenere il codice sorgente per il controllo utente dalla sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Cenni preliminari sulla classe. Per informazioni sulla modalità di visualizzazione e il funzionamento del controllo utente, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 La seconda parte dell'esempio è il file di origine con i controlli personalizzati e l'interfaccia. Si noti che il `IZipCode` interfaccia espone un metodo e che questo metodo come implementato in personalizzata `ZipCodeWebPart` controllo funge da un metodo di callback per abilitare `ZipCodeWebPart` per fungere da provider in uno scenario di connessione. Altro controllo `WeatherWebPart`, controllano funge da consumer in una connessione; può utilizzare l'interfaccia particolare fornita da `ZipCodeWebPart`. In un'applicazione reale, `WeatherWebPart` potrebbe utilizzare un valore di codice postale personalizzato dal provider e quindi fornire informazioni meteorologiche con interfaccia grafica per gli utenti.  
  
 Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Questo esempio di codice Usa la compilazione dinamica. Pertanto, si noti che il `Register` direttiva per il componente nella parte superiore della pagina Web contiene solo `TagPrefix` e `Namespace` attributi, senza un `Assembly` attributo. Per una procedura dettagliata che illustra come eseguire la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/ZipCodeComponent.vb#2)]  
  
 La terza parte dell'esempio di codice è la pagina Web. Si noti che lo contiene due <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone, con il primo elemento che contiene le due funzioni <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. È inoltre disponibile un' <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zona che contiene uno standard <xref:System.Web.UI.WebControls.Calendar> controllo che gli utenti possono aggiungere alla pagina. Il `<asp:connectionszone>` elemento fornisce un'interfaccia utente per gli utenti di creare connessioni tra i controlli di connessione. Nel `Page_PreRender` metodo, si noti che controlla se i dati di personalizzazione sono stato modificato e, in caso affermativo, aggiorna il testo di `Label1`.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/wpmgrIsDirtyCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/wpmgrIsDirtyVB.aspx#1)]  
  
 Una volta caricata la pagina in un browser, provare a creare alcuni degli scenari elencati nella sezione Osservazioni di questo argomento che modificherà i dati sulla personalizzazione. Quando si apportano diverse modifiche, quando una modifica interessa uno degli scenari di personalizzazione rilevati dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> , il testo del controllo il `Label1` visualizzazione del controllo per indicare che i dati di personalizzazione sono stata modificata. Ad esempio, è possibile eseguire queste operazioni:  
  
-   Creare una connessione tra controlli facendo il **collegare i controlli Web part** pulsante.  
  
-   Usare la **modalità di visualizzazione** controllo elenco a discesa per passare alla modalità di catalogo e aggiungere il **calendario personale** controllo al secondo <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zona.  
  
-   Modificare nuovamente la pagina per selezionare la modalità, fare clic su del menu dei verbi (visualizzati con un simbolo della freccia sulla barra del titolo) per il **calendario personale** controllare, quindi selezionare **chiudere** per chiuderla e aggiungerlo al catalogo di pagina.  
  
-   Restituire la pagina modalità di catalogo e aggiungere il **calendario personale** controllo tornare alla pagina.  
  
-   Usare la **modalità di visualizzazione** controllano per passare alla modalità di progettazione e ridisporre il layout dei controlli mediante il trascinamento di uno o più di essi in un'altra area o in una posizione diversa nella stessa zona.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">.NET web part, le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Load">
      <MemberSignature Language="C#" Value="void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Load (state As PersonalizationDictionary) Implements IPersonalizable.Load" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Load;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> che contiene i dati sullo stato da caricare.</param>
        <summary>Restituisce i dati sullo stato di personalizzazione salvati in precedenza che devono essere caricati nel controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è un'implementazione del <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=nameWithType> metodo, che offre un modo per il controllo Web part impostato su direttamente l'accesso protetto <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=nameWithType> (metodo). Quando questo metodo viene chiamato, archivia i dati personalizzati che sono gestiti dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo e che è stato salvato in precedenza nell'archivio dati permanente per l'uso in un secondo momento nel processo di inizializzazione.  
  
> [!NOTE]
>  Nella maggior parte dei casi, pagina e il controllo codice dello sviluppatore non necessario chiamare questo metodo, perché viene utilizzata principalmente dall'insieme come meccanismo per il recupero dei dati sulla personalizzazione di controlli Web part.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Uno scenario in cui gli sviluppatori di utilizzare questo metodo è lo sviluppo di un framework di personalizzazione da usare al posto di quello fornito dal set di controlli Web part. In questi casi, gli sviluppatori possono ereditare dal <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe ed eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" /> per restituire un'implementazione personalizzata di un <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> oggetto. L'oggetto personalizzato <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> oggetto chiama l'implementazione del <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> metodo al momento opportuno per caricare i dati di personalizzazione.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Save">
      <MemberSignature Language="C#" Value="void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Save (state As PersonalizationDictionary) Implements IPersonalizable.Save" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Save;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Classe <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> che contiene i dati dello stato da salvare.</param>
        <summary>Salva i dati di stato della personalizzazione personalizzati gestiti dal controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> metodo è un'implementazione del <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=nameWithType> metodo, che offre un modo per il controllo Web part impostato su direttamente l'accesso protetto <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=nameWithType> (metodo). Quando questo metodo viene chiamato, Salva i dati di tutte le personalizzazioni che sono gestiti dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo nell'archivio permanente dei dati configurati per un'applicazione Web part.  
  
> [!NOTE]
>  Nella maggior parte dei casi, pagina e il controllo codice dello sviluppatore non necessario chiamare questo metodo, perché viene utilizzata principalmente dall'insieme come meccanismo per il salvataggio dei dati sulla personalizzazione di controlli Web part.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Uno scenario in cui gli sviluppatori funzionerebbe con questo metodo è lo sviluppo di un framework di personalizzazione da usare al posto di quello fornito dal set di controlli Web part. In questi casi, gli sviluppatori possono ereditare dal <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe ed eseguire l'override di <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" /> per restituire un'implementazione personalizzata di un <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> oggetto. L'oggetto personalizzato <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> oggetto chiama l'implementazione del <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> metodo al momento opportuno per salvare i dati di personalizzazione.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webPartManager.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Applica i dati di stato della personalizzazione al controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> e chiama il metodo di base per consentire la registrazione delle modifiche apportate ai dati relativi allo stato di visualizzazione del controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le modifiche ai dati dello stato di visualizzazione vengono archiviate un <xref:System.Web.UI.StateBag> dell'oggetto e sono accessibili tramite il controllo <xref:System.Web.UI.Control.ViewState%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che consente la visualizzazione dei controlli figlio.</summary>
        <value>Valore Boolean che indica se un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> e i relativi controlli figlio sono visibili. <see langword="true" /> in tutti i casi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control esegue l'override della base <xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType> sempre restituire un valore della proprietà `true` per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> proprietà. Anche se il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo stesso non è visibile, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> deve essere impostata su proprietà `true` in modo che tutti i controlli figlio sono visibili per impostazione predefinita.  
  
 Se si prova a impostare il valore della <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> proprietà, viene sempre generato un errore perché il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo ha eseguito l'override del comportamento della proprietà di base e impedisce l'assegnazione di qualsiasi valore alla proprietà.  
  
 Questa proprietà non è associabile in finestre di progettazione visiva, ma è associabile in fase di esecuzione. Per ulteriori informazioni, vedere <xref:System.ComponentModel.BindableAttribute>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">È stato effettuato un tentativo di assegnare un valore alla proprietà.</exception>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdded As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartAdded;" />
      <MemberSignature Language="F#" Value="member this.WebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo l'aggiunta di un controllo dinamico <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o di un altro controllo server a un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> per indicare che l'operazione di aggiunta del controllo è riuscita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> eventi sono utili per indicare che un controllo dinamico (aggiunta a livello di codice non dichiarato nel markup della pagina) è stato aggiunto a una zona. In combinazione con il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> metodo, l'evento fornisce agli sviluppatori un modo per aggiornare l'interfaccia utente (UI) o in caso contrario, informare gli utenti che è stato aggiunto correttamente un controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdding">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdding As WebPartAddingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAddingEventHandler ^ WebPartAdding;" />
      <MemberSignature Language="F#" Value="member this.WebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler " Usage="member this.WebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica durante il processo di aggiunta di un controllo dinamico <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o un altro controllo server a un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> evento viene generato mediante la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> metodo una volta iniziato il processo di aggiunta di un controllo a una zona. Questo evento fornisce la possibilità di annullare il processo prima del completamento. Se il processo di aggiunta ha esito positivo, questo evento è seguito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> evento.  
  
 Gli sviluppatori di pagina possono fornire gestori personalizzati per l'evento aggiungendo il `OnWebPartAdding` dell'attributo di `<asp:webpartmanager>` elemento in una pagina e assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartClosed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosed As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartClosed;" />
      <MemberSignature Language="F#" Value="member this.WebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> statico (o un controllo server o utente) viene rimosso da una pagina.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> evento indica che un controllo è stato chiuso, da un utente o a livello di codice. Per chiudere un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo significa per rimuoverlo da una pagina in modo che ne non viene eseguito il rendering e inserirlo in una speciale oggetto contenitore anche definito in un catalogo. In un catalogo, che corrisponde alla <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> controllare, mantiene i riferimenti a chiuso <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli per ogni pagina. Se un <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> controllo viene dichiarato in una pagina all'interno di un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zona, gli utenti possono passare una modalità di visualizzazione del catalogo e aggiungere nuovamente a una pagina tutti i controlli che in precedenza sono stati chiusi.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> evento è associato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> (metodo), che genera l'evento e fornisce un gestore di è.  
  
 Gli sviluppatori di pagine è possono aggiungere un gestore personalizzato per l'evento mediante l'aggiunta di un `OnWebPartClosed` dell'attributo di `<asp:webpartmanager>` elemento in una pagina e quindi assegnando un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartClosing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosing As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartClosing;" />
      <MemberSignature Language="F#" Value="member this.WebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.WebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica durante il processo di rimozione di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (o di un controllo server o utente) da una pagina.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> evento viene generato dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> metodo quando la <xref:System.Web.UI.WebControls.WebParts.WebPartManager> è in corso la chiusura di un controllo barra. Se la rimozione del controllo ha esito positivo, questo evento è seguito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> evento.  
  
 Gli sviluppatori di pagina possono fornire un gestore personalizzato per l'evento aggiungendo il `OnWebPartClosed` dell'attributo di <`asp:webpartmanager>` elemento in una pagina e assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 In genere, quando la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> evento viene generato come risultato diretto di una chiusura utente un <xref:System.Web.UI.WebControls.WebParts.WebPart> (controllo), l'evento può essere annullata. Tuttavia, vi è uno scenario in cui l'evento non può essere annullato. Se un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controllo viene eliminato, il <xref:System.Web.UI.WebControls.WebParts.WebPart> tutti i controlli in esso contenuti devono essere chiusi, in caso contrario, potrebbe essere orfani. In questo caso il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo chiude il <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, non dell'utente. E quando la <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo è in corso la chiamata il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> metodo per chiudere ogni controllo e il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> viene generato l'evento, l'evento non può essere annullato (per impostazione predefinita) perché il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> deve completare l'attività di pulizia tutti i controlli della zona.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleted As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartDeleted;" />
      <MemberSignature Language="F#" Value="member this.WebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo che un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o un altro controllo server è stato eliminato da un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> eventi sono utili per indicare che un controllo dinamico (aggiunta a livello di codice non dichiarato nel markup della pagina) è stato eliminato da una zona. In combinazione con il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A> metodo, l'evento fornisce agli sviluppatori un modo per aggiornare l'interfaccia utente (UI) o in caso contrario, informare gli utenti che un controllo è stato eliminato.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleting As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartDeleting;" />
      <MemberSignature Language="F#" Value="member this.WebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.WebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica durante il processo di eliminazione permanente di un'istanza di un controllo dinamico <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o un altro controllo server da un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> evento viene generato mediante la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> (metodo), durante il processo di eliminazione di un controllo dinamico (uno che è stata aggiunta a livello di codice o da un utente tramite l'interfaccia utente Web part). L'evento fornisce la possibilità di annullare il processo prima del completamento. Se il processo di eliminazione viene completato correttamente, questo evento è seguito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> evento.  
  
 Gli sviluppatori di pagina possono fornire gestori personalizzati per l'evento aggiungendo il `OnWebPartDeleting` dell'attributo di `<asp:webpartmanager>` elemento in una pagina e assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartMoved">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoved As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartMoved;" />
      <MemberSignature Language="F#" Value="member this.WebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo che un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o un controllo server è stato spostato in una posizione diversa in una pagina Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento si applica sia statico (dichiarato nel markup di una pagina Web) e controlli dinamici. È associato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> (metodo). Poiché l'evento viene generato dopo aver completato un'operazione di spostamento, gli sviluppatori possono includere un gestore eventi per fornire notifiche agli utenti, una convalida o altre azioni. Per aggiungere un gestore eventi, è possibile aggiungere un `OnWebPartMoved` dell'attributo di `<asp:webpartmanager>` elemento in una pagina e assegnare il nome di un metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartMoving">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoving As WebPartMovingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartMovingEventHandler ^ WebPartMoving;" />
      <MemberSignature Language="F#" Value="member this.WebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler " Usage="member this.WebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica durante il processo di spostamento di un controllo dinamico <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o un altro controllo server contenuto in un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> evento viene generato quando un <xref:System.Web.UI.WebControls.WebParts.WebPart> o altro controllo server è stato spostato all'interno della propria zona, o a un'altra area. Ciò può verificarsi quando si trascina un controllo sia quando è presente un'operazione di spostamento a livello di codice.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> evento viene generato mediante la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> (metodo) che offre la possibilità di annullare il processo di spostamento prima del completamento. Se lo spostamento è completato e il controllo viene inserito in una nuova posizione, questo evento è seguito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> evento.  
  
 Gli sviluppatori di pagine è possono creare un gestore personalizzato per l'evento aggiungendo il `OnWebPartMoving` dell'attributo il `<asp:webpartmanager>` elemento e l'assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="WebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartCollection WebParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebParts As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartCollection ^ WebParts { System::Web::UI::WebControls::WebParts::WebPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebParts : System.Web.UI.WebControls.WebParts.WebPartCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento a tutti i controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> registrati dal controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> in una pagina Web.</summary>
        <value>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> che contiene riferimenti a un gruppo di controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> proprietà viene usata dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo per tenere traccia di tutti <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli contenuti all'interno di <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> aree della pagina. Anche se la raccolta è di sola lettura, è possibile accedere ai singoli <xref:System.Web.UI.WebControls.WebParts.WebPart> controllata tramite la raccolta e apportare modifiche a essi a livello di codice.  
  
> [!NOTE]
>  È possibile disporre di un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo inserito in una pagina di fuori di un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zona, che comporta il controllo non viene rilevato dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllare o fatto riferimento nel relativo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> raccolta. Tuttavia, è necessario utilizzare un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllare di fuori di una zona, perché quindi perde la funzionalità Web part e agisce come un normale controllo server.  
  
 Qualsiasi tipo di controllo che può essere inserito in una zona, se una classe personalizzata <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo, un controllo ASP.NET standard, un controllo utente o un controllo server personalizzato, può essere considerato come un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo in fase di esecuzione. Quando un controllo che non è un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo viene inserito un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zona, in fase di esecuzione verrà eseguito il wrapping del controllo con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> dell'oggetto, in modo che il controllo può comportarsi come un vero e proprio <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Pertanto, tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> proprietà, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo può tenere traccia di qualsiasi tipo di controllo di server, indipendentemente dal fatto che derivi dal <xref:System.Web.UI.WebControls.WebParts.WebPart> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> proprietà a livello di codice per accedere a singoli <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. Si noti che nel markup dichiarativo per la pagina Web, all'interno di `<asp:webpartzone>` elemento vi sono due i controlli server ASP.NET standard. Anche se questi non ereditano dal <xref:System.Web.UI.WebControls.WebParts.WebPart> classe, perché si trovano in una zona che verrà eseguito il wrapping con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> dell'oggetto in fase di esecuzione e verranno quindi inclusi nella raccolta cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> proprietà. È anche possibile aggiungere custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, controlli utente o controlli server personalizzati in quest'area, e vengono gestite allo stesso modo.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_WebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/CS/wpmgrWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_WebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/VB/wpmgrWebPartsVB.aspx#1)]  
  
 Si noti che per l'esempio di codice funzioni, è necessario aggiungere un'impostazione nel file Web. config per consentire l'esportazione di file di descrizione di Web part. Assicurarsi di avere un file Web. config nella stessa directory della pagina Web per questo esempio di codice. All'interno di `<system.web>` sezione, assicurarsi che vi sia un `<webParts>` elemento con un `enableExport` attributo impostato su `true`, come nel markup seguente.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Una volta caricata la pagina in un browser, se si fa clic il **WebPart Count** pulsante, il codice Usa il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> proprietà per restituire il conteggio dei controlli nella raccolta. Se si sceglie la **nascondere titolo del calendario** pulsante, il codice viene modificato in modo da poter sviluppare con solo un bordo e non un titolo del calendario.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsConnected;" />
      <MemberSignature Language="F#" Value="member this.WebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " Usage="member this.WebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando è stata stabilita una connessione specifica tra controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (o controlli server o utente).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> evento è associato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> (metodo). L'evento è utile perché dopo avere stabilito che una connessione è stata completata, è possibile informare l'utente di fatto, o addirittura modificare l'interfaccia utente (UI) della pagina. Ad esempio, si potrebbe voler visualizzare alcune immagine che suggerisca una connessione tra due controlli o eseguire il backup visualizzato un messaggio breve e quindi modificare la modalità di visualizzazione pagina in modalità di visualizzazione.  
  
 Gli sviluppatori di pagina possono associare un gestore dell'evento personalizzato con questo evento aggiungendo il `OnWebPartsConnected` dell'attributo di `<asp:webpartmanager>` elemento nella pagina e assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsConnecting;" />
      <MemberSignature Language="F#" Value="member this.WebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " Usage="member this.WebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica durante il processo di creazione di una connessione tra controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (o controlli server o utente posizionati in un'area <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> evento viene generato dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> (metodo), e segnala che è iniziato il processo di connessione (ad esempio, un utente ha selezionato un controllo e fatto clic su un verbo di connessione), ma non è ancora stata completata. L'evento fornisce la possibilità di annullare una connessione prima del completamento. Se la connessione viene completata correttamente, questo evento è seguito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> evento.  
  
 Gli sviluppatori di pagine è possono aggiungere un gestore personalizzato per l'evento aggiungendo il `OnWebPartsConnecting` dell'attributo di `<asp:webpartmanager>` elemento e l'assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsDisconnected;" />
      <MemberSignature Language="F#" Value="member this.WebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " Usage="member this.WebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo la chiusura di una connessione tra due controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o controlli server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> evento è associato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> (metodo). L'evento è utile perché dopo avere stabilito che una connessione viene terminata, è possibile informare l'utente, eseguire alcune operazioni di pulizia nel codice o apportare altre modifiche nell'interfaccia utente (UI).  
  
 Gli sviluppatori di pagina possono associare un gestore dell'evento personalizzato con questo evento aggiungendo il `OnWebPartsDisConnected` dell'attributo di `<asp:webpartmanager>` elemento nella pagina e assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsDisconnecting;" />
      <MemberSignature Language="F#" Value="member this.WebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " Usage="member this.WebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica durante il processo di chiusura della connessione tra controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o controlli server connessi in precedenza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> evento viene generato dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> metodo e segnala il fatto che un utente ha scelto un verbo di disconnessione o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> in caso contrario, chiamata al metodo. L'evento fornisce la possibilità di annullare il processo di chiusura di una connessione prima del completamento. Se la connessione viene chiusa correttamente, questo evento è seguito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> evento.  
  
 Gli sviluppatori di pagine è possono aggiungere un gestore personalizzato per l'evento aggiungendo il `OnWebPartsDisconnecting` dell'attributo di `<asp:webpartmanager>` elemento e l'assegnazione di un nome di metodo personalizzato per l'attributo.  
  
 In genere, quando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> evento viene generato come risultato diretto di un'azione dell'utente che termina con una connessione, l'evento può essere annullata. Tuttavia, esistono diversi scenari in cui l'evento non può essere annullato. Il primo scenario è, se un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controllo viene eliminato, il <xref:System.Web.UI.WebControls.WebParts.WebPart> tutti i controlli in esso contenuti devono essere chiusi, in caso contrario, potrebbe essere orfani. In questo caso il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo chiude il <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, non l'utente e si deve anche essere in grado di terminare le connessioni di eventuali controlli connessi senza possibilità di interruzione, in modo da poter completare il processo di pulizia e chiusura tutti i controlli. Pertanto, per impostazione predefinita il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> metodo non può essere annullato in questo scenario. Per un evento correlato che può essere annullato, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> evento.  
  
 Il secondo scenario in cui il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> evento non può essere annullato quando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> (ciò chiamato durante ogni richiesta a una pagina, ad esempio) viene chiamato il metodo, viene rilevato un conflitto tra le connessioni esistenti in una pagina. Ad esempio, forse un utente si connette controllo x per y di controllo, ma condiviso di un utente si connette controllo x per controllare z e ancora controllo x non è consentita in modo da formare più connessioni. In questo caso, le singole impostazioni dell'utente per la connessione hanno la precedenza e il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo risolve il conflitto, chiamando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> (metodo) e termina la connessione tra x e z per l'utente specifico. Poiché la disconnessione è essenziale per risolvere il conflitto, per impostazione predefinita il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> evento non può essere annullato in questo scenario.  
  
 Il terzo scenario in cui il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> metodo non può essere annullato quando un <xref:System.Web.UI.WebControls.WebParts.WebPart> o controllo server che è attualmente connesso viene eliminato o chiuso. Poiché il controllo dovrà essere rimosso dalla pagina, è una necessità logica per rimuovere la connessione. Pertanto, quando la <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo richiama il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metodo, che a sua volta genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> evento, per impostazione predefinita vi è alcuna possibilità di annullare l'evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="Zones">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Zones As WebPartZoneCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ Zones { System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Zones : System.Web.UI.WebControls.WebParts.WebPartZoneCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartZoneCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento a un insieme di tutte le aree <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> in una pagina Web.</summary>
        <value>Classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneCollection" /> che fa riferimento a un gruppo di aree <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> proprietà viene usata dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo per tenere traccia di <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone in una pagina Web. Si noti che la proprietà non fa riferimento a tutti i tipi di aree di; fa riferimento solo le zone che derivano dal <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> classe, tra cui <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  
  
 Anche se la raccolta cui fa riferimento la proprietà è di sola lettura, è possibile usarlo per accedere ai singoli oggetti nella raccolta e usarle a livello di codice.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> proprietà a livello di codice per accedere a singoli <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> controlli di zona. Si noti che nel markup dichiarativo per la pagina Web, sono presenti due `<asp:webpartzone>` elementi, ognuno dei quali contiene un controllo server. Nel `<script>` sezione della pagina, il codice viene utilizzato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> proprietà a cui accedere alle singole aree, elencando tutti gli ID di area e quindi modificando il colore di sfondo della seconda area.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Zones#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/CS/wpmgrzonescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Zones#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/VB/wpmgrzonesvb.aspx#1)]  
  
 Si noti che per l'esempio di codice funzioni, è necessario aggiungere un'impostazione nel file Web. config per consentire l'esportazione di file di descrizione di Web part. Assicurarsi di avere un file Web. config nella stessa directory della pagina Web per questo esempio di codice. All'interno di `<system.web>` sezione, assicurarsi che vi sia un `<webParts>` elemento con un `enableExport` attributo impostato su `true`, come nel markup seguente.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Una volta caricata la pagina in un browser, se si fa clic il **elenco gli ID dei** pulsante, il codice Usa il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> proprietà verranno elencati gli ID di tutte le zone nella raccolta. Se si fa clic il **Change zona BackColor** pulsante, il codice cambia il colore di sfondo della seconda area.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>