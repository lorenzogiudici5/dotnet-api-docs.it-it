<Type Name="EditorZone" FullName="System.Web.UI.WebControls.WebParts.EditorZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b3b717a5e501a32ffca5417f047b09903ef48d48" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39749222" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EditorZone : System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditorZone extends System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorZone" />
  <TypeSignature Language="VB.NET" Value="Public Class EditorZone&#xA;Inherits EditorZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorZone : System::Web::UI::WebControls::WebParts::EditorZoneBase" />
  <TypeSignature Language="F#" Value="type EditorZone = class&#xA;    inherit EditorZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.EditorZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Funge da controllo primario nell'insieme di controlli web part per l'hosting dei controlli <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> in una pagina Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 All'interno del set di controllo Web part, una zona è un controllo composito che copre un'area definita in una pagina Web e contiene i controlli server. Le funzioni principali di una zona sono a disposizione di controlli in che esso contenute e per fornire una comune interfaccia utente (UI) per i controlli. Per informazioni generali su zone e su come vengono usati nelle applicazioni Web part, vedere la documentazione di riferimento per la base <xref:System.Web.UI.WebControls.WebParts.WebZone> (classe), e [preliminari di impostato sul controllo Web part](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668).  
  
 Il <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo è uno dei controlli fondamentali nell'insieme di controlli Web part. Una funzionalità chiave di Web part è la capacità degli utenti finali di modificare le pagine Web (o personalizzare) in base alle preferenze, quindi salvare le impostazioni personalizzate per le sessioni future del browser. Un aspetto della modifica delle pagine Web part include la modifica. gli utenti possono modificare l'aspetto, layout, il comportamento e altre proprietà di visibile <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. Diversi controlli nell'insieme di controlli Web part offrono le funzionalità di modifica, tra cui la <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo.  
  
 Un' <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo diventa visibile solo quando una pagina Web part entra in modalità di modifica e rende disponibili vari <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlli che possono essere usati per personalizzare <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. Il <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo è molto simile all'elemento padre, il <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> (classe), con una differenza fondamentale: I <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo fornisce un modello di zona, a cui fa riferimento relativo <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> proprietà. Il modello di zona aggiunge la possibilità di dichiarare il contenuto del formato di persistenza della pagina. Agli sviluppatori di pagine è possono inserire un <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo nel markup dichiarativo di una pagina Web, aggiungere un elemento figlio `<zonetemplate>` elemento e all'interno di `<zonetemplate>` elemento, aggiungere riferimenti dichiarativi per <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlli.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo dispone anche di un metodo <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A>, che esegue l'override di un metodo di base nel <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe. Questo metodo è necessario in modo che un <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo può creare modello di zona per contenere <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlli che vengono aggiunti all'area in modo dichiarativo.  
  
> [!NOTE]
>  I pulsanti di <xref:System.Web.UI.WebControls.WebParts.EditorZone> dell'interfaccia utente richiede la creazione di script lato client per poter funzionare correttamente. Se lo scripting è disabilitato nel browser, l'utente non sarà in grado di eseguire azioni mediante i <xref:System.Web.UI.WebControls.WebParts.EditorZone> dell'interfaccia utente.  
  
## <a name="accessibility"></a>Accessibilità  
 Il codice sottoposto a rendering per impostazione predefinita per questo controllo potrebbe non essere conforme agli standard di accessibilità, ad esempio le linee guida con priorità 1 Web Content accessibilità Guidelines 1.0 (WCAG). Per informazioni dettagliate sul supporto di accessibilità per questo controllo, vedere [controlli ASP.NET e l'accessibilità](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito vengono illustrati diversi dichiarativo e a livello di codice Usa del <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe. Nell'esempio viene creata una zona editor personalizzato che eredita dal <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe e viene utilizzato in una pagina Web part.  
  
 L'esempio di codice è costituito da tre parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione della pagina Web.  
  
-   Una pagina Web che fa riferimento l'oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo.  
  
-   Spiegazione del funzionamento dell'esempio.  
  
 La prima parte di questo esempio di codice è il controllo utente che consente agli utenti di modificare la modalità di visualizzazione in una pagina Web. Per altre informazioni sulle modalità di visualizzazione e una descrizione del codice sorgente in questo controllo, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/displaymodecs.ascx#4)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/displaymodevb.ascx#4)]  
  
 La seconda parte dell'esempio di codice è una pagina Web. Nella parte superiore della pagina è un `Register` direttiva per il controllo utente. Tag del controllo utente viene dichiarato nella pagina con un `uc1:` prefisso per l'elemento. Si noti che sotto il `<asp:WebPartZone>` elemento è un `<asp:EditorZone>` elemento contenente diversi <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlli, con alcuni tag e proprietà impostati per determinare l'aspetto e comportamento. Esistono anche numerosi metodi che accedono ai vari membri del <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllare a livello di codice.  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/editorzonecs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/editorzonevb.aspx#1)]  
  
 Quando si carica la pagina in un browser, è possibile selezionare **modalità di modifica** nell'elenco a discesa per passare alla modalità di modifica. Per visualizzare l'interfaccia utente di modifica, è possibile scegliere il menu dei verbi (la freccia rivolta verso il basso) nella barra del titolo di uno dei due controlli e fare clic su **modifica** la modifica del controllo. Con l'interfaccia utente di modifica visibile, è possibile visualizzare gli effetti degli usi strumenti dichiarativi e programmatici del <xref:System.Web.UI.WebControls.WebParts.EditorZone> membri della classe.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Se si desidera creare una classe personalizzata <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> zona per ottenere maggiore controllo sul rendering dell'interfaccia utente di modifica, è possibile ereditare direttamente dai <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> classe, fino a quando non è necessario fornire il supporto del modello di zona per gli sviluppatori di aggiungere pagine <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> Controlla in modo dichiarativo per la zona. In tal caso, si aggiungerà tutti <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controlla a livello di codice a una zona. Se si desidera fornire il supporto del modello di zona, è necessario ereditare dal <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> classe.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="override this.CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="editorZone.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea tutti i controlli <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> dichiarati in un modello di zona nel formato di persistenza della pagina.</summary>
        <returns>Un oggetto <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> che contiene riferimenti a tutti i controlli <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> dichiarati nel modello di zona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> metodo esegue l'override del metodo base per creare solo la <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlli che vengono dichiarati all'interno del modello di zona. Qualsiasi altro <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlli all'area devono essere aggiunti a livello di codice. Questo scopo è possibile, ad esempio, che implementa il <xref:System.Web.UI.WebControls.WebParts.IWebEditable> dell'interfaccia un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Quindi, nella sottoposto a override <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> metodo, è possibile aggiungere una raccolta di custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlli a una zona.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il controllo <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> corrente non dispone di alcun ID.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.EditorZone))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Fornisce un modello che contiene controlli figlio all'interno di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> in un formato di persistenza della pagina.</summary>
        <value>Un modello di zona <see cref="T:System.Web.UI.ITemplate" /> che funge da contenitore per controlli figlio presenti nella zona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> proprietà è la differenza principale tra il <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe e la base <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe. Aggiungendo il supporto per un modello di zona, il <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe consente agli sviluppatori di pagina posizionare figlio <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlli all'interno di un <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo nel markup dichiarativo di una pagina Web. Il modello di zona funge da contenitore per i controlli figlio.  
  
> [!NOTE]
>  La funzione di accesso set per il <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> chiamate proprietà il <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> metodo, che impone la raccolta di <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlli dichiarati nel modello viene ricreato. In questo modo tutte le modifiche nel contenuto del modello vengano riconosciuti.  
  
 Per usare un modello di zona in modo dichiarativo in un <xref:System.Web.UI.WebControls.WebParts.EditorZone> (controllo), si aggiunge una coppia di `<zonetemplate>` tag e riferimento <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlli tra i tag. Viene eseguito il rendering di un solo modello di zona per ogni istanza di un <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo (di conseguenza, non c'è nessun motivo per aggiungere più `<zonetemplate>` elementi da un <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo). Inoltre, il modello di zona di un <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo può contenere solo i controlli Web part che derivano dal <xref:System.Web.UI.WebControls.WebParts.EditorPart> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo dichiarativo del <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> proprietà. Il codice completo per l'esempio è disponibile nella sezione degli esempi di <xref:System.Web.UI.WebControls.WebParts.EditorZone> Cenni preliminari sulla classe.  
  
 Nell'esempio di codice viene illustrato come <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlli possono essere inseriti all'interno di un `<zonetemplate>` elemento in un <xref:System.Web.UI.WebControls.WebParts.EditorZone> controllo.  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/editorzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/editorzonevb.aspx#2)]  
  
 Quando si carica la pagina in un browser, è possibile selezionare **modalità di modifica** nell'elenco a discesa per passare alla modalità di modifica. Per visualizzare l'interfaccia utente di modifica (UI), è possibile scegliere il menu dei verbi (la freccia rivolta verso il basso) nella barra del titolo di uno dei due controlli e fare clic su **modifica** la modifica del controllo. Con l'interfaccia utente di modifica visibile, è possibile visualizzare diversi <xref:System.Web.UI.WebControls.WebParts.EditorPart> i controlli che vengono dichiarati all'interno di `<zonetemplate>` elemento.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      </Docs>
    </Member>
  </Members>
</Type>