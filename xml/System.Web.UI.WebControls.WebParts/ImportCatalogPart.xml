<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8e605d7c0059d128671da2ee04aebecd9499cfb5" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48715776" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importa un file di descrizione per un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o un altro controllo server ASP.NET utilizzato come controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, in modo che gli utenti possano aggiungere il controllo a una pagina Web con impostazioni predefinite. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo consente agli utenti di importare un file di descrizione che descrive le impostazioni di un <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo o controllo server che un utente desidera aggiungere a un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona.  
  
 Dopo l'importazione di un file di descrizione, il <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo a cui fa riferimento il file viene visualizzato all'interno di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo e l'utente può aggiungere il controllo alla pagina.  
  
 Il file di descrizione non è quello utilizzato per il controllo stesso. Si tratta di un file XML che termina con una. Estensione di Web part e contiene coppie nome/valore: prevalentemente valori di proprietà, che descrivono lo stato del controllo. Il file viene creato in base a un formato XML specificato, come descritto nell'argomento [file di descrizione del controllo Web part](http://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8).  
  
 Il controllo a cui si riferisce il file di descrizione, può essere compilato in un assembly o può essere un controllo utente definito in un file con estensione ascx. In entrambi i casi, il controllo a cui fa riferimento un file di descrizione importati deve esistere nel server Web che ospita la pagina che sta tentando di importare il controllo. Il file di descrizione fa riferimento al controllo nome e l'assembly (o file) che contiene il controllo e il file di descrizione contiene le impostazioni che interessano i valori delle proprietà del controllo, l'aspetto e comportamento.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo consente agli utenti di condividere le impostazioni sui controlli. Un controllo complesso può avere molte impostazioni e proprietà. Ad esempio, in un sito intranet tipica di una grande società, un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo potrebbe contenere un numero di proprietà che contengono valori specifici dell'ambiente degli utenti, ad esempio le connessioni al database, informazioni reparto e così via. Il controllo può inoltre contenere un numero di proprietà che interessano l'aspetto del controllo. Un utente può personalizzare il controllo su un sito specifico e averlo reso operativo in modo corretto, esportare un file di descrizione per il controllo e quindi condividere il file di descrizione con altri utenti, che è stato possibile importare il file per aggiungere il controllo completamente configurato a altra rete intranet siti che sono autorizzati a personalizzare. Purché l'assembly compilato o file di controllo utente contenente il controllo esista nel server che ospita il sito Web, gli utenti possono aggiungere il controllo ad altri siti Web.  
  
 Il meccanismo mediante il quale gli utenti di importare un file di descrizione (e pertanto il controllo server associato) in una pagina Web è il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo, che lo sviluppatore della pagina è necessario aggiungere a una pagina Web. Quando un utente passa la pagina alla modalità di visualizzazione del catalogo, il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> viene visualizzato e l'utente potrà essere utilizzato per individuare il. File di descrizione di Web part corrispondenti per il controllo del server si desidera importare. Seguendo l'interfaccia utente e le istruzioni fornite dal <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> (controllo), un utente è in grado di aggiungere il controllo server desiderato nella pagina Web, con l'aspetto e le proprietà completamente configurate come specificato nel file di descrizione importati.  
  
 Prima di un <xref:System.Web.UI.WebControls.WebParts.WebPart> possono essere importati i file di descrizione del controllo, un utente prima di tutto necessario creare (export) il file basato su un oggetto esistente <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo. Se vengono soddisfatte le condizioni seguenti è possibile esportare un file di descrizione per un controllo:  
  
-   Il controllo ha le proprietà contrassegnate con il `Personalizable` attributo.  
  
-   Il file Web. config ha il `enableExport` impostato su valore dell'attributo `true` nel `<webParts>` elemento.  
  
-   Lo sviluppatore imposta il valore della <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> proprietà del controllo su un valore diverso da quello predefinito di <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>, che non consente l'esportazione. Se il <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> valore della proprietà è impostato su <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, qualsiasi proprietà che contiene un' <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A> parametro con un `Personalizable` attributi non vengono esportati quando un utente esporta un file di descrizione. Ciò consente agli sviluppatori di controllo impedire che i dati sensibili, ad esempio le stringhe di connessione da esportare in determinate situazioni.  
  
 Un utente può esportare un controllo che è stato abilitato per l'esportazione, fare clic sul verbo di esportazione che viene visualizzato nel menu dei verbi di controllo e seguendo le istruzioni per salvare una. Web part i file di descrizione per il controllo. Gli altri utenti possono quindi importare questo file per configurare le proprie istanze del controllo.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> classe contiene diverse proprietà. Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> proprietà contiene il testo con le istruzioni per gli utenti che esplorano per individuare il file di descrizione. Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> proprietà contiene il testo che funge da etichetta per il controllo importato come viene visualizzato all'interno di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> contiene testo che viene visualizzato se si verifica un errore durante l'importazione di una descrizione del controllo. Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> proprietà esegue l'override della proprietà base per assegnare un titolo predefinito per un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllare se lo sviluppatore non viene assegnato un titolo. Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> proprietà contiene il testo del pulsante che l'utente fa clic per caricare il file di descrizione, e il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> proprietà contiene le istruzioni per il processo di caricamento.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> classe contiene inoltre numerosi metodi univoci. Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> recuperata dal metodo un <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> per ciascun <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo del catalogo, che consente un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo per visualizzare informazioni su ogni server di controllo senza la necessità di creare un'istanza. Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Ottiene un'istanza di un determinato <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo, in base alla descrizione passata al metodo.  
  
 Esistono alcuni rischi inerenti associati all'uso di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Un esempio è la possibilità che l'importazione di dati dannosi nell'applicazione Web tramite i file di descrizione utilizzati per l'importazione. Se un utente ha inserito il codice di script dannosi come valore di una proprietà di stringa nel file di descrizione, quindi lo script potrebbe essere eseguito quando un utente importa il file di descrizione e aggiunge il controllo del server di cui si fa riferimento a una pagina Web. Per ridurre al minimo il rischio di importazione dei file di descrizione dati dannosi, controlli server che dispongono di proprietà di tipo stringa consigliabile codificare sempre i dati della proprietà. Un altro rischio implica importano i tipi di file di descrizione (vedere [file di descrizione del controllo Web part](http://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)). Un utente malintenzionato potrebbe inviare le richieste di caricamento di molti assembly nel <xref:System.AppDomain>, ottenendo una quantità eccessiva di memoria consumata.  
  
 Per evitare i rischi associati all'importazione, è possibile disabilitare la funzionalità del tutto, non usare la funzionalità di importazione o il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Oppure è possibile limitare gli utenti che hanno accesso al controllo. Si è stato possibile eseguire questa operazione a livello di codice usando la gestione dei ruoli (vedere [gestione dei ruoli con autorizzazioni](http://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195)). Ad esempio, quando la pagina viene caricata, è possibile testare per determinare se un utente è in un determinato ruolo, ad esempio il ruolo di amministratore. Se l'utente è nel ruolo, è possibile aggiungere a livello di codice il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo alla pagina per tale utente. È anche possibile usare un approccio dichiarativo per limitare il set di utenti che possono usare il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo.  All'interno della pagina web che contiene un catalogo, è possibile inserire due <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controlli: uno per gli utenti possono importare e uno per gli utenti non autorizzati. Contiene la zona per gli utenti possono importare la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. La zona stessa può essere inserita all'interno di un <xref:System.Web.UI.WebControls.LoginView> controllo, che consentirà di limitare l'utilizzo del controllo nella zona per solo utenti autenticati o ai ruoli specificati.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllano in modo dichiarativo e a livello di codice in una pagina Web. L'esempio è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione in una pagina Web part.  
  
-   Una pagina Web contenente un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo e un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo.  
  
-   Un file di codice sorgente che contiene due personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli.  
  
-   Spiegazione del funzionamento dell'esempio quando si carica la pagina in un browser.  
  
 La prima parte di questo esempio di codice è il controllo utente che consente agli utenti di modificare la modalità di visualizzazione in una pagina Web. È necessario inserire il seguente codice sorgente in un file e denominarlo Displaymodemenucs. ascx o Displaymodemenuvb. ascx (a seconda del linguaggio in uso). Per informazioni dettagliate sulle modalità di visualizzazione e una descrizione del codice sorgente in questo controllo, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 La seconda parte dell'esempio di codice è la pagina Web. Nella parte superiore della pagina sono due `register` direttive, uno per il controllo utente e una per il componente compilato che contiene le due funzioni <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. Si noti che la pagina contiene un riferimento dichiarativo per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo annidato all'interno della gerarchia di elementi dichiarativi appropriata. Si noti inoltre che vengono assegnati in modo dichiarativo per diversi valori di proprietà di `<asp:importcatalogpart>` elemento. Inoltre, il `Button1_Click` metodo aggiorna un numero di valori di proprietà nel <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo.  
  
 La pagina <xref:System.Web.UI.WebControls.WebParts.WebPartZone> (controllo), le due funzioni <xref:System.Web.UI.WebControls.WebParts.WebPart> vengono dichiarati. Il `<aspSample:userinfowebpart>` controllo ha un `exportmode="all"` attributo su di esso. Questo attributo è obbligatorio per consentire agli utenti di esportare un file di descrizione per il controllo, che può quindi essere importato da altri utenti a cui desiderano importare il controllo utilizzando il file di descrizione.  
  
> [!NOTE]
>  Per consentire agli utenti di un'applicazione Web part per esportare un file di descrizione per <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, è anche necessario abilitare la funzionalità di esportazione dell'applicazione Web mediante l'aggiunta di un `enableExport="true"` dell'attributo di `<webParts>` elemento (che è un elemento figlio del `<system.web>`elemento) nel file Web. config. L'esportazione è disabilitata per impostazione predefinita, quindi se l'esportazione non è ancora stata abilitata per l'applicazione, modificare il file Web. config e installarlo ora.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 La terza parte dell'esempio di codice è il codice sorgente per i due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. Si noti che alcune proprietà di questi controlli sono contrassegnati con il `WebBrowsable` attributo. In questo modo il <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> controllo per generare in modo dinamico l'interfaccia utente (UI) per un utente di modificare le proprietà quando i controlli sono in modalità di modifica. Le proprietà sono contrassegnate anche con un `WebDisplayName` attributo per specificare il testo dell'etichetta sulla quale viene visualizzata accanto a ogni controllo nell'interfaccia utente di modifica. Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Questo esempio di codice Usa la compilazione dinamica. Per una procedura dettagliata che illustra entrambi i metodi per la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 Il controllo personalizzato chiamato `TextDisplayWebPart` viene fatto riferimento nella pagina Web con un `<aspSample:TextDisplayWebPart>` elemento. L'altro controllo, denominato `UserInfoWebPart`, viene anche dichiarato nella pagina Web inizialmente, benché si verrà rimosso in seguito per illustrare la possibilità di importare un file di descrizione per un controllo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 Ora eseguire l'esempio di codice. Caricare la pagina Web in un browser. Il primo passaggio consiste nel modificare il `UserInfoWebPart` controllo. Usare la **modalità di visualizzazione** controllo elenco a discesa e selezionare **modificare** per passare alla pagina per la modalità di modifica. Fare clic sul menu dei verbi di `UserInfoWebPart` controllo (la freccia rivolta verso il basso nella barra del titolo) e quindi fare clic su **modifica**. Quando viene visualizzata l'interfaccia utente di modifica, diversi controlli di modifica vengono visualizzate sotto la `UserInfoWebPart` controllo che è possibile utilizzare per modificare i valori dei campi. Modificare alcuni campi, fare clic su **OK**, quindi utilizzare il **modalità di visualizzazione** elenco a discesa per restituire la pagina modalità di visualizzazione.  
  
 Il secondo passaggio consiste nell'esportare una. File di descrizione di Web part per il `UserInfoWebPart` controllo. Fare clic sul menu dei verbi di controllo personalizzato (rappresentato da una freccia verso il basso nella barra del titolo) e fare clic su **esportare**. Seguire le istruzioni per salvare una. Web part i file di descrizione per il controllo. Chiudere la pagina Web e modificare l'origine della pagina in un editor. Eliminare il `<aspSample:userinfowebpart>` controllo elemento di dichiarazione, quindi salvare e chiudere il file. (Si esegue questo passaggio per simulare un utente che non dispone ancora di `UserInfoWebPart` controllare, in modo che è possibile importare il controllo alla pagina).  
  
 Caricare la pagina Web nuovamente in un browser. Il `UserInfoWebPart` controllo non deve essere visualizzati, perché è stato rimosso. Usare la **modalità di visualizzazione** controllo elenco a discesa e selezionare **catalogo** per passare alla modalità di catalogo. Nel <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo, fare clic sui **Sfoglia** pulsante e passare ai. Web part creata di file, quindi scegliere il **caricare** pulsante. Un riferimento al controllo risulterà con una casella di controllo accanto a esso. Selezionare la casella di controllo, quindi fare clic su **Add** per aggiungere il controllo alla pagina.  
  
 Mentre è in questa visualizzazione della pagina, fare clic sui **aggiornamento ImportCatalogPart** pulsante nella parte inferiore della pagina per visualizzare l'effetto dell'aggiornamento a livello di codice di un numero di valori di proprietà nel <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Dopo aver fatto clic sul pulsante, osservare come le varie proprietà vengono modificate nell'interfaccia utente.  
  
 Infine, fare clic su **Chiudi** per uscire dalla modalità di catalogo e restituire la pagina modalità di visualizzazione. Il `UserInfoWebPart` controllo dovrebbe essere visualizzato nella pagina contenente i valori che si trovava al momento è stato esportato in precedenza.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
    <related type="Article" href="http://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8">File di descrizione del controllo Web part</related>
    <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> costruttore è un valore predefinito, nessun costruttore viene dichiarato nel <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> classe e operazioni speciali di conseguenza non vengono eseguite quando viene creata una nuova istanza della classe. .NET Framework Usa internamente il costruttore per creare un'istanza della classe.  
  
 In genere non è necessario usare il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> costruttore a livello di programmazione nel codice. L'uso previsto del controllo sono per gli sviluppatori di pagine per aggiungerlo a una pagina in modo dichiarativo in fase di progettazione.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un messaggio di testo che indica agli utenti di selezionare il percorso di un file di descrizione.</summary>
        <value>Stringa che contiene il testo del messaggio. Il valore predefinito è un messaggio specifico delle impostazioni cultura fornito in .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> proprietà offre agli utenti una panoramica semplice della prima cosa deve essere eseguito nel processo di aggiunta di un controllo importato: specificare il percorso di un file di descrizione, digitando un percorso o la selezione del file. È in genere necessaria per fornire un valore personalizzato per questa proprietà se si dispone di istruzioni speciali per gli utenti, ad esempio una condivisione di rete specifici a cui si deve Sfoglia per individuare un file di descrizione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> proprietà in modo dichiarativo e a livello di codice. Per il codice completo e le istruzioni necessarie per eseguire l'esempio, vedere la sezione di esempio di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Cenni preliminari sulla classe.  
  
 Nella sezione seguente di codice, si noti che il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> valore della proprietà viene impostato in modo dichiarativo per il controllo.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In questa sezione di codice, il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> valore della proprietà viene assegnato a livello di codice.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Quando si carica la pagina in un browser, è possibile usare la **modalità di visualizzazione** controllo elenco a discesa per selezionare **catalogo modalità** e passare alla modalità di catalogo. Con la pagina in modalità di catalogo e caricato il file di descrizione, si noti che le varie stringhe di testo visualizzate nell'interfaccia utente (UI) per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Se si sceglie il **caricare File di descrizione** pulsante, il testo per molte delle proprietà nell'interfaccia utente viene modificato, incluso il testo per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il pulsante dell'interfaccia utente da considerare come il pulsante predefinito che riceve lo stato attivo quando viene eseguito il rendering del form contenente il pulsante. Questa proprietà non è destinata a essere chiamata dal codice dello sviluppatore di pagine.</summary>
        <value>Stringa contenente l'ID del controllo <see cref="T:System.Web.UI.WebControls.Button" /> che riceve lo stato attivo predefinito in un controllo <see cref="T:System.Web.UI.WebControls.Panel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il codice per questa proprietà esegue l'override della proprietà di base ereditata dal <xref:System.Web.UI.WebControls.Panel> classe per nascondere la proprietà dalle finestre di progettazione e impedire che venga modificata dai temi. Anche se è pubblico, questa proprietà viene utilizzata internamente dal controllo Web part impostato per il rendering predefinito di questo controllo e non deve essere usato dagli sviluppatori di pagine.  
  
 Questa proprietà non può essere impostata da temi oppure temi di fogli di stile. Per altre informazioni, vedere <xref:System.Web.UI.ThemeableAttribute> e [ASP.NET supporta temi e interfacce](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un insieme di descrizioni dei controlli <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> disponibili in un catalogo.</summary>
        <returns>Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> che contiene un oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> per ogni controllo di un catalogo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> metodo fornisce un'implementazione per il metodo di base astratto dichiarati nel <xref:System.Web.UI.WebControls.WebParts.CatalogPart> classe. Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> metodo restituisce le informazioni di descrizione per ogni controllo in un catalogo. Si noti che nel caso di un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> di controllo, può esistere un solo controllo server nel catalogo contemporaneamente, anche se il metodo possa funzionare se si sono verificati più controlli.  
  
 Oggetto <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> è un oggetto che contiene le informazioni essenziali su una <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo, inclusi il relativo ID, un riferimento all'oggetto per il controllo e i valori delle diverse proprietà importanti che vengono ereditate dal <xref:System.Web.UI.WebControls.WebParts.Part> classe, ad esempio <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> e <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> metodo migliora le prestazioni. Quando viene creato un catalogo, è necessario che alcune informazioni su ogni controllo che contiene, inclusi un titolo, descrizione, un'icona (se presente) e un ID. Invece di dover creare un'istanza di ogni controllo per ottenere queste informazioni, un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zona che crea un catalogo chiama il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> (metodo) e la chiamata restituisce solo le informazioni di descrizione per il controllo anziché a un'istanza del controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> metodo in una pagina Web. L'esempio è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione in una pagina Web part.  
  
-   Una pagina Web contenente un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo e un' <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo, insieme al codice che usa il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> (metodo).  
  
-   Un file di codice sorgente che contiene due personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli.  
  
-   Spiegazione del funzionamento dell'esempio quando si carica la pagina in un browser.  
  
 La prima parte di questo esempio di codice è il controllo utente che consente agli utenti di modificare la modalità di visualizzazione in una pagina Web. È necessario inserire il seguente codice sorgente in un file e denominarlo Displaymodemenucs. ascx o Displaymodemenuvb. ascx (a seconda del linguaggio in uso). Per informazioni dettagliate sulle modalità di visualizzazione e una descrizione del codice sorgente in questo controllo, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 La seconda parte dell'esempio di codice è la pagina Web. Nella parte superiore della pagina sono due `register` direttive, uno per il controllo utente e una per il componente compilato che contiene le due funzioni <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. Entrambi questi controlli viene fatto riferimento in modo dichiarativo nel markup della pagina. Nei riferimenti dichiarativi per il <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli (entrambi iniziano con un `aspSample` prefisso), si noti che ognuno includa un `exportMode="all"` attributo aggiunto ad esso. Questo attributo consente di esportare una. Web part i file di descrizione per il controllo, che verrà utilizzato in una versione successiva da eseguire per importare il controllo a una pagina.  
  
> [!NOTE]
>  Per consentire agli utenti di un'applicazione Web part per esportare un file di descrizione per <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, è anche necessario abilitare la funzionalità di esportazione dell'applicazione Web mediante l'aggiunta di un `enableExport="true"` dell'attributo di `<webParts>` elemento (che è un elemento figlio del `<system.web>`elemento) nel file Web. config. L'esportazione è disabilitata per impostazione predefinita, quindi se l'esportazione non è ancora stata abilitata per l'applicazione, modificare il file Web. config e installarlo ora.  
  
 La pagina Web contiene inoltre un riferimento dichiarativo per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo annidato all'interno della gerarchia di elementi dichiarativi appropriata. Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> viene chiamato all'interno del codice per il `Button1_Click` (metodo).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 La terza parte dell'esempio di codice è il codice sorgente per i due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Questo esempio di codice Usa la compilazione dinamica. Per una procedura dettagliata che illustra entrambi i metodi per la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Ora eseguire l'esempio di codice. Caricare la pagina Web in un browser. Esportazione, è innanzitutto una. WebPart per ognuno <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo (per il `TextDisplayWebPart` e per il `UserInfoWebPart` controllo). Per ogni controllo, fare clic sul menu dei verbi di controllo (rappresentato da una freccia verso il basso nella barra del titolo) e fare clic su **esportare**. Seguire le istruzioni per salvare una. Web part i file di descrizione per il controllo. Dopo aver esportato un file di descrizione per ogni controllo, chiudere la pagina Web e modificare l'origine della pagina in un editor. Eliminare il `<aspSample:userinfowebpart>` e il `<aspSample:textdisplaywebpart>` dichiarazione gli elementi del controllo, quindi salvare e chiudere il file. (Si stia effettuando questo passaggio per simulare un utente che non dispongono ancora di questi controlli, è possibile importare i controlli alla pagina).  
  
 Caricare la pagina Web nuovamente in un browser. Usare la **modalità di visualizzazione** controllo elenco a discesa e selezionare **catalogo** per passare alla modalità di catalogo. Nel <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo, fare clic sul **Sfoglia** pulsante, passare ai. I file di Web part è stata creata, selezionare uno, quindi scegliere il **caricare** pulsante. Un riferimento al controllo risulterà con una casella di controllo accanto a esso. Selezionare la casella di controllo, quindi fare clic su **Add** per aggiungere il controllo alla pagina. Ripetere questo processo per l'altro controllo.  
  
 Mentre è in questa visualizzazione della pagina, fare clic sul **Get Description WebPart** pulsante nella parte inferiore della pagina per visualizzare l'effetto dell'accesso a livello di codice il <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> dell'oggetto per la descrizione del controllo attualmente caricati di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Il metodo utilizzato per accedere ai dettagli della descrizione, trovato nel `Button1_Click` metodo di origine della pagina, è il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> (metodo). Un'etichetta sotto il pulsante Visualizza i dettagli di base sul controllo.  
  
 Dopo aver aggiunto il primo controllo, ripetere il processo per aggiungere il secondo controllo alla pagina. Infine, fare clic su **Chiudi** per uscire dalla modalità di catalogo e restituire la pagina modalità di visualizzazione. Entrambi i controlli personalizzati verranno visualizzati nella pagina contenente i valori che avevano quando è stato esportato in precedenza i file di descrizione.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> che contiene dettagli sul controllo.</param>
        <summary>Restituisce un riferimento a un controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> basato sui valori della descrizione passata nel metodo.</summary>
        <returns>Controllo <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> la cui descrizione corrisponde ai valori di <paramref name="description" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metodo viene restituito un riferimento a un <xref:System.Web.UI.WebControls.WebParts.WebPart> la cui descrizione dei dettagli corrisponda ai valori del controllo il <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> oggetto passato al metodo. In genere, questo metodo viene utilizzato in combinazione con il <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> metodo, che viene usato per recuperare le descrizioni dei controlli nel catalogo. Singoli <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli possono essere recuperati o modificati in base alle necessità passando singoli <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> gli oggetti per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> (metodo).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metodo in una pagina Web. L'esempio è costituito da quattro parti:  
  
-   Un controllo utente che consente di modificare le modalità di visualizzazione in una pagina Web part.  
  
-   Una pagina Web contenente un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controllo e un' <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo, insieme al codice che usa il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> (metodo).  
  
-   Un file di codice sorgente che contiene due personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli.  
  
-   Spiegazione del funzionamento dell'esempio quando si carica la pagina in un browser.  
  
 La prima parte di questo esempio di codice è il controllo utente che consente agli utenti di modificare la modalità di visualizzazione in una pagina Web. È necessario inserire il seguente codice sorgente in un file e denominarlo Displaymodemenucs. ascx o Displaymodemenuvb. ascx (a seconda del linguaggio in uso). Per informazioni dettagliate sulle modalità di visualizzazione e una descrizione del codice sorgente in questo controllo, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 La seconda parte dell'esempio di codice è la pagina Web. Nella parte superiore della pagina sono due `register` direttive, uno per il controllo utente e una per il componente compilato che contiene le due funzioni <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. Entrambi questi controlli viene fatto riferimento in modo dichiarativo nel markup della pagina. Nei riferimenti dichiarativi per il <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli (entrambi iniziano con un `aspSample` prefisso), si noti che ognuno includa un `exportMode="all"` attributo aggiunto ad esso. Questo attributo consente di esportare una. Web part i file di descrizione per il controllo, che verrà utilizzato in una versione successiva da eseguire per importare il controllo a una pagina.  
  
> [!NOTE]
>  Per consentire agli utenti di un'applicazione Web part per esportare un file di descrizione per <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli, è anche necessario abilitare la funzionalità di esportazione dell'applicazione Web mediante l'aggiunta di un `enableExport="true"` dell'attributo di `<webParts>` elemento (che è un elemento figlio del `<system.web>`elemento) nel file Web. config. L'esportazione è disabilitata per impostazione predefinita, quindi se l'esportazione non è ancora stata abilitata per l'applicazione, modificare il file Web. config e installarlo ora.  
  
 La pagina Web contiene inoltre un riferimento dichiarativo per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo annidato all'interno della gerarchia di elementi dichiarativi appropriata. Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> viene chiamato all'interno del codice per il `Button2_Click` (metodo).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 La terza parte dell'esempio di codice è il codice sorgente per i due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli. Per l'esempio di codice per l'esecuzione, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato in modo dinamico in fase di esecuzione. Questo esempio di codice Usa la compilazione dinamica. Per una procedura dettagliata che illustra entrambi i metodi per la compilazione, vedere [procedura dettagliata: sviluppo e Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Ora eseguire l'esempio di codice. Caricare la pagina Web in un browser. Esportazione, è innanzitutto una. WebPart per ognuno <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo (per il `TextDisplayWebPart` e per il `UserInfoWebPart` controllo). Per ogni controllo, fare clic sul menu dei verbi di controllo (rappresentato da una freccia verso il basso nella barra del titolo) e fare clic su **esportare**. Seguire le istruzioni per salvare una. Web part i file di descrizione per il controllo. Dopo aver esportato un file di descrizione per ogni controllo, chiudere la pagina Web e modificare l'origine della pagina in un editor. Eliminare il `<aspSample:userinfowebpart>` e il `<aspSample:textdisplaywebpart>` dichiarazione gli elementi del controllo, quindi salvare e chiudere il file. (Si stia effettuando questo passaggio per simulare un utente che non dispongono ancora di questi controlli, è possibile importare i controlli alla pagina).  
  
 Caricare la pagina Web nuovamente in un browser. Usare la **modalità di visualizzazione** controllo elenco a discesa e selezionare **catalogo** per passare alla modalità di catalogo. Nel <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo, fare clic sul **Sfoglia** pulsante, passare ai. I file di Web part è stata creata, selezionare uno, quindi scegliere il **caricare** pulsante. Un riferimento al controllo risulterà con una casella di controllo accanto a esso. Ora che la descrizione del controllo viene caricata per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo, fare clic sul **Use GetWebPart situato** pulsante nella parte inferiore della pagina. Ciò dimostra l'effetto della chiamata di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metodo e passando a esso la descrizione del controllo attualmente caricata nel <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Si noti che il controllo server associato è immediatamente aggiunto alla pagina Web, senza che sia necessario fare clic sui **Add** pulsante. Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metodo, che viene chiamato nel `Button2_Click` metodo del codice della pagina, restituisce il <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo associato con la descrizione corrente in cui è caricata il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Avanti il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> viene chiamato il metodo e <xref:System.Web.UI.WebControls.WebParts.WebPart> controllo viene aggiunto direttamente alla pagina. Nell'esempio viene illustrato come aggiungere un controllo a livello di codice dal <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo senza l'intervento dell'utente.  
  
 Dopo aver aggiunto il primo controllo, ripetere il processo per aggiungere il secondo controllo alla pagina. Infine, fare clic su **Chiudi** per uscire dalla modalità di catalogo e restituire la pagina modalità di visualizzazione. Entrambi i controlli personalizzati verranno visualizzati nella pagina contenente i valori che avevano quando è stato esportato in precedenza i file di descrizione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="description" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="description" /> non è un valore di <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> disponibile.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo che viene visualizzato in seguito all'importazione di un file di descrizione per rappresentare o descrivere il controllo importato nell'apposito catalogo.</summary>
        <value>Stringa che contiene il testo dell'etichetta. Il valore predefinito è un messaggio specifico delle impostazioni cultura fornito in .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> proprietà viene generalmente utilizzata per contenere un'etichetta breve generale che descrive il controllo contenuto nel <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> proprietà in modo dichiarativo e a livello di codice. Per il codice completo e le istruzioni necessarie per eseguire l'esempio, vedere la sezione di esempio di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Cenni preliminari sulla classe.  
  
 Nella sezione seguente di codice, si noti che il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> valore della proprietà viene impostato in modo dichiarativo per il controllo.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In questa sezione di codice, il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> valore della proprietà viene assegnato a livello di codice.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Quando si carica la pagina in un browser, è possibile usare la **modalità di visualizzazione** controllo elenco a discesa per selezionare **catalogo modalità** e passare alla modalità di catalogo. Con la pagina in modalità di catalogo e caricato il file di descrizione, si noti che le varie stringhe di testo visualizzate nell'interfaccia utente (UI) per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Se si sceglie il **caricare File di descrizione** pulsante, il testo per molte delle proprietà nell'interfaccia utente viene modificato, incluso il testo per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un messaggio di errore che viene visualizzato se si verifica un errore durante il processo di importazione.</summary>
        <value>Stringa che contiene il testo dell'etichetta. Il valore predefinito è un messaggio specifico delle impostazioni cultura fornito in .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> proprietà è utile per notificare a un utente in caso di eventuali problemi o errori mentre tenta di importare un file di descrizione della pagina.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> proprietà in modo dichiarativo e a livello di codice. Per il codice completo e le istruzioni necessarie per eseguire l'esempio, vedere la sezione di esempio di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Cenni preliminari sulla classe.  
  
 Nella sezione seguente di codice, si noti che il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> valore della proprietà viene impostato in modo dichiarativo per il controllo.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In questa sezione di codice, il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> valore della proprietà viene assegnato a livello di codice.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Quando si carica la pagina in un browser, è possibile usare la **modalità di visualizzazione** controllo elenco a discesa per selezionare **catalogo modalità** e passare alla modalità di catalogo. Con la pagina in modalità di catalogo e caricato il file di descrizione, si noti che le varie stringhe di testo visualizzate nell'interfaccia utente (UI) per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Se si sceglie il **caricare File di descrizione** pulsante, il testo per molte delle proprietà nell'interfaccia utente viene modificato, incluso il testo per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il titolo visualizzato sulla barra del titolo di un controllo <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />.</summary>
        <value>Una stringa utilizzata come titolo del controllo. Il valore predefinito è un nome di controllo calcolato fornito dal set di controlli Web part.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> valore della proprietà viene visualizzato nella barra del titolo di un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllare quando il controllo è visibile in modalità di catalogo. Quando il controllo viene dichiarato in una pagina, è possibile impostare un valore della proprietà usando la `Title` attributo. Se non si specifica un valore per il titolo, un valore specifico delle impostazioni cultura predefinita viene utilizzato per descrivere il tipo di proprietà che questo controllo consente agli utenti di modificare.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> proprietà in modo dichiarativo e a livello di codice. Per il codice completo e le istruzioni necessarie per eseguire l'esempio, vedere la sezione di esempio di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Cenni preliminari sulla classe.  
  
 Nella sezione seguente di codice, si noti che il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> valore della proprietà viene impostato in modo dichiarativo per il controllo.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In questa sezione di codice, il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> valore della proprietà viene assegnato a livello di codice.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Quando si carica la pagina in un browser, è possibile usare la **modalità di visualizzazione** controllo elenco a discesa per selezionare **catalogo modalità** e passare alla modalità di catalogo. Con la pagina in modalità di catalogo e caricato il file di descrizione, si noti che le varie stringhe di testo visualizzate nell'interfaccia utente (UI) per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Se si sceglie il **caricare File di descrizione** pulsante, il testo per molte delle proprietà nell'interfaccia utente viene modificato, incluso il testo per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo per il controllo <see cref="T:System.Web.UI.WebControls.Button" /> che avvia il caricamento di un file di descrizione.</summary>
        <value>Stringa utilizzata come testo per un oggetto <see cref="T:System.Web.UI.WebControls.Button" />. Il valore predefinito è una stringa specifica delle impostazioni cultura fornita dal set dei controlli Web part.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> proprietà specifica il testo per il <xref:System.Web.UI.WebControls.Button> controllo che avvia il processo di caricamento. Se si assegna un testo personalizzato per questa proprietà o per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> proprietà, il testo dovrebbe chiarire che l'utente sta caricando un file di descrizione. Il testo non deve pronunciare o implica che il processo di caricamento è effettivamente il caricamento del controllo stesso.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> proprietà in modo dichiarativo e a livello di codice. Per il codice completo e le istruzioni necessarie per eseguire l'esempio, vedere la sezione di esempio di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Cenni preliminari sulla classe.  
  
 Nella sezione seguente di codice, si noti che il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> valore della proprietà viene impostato in modo dichiarativo per il controllo.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In questa sezione di codice, il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> valore della proprietà viene assegnato a livello di codice.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Quando si carica la pagina in un browser, è possibile usare la **modalità di visualizzazione** controllo elenco a discesa per selezionare **catalogo modalità** e passare alla modalità di catalogo. Con la pagina in modalità di catalogo e caricato il file di descrizione, si noti che le varie stringhe di testo visualizzate nell'interfaccia utente (UI) per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Se si sceglie il **caricare File di descrizione** pulsante, il testo per molte delle proprietà nell'interfaccia utente viene modificato, incluso il testo per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo del messaggio che comunica all'utente come caricare un file di descrizione.</summary>
        <value>Stringa utilizzata per le istruzioni sul caricamento di un file di descrizione. Il valore predefinito è una stringa specifica delle impostazioni cultura fornita dal set dei controlli Web part.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> proprietà fornisce una breve frase contenente le istruzioni per gli utenti, informa di fare clic su un pulsante per caricare il file di descrizione. Se si assegna un testo personalizzato per questa proprietà o per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> proprietà, il testo dovrebbe chiarire che l'utente sta caricando un file di descrizione. Il testo non deve pronunciare o implica che il processo di caricamento è effettivamente il caricamento del controllo stesso.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> proprietà in modo dichiarativo e a livello di codice. Per il codice completo e le istruzioni necessarie per eseguire l'esempio, vedere la sezione di esempio di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Cenni preliminari sulla classe.  
  
 Nella sezione seguente di codice, si noti che il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> valore della proprietà viene impostato in modo dichiarativo per il controllo.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In questa sezione di codice, il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> valore della proprietà viene assegnato a livello di codice.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Quando si carica la pagina in un browser, è possibile usare la **modalità di visualizzazione** controllo elenco a discesa per selezionare **catalogo modalità** e passare alla modalità di catalogo. Con la pagina in modalità di catalogo e caricato il file di descrizione, si noti che le varie stringhe di testo visualizzate nell'interfaccia utente (UI) per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controllo. Se si sceglie il **caricare File di descrizione** pulsante, il testo per molte delle proprietà nell'interfaccia utente viene modificato, incluso il testo per il <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Web part ASP.NET le pagine</related>
      </Docs>
    </Member>
  </Members>
</Type>