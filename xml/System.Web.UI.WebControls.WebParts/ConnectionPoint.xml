<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1c9d88a6c241a950566c01496d5804d56c63813f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590825" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Funge da classe base per la definizione di oggetti punto di connessione che consentono la condivisione di dati tra il controllo consumer e il controllo provider in una connessione web part.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni connessione Web part è costituita da due controlli server la condivisione dei dati: un controllo è il consumer, ovvero il provider. Per una descrizione dei componenti principali di una connessione Web part e l'oggetto di connessione, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> Cenni preliminari sulla classe. Ogni connessione Web part richiede punti di connessione. Il provider e il controllo consumer devono disporre di almeno uno definito <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> oggetto (ognuno di essi può disporre di più punti di connessione) che contiene i dettagli di come un controllo connessione a un altro controllo e il tipo di dati da cui è possibile condividere. In una connessione effettiva, il provider ha un proprio tipo di oggetto punto di connessione (derivato dalla base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> classe), un <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> istanza e il consumer ha un proprio oggetto, un <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> istanza.  
  
 Per creare un punto di connessione del provider, gli sviluppatori devono aggiungere un metodo di callback al provider che verrà restituita un'istanza di interfaccia implementata da un consumer. È necessario contrassegnare il metodo di callback nel codice sorgente con un `ConnectionProvider` attributo code (vedere la <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> classe). Analogamente, per creare un punto di connessione consumer, gli sviluppatori devono aggiungere un metodo per il consumer che riceve un'istanza di interfaccia e deve essere contrassegnato tale metodo con un `ConnectionConsumer` attributo (vedere la <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> classe).  
  
 Quando gli sviluppatori creano le connessioni in una pagina Web, possono essere creati come statico o dinamico. Connessioni statiche vengono dichiarate nel markup della pagina Web. Quando una connessione statica viene dichiarata, gli sviluppatori possono designare i punti di connessione vengono utilizzati per il consumer e provider quando si assegnano valori al `ProviderConnectionPointID` e `ConsumerConnectionPointID` attributi all'interno di `<asp:webpartconnection>` tag dell'elemento. Questo approccio è particolarmente utile se sono presenti più punti di connessione definiti all'interno dei controlli consumer e provider, perché consente la connessione statica identificare i punti di connessione da utilizzare per la connessione.  
  
 Le connessioni dinamiche vengono create a livello di codice dal codice di uno sviluppatore o dagli utenti tramite l'interfaccia utente (UI) forniti dal <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> controllo. Per creare una connessione nel codice, è necessario ottenere un'istanza di un <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> oggetto chiamando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> metodo il <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Prima di chiamare questo metodo, gli sviluppatori devono disporre di riferimenti per il consumer e i controlli server provider e i relativi oggetti punto di connessione corrispondente. Per ottenere i riferimenti ai punti di connessione per un provider e consumer, è innanzitutto necessario chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> metodi di <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controllo. Questi metodi restituiscono la connessione appropriata oggetti point, che a sua volta possono essere passati al metodo per la creazione di una connessione.  
  
 Quando il provider e il consumer oggetti punto di connessione che utilizzano lo stesso tipo di interfaccia, sono compatibili e possono creare una connessione diretta per condividere i dati. Se non funzionano con lo stesso tipo di interfaccia, un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> oggetto deve essere utilizzato per convertire l'istanza dell'interfaccia del provider in un tipo che il consumer può funzionare con.  
  
 La classe astratta <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> classe fornisce i dettagli di base dei punti di connessione che vengono condivisi dai controlli consumer e provider. Diverse proprietà contengono questi dettagli. Il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> proprietà indica se un punto di connessione può partecipare a più di una connessione alla volta. Per impostazione predefinita, i punti di connessione provider possono partecipare a più connessioni, e non può essere di punti di connessione consumer. Il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> proprietà indica il tipo del controllo del server associato a un punto di connessione. Si noti che solo <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli possono formare delle connessioni; qualsiasi controllo server, se un controllo ASP.NET, un controllo personalizzato o un controllo utente, può essere abilitato per partecipare alle connessioni se inserito un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona. Il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> proprietà fornisce un nome descrittivo per il punto di connessione che può essere visualizzato nell'interfaccia utente per assistere gli utenti che creano le connessioni. Il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> proprietà viene utilizzata come identificatore di stringa per l'oggetto punto di connessione. Il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> proprietà indica il tipo di istanza dell'interfaccia in grado di riconoscere il punto di connessione. Se un punto di connessione fornisce o utilizza un'istanza di tale interfaccia viene determinato in base a un <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> o <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> oggetto.  
  
 La <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> classe dispone di un metodo. Il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> metodo restituisce un valore booleano che indica se un punto di connessione è attualmente in grado di far parte di connessioni.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> classe include inoltre un campo pubblico, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>. Questo campo contiene un valore utilizzato per identificare il punto di connessione predefinito in una connessione.  
  
> [!NOTE]
>  Gli attributi per specificare il punto di connessione metodi hanno un solo parametro obbligatorio, `displayName`, pertanto è possibile creare l'attributo del punto di connessione predefinito senza specificare un ID. In questi casi, il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> campo fornisce un valore di base da utilizzare.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata la creazione di una connessione Web part che include la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> oggetti. Poiché il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> classe è una classe base astratta, le istanze delle classi figlie -<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> e <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>-sono gli oggetti effettivi utilizzati per creare una connessione.  
  
 Nell'esempio è costituito da quattro parti:  
  
-   Modalità di visualizzazione di un controllo utente che consente di modificare le Web part in una pagina.  
  
-   Codice sorgente per un'interfaccia e due <xref:System.Web.UI.WebControls.WebParts.WebPart> controlla che funge da provider e consumer per una connessione.  
  
-   Una pagina Web per ospitare tutti i controlli ed eseguire l'esempio di codice.  
  
-   Una spiegazione su come eseguire la pagina di esempio.  
  
 La prima parte di questo esempio di codice è il controllo utente che consente agli utenti di modificare la modalità di visualizzazione in una pagina Web. Salvare il seguente codice sorgente in un file ascx, assegnandogli il nome del file che è stato assegnato le `Src` attributo del `Register` direttiva per il controllo utente, ovvero nella parte superiore della pagina Web host. Per informazioni dettagliate sulle modalità di visualizzazione e una descrizione del codice sorgente in questo controllo, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 La seconda parte dell'esempio di codice è il codice sorgente per l'interfaccia e controlli. Il file di origine contiene una semplice interfaccia denominata `IZipCode`. È inoltre disponibile un <xref:System.Web.UI.WebControls.WebParts.WebPart> classe denominata `ZipCodeWebPart` che implementa l'interfaccia e funge da controllo provider. Il relativo `ProvideIZipCode` è il metodo di callback che implementa l'unico membro dell'interfaccia. Il metodo restituisce semplicemente un'istanza dell'interfaccia. Si noti che il metodo è contrassegnato con un `ConnectionProvider` attributo nei relativi metadati. Questo è il meccanismo per identificare il metodo come metodo di callback per il punto di connessione del provider. L'altro <xref:System.Web.UI.WebControls.WebParts.WebPart> classe è denominata `WeatherWebPart`, e funge da consumer per la connessione. Questa classe ha un metodo denominato `GetZipCode` che ottiene un'istanza di `IZipCode` interfaccia dal controllo provider. Si noti che questo metodo è contrassegnato come metodo di punto di connessione del consumer con una `ConnectionConsumer` attributo nei relativi metadati. Questo è il meccanismo per identificare il metodo del punto di connessione nel controllo consumer.  
  
 Per eseguire l'esempio di codice, è necessario compilare il codice sorgente. È possibile compilarlo in modo esplicito e inserire l'assembly risultante nella cartella Bin del sito Web o nella global assembly cache. In alternativa, è possibile inserire il codice sorgente nella cartella App_Code del sito, in cui verrà compilato dinamicamente in fase di esecuzione. Nell'esempio viene utilizzata la compilazione dinamica. Per una procedura dettagliata viene illustrato come compilare, vedere [procedura dettagliata: sviluppo e l'utilizzo di un controllo personalizzato](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 La terza parte dell'esempio di codice è la pagina Web. Nella parte superiore `Register` direttive per registrare i controlli personalizzati che costituiscono la connessione e il controllo utente che consente agli utenti di modificare le modalità di visualizzazione della pagina. La connessione stessa viene creata in modo dichiarativo all'interno di `<staticconnections>` elemento nella pagina. È inoltre possibile creare la connessione a livello di codice; il codice per questo scopo è contenuto nel `Button1_Click` metodo. Se la connessione viene creata in modo dichiarativo o a livello di codice, punti di connessione devono sempre essere specificati per il provider e consumer. Il `Button2_Click` metodo accessi il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> gli oggetti per il provider e consumer e scrive alcuni valori della proprietà a un'etichetta nella pagina.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 Dopo aver caricato la pagina in un browser, fare clic su di **dettagli punto di connessione** pulsante. Informazioni sui punti di connessione provider e consumer stabiliti nella connessione dichiarativa. Successivamente, utilizzare il **modalità di visualizzazione** controllo elenco a discesa per passare alla pagina in modalità di connessione. Nel menu di uno dei verbi di <xref:System.Web.UI.WebControls.WebParts.WebPart> controlli (rappresentati da una freccia verso il basso nella barra del titolo), fare clic sul verbo di connessione. La connessione viene visualizzata l'interfaccia utente, creato automaticamente dal `<asp:connectionszone>` controllo dichiarato nella pagina. Fare clic su di **Disconnect** pulsante per terminare la connessione esistente. Utilizzare il **modalità di visualizzazione** controllo per restituire la pagina in modalità di visualizzazione. Fare clic su, il **connessione dinamica** pulsante per creare una connessione a livello di codice. Fare clic su di **dettagli punto di connessione** pulsante nuovamente, a indicare i dettagli sugli oggetti punto di connessione di due.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se un punto di connessione supporta più connessioni simultanee.</summary>
        <value>
          <see langword="true" /> se il punto di connessione supporta connessioni multiple; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> gli oggetti hanno loro <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> valore della proprietà è impostata su `true` (per il <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> classe), in quanto i controlli Web part per impostazione predefinita consente ai punti di connessione provider di creare connessioni a più consumer.  
  
 Al contrario, <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> gli oggetti hanno loro <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> valore della proprietà è impostata su `false` (dalla <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> classe) perché il controllo di Web part impostato per impostazione predefinita consente di connessione consumer punti per stabilire una connessione a un solo provider in un ora.  
  
 È possibile modificare il comportamento predefinito relativo alle connessioni multiple assegnando valori diversi per il <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> proprietà (per i provider) o <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> proprietà (per i consumer) dei due <xref:System.Attribute> classi utilizzate per gli attributi di connessione. Se si abilitano i punti di connessione consumer per la connessione a più provider nello stesso momento, il codice deve gestire i problemi di sincronizzazione risultante.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> proprietà sia <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> e <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> oggetti. Questo esempio di codice illustra solo la pagina Web che contiene il codice per accedere alla proprietà. per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Cenni preliminari sulla classe.  
  
 Il codice di `Button2_Click` metodo della pagina Web accede il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> degli oggetti di proprietà in ogni punto di connessione e scrive ogni valore in un'etichetta. Eseguire il codice facendo clic di **dettagli punto di connessione** pulsante dopo la pagina viene caricata in un browser.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la classe <see cref="T:System.Type" /> del controllo server a cui è associato un punto di connessione.</summary>
        <value>Classe <see cref="T:System.Type" /> che rappresenta il tipo di controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> proprietà è spesso il <xref:System.Web.UI.WebControls.WebParts.WebPart> tipo. Tuttavia, poiché qualsiasi tipo di controllo utente o un controllo server può prendere parte connessioni se correttamente abilitato e inserito in un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona, la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> può restituire uno di questi altri tipi di controllo server nonché.  
  
 Quando i controlli che non sono server <xref:System.Web.UI.WebControls.WebParts.WebPart> i controlli vengono disposti un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona, essi vengono inclusi in un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> oggetto in fase di esecuzione in modo che funzioni come <xref:System.Web.UI.WebControls.WebParts.WebPart> controlla e partecipare alle connessioni. Ma quando tali controlli sono coinvolti nelle connessioni, il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> non restituisce alcun valore della proprietà di <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> digitare; restituisce il tipo del <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controllo figlio dell'oggetto, ovvero il tipo del controllo server o utente.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> proprietà sia <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> e <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> oggetti. Questo esempio di codice illustra solo la pagina Web che contiene il codice per accedere alla proprietà. per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Cenni preliminari sulla classe.  
  
 Il codice di `Button2_Click` metodo della pagina Web accede il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> degli oggetti di proprietà in ogni punto di connessione e scrive ogni valore in un'etichetta. Eseguire il codice facendo clic di **dettagli punto di connessione** pulsante dopo la pagina viene caricata in un browser.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta una stringa utilizzata per identificare il punto di connessione predefinito in un insieme di punti di connessione associati a un controllo server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene creato un punto di connessione, è possibile specificare un ID per il punto di connessione nel codice sorgente di un provider o consumer <xref:System.Web.UI.WebControls.WebParts.WebPart> controllare, tramite un <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> o <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attributo. Tuttavia, quando un attributo viene aggiunto a un punto di connessione nel codice sorgente, la `ID` parametro è facoltativo. Se l'ID non è specificato nell'attributo, il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> campo fornisce una stringa che viene utilizzata per identificare il punto di connessione predefinito.  
  
 Se più punti di connessione sono definiti in un controllo consumer o provider, è necessario specificare un ID per ogni punto di connessione, in modo che sia possono distinguere i punti di connessione durante la creazione di connessioni.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una stringa che costituisce un nome descrittivo per rappresentare una connessione nell'interfaccia utente.</summary>
        <value>Stringa contenente un nome descrittivo per un oggetto <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per creare una connessione Web part, i controlli di provider e consumer per la connessione devono ognuno dei quali specifica almeno un punto di connessione, un metodo che consente loro di comunicare e condividere i dati. Per identificare questi metodi di punto di connessione, lo sviluppatore specifica un attributo nei metodi selezionati. Nel provider, un `ConnectionProvider` attributo è impostato sul metodo di callback selezionato e il consumer, un `ConnectionConsumer` attributo è impostato sul metodo che riceve un'istanza di un'interfaccia che contiene i dati dal provider. Per entrambi gli attributi, è l'unico parametro che è sempre necessario indipendentemente dal quale eseguire l'overload dichiarato per creare l'attributo, il `displayName` parametro. Lo sviluppatore deve assegnare una stringa da utilizzare come un nome descrittivo visualizzato per il punto di connessione e tale stringa diventa il valore della <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> valore della proprietà viene visualizzato nell'interfaccia utente di una pagina Web quando gli utenti creano le connessioni. Ad esempio, quando il <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> controllo viene aggiunto alla pagina, viene creata un'interfaccia utente per gli utenti di creare connessioni tra i controlli. Dopo che un utente passa a una pagina in modalità di connessione e sceglie un verbo di connessione in un <xref:System.Web.UI.WebControls.WebParts.WebPart> di controllo, viene visualizzata l'interfaccia utente di connessione. Ogni controllo che può partecipare a una connessione è elencato nell'interfaccia utente e accanto a ogni controllo è un controllo elenco a discesa che visualizza i nomi descrittivi dei suoi punti di connessione disponibili. Gli utenti devono selezionare almeno un punto di connessione per stabilire una connessione. I valori visualizzati nell'elenco dei punti di connessione vengono ottenuti le <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> proprietà. Quando gli sviluppatori di compilare un'interfaccia utente personalizzata per la creazione di connessioni, è possibile utilizzare il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> proprietà in modo analogo a fornire un nome descrittivo che rappresenta un punto di connessione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Oggetto <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o altro controllo server associato a un punto di connessione.</param>
        <summary>Restituisce un valore che indica se un punto di connessione può prendere parte alle connessioni.</summary>
        <returns>
          <see langword="true" /> se il controllo può creare un punto di connessione per prendere parte a una connessione; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> metodo nella base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> classe sempre restituisce `true`, ma le classi derivate possono eseguire l'override del metodo per restituire `true` o `false` in momenti diversi, in base allo stato di `control`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> metodo sia <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> e <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> oggetti. Questo esempio di codice illustra solo la pagina Web che contiene il codice per accedere alla proprietà. per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Cenni preliminari sulla classe.  
  
 Il codice di `Button2_Click` metodo della pagina Web accede il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> metodo in ogni punto di connessione degli oggetti e scrive ogni valore in un'etichetta. Eseguire il codice facendo clic di **dettagli punto di connessione** pulsante dopo la pagina viene caricata in un browser.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una stringa contenente l'identificatore per un punto di connessione.</summary>
        <value>Stringa contenente l'identificatore per un punto di connessione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando uno sviluppatore dichiara un <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> o <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attributo su un metodo nel codice sorgente di un controllo, in modo che il metodo può essere utilizzato come punto di connessione, non è necessario dichiarare il `ID` parametro per l'attributo del punto di connessione. L'attributo obbligatorio solo il `displayName` parametro. Per il punto di connessione, viene assegnato un ID predefinito utilizzando il valore di <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> campo.  
  
 Se è presente un solo metodo in un controllo viene utilizzato come un punto di connessione, non è necessario specificare un ID per il punto di connessione. Se sono presenti più metodi specificati come punti di connessione, è necessario specificare un ID per ognuno di essi. in caso contrario, verrà generata un'eccezione. Assegnando un ID a ciascun punto di connessione, inoltre consentono di specificare il punto di connessione da utilizzare quando si dichiarano connessioni nelle pagine Web o crearli nel codice.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> proprietà sia <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> e <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> oggetti. Questo esempio di codice illustra solo la pagina Web che contiene il codice per accedere alla proprietà. per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Cenni preliminari sulla classe.  
  
 Il codice di `Button2_Click` metodo della pagina Web accede il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> degli oggetti di proprietà in ogni punto di connessione e scrive ogni valore in un'etichetta. Eseguire il codice facendo clic di **dettagli punto di connessione** pulsante dopo la pagina viene caricata in un browser.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo dell'interfaccia utilizzata da un punto di connessione.</summary>
        <value>Oggetto <see cref="T:System.Type" /> corrispondente al tipo dell'interfaccia fornita o utilizzata da un controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> proprietà indica il tipo di interfaccia utilizzato da un punto di connessione. Questo può aiutare a determinare se due controlli sono compatibili e in grado di creare una connessione. Se il punto di connessione provider <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> è diverso dal punto di connessione consumer <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, quindi i due controlli non sono compatibili, ovvero non possono essere connessi direttamente senza un trasformatore e un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> oggetto necessario utilizzabile per stabilire una connessione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> proprietà sia <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> e <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> oggetti. Questo esempio di codice illustra solo la pagina Web che contiene il codice per accedere alla proprietà. per il codice completo necessario per eseguire l'esempio, vedere la sezione esempio del <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Cenni preliminari sulla classe.  
  
 Il codice di `Button2_Click` metodo della pagina Web accede il <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> degli oggetti di proprietà in ogni punto di connessione e scrive ogni valore in un'etichetta. Eseguire il codice facendo clic di **dettagli punto di connessione** pulsante dopo la pagina viene caricata in un browser.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
  </Members>
</Type>