<Type Name="Handle" FullName="System.Activities.Handle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f21db137592d43bc32c2d5e184edc79b77804b6d" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52606351" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Handle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Handle extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Handle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Handle" />
  <TypeSignature Language="C++ CLI" Value="public ref class Handle abstract" />
  <TypeSignature Language="F#" Value="type Handle = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un tipo che ha la sua durata controllata dal runtime del flusso di lavoro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tipi derivati da <xref:System.Activities.Handle> hanno durate controllate dal runtime del flusso di lavoro. Per variabili del flusso di lavoro di tipi di handle, il runtime utilizza il costruttore predefinito obbligatorio per creare un'istanza del tipo, l'assegna a <xref:System.Activities.Variable> e chiama <xref:System.Activities.Handle.OnInitialize%2A> in caso di inizializzazione dell'ambiente. Se la variabile esula dall'ambito preposto, <xref:System.Activities.Handle.OnUninitialize%2A> è chiamata.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Handle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Handle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Handle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Activities.Handle" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che derivano da <xref:System.Activities.Handle> devono fornire un costruttore predefinito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionPropertyName">
      <MemberSignature Language="C#" Value="public string ExecutionPropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExecutionPropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Handle.ExecutionPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecutionPropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExecutionPropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecutionPropertyName : string" Usage="System.Activities.Handle.ExecutionPropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome che viene usato da questo <see cref="T:System.Activities.Handle" /> in caso di aggiunta alle proprietà di esecuzione di un'attività.</summary>
        <value>Nome del tipo derivato fornito da <see cref="P:System.Type.FullName" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialize">
      <MemberSignature Language="C#" Value="protected virtual void OnInitialize (System.Activities.HandleInitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitialize(class System.Activities.HandleInitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitialize (context As HandleInitializationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitialize(System::Activities::HandleInitializationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member OnInitialize : System.Activities.HandleInitializationContext -&gt; unit&#xA;override this.OnInitialize : System.Activities.HandleInitializationContext -&gt; unit" Usage="handle.OnInitialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.HandleInitializationContext" />
      </Parameters>
      <Docs>
        <param name="context">L'ambiente in cui si sta creando l'handle.</param>
        <summary>Chiamato dal runtime del flusso di lavoro quando viene inizializzato l'ambiente che contiene <see cref="T:System.Activities.Handle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUninitialize">
      <MemberSignature Language="C#" Value="protected virtual void OnUninitialize (System.Activities.HandleInitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUninitialize(class System.Activities.HandleInitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUninitialize (context As HandleInitializationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUninitialize(System::Activities::HandleInitializationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member OnUninitialize : System.Activities.HandleInitializationContext -&gt; unit&#xA;override this.OnUninitialize : System.Activities.HandleInitializationContext -&gt; unit" Usage="handle.OnUninitialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.HandleInitializationContext" />
      </Parameters>
      <Docs>
        <param name="context">L'ambiente in cui l'handle è stato creato.</param>
        <summary>Chiamato dal runtime del flusso di lavoro se il <see cref="T:System.Activities.Variable" /> per <see cref="T:System.Activities.Handle" /> esula dall'ambito preposto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.ActivityInstance Owner" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Handle.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As ActivityInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::ActivityInstance ^ Owner { System::Activities::ActivityInstance ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Activities.ActivityInstance" Usage="System.Activities.Handle.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il <see cref="T:System.Activities.ActivityInstance" /> che contiene il <see cref="T:System.Activities.Variable" /> che contiene i  <see cref="T:System.Activities.Handle" />.</summary>
        <value>L'istanza di attività che contiene il <see cref="T:System.Activities.Variable" /> che contiene il <see cref="T:System.Activities.Handle" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfUninitialized">
      <MemberSignature Language="C#" Value="protected void ThrowIfUninitialized ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ThrowIfUninitialized() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Handle.ThrowIfUninitialized" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ThrowIfUninitialized ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ThrowIfUninitialized();" />
      <MemberSignature Language="F#" Value="member this.ThrowIfUninitialized : unit -&gt; unit" Usage="handle.ThrowIfUninitialized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera un <see cref="T:System.InvalidOperationException" /> se il <see cref="T:System.Activities.Handle" /> non è stato inizializzato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Handle.ThrowIfUninitialized%2A> fornisce agli autori della classe personalizzata derivata dall'handle un metodo conveniente da chiamare da qualsiasi metodo o proprietà della classe derivata che non è valido se <xref:System.Activities.Handle> è non inizializzato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>