<Type Name="WorkflowApplication" FullName="System.Activities.WorkflowApplication">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0a4bb11495ac22a4922bd688c321c72ef46b28d2" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34254648" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowApplication : System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowApplication extends System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowApplication&#xA;Inherits WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplication sealed : System::Activities::Hosting::WorkflowInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Hosting.WorkflowInstance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un host per una sola istanza di un flusso di lavoro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.Activities.WorkflowApplication> fornisce un host per una sola istanza di un flusso di lavoro. È un proxy all'istanza del flusso di lavoro effettiva gestita dal runtime del flusso di lavoro. Utenti di <xref:System.Activities.WorkflowApplication> possono istruire il runtime del flusso di lavoro a eseguire azioni su un'istanza del flusso di lavoro chiamando i metodi adatti su un oggetto <xref:System.Activities.WorkflowApplication>. Se un'azione richiesta non è valida, verrà generata un'eccezione.  
  
 Usando <xref:System.Activities.WorkflowApplication> è possibile eseguire le seguenti attività:  
  
1.  Creare una nuova istanza del flusso di lavoro o caricare un'istanza del flusso di lavoro da un archivio di istanze.  
  
2.  Fornire estensioni da utilizzare da attività all'interno di un'istanza del flusso di lavoro.  
  
3.  Controllare l'esecuzione di un'istanza del flusso di lavoro.  
  
4.  Riprendere un segnalibro creato da un'attività all'interno di un'istanza del flusso di lavoro.  
  
5.  Salvare in modo permanente o scaricare un'istanza del flusso di lavoro.  
  
6.  Ricevere una notifica sugli eventi del ciclo di vita delle istanze del flusso di lavoro.  
  
   
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>. Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Activities.WorkflowApplication" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">Definizione del flusso di lavoro.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Activities.WorkflowApplication" /> con la definizione del flusso di lavoro specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita usando una definizione di flusso di lavoro composta da una singola attività `DiceRoll`. L'attività `DiceRoll` dispone di due argomenti di output che rappresentano i risultati dell'operazione di lancio dei dadi. Quando il flusso di lavoro viene completato, gli output vengono recuperati nel gestore <xref:System.Activities.WorkflowApplication.Completed%2A> e l'output seguente viene visualizzato alla console.  
  
```Output  
Workflow aae3fb48-7229-4737-b969-d63e131b96b3 Completed.   
The two dice are 1 and 5.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#130](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#130)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#21](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">Definizione del flusso di lavoro.</param>
        <param name="definitionIdentity">Identità della definizione.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Activities.WorkflowApplication" /> con la definizione dei flussi di lavoro e l'identità delle definizioni specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">Definizione del flusso di lavoro.</param>
        <param name="inputs">I valori per argomenti definiti nell'attività radice della definizione del flusso di lavoro, con chiave basata sul nome dell'argomento.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Activities.WorkflowApplication" /> che utilizza la definizione di flusso di lavoro specificata e i valori di argomento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando una definizione di flusso di lavoro composta da una sola attività `Divide` che accetta due argomenti di input e un dizionario di argomenti di input che contengono i due valori da passare, con chiave basata sul nome dell'argomento. Vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>. Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.  
  
```Output  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Completed  
500 / 36 = 13 Remainder 32  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#10](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object), definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">Definizione del flusso di lavoro.</param>
        <param name="inputs">Identità della definizione.</param>
        <param name="definitionIdentity">I valori per argomenti definiti nell'attività radice della definizione del flusso di lavoro, con chiave basata sul nome dell'argomento.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Activities.WorkflowApplication" /> che utilizza la definizione di flusso di lavoro specificata e i valori di argomento e l'identità della definizione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Notifica il runtime del flusso di lavoro che deve interrompere questa istanza del flusso di lavoro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un flusso di lavoro ospitato da un oggetto <xref:System.Activities.WorkflowApplication> viene interrotto, viene richiamato il gestore <xref:System.Activities.WorkflowApplication.Aborted%2A>, ma non il gestore <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica il runtime del flusso di lavoro che deve interrompere questa istanza del flusso di lavoro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un flusso di lavoro ospitato da un oggetto <xref:System.Activities.WorkflowApplication> viene interrotto, viene richiamato il gestore <xref:System.Activities.WorkflowApplication.Aborted%2A>, ma non il gestore <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>. Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Abort%2A>. Quando il flusso di lavoro viene interrotto, l'output seguente viene visualizzato nella console.  
  
```Output  
Starting the workflow.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Idle.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The workflow has been aborted.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(System::String ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">Il motivo per la richiesta da interrompere.</param>
        <summary>Notifica il runtime del flusso di lavoro che deve interrompere questa istanza del flusso di lavoro per il motivo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un flusso di lavoro ospitato da un oggetto <xref:System.Activities.WorkflowApplication> viene interrotto, viene richiamato il gestore <xref:System.Activities.WorkflowApplication.Aborted%2A>, ma non il gestore <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>. Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Abort%2A>. Quando il flusso di lavoro viene interrotto, l'output seguente viene visualizzato nella console.  
  
```Output  
Starting the workflow.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Idle.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The reason for aborting the workflow.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Aborted" />
      <MemberSignature Language="VB.NET" Value="Public Property Aborted As Action(Of WorkflowApplicationAbortedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ Aborted { Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il <see cref="T:System.Action`1" /> che è richiamato quando l'istanza del flusso di lavoro viene interrotta.</summary>
        <value>L'azione che viene richiamata quando l'istanza del flusso di lavoro è interrotta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un flusso di lavoro ospitato da un oggetto <xref:System.Activities.WorkflowApplication> viene interrotto, viene richiamato il gestore <xref:System.Activities.WorkflowApplication.Aborted%2A>, ma non il gestore <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
   
  
## Examples  
 L'esempio di codice seguente controlla l'oggetto <xref:System.Activities.WorkflowApplicationAbortedEventArgs> passato nel gestore <xref:System.Activities.WorkflowApplication.Aborted%2A> di un'istanza <xref:System.Activities.WorkflowApplication> e visualizza le informazioni relative ai motivi dell'interruzione del flusso di lavoro.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#5](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInitialInstanceValues">
      <MemberSignature Language="C#" Value="public void AddInitialInstanceValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInitialInstanceValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInitialInstanceValues (writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInitialInstanceValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="writeOnlyValues">I valori di metadati da includere con la prima persistenza.</param>
        <summary>Specifica i valori di metadati dell'istanza inclusi con la prima persistenza di una nuova istanza.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cancella un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Metodo da chiamare quando l'operazione di annullamento è completata.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Cancella un'istanza del flusso di lavoro in modo asincrono utilizzando il <see cref="T:System.AsyncCallback" /> specificato e lo stato fornito dall'utente.</summary>
        <returns>Riferimento all'operazione di annullamento asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per determinare se l'operazione di annullamento ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndCancel%2A>. <xref:System.Activities.WorkflowApplication.EndCancel%2A> può essere chiamato dall'interno o dall'esterno del metodo `callback`. Se <xref:System.Activities.WorkflowApplication.EndCancel%2A> viene chiamato prima del completamento dell'operazione di annullamento, si blocca fino a che l'operazione di annullamento non viene completata. Per impostazione predefinita, l'operazione di annullamento deve essere completata in 30 secondi, altrimenti viene generata un'eccezione <xref:System.TimeoutException> da <xref:System.Activities.WorkflowApplication.EndCancel%2A>.  
  
 Questo metodo annulla un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di annullamento prima che sia annullata e venga generato un oggetto <see cref="T:System.TimeoutException" />.</param>
        <param name="callback">Metodo da chiamare quando l'operazione di annullamento è completata.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Annulla un'istanza del flusso di lavoro in modo asincrono usando l'intervallo di timeout specificato, il <see cref="T:System.AsyncCallback" /> e lo stato fornito dall'utente.</summary>
        <returns>Riferimento all'operazione di annullamento asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per determinare se l'operazione di annullamento ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndCancel%2A>. <xref:System.Activities.WorkflowApplication.EndCancel%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`. Se <xref:System.Activities.WorkflowApplication.EndCancel%2A> viene chiamato prima del completamento dell'operazione di annullamento, si blocca fino a che l'operazione di annullamento non viene completata. Se l'operazione di annullamento non è completata nell'intervallo specificato dal parametro `timeOut`, un <xref:System.TimeoutException> è generato dal <xref:System.Activities.WorkflowApplication.EndCancel%2A>.  
  
 Questo metodo annulla un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="definitionIdentity">Identità della definizione.</param>
        <param name="identityFilter">Filtro di identità.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Crea un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'archiviazione istanza, l'identità della definizione, il filtro dell'identità, il callback e lo stato specificati.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="definitionIdentity">Identità della definizione.</param>
        <param name="identityFilter">Filtro di identità.</param>
        <param name="timeout">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Crea un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'archiviazione istanza, l'identità della definizione, il filtro dell'identità, l'intervallo di timeout, il callback e lo stato specificati.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginDeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Elimina un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Elimina un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'archiviazione istanza, il callback e lo stato specificati.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="timeout">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Elimina un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'archiviazione istanza, l'intervallo di timeout, il callback e lo stato specificati.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera un proprietario dell'istanza in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificatore dell'istanza.</param>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Recupera un proprietario dell'istanza in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'identificatore, l'archivio, il callback e lo stato dell'istanza specificati.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificatore dell'istanza.</param>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="timeout">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Recupera un proprietario dell'istanza in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'identificatore, l'archivio, l'intervallo di timeout, il callback e lo stato.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera un proprietario dell'istanza eseguibile in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Recupera un proprietario dell'istanza eseguibile in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'archivio istanze, il callback e lo stato specificati.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="timeout">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Recupera un proprietario dell'istanza eseguibile in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'archivio istanze, l'intervallo di timeout, il callback e lo stato specificati.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Istanza.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'istanza, il callback e lo stato specificati.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Un identificatore univoco globale a 128 bit per l'istanza del flusso di lavoro.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Carica un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando l'identificatore dell'istanza specificato, il metodo di callback e lo stato fornito dall'utente.</summary>
        <returns>Stato di un'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Istanza.</param>
        <param name="updateMap">Mappa di aggiornamento.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'istanza, la mappa degli aggiornamenti, il callback e lo stato specificati.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Istanza.</param>
        <param name="timeout">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'istanza, l'intervallo di timeout, il callback e lo stato specificati.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Un identificatore univoco globale a 128 bit per l'istanza del flusso di lavoro.</param>
        <param name="timeout">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Carica un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando l'identificatore dell'istanza specificato, il periodo di timeout, il metodo di callback e lo stato fornito dall'utente.</summary>
        <returns>Stato di un'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Istanza.</param>
        <param name="updateMap">Mappa di aggiornamento.</param>
        <param name="timeout">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</param>
        <param name="callback">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'istanza, la mappa degli aggiornamenti, l'intervallo di timeout, il callback e lo stato specificati.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizia il processo asincrono del caricamento di un'istanza del flusso di lavoro eseguibile da <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Metodo da chiamare quando l'operazione è completata.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Inizia un'operazione per caricare un'istanza del flusso di lavoro eseguibile da <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</summary>
        <returns>Un riferimento all'operazione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.  
  
 Per verificare se l'operazione di caricamento ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>. <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> può essere chiamato dall'interno o dall'esterno del metodo `callback`. Se <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata. Per impostazione predefinita, l'operazione di ripresa deve essere completata in 30 secondi, altrimenti viene generata un'eccezione <xref:System.TimeoutException> da <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.  
  
 Questo metodo carica un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di caricamento prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</param>
        <param name="callback">Metodo da chiamare quando l'operazione è completata.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Inizia un'operazione per caricare un'istanza del flusso di lavoro eseguibile dal <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> usando l'intervallo di timeout specificato.</summary>
        <returns>Un riferimento all'operazione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.  
  
 Per verificare se l'operazione di caricamento ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>. <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> può essere chiamato dall'interno o dall'esterno del metodo `callback`. Se <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata. Se l'operazione di caricamento non è completata nell'intervallo di tempo specificato viene generato un <xref:System.TimeoutException> dal <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.  
  
 Questo metodo carica un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPersist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rende persistente un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza. Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Metodo da chiamare al termine dell'operazione di impostazione della persistenza.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Rende persistente un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando il metodo di callback specificato e lo stato fornito dall'utente.</summary>
        <returns>Riferimento all'operazione della persistenza asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per determinare se l'operazione di persistenza ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndPersist%2A>. <xref:System.Activities.WorkflowApplication.EndPersist%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`. Se viene chiamato <xref:System.Activities.WorkflowApplication.EndPersist%2A> prima del completamento dell'operazione di persistenza, si blocca fino a che l'operazione di persistenza non viene completata. Se l'operazione di persistenza non è completata entro 30 secondi, un <xref:System.TimeoutException> viene generato da <xref:System.Activities.WorkflowApplication.EndPersist%2A>.  
  
 Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza. Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
 Questo metodo consente di rendere persistente un flusso di lavoro in modo asincrono utilizzando il modello di progettazione asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di persistenza prima che sia annullata e venga generato un <see cref="T:System.TimeoutException" />.</param>
        <param name="callback">Metodo da chiamare al termine dell'operazione di impostazione della persistenza.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Rende persistente un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando l'intervallo di timeout, il metodo di callback specificato e lo stato fornito dall'utente.</summary>
        <returns>Riferimento all'operazione della persistenza asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per determinare se l'operazione di persistenza ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndPersist%2A>. <xref:System.Activities.WorkflowApplication.EndPersist%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`. Se viene chiamato <xref:System.Activities.WorkflowApplication.EndPersist%2A> prima del completamento dell'operazione di persistenza, si blocca fino a che l'operazione di persistenza non viene completata. Se l'operazione di persistenza non è completata nell'intervallo di timeout specificato, un <xref:System.TimeoutException> è generato dal <xref:System.Activities.WorkflowApplication.EndPersist%2A>.  
  
 Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza. Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
 Questo metodo consente di rendere persistente un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizia un'operazione asincrona per riprendere un segnalibro.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">Segnalibro da riprendere.</param>
        <param name="value">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</param>
        <param name="callback">Metodo da chiamare al termine dell'operazione di ripresa.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Inizia un'operazione asincrona per riprendere un segnalibro utilizzando il valore specificato, il metodo di callback e lo stato.</summary>
        <returns>Riferimento all'operazione di ripresa di segnalibro asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per verificare se l'operazione di ripresa ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>. <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> può essere chiamato dall'interno o dall'esterno del metodo `callback`. Se <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata. Per impostazione predefinita, l'operazione di ripresa deve essere completata in 30 secondi, altrimenti viene generata un'eccezione <xref:System.TimeoutException> da <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.  
  
 Questo metodo riprende un segnalibro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">Il nome del segnalibro da riprendere.</param>
        <param name="value">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</param>
        <param name="callback">Metodo chiamato quando l'operazione asincrona è completata.</param>
        <param name="state">Lo stato di esecuzione di un flusso di lavoro mantenuto dal thread chiamante prima che un'operazione asincrona inizi.</param>
        <summary>Inizia un'operazione asincrona per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato, il metodo di callback e lo stato. Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</summary>
        <returns>Risultato dell'operazione di ripresa del segnalibro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">Segnalibro da riprendere.</param>
        <param name="value">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</param>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di ripresa prima che sia annullata e venga generato un oggetto <see cref="T:System.TimeoutException" />.</param>
        <param name="callback">Metodo da chiamare al termine dell'operazione di ripresa.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Inizia un'operazione per riprendere un segnalibro con il nome specificato, utilizzando il valore specificato, l'intervallo di timeout, il metodo di callback e lo stato.</summary>
        <returns>Riferimento all'operazione di ripresa di segnalibro asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per verificare se l'operazione di ripresa ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>. <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> può essere chiamato dall'interno o dall'esterno del metodo `callback`. Se <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata. Se l'operazione di ripresa non è completata nell'intervallo di timeout specificato, un <xref:System.TimeoutException> è generato dal  <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.  
  
 Questo metodo riprende un segnalibro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">Il nome del segnalibro da riprendere.</param>
        <param name="value">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</param>
        <param name="timeout">L'intervallo di tempo durante il quale il segnalibro deve essere ripreso.</param>
        <param name="callback">Metodo chiamato quando l'operazione asincrona è completata.</param>
        <param name="state">Lo stato di esecuzione di un flusso di lavoro salvato dal thread chiamante prima che un'operazione asincrona inizi.</param>
        <summary>Inizia un'operazione asincrona per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato, l'intervallo di timeout, il metodo di callback e lo stato. Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</summary>
        <returns>Risultato dell'operazione di ripresa del segnalibro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginRun">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Avvia o riprende un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Metodo da chiamare al termine dell'operazione di ripresa.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Avvia o riprende un'istanza del flusso di lavoro in modo asincrono utilizzando il metodo di callback specificato e lo stato fornito dall'utente.</summary>
        <returns>Riferimento all'operazione di esecuzione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per determinare se l'operazione di esecuzione ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndRun%2A>. <xref:System.Activities.WorkflowApplication.EndRun%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`. Se <xref:System.Activities.WorkflowApplication.EndRun%2A> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata. Per impostazione predefinita, l'operazione di ripresa deve essere completata in 30 secondi, altrimenti viene generata un'eccezione <xref:System.TimeoutException> da <xref:System.Activities.WorkflowApplication.EndRun%2A>.  
  
 Questo metodo avvia o riprende un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di ripresa prima che sia annullata e venga generato un oggetto <see cref="T:System.TimeoutException" />.</param>
        <param name="callback">Metodo da chiamare al termine dell'operazione di ripresa.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Avvia o riprende un'istanza del flusso di lavoro in modo asincrono utilizzando l'intervallo di timeout, il metodo di callback specificato e lo stato fornito dall'utente.</summary>
        <returns>Riferimento all'operazione di esecuzione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per determinare se l'operazione di esecuzione ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndRun%2A>. <xref:System.Activities.WorkflowApplication.EndRun%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`. Se <xref:System.Activities.WorkflowApplication.EndRun%2A> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata. Se l'operazione di ripresa non è completata nell'intervallo di timeout specificato, un <xref:System.TimeoutException> è generato dal  <xref:System.Activities.WorkflowApplication.EndRun%2A>.  
  
 Questo metodo avvia o riprende un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTerminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Termina un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">Il motivo per il quale l'istanza del flusso di lavoro è terminata.</param>
        <param name="callback">Metodo da chiamare al termine dell'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Termina un'istanza del flusso di lavoro in modo asincrono utilizzando l'eccezione specificata, il metodo di callback e lo stato fornito dall'utente.</summary>
        <returns>Riferimento all'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
 Per stabilire se l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndTerminate%2A>. <xref:System.Activities.WorkflowApplication.EndTerminate%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`. Se <xref:System.Activities.WorkflowApplication.EndTerminate%2A> viene chiamato prima che l'operazione  <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> sia completata, si blocca fino a che l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> è completata. Per impostazione predefinita, l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> deve essere completata in 30 secondi o un <xref:System.TimeoutException> viene generato dal <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.  
  
 Questo metodo termina un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">Motivo della chiusura dell'istanza del flusso di lavoro.</param>
        <param name="callback">Metodo da chiamare al termine dell'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Termina un'istanza del flusso di lavoro in modo asincrono utilizzando il messaggio di errore specificato, il metodo di callback e lo stato fornito dall'utente.</summary>
        <returns>Riferimento all'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
 Per stabilire se l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndTerminate%2A>. <xref:System.Activities.WorkflowApplication.EndTerminate%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`. Se <xref:System.Activities.WorkflowApplication.EndTerminate%2A> viene chiamato prima che l'operazione  <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> sia completata, si blocca fino a che l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> è completata. Per impostazione predefinita, l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> deve essere completata in 30 secondi o un <xref:System.TimeoutException> viene generato dal <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.  
  
 Questo metodo termina un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">Motivo della chiusura dell'istanza del flusso di lavoro.</param>
        <param name="timeout">Intervallo nel quale l'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> deve essere completata prima che l'operazione è cancellata e un  <see cref="T:System.TimeoutException" /> è generato.</param>
        <param name="callback">Metodo da chiamare al termine dell'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Termina un'istanza del flusso di lavoro in modo asincrono utilizzando l'eccezione specificata, l'intervallo di timeout, il metodo di callback specificato e lo stato fornito dall'utente.</summary>
        <returns>Riferimento all'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
 Per stabilire se l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndTerminate%2A>. <xref:System.Activities.WorkflowApplication.EndTerminate%2A> può essere chiamato dall'interno o dall'esterno del metodo `callback`. Se <xref:System.Activities.WorkflowApplication.EndTerminate%2A> viene chiamato prima che l'operazione  <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> sia completata, si blocca fino a che l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> è completata. Se l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> non è completata entro l'intervallo di timeout specificato un <xref:System.TimeoutException> è generato. Questa o qualsiasi altra eccezione che si verifica durante il processo <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> è generata da <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.  
  
 Questo metodo termina un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">Motivo della chiusura dell'istanza del flusso di lavoro.</param>
        <param name="timeout">Intervallo nel quale l'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> deve essere completata prima che l'operazione è cancellata e un  <see cref="T:System.TimeoutException" /> è generato.</param>
        <param name="callback">Metodo da chiamare al termine dell'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Termina un'istanza del flusso di lavoro in modo asincrono utilizzando il messaggio di errore specificato, l'intervallo di timeout, il metodo di callback specificato e lo stato fornito dall'utente.</summary>
        <returns>Riferimento all'operazione asincrona <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
 Per stabilire se l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndTerminate%2A>. <xref:System.Activities.WorkflowApplication.EndTerminate%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`. Se <xref:System.Activities.WorkflowApplication.EndTerminate%2A> viene chiamato prima che l'operazione  <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> sia completata, si blocca fino a che l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> è completata. Se l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> non è completata entro l'intervallo di timeout specificato un <xref:System.TimeoutException> è generato dal <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.  
  
 Questo metodo termina un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUnload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rende persistente e consente di eliminare un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza. Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Metodo da chiamare al termine dell'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Rende persistente e consente di eliminare un'istanza del flusso di lavoro in modo asincrono utilizzando il metodo di callback specificato e lo stato fornito dall'utente.</summary>
        <returns>Riferimento all'operazione asincrona <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per stabilire se l'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndUnload%2A>. <xref:System.Activities.WorkflowApplication.EndUnload%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`. Se <xref:System.Activities.WorkflowApplication.EndUnload%2A> viene chiamato prima che l'operazione  <xref:System.Activities.WorkflowApplication.BeginUnload%2A> sia completata, si blocca fino a che l'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> è completata. Per impostazione predefinita, l'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> deve essere completata in 30 secondi o un <xref:System.TimeoutException> viene generato dal <xref:System.Activities.WorkflowApplication.EndUnload%2A>.  
  
 Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza. Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
 Questo metodo rende persistente e consente di eliminare un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Intervallo nel quale l'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> deve essere completata prima che l'operazione è cancellata e un  <see cref="T:System.TimeoutException" /> è generato.</param>
        <param name="callback">Metodo da chiamare al termine dell'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</param>
        <param name="state">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</param>
        <summary>Rende persistente e consente di eliminare un'istanza del flusso di lavoro in modo asincrono utilizzando l'intervallo di timeout specificato, il metodo di callback specificato e lo stato fornito dall'utente.</summary>
        <returns>Riferimento all'operazione asincrona <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per stabilire se l'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndUnload%2A>. <xref:System.Activities.WorkflowApplication.EndUnload%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`. Se <xref:System.Activities.WorkflowApplication.EndUnload%2A> viene chiamato prima che l'operazione  <xref:System.Activities.WorkflowApplication.BeginUnload%2A> sia completata, si blocca fino a che l'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> è completata. Se l'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> non è completata entro l'intervallo di timeout specificato un <xref:System.TimeoutException> è generato dal <xref:System.Activities.WorkflowApplication.EndUnload%2A>.  
  
 Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza. Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
 Questo metodo rende persistente e consente di scaricare un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Annulla l'istanza del flusso di lavoro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo pianifica l'annullamento dell'istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
 Per impostazione predefinita, l'operazione di annullamento deve essere completata in 30 secondi, altrimenti viene generata una <xref:System.TimeoutException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annulla l'istanza del flusso di lavoro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo pianifica l'annullamento dell'istanza del flusso di lavoro. Per ricevere una notifica al completamento dell'annullamento, utilizzare il gestore <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
 Per impostazione predefinita, l'operazione di annullamento deve essere completata in 30 secondi, altrimenti viene generata una <xref:System.TimeoutException>.  
  
   
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>. Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Cancel%2A>. Quando il flusso di lavoro viene annullato, l'output seguente viene visualizzato nella console.  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di annullamento prima che sia annullata e venga generato un oggetto <see cref="T:System.TimeoutException" />.</param>
        <summary>Annulla l'istanza del flusso di lavoro utilizzando l'intervallo di timeout specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo pianifica l'annullamento dell'istanza del flusso di lavoro. Per ricevere una notifica al completamento dell'annullamento, utilizzare il gestore <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>. Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Cancel%2A>. Quando il flusso di lavoro viene annullato, l'output seguente viene visualizzato nella console.  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Property Completed As Action(Of WorkflowApplicationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ Completed { Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il <see cref="T:System.Action`1" /> che è richiamato quando l'istanza del flusso di lavoro è completata.</summary>
        <value>L'azione che viene richiamata quando l'istanza del flusso di lavoro è completa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente controlla l'oggetto <xref:System.Activities.WorkflowApplicationCompletedEventArgs> passato nel gestore <xref:System.Activities.WorkflowApplication.Completed%2A> di un'istanza <xref:System.Activities.WorkflowApplication> e visualizza le informazioni sulle modalità di completamento del flusso di lavoro.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#4](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un proprietario dell'istanza predefinito per il flusso di lavoro.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
      </Parameters>
      <Docs>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="definitionIdentity">L'identità della definizione del flusso di lavoro.</param>
        <param name="identityFilter">Filtro di identità.</param>
        <summary>Crea un proprietario dell'istanza predefinito per il flusso di lavoro utilizzando l'archiviazione istanza, l'identità della definizione e il filtro dell'identità specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="definitionIdentity">L'identità della definizione del flusso di lavoro.</param>
        <param name="identityFilter">Filtro di identità.</param>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</param>
        <summary>Crea un proprietario dell'istanza predefinito per il flusso di lavoro utilizzando l'archiviazione istanza, l'identità della definizione, il filtro dell'identità e l'intervallo di timeout specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Elimina un proprietario dell'istanza predefinito per il flusso di lavoro.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <summary>Elimina un proprietario dell'istanza predefinito per il flusso di lavoro con l'archiviazione istanza specificata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</param>
        <summary>Elimina un proprietario dell'istanza predefinito per il flusso di lavoro con l'archiviazione istanza e l'intervallo di timeout specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public void EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancel (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancel(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Operazione di annullamento asincrona.</param>
        <summary>Attende il completamento dell'operazione di annullamento asincrona in sospeso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo determina se un'operazione <xref:System.Activities.WorkflowApplication.BeginCancel%2A> è stata completata con successo. Se viene chiamato prima del completamento dell'operazione di annullamento, si blocca fino a che l'operazione di annullamento è completata.  
  
 Questo metodo completa l'operazione di annullamento asincrona utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndCreateDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndCreateDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndCreateDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndCreateDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Risultato asincrono.</param>
        <summary>Attende il completamento della creazione del proprietario dell'istanza predefinita.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndDeleteDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndDeleteDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndDeleteDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndDeleteDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Risultato asincrono.</param>
        <summary>Attende il completamento della creazione del proprietario dell'istanza predefinita.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetInstance(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Risultato asincrono.</param>
        <summary>Attende il completamento del richiamo dell'istanza.</summary>
        <returns>Risultato dell'operazione.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetRunnableInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetRunnableInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetRunnableInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetRunnableInstance(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Risultato asincrono.</param>
        <summary>Attende il completamento dell'istanza dell'operazione di recupero asincrona eseguibile.</summary>
        <returns>Risultato dell'operazione.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public void EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoad(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">L'operazione di caricamento asincrona.</param>
        <summary>Attende il completamento dell'operazione di caricamento asincrona in sospeso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questo metodo viene chiamato prima del completamento dell'operazione di caricamento, si blocca fino a che l'operazione di caricamento non viene completata.  
  
 Questo metodo completa l'operazione di caricamento asincrona utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void EndLoadRunnableInstance (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadRunnableInstance(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadRunnableInstance (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadRunnableInstance(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Riferimento all'operazione di caricamento asincrona.</param>
        <summary>Attende il completamento dell'istanza dell'operazione di caricamento asincrona eseguibile.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo determina se un'operazione <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> è stata completata con successo. Se viene chiamato prima del completamento dell'operazione di caricamento asincrona, si blocca fino a che l'operazione non viene completata.  
  
 Questo metodo carica flussi di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPersist">
      <MemberSignature Language="C#" Value="public void EndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndPersist(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">L'operazione della persistenza asincrona.</param>
        <summary>Attende il completamento dell'operazione della persistenza asincrona in sospeso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo determina se un'operazione <xref:System.Activities.WorkflowApplication.BeginPersist%2A> è stata completata con successo. Se viene chiamato prima del completamento dell'operazione di persistenza, si blocca fino a che l'operazione di persistenza non è completata.  
  
 Questo metodo completa l'operazione di persistenza asincrona utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult EndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult EndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult EndResumeBookmark(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Riferimento all'operazione di ripresa di segnalibro asincrona.</param>
        <summary>Attende il completamento di un'operazione di ripresa del segnalibro.</summary>
        <returns>Uno dei valori di enumerazione che indica i risultati di un'operazione di ripresa di un segnalibro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo determina se un'operazione <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> è stata completata con successo. Se viene chiamato prima del completamento dell'operazione di caricamento asincrona, si blocca fino a che l'operazione non viene completata.  
  
 Questo metodo riprende un segnalibro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRun">
      <MemberSignature Language="C#" Value="public void EndRun (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndRun(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndRun (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndRun(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Operazione di esecuzione asincrona.</param>
        <summary>Attende il completamento dell'operazione di esecuzione asincrona in sospeso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo determina se un'operazione <xref:System.Activities.WorkflowApplication.BeginRun%2A> è stata completata con successo. Se viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.  
  
 Questo metodo completa un'operazione di esecuzione asincrona utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminate">
      <MemberSignature Language="C#" Value="public void EndTerminate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndTerminate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTerminate (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTerminate(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Operazione di interruzione asincrona.</param>
        <summary>Attende il completamento dell'operazione di interruzione asincrona in sospeso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere chiamato per determinare se un'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> è stata completata con successo. Se viene chiamato prima del completamento dell'operazione di interruzione asincrona, si blocca fino a che l'operazione non viene completata.  
  
 Questo metodo completa un'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> asincrona utilizzando il metodo di struttura asincrono  <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnload">
      <MemberSignature Language="C#" Value="public void EndUnload (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUnload(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUnload (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUnload(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">L'operazione di scaricamento asincrona.</param>
        <summary>Attende il completamento dell'operazione di scaricamento asincrona in sospeso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere chiamato per determinare se un'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> è stata completata con successo. Se viene chiamato prima del completamento dell'operazione di scaricamento asincrona, si blocca fino a che l'operazione non viene completata.  
  
 Questo metodo completa un'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> asincrona utilizzando il metodo di struttura asincrono  <xref:System.IAsyncResult>. Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As WorkflowInstanceExtensionManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Hosting::WorkflowInstanceExtensionManager ^ Extensions { System::Activities::Hosting::WorkflowInstanceExtensionManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstanceExtensionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la raccolta di estensioni per l'istanza del flusso di lavoro corrente.</summary>
        <value>Una raccolta di oggetti.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBookmarks">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce la raccolta di segnalibri per l'istanza del flusso di lavoro.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks () As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce la raccolta di segnalibri per l'istanza del flusso di lavoro.</summary>
        <returns>La raccolta di sola lettura di segnalibri per l'istanza del flusso di lavoro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questa operazione non è completata entro 30 secondi, è generato un <xref:System.TimeoutException>.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività `ReadLine` che crea un oggetto <xref:System.Activities.Bookmark>. Il flusso di lavoro viene avviato e, una volta creato l'oggetto <xref:System.Activities.Bookmark> e reso inattivo il flusso di lavoro, viene chiamato il metodo <xref:System.Activities.WorkflowApplication.GetBookmarks%2A>. Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks (timeout As TimeSpan) As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Intervallo nel quale questo metodo deve essere completato prima che l'operazione sia annullata e un <see cref="T:System.TimeoutException" /> è generato.</param>
        <summary>Restituisce la raccolta di segnalibri per l'istanza del flusso di lavoro utilizzando l'intervallo di timeout specificato.</summary>
        <returns>La raccolta di sola lettura di segnalibri per l'istanza del flusso di lavoro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività `ReadLine` che crea un oggetto <xref:System.Activities.Bookmark>. Il flusso di lavoro viene avviato e, una volta creato l'oggetto <xref:System.Activities.Bookmark> e reso inattivo il flusso di lavoro, viene chiamato il metodo <xref:System.Activities.WorkflowApplication.GetBookmarks%2A>. Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera l'istanza del flusso di lavoro.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificatore dell'istanza.</param>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <summary>Recupera l'istanza del flusso di lavoro utilizzando l'archivio istanze e l'identificatore di istanza specificati.</summary>
        <returns>Istanza recuperata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificatore dell'istanza.</param>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</param>
        <summary>Recupera l'istanza del flusso di lavoro utilizzando l'intervallo di timeout, l'archivio istanze e l'identificatore di istanza specificati.</summary>
        <returns>Riferimento all'operazione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera l'istanza eseguibile del flusso di lavoro.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <summary>Recupera l'istanza eseguibile del flusso di lavoro con l'archivio istanze specificato.</summary>
        <returns>Istanza eseguibile.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</param>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</param>
        <summary>Recupera l'istanza eseguibile del flusso di lavoro con l'intervallo di timeout e l'archivio istanze specificati.</summary>
        <returns>Istanza eseguibile.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid Id { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'identificatore GUID a 128 bit dell'istanza dell'applicazione del flusso di lavoro corrente.</summary>
        <value>Identificatore GUID a 128 bit.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene creata un'istanza <xref:System.Activities.WorkflowApplication>, quindi viene visualizzato il valore <xref:System.Activities.WorkflowApplication.Id%2A> nella console.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Property Idle As Action(Of WorkflowApplicationIdleEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ Idle { Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il <see cref="T:System.Action`1" /> che è richiamato quando l'istanza del flusso di lavoro corrente diventa inattiva.</summary>
        <value>Un'azione che si esegue quando un'istanza del flusso di lavoro diventa inattiva.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice seguente viene esaminato l'oggetto <xref:System.Activities.WorkflowApplicationIdleEventArgs> passato nel gestore <xref:System.Activities.WorkflowApplication.Idle%2A> di un'istanza <xref:System.Activities.WorkflowApplication>. In questo esempio il flusso di lavoro che diventa inattivo dispone di un oggetto <xref:System.Activities.Bookmark> denominato `EnterGuess`, di proprietà di un'attività denominata `ReadInt`. Si basa questo esempio di codice all'esterno della [procedura: eseguire un flusso di lavoro](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), che fa parte del [esercitazione introduttiva su &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md). Se il gestore <xref:System.Activities.WorkflowApplication.Idle%2A> nel passaggio indicato viene modificato per contenere il codice da questo esempio, viene visualizzato l'output seguente.  
  
```Output  
BookmarkName: EnterGuess - OwnerDisplayName: ReadInt  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#2](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceStore">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceStore InstanceStore" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.InstanceStore" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceStore As InstanceStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceStore ^ InstanceStore { System::Runtime::DurableInstancing::InstanceStore ^ get(); void set(System::Runtime::DurableInstancing::InstanceStore ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un oggetto che fornisce accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</summary>
        <value>Un archivio di istanze.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene creata un'istanza WorkflowApplication, quindi viene configurato <xref:System.Activities.WorkflowApplication.InstanceStore%2A> utilizzando un oggetto <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>. Questo esempio di codice fa parte di [procedura: creare ed eseguire un flusso di lavoro in esecuzione lunghi](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md), che fa parte del [esercitazione introduttiva su &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica un'istanza del flusso di lavoro da un archivio di istanze.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
      </Parameters>
      <Docs>
        <param name="instance">Istanza.</param>
        <summary>Carica un'istanza di flusso di lavoro da un archivio di istanze con l'istanza specificata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">Un identificatore univoco globale a 128 bit per l'istanza del flusso di lavoro.</param>
        <summary>Carica l'istanza del flusso di lavoro specificata in memoria da un archivio di istanze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene chiamato l'oggetto <xref:System.Activities.WorkflowApplication.Load%2A> per caricare l'istanza del flusso di lavoro reso persistente da un oggetto <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>. Questo esempio è tratto il `LoadAndCompleteInstance` metodo il [persistenza di un'applicazione flusso di lavoro](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) esempio.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="instance">Istanza.</param>
        <param name="updateMap">Mappa di aggiornamento.</param>
        <summary>Carica un'istanza di flusso di lavoro da un archivio di istanze con l'istanza e la mappa degli aggiornamenti specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">Istanza.</param>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</param>
        <summary>Carica un'istanza di flusso di lavoro da un archivio di istanze con l'istanza e l'intervallo di timeout specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId">Un identificatore univoco globale a 128 bit per l'istanza del flusso di lavoro.</param>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di caricamento prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</param>
        <summary>Carica l'istanza del flusso di lavoro specificata nella memoria da un archivio di istanze utilizzando l'intervallo di timeout specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene chiamato l'oggetto <xref:System.Activities.WorkflowApplication.Load%2A> per caricare l'istanza del flusso di lavoro reso persistente da un oggetto <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>. Questo esempio è tratto il `LoadAndCompleteInstance` metodo il [persistenza di un'applicazione flusso di lavoro](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) esempio.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">Istanza.</param>
        <param name="updateMap">Mappa di aggiornamento.</param>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</param>
        <summary>Carica un'istanza di flusso di lavoro da un archivio di istanze con l'istanza, la mappa degli aggiornamenti e l'intervallo di timeout specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica un'istanza del flusso di lavoro eseguibile da <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Carica un'istanza del flusso di lavoro eseguibile da <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.  
  
 Per impostazione predefinita, l'operazione di caricamento deve essere completata in 30 secondi, altrimenti viene generata una <xref:System.TimeoutException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di caricamento prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</param>
        <summary>Carica un'istanza del flusso di lavoro eseguibile dal <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> utilizzando l'intervallo di timeout specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">To be added.</param>
        <param name="value">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal override void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndPersist(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected override void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyPaused();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected override void OnNotifyUnhandledException (Exception exception, System.Activities.Activity exceptionSource, string exceptionSourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity exceptionSource, string exceptionSourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ exceptionSource, System::String ^ exceptionSourceInstanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="exceptionSource" Type="System.Activities.Activity" />
        <Parameter Name="exceptionSourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">To be added.</param>
        <param name="exceptionSource">To be added.</param>
        <param name="exceptionSourceInstanceId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal override void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRequestAbort(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt; OnUnhandledException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, valuetype System.Activities.UnhandledExceptionAction&gt; OnUnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Property OnUnhandledException As Func(Of WorkflowApplicationUnhandledExceptionEventArgs, UnhandledExceptionAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ OnUnhandledException { Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il <see cref="T:System.Func`2" /> che è richiamato quando l'istanza del flusso di lavoro corrente rileva un'eccezione non gestita.</summary>
        <value>Il delegato che viene richiamato quando un'istanza del flusso di lavoro rileva un'eccezione non gestita.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> e <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> determinano il comportamento del runtime quando un'eccezione non è gestita nel flusso di lavoro; tuttavia, in <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> c'è l'opzione di lasciare un flusso di lavoro sospeso nell'archivio di persistenza, mentre questa opzione non c'è in <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>. Ciò è dovuto al fatto che la modalità di elaborazione di un flusso di lavoro sospeso è specifica dell'host, mentre <xref:System.Activities.WorkflowApplication> non lo è. Per implementare questa funzionalità utilizzando <xref:System.Activities.WorkflowApplication>, creare un <xref:System.Activities.Persistence.PersistenceParticipant> personalizzato che ha questo comportamento.  
  
   
  
## Examples  
 Nell'esempio seguente viene richiamato un flusso di lavoro che genera un'eccezione. L'eccezione non viene gestita dal flusso di lavoro e viene richiamato il gestore <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>. Gli argomenti <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> vengono controllati per fornire informazioni sull'eccezione e il flusso di lavoro viene terminato.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rende persistente un'istanza del flusso di lavoro in un archivio di istanze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza. Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rende persistente un'istanza del flusso di lavoro in un archivio di istanze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'operazione di persistenza non è completata entro 30 secondi, un <xref:System.TimeoutException> viene generato.  
  
 Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza. Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
   
  
## Examples  
 Nell'esempio seguente viene chiamato <xref:System.Activities.WorkflowApplication.Persist%2A> per rendere persistente un'istanza del flusso di lavoro prima dell'avvio del flusso di lavoro. In questo esempio fa parte di `StartAndUnloadInstance` metodo il [persistenza di un'applicazione flusso di lavoro](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) esempio.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di persistenza prima che sia annullata e venga generato un <see cref="T:System.TimeoutException" />.</param>
        <summary>Rende persistente un'istanza del flusso di lavoro in un archivio di istanze utilizzando l'intervallo di timeout specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza. Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
   
  
## Examples  
 Nell'esempio seguente viene chiamato <xref:System.Activities.WorkflowApplication.Persist%2A> per rendere persistente un'istanza del flusso di lavoro prima dell'avvio del flusso di lavoro. Questo esempio è tratto il `StartAndUnloadInstance` metodo il [persistenza di un'applicazione flusso di lavoro](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) esempio.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistableIdle">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt; PersistableIdle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationIdleEventArgs, valuetype System.Activities.PersistableIdleAction&gt; PersistableIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistableIdle As Func(Of WorkflowApplicationIdleEventArgs, PersistableIdleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ PersistableIdle { Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il <see cref="T:System.Activities.ActivityFunc" /> che è richiamato quando l'istanza del flusso di lavoro corrente è inattiva e può essere salvata in modo permanente.</summary>
        <value>Il <see cref="T:System.Activities.ActivityFunc" /> che è richiamato quando l'istanza del flusso di lavoro corrente è inattiva e può essere salvata in modo permanente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un flusso di lavoro diventa inattivo e può essere reso persistente, vengono richiamati sia <xref:System.Activities.WorkflowApplication.Idle%2A> che <xref:System.Activities.WorkflowApplication.PersistableIdle%2A>, nell'ordine indicato. Il gestore <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> restituisce uno dei valori di enumerazione <xref:System.Activities.PersistableIdleAction> di <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist> o <xref:System.Activities.PersistableIdleAction.Unload>.  
  
   
  
## Examples  
 Nell'esempio seguente viene gestito il gestore <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> e viene impostato il runtime affinché renda persistente e scarichi il flusso di lavoro.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#26](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizia un'operazione per riprendere un segnalibro.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">Segnalibro da riprendere.</param>
        <param name="value">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</param>
        <summary>Inizia un'operazione per riprendere il segnalibro specificato utilizzando il valore specificato. Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</summary>
        <returns>Risultato dell'operazione di ripresa del segnalibro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività `ReadLine` che crea un oggetto <xref:System.Activities.Bookmark>. Dopo l'avvio del flusso di lavoro, la creazione dell'oggetto <xref:System.Activities.Bookmark> e il passaggio del flusso di lavoro sullo stato inattivo, viene raccolto l'input dell'utente e viene ripreso il segnalibro.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#24](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">Il nome del segnalibro da riprendere.</param>
        <param name="value">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</param>
        <summary>Inizia un'operazione per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato. Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</summary>
        <returns>Risultato dell'operazione di ripresa del segnalibro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività `ReadLine` che crea un oggetto <xref:System.Activities.Bookmark>. Dopo l'avvio del flusso di lavoro, la creazione dell'oggetto <xref:System.Activities.Bookmark> e il passaggio del flusso di lavoro sullo stato inattivo, viene raccolto l'input dell'utente e viene ripreso il segnalibro.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmark">Segnalibro da riprendere.</param>
        <param name="value">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</param>
        <param name="timeout">L'intervallo di tempo durante il quale il segnalibro deve essere ripreso.</param>
        <summary>Inizia un'operazione per riprendere il segnalibro specificato utilizzando il valore specificato e l'intervallo di timeout. Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</summary>
        <returns>Risultato dell'operazione di ripresa del segnalibro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività `ReadLine` che crea un oggetto <xref:System.Activities.Bookmark>. Dopo l'avvio del flusso di lavoro, la creazione dell'oggetto <xref:System.Activities.Bookmark> e il passaggio del flusso di lavoro sullo stato inattivo, viene raccolto l'input dell'utente e viene ripreso il segnalibro.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#25](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">Il nome del segnalibro da riprendere.</param>
        <param name="value">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</param>
        <param name="timeout">L'intervallo di tempo durante il quale il segnalibro deve essere ripreso.</param>
        <summary>Inizia un'operazione per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato e l'intervallo di timeout. Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</summary>
        <returns>Risultato dell'operazione di ripresa del segnalibro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività `ReadLine` che crea un oggetto <xref:System.Activities.Bookmark>. Dopo l'avvio del flusso di lavoro, la creazione dell'oggetto <xref:System.Activities.Bookmark> e il passaggio del flusso di lavoro sullo stato inattivo, viene raccolto l'input dell'utente e viene ripreso il segnalibro.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizia o riprende l'esecuzione di un'istanza del flusso di lavoro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo per iniziare l'esecuzione di un'istanza del flusso di lavoro appena creata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizia o riprende l'esecuzione di un'istanza del flusso di lavoro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo per iniziare l'esecuzione di un'istanza del flusso di lavoro appena creata.  
  
 Se l'operazione di esecuzione non è completata entro 30 secondi, è generato un <xref:System.TimeoutException>.  
  
   
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>. Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Chiamare questo metodo per iniziare l'esecuzione di un'istanza del flusso di lavoro appena creata.  Intervallo nel quale l'operazione di esecuzione deve essere completata prima che l'operazione sia annullata e venga generato un <see cref="T:System.TimeoutException" />.</param>
        <summary>Inizia o riprende l'esecuzione di un'istanza del flusso di lavoro utilizzando l'intervallo di timeout specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si noti che diversamente da <xref:System.Activities.WorkflowInvoker.Invoke%2A>, questo metodo raggiungerà il timeout solo se il flusso di lavoro non inizia nel periodo di tempo specificato, piuttosto che dover essere completato entro il periodo di tempo specificato. Ciò è dovuto al fatto che <xref:System.Activities.WorkflowInvoker.Invoke%2A> esegue il flusso di lavoro in modo sincrono (bloccando il thread host), mentre <xref:System.Activities.WorkflowApplication.Run%2A> lo esegue in modo asincrono, solo bloccando il thread host per il periodo di tempo richiesto per iniziare il flusso di lavoro.  
  
   
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>. Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal override bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool SupportsInstanceKeys { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Terminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Termina un'istanza del flusso di lavoro.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">Motivo della chiusura dell'istanza del flusso di lavoro.</param>
        <summary>Termina un'istanza del flusso di lavoro usando l'eccezione specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
 Per impostazione predefinita, l'operazione <xref:System.Activities.WorkflowApplication.Terminate%2A> deve essere completata in 30 secondi, altrimenti viene generata una <xref:System.TimeoutException>.  
  
   
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>. Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Terminate%2A>. Quando il flusso di lavoro viene terminato, l'output seguente viene visualizzato nella console.  
  
```Output  
Starting the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#16](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">Motivo della chiusura dell'istanza del flusso di lavoro.</param>
        <summary>Termina un'istanza del flusso di lavoro usando il messaggio di errore specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
 Per impostazione predefinita, l'operazione <xref:System.Activities.WorkflowApplication.Terminate%2A> deve essere completata in 30 secondi, altrimenti viene generata una <xref:System.TimeoutException>.  
  
   
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>. Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Terminate%2A>. Quando il flusso di lavoro viene terminato, l'output seguente viene visualizzato nella console.  
  
```Output  
Starting the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#18](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason">Motivo della chiusura dell'istanza del flusso di lavoro.</param>
        <param name="timeout">Intervallo nel quale l'operazione <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> deve essere completata prima che l'operazione è cancellata e un  <see cref="T:System.TimeoutException" /> è generato.</param>
        <summary>Termina un'istanza del flusso di lavoro utilizzando l'eccezione e l'intervallo di timeout specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo pianifica la chiusura del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>. Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Terminate%2A>. Quando il flusso di lavoro viene terminato, l'output seguente viene visualizzato nella console.  
  
```Output  
Starting the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#17](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason">Motivo della chiusura dell'istanza del flusso di lavoro.</param>
        <param name="timeout">Intervallo nel quale l'operazione <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> deve essere completata prima che l'operazione è cancellata e un  <see cref="T:System.TimeoutException" /> è generato.</param>
        <summary>Termina un'istanza del flusso di lavoro utilizzando il messaggio di errore e l'intervallo di timeout specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro. Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>. Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>. Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Terminate%2A>. Quando il flusso di lavoro viene terminato, l'output seguente viene visualizzato nella console.  
  
```Output  
Starting the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#19](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rende persistente e scarica un'istanza del flusso di lavoro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, l'operazione di scaricamento deve essere completata in 30 secondi, altrimenti viene generato un <xref:System.TimeoutException>.  
  
 Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza. Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rende persistente e scarica un'istanza del flusso di lavoro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, l'operazione di scaricamento deve essere completata in 30 secondi, altrimenti viene generato un <xref:System.TimeoutException>.  
  
 Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza. Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
   
  
## Examples  
 Esempio di codice seguente fa parte di [attività NoPersistScope](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) esempio. In questo esempio, il flusso di lavoro è inattivo e l'applicazione host è in attesa dell'input dell'utente. Se l'utente sceglie di scaricare, viene chiamato <xref:System.Activities.WorkflowApplication.Unload%2A>. Se è riuscito correttamente, il flusso di lavoro viene reso persistente e scaricato dalla memoria.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Intervallo nel quale deve essere completata l'operazione di scaricamento prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</param>
        <summary>Rende persistente e scarica un'istanza del flusso di lavoro utilizzando l'intervallo di timeout specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza. Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.  
  
   
  
## Examples  
 Esempio di codice seguente fa parte di [attività NoPersistScope](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) esempio. In questo esempio, il flusso di lavoro è inattivo e l'applicazione host è in attesa dell'input dell'utente. Se l'utente sceglie di scaricare, viene chiamato <xref:System.Activities.WorkflowApplication.Unload%2A>. Se è riuscito correttamente, il flusso di lavoro viene reso persistente e scaricato dalla memoria.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; Unloaded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationEventArgs&gt; Unloaded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Property Unloaded As Action(Of WorkflowApplicationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ Unloaded { Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il <see cref="T:System.Action`1" /> che è richiamato quando il flusso di lavoro corrente viene scaricato.</summary>
        <value>Azione che viene richiamata quando un'istanza del flusso di lavoro è scaricata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente controlla l'oggetto <xref:System.Activities.WorkflowApplicationEventArgs> passato nel gestore <xref:System.Activities.WorkflowApplication.Unloaded%2A> di un'istanza <xref:System.Activities.WorkflowApplication> e visualizza l'oggetto <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> del flusso di lavoro scaricato.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#3](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>