<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowApplication.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5aed6b6f994120238c715839c3c767b2a95d2547e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aed6b6f994120238c715839c3c767b2a95d2547e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Provides a host for a single instance of a workflow.</source>
          <target state="translated">Fornisce un host per una sola istanza di un flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>The <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> class provides a host for a single workflow instance.</source>
          <target state="translated">La classe <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> fornisce un host per una sola istanza di un flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>It is a proxy to the actual workflow instance that is managed by the workflow runtime.</source>
          <target state="translated">È un proxy all'istanza del flusso di lavoro effettiva gestita dal runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Users of <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> can instruct the workflow runtime to perform actions on a workflow instance by calling the appropriate methods on a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> object.</source>
          <target state="translated">Utenti di <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> possono istruire il runtime del flusso di lavoro a eseguire azioni su un'istanza del flusso di lavoro chiamando i metodi adatti su un oggetto <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If a requested action is not valid, an exception is thrown.</source>
          <target state="translated">Se un'azione richiesta non è valida, verrà generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> you can perform the following tasks:</source>
          <target state="translated">Usando <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> è possibile eseguire le seguenti attività:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Create a new workflow instance, or load a workflow instance from an instance store.</source>
          <target state="translated">Creare una nuova istanza del flusso di lavoro o caricare un'istanza del flusso di lavoro da un archivio di istanze.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Provide extensions to be used by activities within a workflow instance.</source>
          <target state="translated">Fornire estensioni da utilizzare da attività all'interno di un'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Control the execution of a workflow instance.</source>
          <target state="translated">Controllare l'esecuzione di un'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Resume a bookmark created by an activity within a workflow instance.</source>
          <target state="translated">Riprendere un segnalibro creato da un'attività all'interno di un'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Persist or unload a workflow instance.</source>
          <target state="translated">Salvare in modo permanente o scaricare un'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Be notified of workflow instance lifecycle events.</source>
          <target state="translated">Ricevere una notifica sugli eventi del ciclo di vita delle istanze del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>When the workflow is completed, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> class.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
          <source>The workflow definition.</source>
          <target state="translated">Definizione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> class with the specified workflow definition.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> con la definizione del flusso di lavoro specificata.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using using a workflow definition consisting of a single <ph id="ph2">`DiceRoll`</ph> activity.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita usando una definizione di flusso di lavoro composta da una singola attività <ph id="ph2">`DiceRoll`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
          <source>The <ph id="ph1">`DiceRoll`</ph> activity has two output arguments that represent the results of the dice roll operation.</source>
          <target state="translated">L'attività <ph id="ph1">`DiceRoll`</ph> dispone di due argomenti di output che rappresentano i risultati dell'operazione di lancio dei dadi.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
          <source>When the workflow completes, the outputs are retrieved in the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler, and the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene completato, gli output vengono recuperati nel gestore <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> e l'output seguente viene visualizzato alla console.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>The workflow definition.</source>
          <target state="translated">Definizione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>The definition identity.</source>
          <target state="translated">Identità della definizione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> class with the specified workflow definition and definition identity.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> con la definizione dei flussi di lavoro e l'identità delle definizioni specificati.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The workflow definition.</source>
          <target state="translated">Definizione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</source>
          <target state="translated">I valori per argomenti definiti nell'attività radice della definizione del flusso di lavoro, con chiave basata sul nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> class that uses the specified workflow definition and argument values.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> che utilizza la definizione di flusso di lavoro specificata e i valori di argomento.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using using a workflow definition consisting of a single <ph id="ph2">`Divide`</ph> activity that takes two input arguments, and a dictionary of input arguments containing the two values to be passed, keyed by argument name.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita utilizzando una definizione di flusso di lavoro composta da una sola attività <ph id="ph2">`Divide`</ph> che accetta due argomenti di input e un dizionario di argomenti di input che contengono i due valori da passare, con chiave basata sul nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>When the workflow is completed, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)">
          <source>The workflow definition.</source>
          <target state="translated">Definizione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)">
          <source>The definition identity.</source>
          <target state="translated">Identità della definizione.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)">
          <source>The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</source>
          <target state="translated">I valori per argomenti definiti nell'attività radice della definizione del flusso di lavoro, con chiave basata sul nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> class that uses the specified workflow definition and argument values, and definition identity.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> che utilizza la definizione di flusso di lavoro specificata e i valori di argomento e l'identità della definizione.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Notifies the workflow runtime that this workflow instance should abort.</source>
          <target state="translated">Notifica il runtime del flusso di lavoro che deve interrompere questa istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>When a workflow hosted by a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> is aborted, the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> handler is invoked and the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler is not invoked.</source>
          <target state="translated">Quando un flusso di lavoro ospitato da un oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene interrotto, viene richiamato il gestore <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph>, ma non il gestore <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Abort">
          <source>Notifies the workflow runtime that this workflow instance should abort.</source>
          <target state="translated">Notifica il runtime del flusso di lavoro che deve interrompere questa istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort">
          <source>When a workflow hosted by a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> is aborted, the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> handler is invoked and the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler is not invoked.</source>
          <target state="translated">Quando un flusso di lavoro ospitato da un oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene interrotto, viene richiamato il gestore <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph>, ma non il gestore <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Abort%2A&gt;</ph> is called.</source>
          <target state="translated">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Abort%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort">
          <source>When the workflow is aborted, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene interrotto, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>The reason for the request to abort.</source>
          <target state="translated">Il motivo per la richiesta da interrompere.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>Notifies the workflow runtime that this workflow instance should abort for the specified reason.</source>
          <target state="translated">Notifica il runtime del flusso di lavoro che deve interrompere questa istanza del flusso di lavoro per il motivo specificato.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>When a workflow hosted by a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> is aborted, the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> handler is invoked and the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler is not invoked.</source>
          <target state="translated">Quando un flusso di lavoro ospitato da un oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene interrotto, viene richiamato il gestore <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph>, ma non il gestore <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Abort%2A&gt;</ph> is called.</source>
          <target state="translated">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Abort%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>When the workflow is aborted, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene interrotto, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.Aborted">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> that is invoked when the workflow instance is aborted.</source>
          <target state="translated">Ottiene o imposta il <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> che è richiamato quando l'istanza del flusso di lavoro viene interrotta.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Aborted">
          <source>The action that is invoked when the workflow instance is aborted.</source>
          <target state="translated">L'azione che viene richiamata quando l'istanza del flusso di lavoro è interrotta.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Aborted">
          <source>When a workflow hosted by a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> is aborted, the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> handler is invoked and the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler is not invoked.</source>
          <target state="translated">Quando un flusso di lavoro ospitato da un oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene interrotto, viene richiamato il gestore <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph>, ma non il gestore <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Aborted">
          <source>The following code example inspects the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ph> passed into the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> handler of a <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance and displays information about why workflow was aborted.</source>
          <target state="translated">L'esempio di codice seguente controlla l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ph> passato nel gestore <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> di un'istanza <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> e visualizza le informazioni relative ai motivi dell'interruzione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>The metadata values to be included with the first persistence.</source>
          <target state="translated">I valori di metadati da includere con la prima persistenza.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>Specifies instance metadata values that are included with the first persistence of a new instance.</source>
          <target state="translated">Specifica i valori di metadati dell'istanza inclusi con la prima persistenza di una nuova istanza.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Cancels a workflow asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cancella un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>The method to be called when the cancel operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'operazione di annullamento è completata.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>Cancels a workflow instance asynchronously using the specified <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> and user-provided state.</source>
          <target state="translated">Cancella un'istanza del flusso di lavoro in modo asincrono utilizzando il <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> specificato e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous cancel operation.</source>
          <target state="translated">Riferimento all'operazione di annullamento asincrona.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>To determine whether the cancel operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</source>
          <target state="translated">Per determinare se l'operazione di annullamento ha avuto successo, chiamare <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> can be called from inside or outside of the <ph id="ph2">`callback`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> is called before the cancel operation completes, it blocks until the cancel operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> viene chiamato prima del completamento dell'operazione di annullamento, si blocca fino a che l'operazione di annullamento non viene completata.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>By default, the cancel operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'operazione di annullamento deve essere completata in 30 secondi, altrimenti viene generata un'eccezione <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> da <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>This method cancels a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo annulla un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the cancel operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di annullamento prima che sia annullata e venga generato un oggetto <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the cancel operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'operazione di annullamento è completata.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Cancels a workflow instance asynchronously using the specified time-out interval, <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>, and user-provided state.</source>
          <target state="translated">Annulla un'istanza del flusso di lavoro in modo asincrono usando l'intervallo di timeout specificato, il <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous cancel operation.</source>
          <target state="translated">Riferimento all'operazione di annullamento asincrona.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine whether the cancel operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</source>
          <target state="translated">Per determinare se l'operazione di annullamento ha avuto successo, chiamare <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> can be called from inside or outside of the method specified in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> is called before the cancel operation completes, it blocks until the cancel operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> viene chiamato prima del completamento dell'operazione di annullamento, si blocca fino a che l'operazione di annullamento non viene completata.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the cancel operation does not complete in the interval specified by the <ph id="ph1">`timeOut`</ph> parameter, a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</source>
          <target state="translated">Se l'operazione di annullamento non è completata nell'intervallo specificato dal parametro <ph id="ph1">`timeOut`</ph>, un <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> è generato dal <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method cancels a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo annulla un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Creates a default instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Crea un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>The definition identity.</source>
          <target state="translated">Identità della definizione.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>The identity filter.</source>
          <target state="translated">Filtro di identità.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>Creates a default instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance store, definition identity, identity filter, callback and state.</source>
          <target state="translated">Crea un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> con l'archiviazione istanza, l'identità della definizione, il filtro dell'identità, il callback e lo stato specificati.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The definition identity.</source>
          <target state="translated">Identità della definizione.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The identity filter.</source>
          <target state="translated">Filtro di identità.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Creates a default instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance store, definition identity, identity filter, timeout interval, callback and state.</source>
          <target state="translated">Crea un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> con l'archiviazione istanza, l'identità della definizione, il filtro dell'identità, l'intervallo di timeout, il callback e lo stato specificati.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Deletes a default instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Elimina un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>Deletes a default instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance store, callback, and state.</source>
          <target state="translated">Elimina un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> con l'archiviazione istanza, il callback e lo stato specificati.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Deletes a default instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</source>
          <target state="translated">Elimina un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> con l'archiviazione istanza, l'intervallo di timeout, il callback e lo stato specificati.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Retrieves an instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Recupera un proprietario dell'istanza in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The instance identifier.</source>
          <target state="translated">Identificatore dell'istanza.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>Retrieves an instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance identifier, instance store, callback, and state.</source>
          <target state="translated">Recupera un proprietario dell'istanza in modo asincrono utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> con l'identificatore, l'archivio, il callback e lo stato dell'istanza specificati.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The instance identifier.</source>
          <target state="translated">Identificatore dell'istanza.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Retrieves an instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance identifier, instance store, timeout interval, callback, and state.</source>
          <target state="translated">Recupera un proprietario dell'istanza in modo asincrono utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> con l'identificatore, l'archivio, l'intervallo di timeout, il callback e lo stato.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Retrieves a runnable instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Recupera un proprietario dell'istanza eseguibile in modo asincrono utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>Retrieves a runnable instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance store, callback, and state.</source>
          <target state="translated">Recupera un proprietario dell'istanza eseguibile in modo asincrono utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> con l'archivio istanze, il callback e lo stato specificati.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Retrieves a runnable instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</source>
          <target state="translated">Recupera un proprietario dell'istanza eseguibile in modo asincrono utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> con l'archivio istanze, l'intervallo di timeout, il callback e lo stato specificati.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Loads a workflow asynchronously from an instance store using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di struttura asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)">
          <source>The instance.</source>
          <target state="translated">Istanza.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)">
          <source>Loads a workflow asynchronously from an instance store using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance, callback and state.</source>
          <target state="translated">Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> con l'istanza, il callback e lo stato specificati.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
          <source>A globally unique 128-bit identifier for the workflow instance.</source>
          <target state="translated">Un identificatore univoco globale a 128 bit per l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
          <source>Loads a workflow asynchronously from an instance store using the specified instance identifier, callback method, and user-provided state.</source>
          <target state="translated">Carica un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando l'identificatore dell'istanza specificato, il metodo di callback e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">Stato di un'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
          <source>The instance.</source>
          <target state="translated">Istanza.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
          <source>The update map.</source>
          <target state="translated">Mappa di aggiornamento.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
          <source>Loads a workflow asynchronously from an instance store using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance, update map, callback and state.</source>
          <target state="translated">Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> con l'istanza, la mappa degli aggiornamenti, il callback e lo stato specificati.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The instance.</source>
          <target state="translated">Istanza.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Loads a workflow asynchronously from an instance store using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance, timeout interval, callback and state.</source>
          <target state="translated">Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> con l'istanza, l'intervallo di timeout, il callback e lo stato specificati.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A globally unique 128-bit identifier for the workflow instance.</source>
          <target state="translated">Un identificatore univoco globale a 128 bit per l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Loads a workflow asynchronously from an instance store using the specified instance identifier, timeout period, callback method, and user-provided state.</source>
          <target state="translated">Carica un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando l'identificatore dell'istanza specificato, il periodo di timeout, il metodo di callback e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">Stato di un'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The instance.</source>
          <target state="translated">Istanza.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The update map.</source>
          <target state="translated">Mappa di aggiornamento.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Loads a workflow asynchronously from an instance store using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance, update map, timeout interval, callback and state.</source>
          <target state="translated">Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> con l'istanza, la mappa degli aggiornamenti, l'intervallo di timeout, il callback e lo stato specificati.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Initiates the asynchronous process of loading a runnable workflow instance from the <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</source>
          <target state="translated">Inizia il processo asincrono del caricamento di un'istanza del flusso di lavoro eseguibile da <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>A runnable instance is an instance for which a timer or instance lock has expired.</source>
          <target state="translated">Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation is complete.</source>
          <target state="translated">Metodo da chiamare quando l'operazione è completata.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object containing information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>Initiates an operation to load a runnable workflow instance from the <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</source>
          <target state="translated">Inizia un'operazione per caricare un'istanza del flusso di lavoro eseguibile da <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation</source>
          <target state="translated">Un riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>A runnable instance is an instance for which a timer or instance lock has expired.</source>
          <target state="translated">Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>To determine if the load operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</source>
          <target state="translated">Per verificare se l'operazione di caricamento ha avuto successo, chiamare <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> can be called from inside or outside of the <ph id="ph2">`callback`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> is called before the resume operation completes, it blocks until the resume operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>By default, the resume operation must complete in 30 seconds or else a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'operazione di ripresa deve essere completata in 30 secondi, altrimenti viene generata un'eccezione <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> da <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>This method loads a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo carica un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di caricamento prima che l'operazione sia annullata e generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation is complete.</source>
          <target state="translated">Metodo da chiamare quando l'operazione è completata.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object containing information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Initiates an operation to load a runnable workflow instance from the <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph> using the specified time-out interval.</source>
          <target state="translated">Inizia un'operazione per caricare un'istanza del flusso di lavoro eseguibile dal <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph> usando l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation</source>
          <target state="translated">Un riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A runnable instance is an instance for which a timer or instance lock has expired.</source>
          <target state="translated">Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine if the load operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</source>
          <target state="translated">Per verificare se l'operazione di caricamento ha avuto successo, chiamare <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> can be called from inside or outside of the <ph id="ph2">`callback`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> is called before the resume operation completes, it blocks until the resume operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the load operation does not complete within the specified time-out interval a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</source>
          <target state="translated">Se l'operazione di caricamento non è completata nell'intervallo di tempo specificato viene generato un <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> dal <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method loads a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo carica un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Persists a workflow instance to an instance store asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Rende persistente un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>The method to be called when the persist operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione di impostazione della persistenza.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>Persists a workflow instance to an instance store asynchronously using the specified callback method and user-provided state.</source>
          <target state="translated">Rende persistente un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando il metodo di callback specificato e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous persist operation.</source>
          <target state="translated">Riferimento all'operazione della persistenza asincrona.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>To determine whether the persist operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</source>
          <target state="translated">Per determinare se l'operazione di persistenza ha avuto successo, chiamare <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> can be called from inside or outside of the method referenced in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> is called before the persist operation completes, it blocks until the persist operation completes.</source>
          <target state="translated">Se viene chiamato <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> prima del completamento dell'operazione di persistenza, si blocca fino a che l'operazione di persistenza non viene completata.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>If the persist operation does not complete within 30 seconds, a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</source>
          <target state="translated">Se l'operazione di persistenza non è completata entro 30 secondi, un <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> viene generato da <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>This method persists a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo consente di rendere persistente un flusso di lavoro in modo asincrono utilizzando il modello di progettazione asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the persist operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di persistenza prima che sia annullata e venga generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the persist operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione di impostazione della persistenza.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Persists a workflow instance to an instance store asynchronously using the specified time-out interval, callback method, and user-provided state.</source>
          <target state="translated">Rende persistente un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando l'intervallo di timeout, il metodo di callback specificato e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous persist operation.</source>
          <target state="translated">Riferimento all'operazione della persistenza asincrona.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine whether the persist operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</source>
          <target state="translated">Per determinare se l'operazione di persistenza ha avuto successo, chiamare <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> can be called from inside or outside of the method referenced in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> is called before the persist operation completes, it blocks until the persist operation completes.</source>
          <target state="translated">Se viene chiamato <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> prima del completamento dell'operazione di persistenza, si blocca fino a che l'operazione di persistenza non viene completata.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the persist operation does not complete within the specified time-out interval, a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</source>
          <target state="translated">Se l'operazione di persistenza non è completata nell'intervallo di timeout specificato, un <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> è generato dal <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method persists a workflow instance asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo consente di rendere persistente un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Initiates an asynchronous operation to resume a bookmark.</source>
          <target state="translated">Inizia un'operazione asincrona per riprendere un segnalibro.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>The bookmark to resume.</source>
          <target state="translated">Segnalibro da riprendere.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>The method to be called when the resume operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione di ripresa.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>Initiates an operation to resume a bookmark using the specified value, callback method, and state.</source>
          <target state="translated">Inizia un'operazione asincrona per riprendere un segnalibro utilizzando il valore specificato, il metodo di callback e lo stato.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous bookmark resume operation.</source>
          <target state="translated">Riferimento all'operazione di ripresa di segnalibro asincrona.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>To determine if the resume operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</source>
          <target state="translated">Per verificare se l'operazione di ripresa ha avuto successo, chiamare <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> can be called from inside or outside of the <ph id="ph2">`callback`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> is called before the resume operation completes, it blocks until the resume operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>By default, the resume operation must complete in 30 seconds or else a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'operazione di ripresa deve essere completata in 30 secondi, altrimenti viene generata un'eccezione <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> da <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>This method resumes a bookmark asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo riprende un segnalibro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>The name of the bookmark to be resumed.</source>
          <target state="translated">Il nome del segnalibro da riprendere.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>The method that is called when the asynchronous operation completes.</source>
          <target state="translated">Metodo chiamato quando l'operazione asincrona è completata.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>The state of execution of a workflow that was preserved by the calling thread before an asynchronous operation began.</source>
          <target state="translated">Lo stato di esecuzione di un flusso di lavoro mantenuto dal thread chiamante prima che un'operazione asincrona inizi.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, callback method, and state.</source>
          <target state="translated">Inizia un'operazione asincrona per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato, il metodo di callback e lo stato.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>The bookmark to be resumed is previously created by an activity within the workflow instance.</source>
          <target state="translated">Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>The result of the bookmark resumption operation.</source>
          <target state="translated">Risultato dell'operazione di ripresa del segnalibro.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>The bookmark result indicates whether the resumption operation succeeded or failed.</source>
          <target state="translated">Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The bookmark to resume.</source>
          <target state="translated">Segnalibro da riprendere.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the resume operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di ripresa prima che sia annullata e venga generato un oggetto <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the resume operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione di ripresa.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Initiates an operation to resume a bookmark using the specified value, time-out interval, callback method, and state.</source>
          <target state="translated">Inizia un'operazione per riprendere un segnalibro con il nome specificato, utilizzando il valore specificato, l'intervallo di timeout, il metodo di callback e lo stato.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous bookmark resume operation.</source>
          <target state="translated">Riferimento all'operazione di ripresa di segnalibro asincrona.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine if the resume operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</source>
          <target state="translated">Per verificare se l'operazione di ripresa ha avuto successo, chiamare <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> can be called from inside or outside of the <ph id="ph2">`callback`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> is called before the resume operation completes, it blocks until the resume operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the resume operation does not complete within the specified time-out interval a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</source>
          <target state="translated">Se l'operazione di ripresa non è completata nell'intervallo di timeout specificato, un <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> è generato dal  <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method resumes a bookmark asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo riprende un segnalibro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The name of the bookmark to be resumed.</source>
          <target state="translated">Il nome del segnalibro da riprendere.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The time interval during which the bookmark must be resumed.</source>
          <target state="translated">L'intervallo di tempo durante il quale il segnalibro deve essere ripreso.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method that is called when the asynchronous operation completes.</source>
          <target state="translated">Metodo chiamato quando l'operazione asincrona è completata.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state of execution of a workflow that was saved by the calling thread before an asynchronous operation began.</source>
          <target state="translated">Lo stato di esecuzione di un flusso di lavoro salvato dal thread chiamante prima che un'operazione asincrona inizi.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, time-out interval, callback method, and state.</source>
          <target state="translated">Inizia un'operazione asincrona per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato, l'intervallo di timeout, il metodo di callback e lo stato.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The bookmark to be resumed is previously created by an activity within the workflow instance.</source>
          <target state="translated">Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The result of the bookmark resumption operation.</source>
          <target state="translated">Risultato dell'operazione di ripresa del segnalibro.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The bookmark result indicates whether the resumption operation succeeded or failed.</source>
          <target state="translated">Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Starts or resumes a workflow instance asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Avvia o riprende un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>The method to be called when the resume operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione di ripresa.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>Starts or resumes a workflow instance asynchronously using the specified callback method and user-provided state.</source>
          <target state="translated">Avvia o riprende un'istanza del flusso di lavoro in modo asincrono utilizzando il metodo di callback specificato e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous run operation.</source>
          <target state="translated">Riferimento all'operazione di esecuzione asincrona.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>To determine whether the run operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</source>
          <target state="translated">Per determinare se l'operazione di esecuzione ha avuto successo, chiamare <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> can be called from inside or outside of the method referenced in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> is called before the resume operation completes, it blocks until the resume operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>By default, the resume operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'operazione di ripresa deve essere completata in 30 secondi, altrimenti viene generata un'eccezione <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> da <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>This method starts or resumes a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo avvia o riprende un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the resume operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di ripresa prima che sia annullata e venga generato un oggetto <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the resume operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione di ripresa.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Starts or resumes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</source>
          <target state="translated">Avvia o riprende un'istanza del flusso di lavoro in modo asincrono utilizzando l'intervallo di timeout, il metodo di callback specificato e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous run operation.</source>
          <target state="translated">Riferimento all'operazione di esecuzione asincrona.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine whether the run operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</source>
          <target state="translated">Per determinare se l'operazione di esecuzione ha avuto successo, chiamare <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> can be called from inside or outside of the method reference in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> is called before the resume operation completes, it blocks until the resume operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the resume operation does not complete within the specified time-out interval a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</source>
          <target state="translated">Se l'operazione di ripresa non è completata nell'intervallo di timeout specificato, un <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> è generato dal  <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method starts or resumes a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo avvia o riprende un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Terminates a workflow instance asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Termina un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>The reason the workflow instance is terminated.</source>
          <target state="translated">Il motivo per il quale l'istanza del flusso di lavoro è terminata.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>The method to be called when the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>Terminates a workflow instance asynchronously using the specified exception, callback method, and user-provided state.</source>
          <target state="translated">Termina un'istanza del flusso di lavoro in modo asincrono utilizzando l'eccezione specificata, il metodo di callback e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>A reference to the current <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation.</source>
          <target state="translated">Riferimento all'operazione <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>To determine whether the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation was successful, call <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Per stabilire se l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> ha avuto successo, chiamare <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> can be called from inside or outside of the method referenced in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> is called before the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes, it blocks until the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> viene chiamato prima che l'operazione  <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> sia completata, si blocca fino a che l'operazione <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> è completata.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation must complete in 30 seconds or a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> deve essere completata in 30 secondi o un <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> viene generato dal <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>This method terminates a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo termina un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motivo della chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>The method to be called when the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>Terminates a workflow instance asynchronously using the specified error message, callback method, and user-provided state.</source>
          <target state="translated">Termina un'istanza del flusso di lavoro in modo asincrono utilizzando il messaggio di errore specificato, il metodo di callback e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>A reference to the current <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation.</source>
          <target state="translated">Riferimento all'operazione <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>To determine whether the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation was successful, call <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Per stabilire se l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> ha avuto successo, chiamare <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> can be called from inside or outside of the method reference in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> is called before the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes, it blocks until the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> viene chiamato prima che l'operazione  <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> sia completata, si blocca fino a che l'operazione <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> è completata.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation must complete in 30 seconds or a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> deve essere completata in 30 secondi o un <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> viene generato dal <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>This method terminates a workflow instance asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo termina un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motivo della chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation must complete before the operation is canceled and a <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'operazione <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> deve essere completata prima che l'operazione è cancellata e un  <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> è generato.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Terminates a workflow instance asynchronously using the specified exception, time-out interval, callback method, and user-provided state.</source>
          <target state="translated">Termina un'istanza del flusso di lavoro in modo asincrono utilizzando l'eccezione specificata, l'intervallo di timeout, il metodo di callback specificato e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the current <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation.</source>
          <target state="translated">Riferimento all'operazione <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine whether the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation was successful, call <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Per stabilire se l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> ha avuto successo, chiamare <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> can be called from inside or outside of the <ph id="ph2">`callback`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> is called before the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes, it blocks until the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> viene chiamato prima che l'operazione  <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> sia completata, si blocca fino a che l'operazione <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> è completata.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation does not complete within the specified time-out interval a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Se l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> non è completata entro l'intervallo di timeout specificato un <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> è generato.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This or any other exceptions that occur during the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> process is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Questa o qualsiasi altra eccezione che si verifica durante il processo <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> è generata da <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method terminates a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo termina un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motivo della chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation must complete before the operation is canceled and a <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'operazione <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> deve essere completata prima che l'operazione è cancellata e un  <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> è generato.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Terminates a workflow instance asynchronously using the specified error message, time-out interval, callback method, and user-provided state.</source>
          <target state="translated">Termina un'istanza del flusso di lavoro in modo asincrono utilizzando il messaggio di errore specificato, l'intervallo di timeout, il metodo di callback specificato e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation.</source>
          <target state="translated">Riferimento all'operazione asincrona <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine whether the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation was successful, call <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Per stabilire se l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> ha avuto successo, chiamare <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> can be called from inside or outside of the method reference in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> is called before the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes, it blocks until the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> viene chiamato prima che l'operazione  <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> sia completata, si blocca fino a che l'operazione <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> è completata.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation does not complete within the specified time-out interval a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Se l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> non è completata entro l'intervallo di timeout specificato un <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> è generato dal <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method terminates a workflow instance asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo termina un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Persists and disposes a workflow instance asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Rende persistente e consente di eliminare un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>The method to be called when the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph> operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>Persists and disposes a workflow instance asynchronously using the specified callback method and user-provided state.</source>
          <target state="translated">Rende persistente e consente di eliminare un'istanza del flusso di lavoro in modo asincrono utilizzando il metodo di callback specificato e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph> operation.</source>
          <target state="translated">Riferimento all'operazione asincrona <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>To determine whether the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation was successful, call <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</source>
          <target state="translated">Per stabilire se l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> ha avuto successo, chiamare <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> can be called from inside or outside of the method reference in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> is called before the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation completes, it blocks until the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> viene chiamato prima che l'operazione  <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> sia completata, si blocca fino a che l'operazione <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> è completata.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation must complete in 30 seconds or a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> deve essere completata in 30 secondi o un <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> viene generato dal <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>This method persists and disposes a workflow instance asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo rende persistente e consente di eliminare un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation must complete before the operation is canceled and a <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'operazione <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> deve essere completata prima che l'operazione è cancellata e un  <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> è generato.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph> operation has completed.</source>
          <target state="translated">Metodo da chiamare al termine dell'operazione <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Persists and disposes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</source>
          <target state="translated">Rende persistente e consente di eliminare un'istanza del flusso di lavoro in modo asincrono utilizzando l'intervallo di timeout specificato, il metodo di callback specificato e lo stato fornito dall'utente.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph> operation.</source>
          <target state="translated">Riferimento all'operazione asincrona <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine whether the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation was successful, call <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</source>
          <target state="translated">Per stabilire se l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> ha avuto successo, chiamare <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> can be called from inside or outside of the method reference in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> is called before the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation completes, it blocks until the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation completes.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> viene chiamato prima che l'operazione  <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> sia completata, si blocca fino a che l'operazione <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> è completata.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation does not complete within the specified time-out interval a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</source>
          <target state="translated">Se l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> non è completata entro l'intervallo di timeout specificato un <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> è generato dal <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method persists and unloads a workflow instance asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo rende persistente e consente di scaricare un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Cancels the workflow instance.</source>
          <target state="translated">Annulla l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>This method schedules the cancellation of the workflow instance.</source>
          <target state="translated">Questo metodo pianifica l'annullamento dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>To be notified when the cancellation has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>By default, the cancel operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Per impostazione predefinita, l'operazione di annullamento deve essere completata in 30 secondi, altrimenti viene generata una <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>Cancels the workflow instance.</source>
          <target state="translated">Annulla l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>This method schedules the cancellation of the workflow instance.</source>
          <target state="translated">Questo metodo pianifica l'annullamento dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>To be notified when the cancellation has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler.</source>
          <target state="translated">Per ricevere una notifica al completamento dell'annullamento, utilizzare il gestore <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>By default, the cancel operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Per impostazione predefinita, l'operazione di annullamento deve essere completata in 30 secondi, altrimenti viene generata una <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Cancel%2A&gt;</ph> is called.</source>
          <target state="translated">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Cancel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>When the workflow is cancelled, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene annullato, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>The interval in which the cancel operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di annullamento prima che sia annullata e venga generato un oggetto <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>Cancels the workflow instance using the specified time-out interval.</source>
          <target state="translated">Annulla l'istanza del flusso di lavoro utilizzando l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>This method schedules the cancellation of the workflow instance.</source>
          <target state="translated">Questo metodo pianifica l'annullamento dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>To be notified when the cancellation has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler.</source>
          <target state="translated">Per ricevere una notifica al completamento dell'annullamento, utilizzare il gestore <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Cancel%2A&gt;</ph> is called.</source>
          <target state="translated">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Cancel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>When the workflow is cancelled, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene annullato, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.Completed">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> that is invoked when the workflow instance completes.</source>
          <target state="translated">Ottiene o imposta il <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> che è richiamato quando l'istanza del flusso di lavoro è completata.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Completed">
          <source>The action that is invoked when the workflow instance is complete.</source>
          <target state="translated">L'azione che viene richiamata quando l'istanza del flusso di lavoro è completa.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Completed">
          <source>The following code example inspects the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ph> passed into the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler of a <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance and displays information about how the workflow completed.</source>
          <target state="translated">L'esempio di codice seguente controlla l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ph> passato nel gestore <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> di un'istanza <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> e visualizza le informazioni sulle modalità di completamento del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Creates a default instance owner for the workflow.</source>
          <target state="translated">Crea un proprietario dell'istanza predefinito per il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)">
          <source>The definition identity of the workflow.</source>
          <target state="translated">L'identità della definizione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)">
          <source>The identity filter.</source>
          <target state="translated">Filtro di identità.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)">
          <source>Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter.</source>
          <target state="translated">Crea un proprietario dell'istanza predefinito per il flusso di lavoro utilizzando l'archiviazione istanza, l'identità della definizione e il filtro dell'identità specificati.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)">
          <source>The definition identity of the workflow.</source>
          <target state="translated">L'identità della definizione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)">
          <source>The identity filter.</source>
          <target state="translated">Filtro di identità.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)">
          <source>The interval in which the begin load operation must complete before the operation is canceled.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)">
          <source>Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter and timeout interval.</source>
          <target state="translated">Crea un proprietario dell'istanza predefinito per il flusso di lavoro utilizzando l'archiviazione istanza, l'identità della definizione, il filtro dell'identità e l'intervallo di timeout specificati.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Deletes a default instance owner for the workflow.</source>
          <target state="translated">Elimina un proprietario dell'istanza predefinito per il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)">
          <source>Deletes a default instance owner for the workflow with specified instance store.</source>
          <target state="translated">Elimina un proprietario dell'istanza predefinito per il flusso di lavoro con l'archiviazione istanza specificata.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The interval in which the begin load operation must complete before the operation is canceled.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>Deletes a default instance owner for the workflow with specified instance store and timeout interval..</source>
          <target state="translated">Elimina un proprietario dell'istanza predefinito per il flusso di lavoro con l'archiviazione istanza e l'intervallo di timeout specificati.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
          <source>The asynchronous cancel operation.</source>
          <target state="translated">Operazione di annullamento asincrona.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
          <source>Waits for the pending asynchronous cancel operation to complete.</source>
          <target state="translated">Attende il completamento dell'operazione di annullamento asincrona in sospeso.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginCancel%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Questo metodo determina se un'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginCancel%2A&gt;</ph> è stata completata con successo.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
          <source>If called before the cancel operation completes, it blocks until the cancel operation is complete.</source>
          <target state="translated">Se viene chiamato prima del completamento dell'operazione di annullamento, si blocca fino a che l'operazione di annullamento è completata.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
          <source>This method completes the asynchronous cancel operation using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo completa l'operazione di annullamento asincrona utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)">
          <source>The asynchronous result.</source>
          <target state="translated">Risultato asincrono.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)">
          <source>Waits for the creation of default instance owner to complete.</source>
          <target state="translated">Attende il completamento della creazione del proprietario dell'istanza predefinita.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)">
          <source>The asynchronous result.</source>
          <target state="translated">Risultato asincrono.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)">
          <source>Waits for the deletion of default instance owner to complete.</source>
          <target state="translated">Attende il completamento della creazione del proprietario dell'istanza predefinita.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)">
          <source>The asynchronous result.</source>
          <target state="translated">Risultato asincrono.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)">
          <source>Waits for the instance retrieval to complete.</source>
          <target state="translated">Attende il completamento del richiamo dell'istanza.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)">
          <source>The result of the operation.</source>
          <target state="translated">Risultato dell'operazione.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)">
          <source>The asynchronous result.</source>
          <target state="translated">Risultato asincrono.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)">
          <source>Waits for the asynchronous retrieval of runnable instance operation to complete.</source>
          <target state="translated">Attende il completamento dell'istanza dell'operazione di recupero asincrona eseguibile.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)">
          <source>The result of the operation.</source>
          <target state="translated">Risultato dell'operazione.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
          <source>The asynchronous load operation.</source>
          <target state="translated">L'operazione di caricamento asincrona.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
          <source>Waits for the pending asynchronous load operation to complete.</source>
          <target state="translated">Attende il completamento dell'operazione di caricamento asincrona in sospeso.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
          <source>If this method is called before the loading operation completes, it blocks until the loading operation is complete.</source>
          <target state="translated">Se questo metodo viene chiamato prima del completamento dell'operazione di caricamento, si blocca fino a che l'operazione di caricamento non viene completata.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
          <source>This method completes the asynchronous load operation using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo completa l'operazione di caricamento asincrona utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
          <source>A reference to the asynchronous load operation.</source>
          <target state="translated">Riferimento all'operazione di caricamento asincrona.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
          <source>Waits for the asynchronous load runnable instance operation to complete.</source>
          <target state="translated">Attende il completamento dell'istanza dell'operazione di caricamento asincrona eseguibile.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Questo metodo determina se un'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A&gt;</ph> è stata completata con successo.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
          <source>If called before the load operation completes, it blocks until the operation is complete.</source>
          <target state="translated">Se viene chiamato prima del completamento dell'operazione di caricamento asincrona, si blocca fino a che l'operazione non viene completata.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
          <source>This method loads workflows asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo carica flussi di lavoro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
          <source>The asynchronous persist operation.</source>
          <target state="translated">L'operazione della persistenza asincrona.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
          <source>Waits for the pending asynchronous persist operation to complete.</source>
          <target state="translated">Attende il completamento dell'operazione della persistenza asincrona in sospeso.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginPersist%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Questo metodo determina se un'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginPersist%2A&gt;</ph> è stata completata con successo.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
          <source>If called before the persist operation completes, it blocks until the persist operation is complete.</source>
          <target state="translated">Se viene chiamato prima del completamento dell'operazione di persistenza, si blocca fino a che l'operazione di persistenza non è completata.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
          <source>This method completes the asynchronous persist operation using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo completa l'operazione di persistenza asincrona utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>A reference to the asynchronous bookmark resume operation.</source>
          <target state="translated">Riferimento all'operazione di ripresa di segnalibro asincrona.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>Waits for a bookmark resume operation to complete.</source>
          <target state="translated">Attende il completamento di un'operazione di ripresa del segnalibro.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>One of the enumeration values that indicates the results of a bookmark resumption operation.</source>
          <target state="translated">Uno dei valori di enumerazione che indica i risultati di un'operazione di ripresa di un segnalibro.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Questo metodo determina se un'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A&gt;</ph> è stata completata con successo.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>If called before the load operation completes, it blocks until the operation is complete.</source>
          <target state="translated">Se viene chiamato prima del completamento dell'operazione di caricamento asincrona, si blocca fino a che l'operazione non viene completata.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>This method resumes a bookmark asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo riprende un segnalibro in modo asincrono utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
          <source>The asynchronous run operation.</source>
          <target state="translated">Operazione di esecuzione asincrona.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
          <source>Waits for the pending asynchronous run operation to complete.</source>
          <target state="translated">Attende il completamento dell'operazione di esecuzione asincrona in sospeso.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginRun%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Questo metodo determina se un'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginRun%2A&gt;</ph> è stata completata con successo.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
          <source>If called before the resume operation completes, it blocks until the resume operation is complete.</source>
          <target state="translated">Se viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
          <source>This method completes an asynchronous run operation using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo completa un'operazione di esecuzione asincrona utilizzando il modello di struttura asincrono <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
          <source>The asynchronous terminate operation.</source>
          <target state="translated">Operazione di interruzione asincrona.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
          <source>Waits for the pending asynchronous terminate operation to complete.</source>
          <target state="translated">Attende il completamento dell'operazione di interruzione asincrona in sospeso.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
          <source>This method can be called to determine whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Questo metodo può essere chiamato per determinare se un'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> è stata completata con successo.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
          <source>If called before the terminate operation completes, it blocks until the operation is complete.</source>
          <target state="translated">Se viene chiamato prima del completamento dell'operazione di interruzione asincrona, si blocca fino a che l'operazione non viene completata.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
          <source>This method completes an asynchronous <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation using the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo completa un'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> asincrona utilizzando il metodo di struttura asincrono  <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
          <source>The asynchronous unload operation.</source>
          <target state="translated">L'operazione di scaricamento asincrona.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
          <source>Waits for the pending asynchronous unload operation to complete.</source>
          <target state="translated">Attende il completamento dell'operazione di scaricamento asincrona in sospeso.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
          <source>This method can be called to determine whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Questo metodo può essere chiamato per determinare se un'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> è stata completata con successo.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
          <source>If called before the unload operation completes, it blocks until the operation is complete.</source>
          <target state="translated">Se viene chiamato prima del completamento dell'operazione di scaricamento asincrona, si blocca fino a che l'operazione non viene completata.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
          <source>This method completes an asynchronous <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation using the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Questo metodo completa un'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> asincrona utilizzando il metodo di struttura asincrono  <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.Extensions">
          <source>Gets the collection of extensions for the current workflow instance.</source>
          <target state="translated">Ottiene la raccolta di estensioni per l'istanza del flusso di lavoro corrente.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Extensions">
          <source>A collection of objects.</source>
          <target state="translated">Una raccolta di oggetti.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Returns the collection of bookmarks for the workflow instance.</source>
          <target state="translated">Restituisce la raccolta di segnalibri per l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetBookmarks">
          <source>Returns the collection of bookmarks for the workflow instance.</source>
          <target state="translated">Restituisce la raccolta di segnalibri per l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetBookmarks">
          <source>A read-only collection of bookmarks for the workflow instance.</source>
          <target state="translated">La raccolta di sola lettura di segnalibri per l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks">
          <source>If this operation does not complete within 30 seconds, a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Se questa operazione non è completata entro 30 secondi, è generato un <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks">
          <source>The following example creates a workflow that uses a <ph id="ph1">`ReadLine`</ph> activity that creates a <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività <ph id="ph1">`ReadLine`</ph> che crea un oggetto <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks">
          <source>The workflow is started, and once the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> is created and the workflow goes idle, <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.GetBookmarks%2A&gt;</ph> is called.</source>
          <target state="translated">Il flusso di lavoro viene avviato e, una volta creato l'oggetto <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> e reso inattivo il flusso di lavoro, viene chiamato il metodo <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.GetBookmarks%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks">
          <source>When the workflow is completed, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
          <source>The interval in which this method must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale questo metodo deve essere completato prima che l'operazione sia annullata e un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> è generato.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
          <source>Returns the collection of bookmarks for the workflow instance using the specified time-out interval.</source>
          <target state="translated">Restituisce la raccolta di segnalibri per l'istanza del flusso di lavoro utilizzando l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
          <source>A read-only collection of bookmarks for the workflow instance.</source>
          <target state="translated">La raccolta di sola lettura di segnalibri per l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
          <source>The following example creates a workflow that uses a <ph id="ph1">`ReadLine`</ph> activity that creates a <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività <ph id="ph1">`ReadLine`</ph> che crea un oggetto <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
          <source>The workflow is started, and once the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> is created and the workflow goes idle, <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.GetBookmarks%2A&gt;</ph> is called.</source>
          <target state="translated">Il flusso di lavoro viene avviato e, una volta creato l'oggetto <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> e reso inattivo il flusso di lavoro, viene chiamato il metodo <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.GetBookmarks%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
          <source>When the workflow is completed, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Retrieves the workflow instance.</source>
          <target state="translated">Recupera l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)">
          <source>The instance identifier.</source>
          <target state="translated">Identificatore dell'istanza.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)">
          <source>Retrieves the workflow instance using specified instance identifier and instance store.</source>
          <target state="translated">Recupera l'istanza del flusso di lavoro utilizzando l'archivio istanze e l'identificatore di istanza specificati.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)">
          <source>The retrieved instance.</source>
          <target state="translated">Istanza recuperata.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The instance identifier.</source>
          <target state="translated">Identificatore dell'istanza.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The interval in which the begin load operation must complete before the operation is canceled.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>Retrieves the workflow instance using specified instance identifier, instance store and timeout interval.</source>
          <target state="translated">Recupera l'istanza del flusso di lavoro utilizzando l'intervallo di timeout, l'archivio istanze e l'identificatore di istanza specificati.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Riferimento all'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Retrieves the runnable instance of the workflow.</source>
          <target state="translated">Recupera l'istanza eseguibile del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)">
          <source>The access to the persisted state of the current instance of the workflow application</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)">
          <source>Retrieves the runnable instance of the workflow with specified instance store.</source>
          <target state="translated">Recupera l'istanza eseguibile del flusso di lavoro con l'archivio istanze specificato.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)">
          <source>The runnable instance.</source>
          <target state="translated">Istanza eseguibile.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The access to the persisted state of the current instance of the workflow application</source>
          <target state="translated">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The interval in which the begin load operation must complete before the operation is canceled.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>Retrieves the runnable instance of the workflow with specified instance store and timeout interval.</source>
          <target state="translated">Recupera l'istanza eseguibile del flusso di lavoro con l'intervallo di timeout e l'archivio istanze specificati.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The runnable instance.</source>
          <target state="translated">Istanza eseguibile.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.Id">
          <source>Gets the 128-bit GUID identifier of the current workflow application instance.</source>
          <target state="translated">Ottiene l'identificatore GUID a 128 bit dell'istanza dell'applicazione del flusso di lavoro corrente.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Id">
          <source>A 128-bit GUID identifier.</source>
          <target state="translated">Identificatore GUID a 128 bit.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Id">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance and then displays the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Id%2A&gt;</ph> value to the console.</source>
          <target state="translated">Nell'esempio seguente viene creata un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>, quindi viene visualizzato il valore <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Id%2A&gt;</ph> nella console.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.Idle">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> that is invoked when the current workflow instance becomes idle.</source>
          <target state="translated">Ottiene o imposta il <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> che è richiamato quando l'istanza del flusso di lavoro corrente diventa inattiva.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Idle">
          <source>An action that executes when a workflow instance becomes idle.</source>
          <target state="translated">Un'azione che si esegue quando un'istanza del flusso di lavoro diventa inattiva.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Idle">
          <source>The following code example inspects the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationIdleEventArgs&gt;</ph> passed into the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> handler of a <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance.</source>
          <target state="translated">Nell'esempio di codice seguente viene esaminato l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationIdleEventArgs&gt;</ph> passato nel gestore <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> di un'istanza <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Idle">
          <source>In this example the workflow going idle has one <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> with a name of <ph id="ph2">`EnterGuess`</ph>, owned by an activity named <ph id="ph3">`ReadInt`</ph>.</source>
          <target state="translated">In questo esempio il flusso di lavoro che diventa inattivo dispone di un oggetto <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> denominato <ph id="ph2">`EnterGuess`</ph>, di proprietà di un'attività denominata <ph id="ph3">`ReadInt`</ph>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Idle">
          <source>This code example is based off of <bpt id="p1">[</bpt>How to: Run a Workflow<ept id="p1">](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md)</ept>, which is part of the <bpt id="p2">[</bpt>Getting Started Tutorial &amp;#91;.NET Framework 4.5&amp;#93;<ept id="p2">](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept>.</source>
          <target state="translated">Si basa questo esempio di codice all'esterno della <bpt id="p1">[</bpt>procedura: eseguire un flusso di lavoro<ept id="p1">](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md)</ept>, che fa parte del <bpt id="p2">[</bpt>esercitazione introduttiva su &amp;#91;.NET Framework 4.5&amp;#93;<ept id="p2">](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Idle">
          <source>If the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> handler in that step is modified to contain the code from this example, the following output is displayed.</source>
          <target state="translated">Se il gestore <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> nel passaggio indicato viene modificato per contenere il codice da questo esempio, viene visualizzato l'output seguente.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.InstanceStore">
          <source>Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Ottiene o imposta un oggetto che fornisce accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.InstanceStore">
          <source>An instance store.</source>
          <target state="translated">Un archivio di istanze.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.InstanceStore">
          <source>The following example creates a WorkflowApplication instance and then configures the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> using a <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creata un'istanza WorkflowApplication, quindi viene configurato <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> utilizzando un oggetto <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.InstanceStore">
          <source>This code example is part of <bpt id="p1">[</bpt>How to: Create and Run a Long Running Workflow<ept id="p1">](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md)</ept>, which is part of the <bpt id="p2">[</bpt>Getting Started Tutorial &amp;#91;.NET Framework 4.5&amp;#93;<ept id="p2">](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept>.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>procedura: creare ed eseguire un flusso di lavoro in esecuzione lunghi<ept id="p1">](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md)</ept>, che fa parte del <bpt id="p2">[</bpt>esercitazione introduttiva su &amp;#91;.NET Framework 4.5&amp;#93;<ept id="p2">](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Loads a workflow instance from an instance store.</source>
          <target state="translated">Carica un'istanza del flusso di lavoro da un archivio di istanze.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)">
          <source>The instance.</source>
          <target state="translated">Istanza.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)">
          <source>Loads a workflow instance from an instance store with specified instance.</source>
          <target state="translated">Carica un'istanza di flusso di lavoro da un archivio di istanze con l'istanza specificata.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Guid)">
          <source>A globally unique 128-bit identifier for the workflow instance.</source>
          <target state="translated">Un identificatore univoco globale a 128 bit per l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Guid)">
          <source>Loads the specified workflow instance into memory from an instance store.</source>
          <target state="translated">Carica l'istanza del flusso di lavoro specificata in memoria da un archivio di istanze.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Load(System.Guid)">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Load%2A&gt;</ph> to load persisted workflow instance from a <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene chiamato l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Load%2A&gt;</ph> per caricare l'istanza del flusso di lavoro reso persistente da un oggetto <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Load(System.Guid)">
          <source>This example is from the <ph id="ph1">`LoadAndCompleteInstance`</ph> method in the <bpt id="p1">[</bpt>Persisting a Workflow Application<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> sample.</source>
          <target state="translated">Questo esempio è tratto il <ph id="ph1">`LoadAndCompleteInstance`</ph> metodo il <bpt id="p1">[</bpt>persistenza di un'applicazione flusso di lavoro<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The instance.</source>
          <target state="translated">Istanza.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The update map.</source>
          <target state="translated">Mappa di aggiornamento.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>Loads a workflow instance from an instance store with specified instance and update map.</source>
          <target state="translated">Carica un'istanza di flusso di lavoro da un archivio di istanze con l'istanza e la mappa degli aggiornamenti specificati.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)">
          <source>The instance.</source>
          <target state="translated">Istanza.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)">
          <source>The interval in which the begin load operation must complete before the operation is canceled.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)">
          <source>Loads a workflow instance from an instance store with specified instance and timeout interval.</source>
          <target state="translated">Carica un'istanza di flusso di lavoro da un archivio di istanze con l'istanza e l'intervallo di timeout specificati.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
          <source>A globally unique 128-bit identifier for the workflow instance.</source>
          <target state="translated">Un identificatore univoco globale a 128 bit per l'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
          <source>The interval in which the load operation must complete before the load operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di caricamento prima che l'operazione sia annullata e generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
          <source>Loads the specified workflow instance into memory from an instance store using the specified time-out interval.</source>
          <target state="translated">Carica l'istanza del flusso di lavoro specificata nella memoria da un archivio di istanze utilizzando l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Load%2A&gt;</ph> to load persisted workflow instance from a <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene chiamato l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Load%2A&gt;</ph> per caricare l'istanza del flusso di lavoro reso persistente da un oggetto <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
          <source>This example is from the <ph id="ph1">`LoadAndCompleteInstance`</ph> method in the <bpt id="p1">[</bpt>Persisting a Workflow Application<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> sample.</source>
          <target state="translated">Questo esempio è tratto il <ph id="ph1">`LoadAndCompleteInstance`</ph> metodo il <bpt id="p1">[</bpt>persistenza di un'applicazione flusso di lavoro<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)">
          <source>The instance.</source>
          <target state="translated">Istanza.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)">
          <source>The update map.</source>
          <target state="translated">Mappa di aggiornamento.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)">
          <source>The interval in which the begin load operation must complete before the operation is canceled.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)">
          <source>Loads a workflow instance from an instance store with specified instance, update map and timeout interval.</source>
          <target state="translated">Carica un'istanza di flusso di lavoro da un archivio di istanze con l'istanza, la mappa degli aggiornamenti e l'intervallo di timeout specificati.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Loads a runnable workflow instance from the <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</source>
          <target state="translated">Carica un'istanza del flusso di lavoro eseguibile da <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>A runnable instance is an instance for which a timer or instance lock has expired.</source>
          <target state="translated">Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.LoadRunnableInstance">
          <source>Loads a runnable workflow instance from the <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</source>
          <target state="translated">Carica un'istanza del flusso di lavoro eseguibile da <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.LoadRunnableInstance">
          <source>A runnable instance is an instance for which a timer or instance lock has expired.</source>
          <target state="translated">Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.LoadRunnableInstance">
          <source>By default, the load operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Per impostazione predefinita, l'operazione di caricamento deve essere completata in 30 secondi, altrimenti viene generata una <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)">
          <source>The interval in which the load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di caricamento prima che l'operazione sia annullata e generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)">
          <source>Loads a runnable workflow instance from the <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph> using the specified time-out interval.</source>
          <target state="translated">Carica un'istanza del flusso di lavoro eseguibile dal <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph> utilizzando l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)">
          <source>A runnable instance is an instance for which a timer or instance lock has expired.</source>
          <target state="translated">Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> that is invoked when the current workflow instance encounters an unhandled exception.</source>
          <target state="translated">Ottiene o imposta il <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> che è richiamato quando l'istanza del flusso di lavoro corrente rileva un'eccezione non gestita.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>The delegate that is invoked when a workflow instance encounters an unhandled exception.</source>
          <target state="translated">Il delegato che viene richiamato quando un'istanza del flusso di lavoro rileva un'eccezione non gestita.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>Both <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior&gt;</ph> dictate the behavior of the runtime when an exception is not handled in the workflow; however, <ph id="ph3">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior&gt;</ph> has the option of leaving a suspended workflow in the persistence store, while <ph id="ph4">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph> does not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior&gt;</ph> determinano il comportamento del runtime quando un'eccezione non è gestita nel flusso di lavoro; tuttavia, in <ph id="ph3">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior&gt;</ph> c'è l'opzione di lasciare un flusso di lavoro sospeso nell'archivio di persistenza, mentre questa opzione non c'è in <ph id="ph4">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>The reason for this is that what happens to a suspended workflow is host-specific, and <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> is not.</source>
          <target state="translated">Ciò è dovuto al fatto che la modalità di elaborazione di un flusso di lavoro sospeso è specifica dell'host, mentre <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> non lo è.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>To implement this functionality using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>, create a custom <ph id="ph2">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph> that has this behavior.</source>
          <target state="translated">Per implementare questa funzionalità utilizzando <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>, creare un <ph id="ph2">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph> personalizzato che ha questo comportamento.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>The following example invokes a workflow that throws an exception.</source>
          <target state="translated">Nell'esempio seguente viene richiamato un flusso di lavoro che genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>The exception is unhandled by the workflow and the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph> handler is invoked.</source>
          <target state="translated">L'eccezione non viene gestita dal flusso di lavoro e viene richiamato il gestore <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>The <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs&gt;</ph> are inspected to provide information about the exception, and the workflow is terminated.</source>
          <target state="translated">Gli argomenti <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs&gt;</ph> vengono controllati per fornire informazioni sull'eccezione e il flusso di lavoro viene terminato.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Persists a workflow instance to an instance store.</source>
          <target state="translated">Rende persistente un'istanza del flusso di lavoro in un archivio di istanze.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Persist">
          <source>Persists a workflow instance to an instance store.</source>
          <target state="translated">Rende persistente un'istanza del flusso di lavoro in un archivio di istanze.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist">
          <source>If the persist operation does not complete within 30 seconds, a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Se l'operazione di persistenza non è completata entro 30 secondi, un <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> viene generato.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Persist%2A&gt;</ph> to persist a workflow instance before the workflow is started.</source>
          <target state="translated">Nell'esempio seguente viene chiamato <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Persist%2A&gt;</ph> per rendere persistente un'istanza del flusso di lavoro prima dell'avvio del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist">
          <source>This example is part of the <ph id="ph1">`StartAndUnloadInstance`</ph> method in the <bpt id="p1">[</bpt>Persisting a Workflow Application<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> sample.</source>
          <target state="translated">In questo esempio fa parte di <ph id="ph1">`StartAndUnloadInstance`</ph> metodo il <bpt id="p1">[</bpt>persistenza di un'applicazione flusso di lavoro<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
          <source>The interval in which the persist operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di persistenza prima che sia annullata e venga generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
          <source>Persists a workflow instance to an instance store using the specified time-out interval.</source>
          <target state="translated">Rende persistente un'istanza del flusso di lavoro in un archivio di istanze utilizzando l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Persist%2A&gt;</ph> to persist a workflow instance before the workflow is started.</source>
          <target state="translated">Nell'esempio seguente viene chiamato <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Persist%2A&gt;</ph> per rendere persistente un'istanza del flusso di lavoro prima dell'avvio del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
          <source>This example is from the <ph id="ph1">`StartAndUnloadInstance`</ph> method in the <bpt id="p1">[</bpt>Persisting a Workflow Application<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> sample.</source>
          <target state="translated">Questo esempio è tratto il <ph id="ph1">`StartAndUnloadInstance`</ph> metodo il <bpt id="p1">[</bpt>persistenza di un'applicazione flusso di lavoro<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.PersistableIdle">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Activities.ActivityFunc" /&gt;</ph> that is invoked when the current workflow instance is idle and can be persisted.</source>
          <target state="translated">Ottiene o imposta il <ph id="ph1">&lt;see cref="T:System.Activities.ActivityFunc" /&gt;</ph> che è richiamato quando l'istanza del flusso di lavoro corrente è inattiva e può essere salvata in modo permanente.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.PersistableIdle">
          <source>The <ph id="ph1">&lt;see cref="T:System.Activities.ActivityFunc" /&gt;</ph> that is invoked when the current workflow instance is idle and can be persisted.</source>
          <target state="translated">Il <ph id="ph1">&lt;see cref="T:System.Activities.ActivityFunc" /&gt;</ph> che è richiamato quando l'istanza del flusso di lavoro corrente è inattiva e può essere salvata in modo permanente.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.PersistableIdle">
          <source>When a workflow becomes idle and can be persisted, both <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.PersistableIdle%2A&gt;</ph> are invoked, in that order.</source>
          <target state="translated">Quando un flusso di lavoro diventa inattivo e può essere reso persistente, vengono richiamati sia <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> che <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.PersistableIdle%2A&gt;</ph>, nell'ordine indicato.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.PersistableIdle">
          <source>The <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.PersistableIdle%2A&gt;</ph> handler returns one of the <ph id="ph2">&lt;xref:System.Activities.PersistableIdleAction&gt;</ph> enumeration values of <ph id="ph3">&lt;xref:System.Activities.PersistableIdleAction.None&gt;</ph>, <ph id="ph4">&lt;xref:System.Activities.PersistableIdleAction.Persist&gt;</ph>, or <ph id="ph5">&lt;xref:System.Activities.PersistableIdleAction.Unload&gt;</ph>.</source>
          <target state="translated">Il gestore <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.PersistableIdle%2A&gt;</ph> restituisce uno dei valori di enumerazione <ph id="ph2">&lt;xref:System.Activities.PersistableIdleAction&gt;</ph> di <ph id="ph3">&lt;xref:System.Activities.PersistableIdleAction.None&gt;</ph>, <ph id="ph4">&lt;xref:System.Activities.PersistableIdleAction.Persist&gt;</ph> o <ph id="ph5">&lt;xref:System.Activities.PersistableIdleAction.Unload&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.PersistableIdle">
          <source>The following example handles the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.PersistableIdle%2A&gt;</ph> handler and instructs the runtime to persist and unload the workflow.</source>
          <target state="translated">Nell'esempio seguente viene gestito il gestore <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.PersistableIdle%2A&gt;</ph> e viene impostato il runtime affinché renda persistente e scarichi il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Initiates an operation to resume a bookmark.</source>
          <target state="translated">Inizia un'operazione per riprendere un segnalibro.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>The bookmark to resume.</source>
          <target state="translated">Segnalibro da riprendere.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>Initiates an operation to resume the specified bookmark, using the specified value.</source>
          <target state="translated">Inizia un'operazione per riprendere il segnalibro specificato utilizzando il valore specificato.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>The bookmark to be resumed is previously created by an activity within the workflow instance.</source>
          <target state="translated">Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>The result of the bookmark resumption operation.</source>
          <target state="translated">Risultato dell'operazione di ripresa del segnalibro.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>The bookmark result indicates whether the resumption operation succeeded or failed.</source>
          <target state="translated">Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>The following example creates a workflow that uses a <ph id="ph1">`ReadLine`</ph> activity that creates a <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività <ph id="ph1">`ReadLine`</ph> che crea un oggetto <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>The workflow is started, and once the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</source>
          <target state="translated">Dopo l'avvio del flusso di lavoro, la creazione dell'oggetto <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> e il passaggio del flusso di lavoro sullo stato inattivo, viene raccolto l'input dell'utente e viene ripreso il segnalibro.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>The name of the bookmark to be resumed.</source>
          <target state="translated">Il nome del segnalibro da riprendere.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>Initiates an operation to resume the bookmark with the specified name, using the specified value.</source>
          <target state="translated">Inizia un'operazione per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>The bookmark to be resumed is previously created by an activity within the workflow instance.</source>
          <target state="translated">Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>The result of the bookmark resumption operation.</source>
          <target state="translated">Risultato dell'operazione di ripresa del segnalibro.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>The bookmark result indicates whether the resumption operation succeeded or failed.</source>
          <target state="translated">Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>The following example creates a workflow that uses a <ph id="ph1">`ReadLine`</ph> activity that creates a <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività <ph id="ph1">`ReadLine`</ph> che crea un oggetto <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>The workflow is started, and once the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</source>
          <target state="translated">Dopo l'avvio del flusso di lavoro, la creazione dell'oggetto <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> e il passaggio del flusso di lavoro sullo stato inattivo, viene raccolto l'input dell'utente e viene ripreso il segnalibro.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The bookmark to resume.</source>
          <target state="translated">Segnalibro da riprendere.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The time interval during which the bookmark must be resumed.</source>
          <target state="translated">L'intervallo di tempo durante il quale il segnalibro deve essere ripreso.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>Initiates an operation to resume the specified bookmark, using the specified value and time-out interval.</source>
          <target state="translated">Inizia un'operazione per riprendere il segnalibro specificato utilizzando il valore specificato e l'intervallo di timeout.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The bookmark to be resumed is previously created by an activity within the workflow instance.</source>
          <target state="translated">Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The result of the bookmark resumption operation.</source>
          <target state="translated">Risultato dell'operazione di ripresa del segnalibro.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The bookmark result indicates whether the resumption operation succeeded or failed.</source>
          <target state="translated">Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The following example creates a workflow that uses a <ph id="ph1">`ReadLine`</ph> activity that creates a <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività <ph id="ph1">`ReadLine`</ph> che crea un oggetto <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The workflow is started, and once the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</source>
          <target state="translated">Dopo l'avvio del flusso di lavoro, la creazione dell'oggetto <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> e il passaggio del flusso di lavoro sullo stato inattivo, viene raccolto l'input dell'utente e viene ripreso il segnalibro.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The name of the bookmark to be resumed.</source>
          <target state="translated">Il nome del segnalibro da riprendere.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The time interval during which the bookmark must be resumed.</source>
          <target state="translated">L'intervallo di tempo durante il quale il segnalibro deve essere ripreso.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>Initiates an operation to resume the bookmark with the specified name, using the specified value and time-out interval.</source>
          <target state="translated">Inizia un'operazione per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato e l'intervallo di timeout.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The bookmark to be resumed is previously created by an activity within the workflow instance.</source>
          <target state="translated">Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The result of the bookmark resumption operation.</source>
          <target state="translated">Risultato dell'operazione di ripresa del segnalibro.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The bookmark result indicates whether the resumption operation succeeded or failed.</source>
          <target state="translated">Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The following example creates a workflow that uses a <ph id="ph1">`ReadLine`</ph> activity that creates a <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività <ph id="ph1">`ReadLine`</ph> che crea un oggetto <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The workflow is started, and once the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</source>
          <target state="translated">Dopo l'avvio del flusso di lavoro, la creazione dell'oggetto <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> e il passaggio del flusso di lavoro sullo stato inattivo, viene raccolto l'input dell'utente e viene ripreso il segnalibro.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Begins or resumes the execution of a workflow instance.</source>
          <target state="translated">Inizia o riprende l'esecuzione di un'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Call this method to initiate execution of a newly created workflow instance.</source>
          <target state="translated">Chiamare questo metodo per iniziare l'esecuzione di un'istanza del flusso di lavoro appena creata.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Run">
          <source>Begins or resumes the execution of a workflow instance.</source>
          <target state="translated">Inizia o riprende l'esecuzione di un'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run">
          <source>Call this method to initiate execution of a newly created workflow instance.</source>
          <target state="translated">Chiamare questo metodo per iniziare l'esecuzione di un'istanza del flusso di lavoro appena creata.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run">
          <source>If the run operation does not complete within 30 seconds, a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Se l'operazione di esecuzione non è completata entro 30 secondi, è generato un <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run">
          <source>When the workflow is completed, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>Call this method to initiate execution of a newly created workflow instance.</source>
          <target state="translated">Chiamare questo metodo per iniziare l'esecuzione di un'istanza del flusso di lavoro appena creata.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>The interval in which the run operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'operazione di esecuzione deve essere completata prima che l'operazione sia annullata e venga generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>Begins or resumes the execution of a workflow instance using the specified time-out interval.</source>
          <target state="translated">Inizia o riprende l'esecuzione di un'istanza del flusso di lavoro utilizzando l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>Note that unlike <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</ph>, this method will time out only if the workflow doesn't start in the specified amount of time, rather than needing to complete in the specified amount of time.</source>
          <target state="translated">Si noti che diversamente da <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</ph>, questo metodo raggiungerà il timeout solo se il flusso di lavoro non inizia nel periodo di tempo specificato, piuttosto che dover essere completato entro il periodo di tempo specificato.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>The reason for this is that <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</ph> executes the workflow synchronously (blocking the host thread), while <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph> executes asynchronously, only blocking the host thread for the amount of time it takes the workflow to start.</source>
          <target state="translated">Ciò è dovuto al fatto che <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</ph> esegue il flusso di lavoro in modo sincrono (bloccando il thread host), mentre <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph> lo esegue in modo asincrono, solo bloccando il thread host per il periodo di tempo richiesto per iniziare il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>When the workflow is completed, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Terminates a workflow instance.</source>
          <target state="translated">Termina un'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motivo della chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>Terminates a workflow instance using the specified exception.</source>
          <target state="translated">Termina un'istanza del flusso di lavoro usando l'eccezione specificata.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> operation must complete in 30 seconds or a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Per impostazione predefinita, l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> deve essere completata in 30 secondi, altrimenti viene generata una <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> is called.</source>
          <target state="translated">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>When the workflow is terminated, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene terminato, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motivo della chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>Terminates a workflow instance using the specified error message.</source>
          <target state="translated">Termina un'istanza del flusso di lavoro usando il messaggio di errore specificato.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> operation must complete in 30 seconds or a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Per impostazione predefinita, l'operazione <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> deve essere completata in 30 secondi, altrimenti viene generata una <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> is called.</source>
          <target state="translated">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>When the workflow is terminated, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene terminato, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motivo della chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>The interval in which the <ph id="ph1">&lt;see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /&gt;</ph> operation must complete before the operation is canceled and a <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'operazione <ph id="ph1">&lt;see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /&gt;</ph> deve essere completata prima che l'operazione è cancellata e un  <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> è generato.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>Terminates a workflow instance using the specified exception and time-out interval.</source>
          <target state="translated">Termina un'istanza del flusso di lavoro utilizzando l'eccezione e l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>This method schedules the termination of the workflow.</source>
          <target state="translated">Questo metodo pianifica la chiusura del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> is called.</source>
          <target state="translated">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>When the workflow is terminated, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene terminato, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motivo della chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>The interval in which the <ph id="ph1">&lt;see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /&gt;</ph> operation must complete before the operation is canceled and a <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale l'operazione <ph id="ph1">&lt;see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /&gt;</ph> deve essere completata prima che l'operazione è cancellata e un  <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> è generato.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>Terminates a workflow instance using the specified error message and time-out interval.</source>
          <target state="translated">Termina un'istanza del flusso di lavoro utilizzando il messaggio di errore e l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Un'istanza <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> is called.</source>
          <target state="translated">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>When the workflow is terminated, the following output is displayed to the console.</source>
          <target state="translated">Quando il flusso di lavoro viene terminato, l'output seguente viene visualizzato nella console.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Persists and unloads a workflow instance.</source>
          <target state="translated">Rende persistente e scarica un'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>By default, the unload operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Per impostazione predefinita, l'operazione di scaricamento deve essere completata in 30 secondi, altrimenti viene generato un <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>Persists and unloads a workflow instance.</source>
          <target state="translated">Rende persistente e scarica un'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>By default, the unload operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Per impostazione predefinita, l'operazione di scaricamento deve essere completata in 30 secondi, altrimenti viene generato un <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>The following code example is part of the <bpt id="p1">[</bpt>NoPersistScope Activity<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md)</ept> sample.</source>
          <target state="translated">Esempio di codice seguente fa parte di <bpt id="p1">[</bpt>attività NoPersistScope<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>In this example, the workflow is idle and the host application is waiting for user input.</source>
          <target state="translated">In questo esempio, il flusso di lavoro è inattivo e l'applicazione host è in attesa dell'input dell'utente.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>If the user chooses to unload, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Unload%2A&gt;</ph> is called.</source>
          <target state="translated">Se l'utente sceglie di scaricare, viene chiamato <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Unload%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>If successful, the workflow is persisted and unloaded from memory.</source>
          <target state="translated">Se è riuscito correttamente, il flusso di lavoro viene reso persistente e scaricato dalla memoria.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>The interval in which the unload operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervallo nel quale deve essere completata l'operazione di scaricamento prima che l'operazione sia annullata e generato un <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>Persists and unloads a workflow instance using the specified time-out interval.</source>
          <target state="translated">Rende persistente e scarica un'istanza del flusso di lavoro utilizzando l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>The following code example is part of the <bpt id="p1">[</bpt>NoPersistScope Activity<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md)</ept> sample.</source>
          <target state="translated">Esempio di codice seguente fa parte di <bpt id="p1">[</bpt>attività NoPersistScope<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>In this example, the workflow is idle and the host application is waiting for user input.</source>
          <target state="translated">In questo esempio, il flusso di lavoro è inattivo e l'applicazione host è in attesa dell'input dell'utente.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>If the user chooses to unload, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Unload%2A&gt;</ph> is called.</source>
          <target state="translated">Se l'utente sceglie di scaricare, viene chiamato <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Unload%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>If successful, the workflow is persisted and unloaded from memory.</source>
          <target state="translated">Se è riuscito correttamente, il flusso di lavoro viene reso persistente e scaricato dalla memoria.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.Unloaded">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> that is invoked when the current workflow unloads.</source>
          <target state="translated">Ottiene o imposta il <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> che è richiamato quando il flusso di lavoro corrente viene scaricato.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Unloaded">
          <source>An action that is invoked when a workflow instance is unloaded.</source>
          <target state="translated">Azione che viene richiamata quando un'istanza del flusso di lavoro è scaricata.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Unloaded">
          <source>The following code example inspects the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationEventArgs&gt;</ph> passed into the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Unloaded%2A&gt;</ph> handler of a <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance and displays the <ph id="ph4">&lt;xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A&gt;</ph> of the workflow that was unloaded.</source>
          <target state="translated">L'esempio di codice seguente controlla l'oggetto <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationEventArgs&gt;</ph> passato nel gestore <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Unloaded%2A&gt;</ph> di un'istanza <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> e visualizza l'oggetto <ph id="ph4">&lt;xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A&gt;</ph> del flusso di lavoro scaricato.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>