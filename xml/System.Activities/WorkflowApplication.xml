<Type Name="WorkflowApplication" FullName="System.Activities.WorkflowApplication">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="752a0d4dd593e8818241d8ecb8c805fb2a679980" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36716743" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowApplication : System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowApplication extends System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowApplication&#xA;Inherits WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplication sealed : System::Activities::Hosting::WorkflowInstance" />
  <TypeSignature Language="F#" Value="type WorkflowApplication = class&#xA;    inherit WorkflowInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Hosting.WorkflowInstance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8c6da-101">Fornisce un host per una sola istanza di un flusso di lavoro.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8c6da-101">Provides a host for a single instance of a workflow.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-102">La classe <xref:System.Activities.WorkflowApplication> fornisce un host per una sola istanza di un flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-102">The <xref:System.Activities.WorkflowApplication> class provides a host for a single workflow instance.</span></span> <span data-ttu-id="8c6da-103">È un proxy all'istanza del flusso di lavoro effettiva gestita dal runtime del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-103">It is a proxy to the actual workflow instance that is managed by the workflow runtime.</span></span> <span data-ttu-id="8c6da-104">Utenti di <xref:System.Activities.WorkflowApplication> possono istruire il runtime del flusso di lavoro a eseguire azioni su un'istanza del flusso di lavoro chiamando i metodi adatti su un oggetto <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-104">Users of <xref:System.Activities.WorkflowApplication> can instruct the workflow runtime to perform actions on a workflow instance by calling the appropriate methods on a <xref:System.Activities.WorkflowApplication> object.</span></span> <span data-ttu-id="8c6da-105">Se un'azione richiesta non è valida, verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8c6da-105">If a requested action is not valid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="8c6da-106">Usando <xref:System.Activities.WorkflowApplication> è possibile eseguire le seguenti attività:</span><span class="sxs-lookup"><span data-stu-id="8c6da-106">Using <xref:System.Activities.WorkflowApplication> you can perform the following tasks:</span></span>  
  
1.  <span data-ttu-id="8c6da-107">Creare una nuova istanza del flusso di lavoro o caricare un'istanza del flusso di lavoro da un archivio di istanze.</span><span class="sxs-lookup"><span data-stu-id="8c6da-107">Create a new workflow instance, or load a workflow instance from an instance store.</span></span>  
  
2.  <span data-ttu-id="8c6da-108">Fornire estensioni da utilizzare da attività all'interno di un'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-108">Provide extensions to be used by activities within a workflow instance.</span></span>  
  
3.  <span data-ttu-id="8c6da-109">Controllare l'esecuzione di un'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-109">Control the execution of a workflow instance.</span></span>  
  
4.  <span data-ttu-id="8c6da-110">Riprendere un segnalibro creato da un'attività all'interno di un'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-110">Resume a bookmark created by an activity within a workflow instance.</span></span>  
  
5.  <span data-ttu-id="8c6da-111">Salvare in modo permanente o scaricare un'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-111">Persist or unload a workflow instance.</span></span>  
  
6.  <span data-ttu-id="8c6da-112">Ricevere una notifica sugli eventi del ciclo di vita delle istanze del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-112">Be notified of workflow instance lifecycle events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-113">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-113">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-114">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-114">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="8c6da-115">Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-115">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-116">Crea una nuova istanza della classe <see cref="T:System.Activities.WorkflowApplication" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-116">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication workflowDefinition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="8c6da-117">Definizione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-117">The workflow definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-118">Crea una nuova istanza della classe <see cref="T:System.Activities.WorkflowApplication" /> con la definizione del flusso di lavoro specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-118">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6da-119">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-119">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-120">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita usando una definizione di flusso di lavoro composta da una singola attività `DiceRoll`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-120">A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `DiceRoll` activity.</span></span> <span data-ttu-id="8c6da-121">L'attività `DiceRoll` dispone di due argomenti di output che rappresentano i risultati dell'operazione di lancio dei dadi.</span><span class="sxs-lookup"><span data-stu-id="8c6da-121">The `DiceRoll` activity has two output arguments that represent the results of the dice roll operation.</span></span> <span data-ttu-id="8c6da-122">Quando il flusso di lavoro viene completato, gli output vengono recuperati nel gestore <xref:System.Activities.WorkflowApplication.Completed%2A> e l'output seguente viene visualizzato alla console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-122">When the workflow completes, the outputs are retrieved in the <xref:System.Activities.WorkflowApplication.Completed%2A> handler, and the following output is displayed to the console.</span></span>  
  
```Output  
Workflow aae3fb48-7229-4737-b969-d63e131b96b3 Completed.   
The two dice are 1 and 5.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#130](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#130)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#21](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity * System.Activities.WorkflowIdentity -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication (workflowDefinition, definitionIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="8c6da-123">Definizione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-123">The workflow definition.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="8c6da-124">Identità della definizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-124">The definition identity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-125">Crea una nuova istanza della classe <see cref="T:System.Activities.WorkflowApplication" /> con la definizione dei flussi di lavoro e l'identità delle definizioni specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-125">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition and definition identity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication (workflowDefinition, inputs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="8c6da-126">Definizione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-126">The workflow definition.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="8c6da-127">I valori per argomenti definiti nell'attività radice della definizione del flusso di lavoro, con chiave basata sul nome dell'argomento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-127">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-128">Crea una nuova istanza della classe <see cref="T:System.Activities.WorkflowApplication" /> che utilizza la definizione di flusso di lavoro specificata e i valori di argomento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-128">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6da-129">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-129">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-130">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando una definizione di flusso di lavoro composta da una sola attività `Divide` che accetta due argomenti di input e un dizionario di argomenti di input che contengono i due valori da passare, con chiave basata sul nome dell'argomento.</span><span class="sxs-lookup"><span data-stu-id="8c6da-130">A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `Divide` activity that takes two input arguments, and a dictionary of input arguments containing the two values to be passed, keyed by argument name.</span></span> <span data-ttu-id="8c6da-131">Vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-131">The desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="8c6da-132">Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-132">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Completed  
500 / 36 = 13 Remainder 32  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#10](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object), definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Activities.WorkflowIdentity -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication (workflowDefinition, inputs, definitionIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="8c6da-133">Definizione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-133">The workflow definition.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="8c6da-134">Identità della definizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-134">The definition identity.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="8c6da-135">I valori per argomenti definiti nell'attività radice della definizione del flusso di lavoro, con chiave basata sul nome dell'argomento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-135">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-136">Crea una nuova istanza della classe <see cref="T:System.Activities.WorkflowApplication" /> che utilizza la definizione di flusso di lavoro specificata e i valori di argomento e l'identità della definizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-136">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values, and definition identity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-137">Notifica il runtime del flusso di lavoro che deve interrompere questa istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-137">Notifies the workflow runtime that this workflow instance should abort.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-138">Quando un flusso di lavoro ospitato da un oggetto <xref:System.Activities.WorkflowApplication> viene interrotto, viene richiamato il gestore <xref:System.Activities.WorkflowApplication.Aborted%2A>, ma non il gestore <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-138">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="workflowApplication.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-139">Notifica il runtime del flusso di lavoro che deve interrompere questa istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-139">Notifies the workflow runtime that this workflow instance should abort.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-140">Quando un flusso di lavoro ospitato da un oggetto <xref:System.Activities.WorkflowApplication> viene interrotto, viene richiamato il gestore <xref:System.Activities.WorkflowApplication.Aborted%2A>, ma non il gestore <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-140">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-141">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-141">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-142">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-142">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="8c6da-143">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Abort%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-143">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="8c6da-144">Quando il flusso di lavoro viene interrotto, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-144">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Idle.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The workflow has been aborted.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(System::String ^ reason);" />
      <MemberSignature Language="F#" Value="override this.Abort : string -&gt; unit" Usage="workflowApplication.Abort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="8c6da-145">Il motivo per la richiesta da interrompere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-145">The reason for the request to abort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-146">Notifica il runtime del flusso di lavoro che deve interrompere questa istanza del flusso di lavoro per il motivo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-146">Notifies the workflow runtime that this workflow instance should abort for the specified reason.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-147">Quando un flusso di lavoro ospitato da un oggetto <xref:System.Activities.WorkflowApplication> viene interrotto, viene richiamato il gestore <xref:System.Activities.WorkflowApplication.Aborted%2A>, ma non il gestore <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-147">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-148">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-148">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-149">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-149">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="8c6da-150">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Abort%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-150">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="8c6da-151">Quando il flusso di lavoro viene interrotto, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-151">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Idle.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The reason for aborting the workflow.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Aborted" />
      <MemberSignature Language="VB.NET" Value="Public Property Aborted As Action(Of WorkflowApplicationAbortedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ Aborted { Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Aborted : Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Aborted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-152">Ottiene o imposta il <see cref="T:System.Action`1" /> che è richiamato quando l'istanza del flusso di lavoro viene interrotta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-152">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance is aborted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c6da-153">L'azione che viene richiamata quando l'istanza del flusso di lavoro è interrotta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-153">The action that is invoked when the workflow instance is aborted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-154">Quando un flusso di lavoro ospitato da un oggetto <xref:System.Activities.WorkflowApplication> viene interrotto, viene richiamato il gestore <xref:System.Activities.WorkflowApplication.Aborted%2A>, ma non il gestore <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-154">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-155">L'esempio di codice seguente controlla l'oggetto <xref:System.Activities.WorkflowApplicationAbortedEventArgs> passato nel gestore <xref:System.Activities.WorkflowApplication.Aborted%2A> di un'istanza <xref:System.Activities.WorkflowApplication> e visualizza le informazioni relative ai motivi dell'interruzione del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-155">The following code example inspects the <xref:System.Activities.WorkflowApplicationAbortedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about why workflow was aborted.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#5](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInitialInstanceValues">
      <MemberSignature Language="C#" Value="public void AddInitialInstanceValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInitialInstanceValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInitialInstanceValues (writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInitialInstanceValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberSignature Language="F#" Value="member this.AddInitialInstanceValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit" Usage="workflowApplication.AddInitialInstanceValues writeOnlyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="writeOnlyValues">
          <span data-ttu-id="8c6da-156">I valori di metadati da includere con la prima persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-156">The metadata values to be included with the first persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-157">Specifica i valori di metadati dell'istanza inclusi con la prima persistenza di una nuova istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-157">Specifies instance metadata values that are included with the first persistence of a new instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-158">Cancella un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-158">Cancels a workflow asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-159">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-159">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginCancel : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginCancel (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="8c6da-160">Metodo da chiamare quando l'operazione di annullamento è completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-160">The method to be called when the cancel operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-161">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-161">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-162">Cancella un'istanza del flusso di lavoro in modo asincrono utilizzando il <see cref="T:System.AsyncCallback" /> specificato e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-162">Cancels a workflow instance asynchronously using the specified <see cref="T:System.AsyncCallback" /> and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-163">Riferimento all'operazione di annullamento asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-163">A reference to the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-164">Per determinare se l'operazione di annullamento ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-164">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="8c6da-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A> può essere chiamato dall'interno o dall'esterno del metodo `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="8c6da-166">Se <xref:System.Activities.WorkflowApplication.EndCancel%2A> viene chiamato prima del completamento dell'operazione di annullamento, si blocca fino a che l'operazione di annullamento non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-166">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="8c6da-167">Per impostazione predefinita, l'operazione di annullamento deve essere completata in 30 secondi, altrimenti viene generata un'eccezione <xref:System.TimeoutException> da <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-167">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-168">Questo metodo annulla un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-168">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-169">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-169">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginCancel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginCancel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c6da-170">Intervallo nel quale deve essere completata l'operazione di annullamento prima che sia annullata e venga generato un oggetto <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-170">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-171">Metodo da chiamare quando l'operazione di annullamento è completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-171">The method to be called when the cancel operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-172">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-172">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-173">Annulla un'istanza del flusso di lavoro in modo asincrono usando l'intervallo di timeout specificato, il <see cref="T:System.AsyncCallback" /> e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-173">Cancels a workflow instance asynchronously using the specified time-out interval, <see cref="T:System.AsyncCallback" />, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-174">Riferimento all'operazione di annullamento asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-174">A reference to the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-175">Per determinare se l'operazione di annullamento ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-175">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="8c6da-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the method specified in the `callback` parameter.</span></span> <span data-ttu-id="8c6da-177">Se <xref:System.Activities.WorkflowApplication.EndCancel%2A> viene chiamato prima del completamento dell'operazione di annullamento, si blocca fino a che l'operazione di annullamento non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-177">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="8c6da-178">Se l'operazione di annullamento non è completata nell'intervallo specificato dal parametro `timeOut`, un <xref:System.TimeoutException> è generato dal <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-178">If the cancel operation does not complete in the interval specified by the `timeOut` parameter, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-179">Questo metodo annulla un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-179">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-180">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-180">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-181">Crea un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-181">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginCreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-182">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-182">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="8c6da-183">Identità della definizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-183">The definition identity.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="8c6da-184">Filtro di identità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-184">The identity filter.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-185">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-185">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-186">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-186">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-187">Crea un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'archiviazione istanza, l'identità della definizione, il filtro dell'identità, il callback e lo stato specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-187">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-188">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-188">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginCreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-189">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-189">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="8c6da-190">Identità della definizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-190">The definition identity.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="8c6da-191">Filtro di identità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-191">The identity filter.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-192">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-192">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-193">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-193">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-194">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-194">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-195">Crea un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'archiviazione istanza, l'identità della definizione, il filtro dell'identità, l'intervallo di timeout, il callback e lo stato specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-195">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, timeout interval, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-196">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-196">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginDeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-197">Elimina un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-197">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginDeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner (instanceStore, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-198">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-198">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-199">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-199">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-200">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-200">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-201">Elimina un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'archiviazione istanza, il callback e lo stato specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-201">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-202">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-202">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginDeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner (instanceStore, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-203">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-203">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-204">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-204">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-205">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-205">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-206">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-206">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-207">Elimina un proprietario dell'istanza predefinito in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'archiviazione istanza, l'intervallo di timeout, il callback e lo stato specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-207">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-208">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-208">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-209">Recupera un proprietario dell'istanza in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-209">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetInstance (instanceId, instanceStore, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="8c6da-210">Identificatore dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-210">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-211">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-211">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-212">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-212">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-213">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-213">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-214">Recupera un proprietario dell'istanza in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'identificatore, l'archivio, il callback e lo stato dell'istanza specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-214">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-215">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-215">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetInstance (instanceId, instanceStore, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="8c6da-216">Identificatore dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-216">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-217">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-217">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-218">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-218">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-219">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-219">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-220">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-220">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-221">Recupera un proprietario dell'istanza in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'identificatore, l'archivio, l'intervallo di timeout, il callback e lo stato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-221">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, timeout interval, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-222">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-222">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-223">Recupera un proprietario dell'istanza eseguibile in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-223">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetRunnableInstance (instanceStore, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-224">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-224">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-225">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-225">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-226">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-226">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-227">Recupera un proprietario dell'istanza eseguibile in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'archivio istanze, il callback e lo stato specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-227">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-228">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-228">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetRunnableInstance (instanceStore, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-229">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-229">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-230">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-230">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-231">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-231">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-232">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-232">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-233">Recupera un proprietario dell'istanza eseguibile in modo asincrono utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'archivio istanze, l'intervallo di timeout, il callback e lo stato specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-233">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-234">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-234">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-235">Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-235">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-236">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-236">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8c6da-237">Istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-237">The instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-238">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-238">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-239">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-239">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-240">Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'istanza, il callback e lo stato specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-240">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-241">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-241">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : Guid * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instanceId, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="8c6da-242">Un identificatore univoco globale a 128 bit per l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-242">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-243">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-243">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-244">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-244">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-245">Carica un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando l'identificatore dell'istanza specificato, il metodo di callback e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-245">Loads a workflow asynchronously from an instance store using the specified instance identifier, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-246">Stato di un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-246">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, updateMap, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8c6da-247">Istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-247">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="8c6da-248">Mappa di aggiornamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-248">The update map.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-249">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-249">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-250">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-250">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-251">Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'istanza, la mappa degli aggiornamenti, il callback e lo stato specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-251">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-252">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-252">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8c6da-253">Istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-253">The instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-254">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-254">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-255">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-255">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-256">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-256">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-257">Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'istanza, l'intervallo di timeout, il callback e lo stato specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-257">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, timeout interval, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-258">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-258">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : Guid * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instanceId, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="8c6da-259">Un identificatore univoco globale a 128 bit per l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-259">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-260">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-260">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-261">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-261">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-262">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-262">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-263">Carica un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando l'identificatore dell'istanza specificato, il periodo di timeout, il metodo di callback e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-263">Loads a workflow asynchronously from an instance store using the specified instance identifier, timeout period, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-264">Stato di un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-264">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, updateMap, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8c6da-265">Istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-265">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="8c6da-266">Mappa di aggiornamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-266">The update map.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-267">Intervallo nel quale l'inizio dell'operazione di caricamento deve essere completato prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-267">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-268">Metodo da chiamare quando l'inizio dell'operazione di caricamento è completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-268">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-269">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-269">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-270">Carica un flusso di lavoro in modo asincrono da un archivio di istanze utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" /> con l'istanza, la mappa degli aggiornamenti, l'intervallo di timeout, il callback e lo stato specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-270">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, timeout interval, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-271">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-271">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-272">Inizia il processo asincrono del caricamento di un'istanza del flusso di lavoro eseguibile da <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-272">Initiates the asynchronous process of loading a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-273">Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.</span><span class="sxs-lookup"><span data-stu-id="8c6da-273">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadRunnableInstance : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoadRunnableInstance (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="8c6da-274">Metodo da chiamare quando l'operazione è completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-274">The method to be called when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-275">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-275">An optional application-specific object containing information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-276">Inizia un'operazione per caricare un'istanza del flusso di lavoro eseguibile da <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-276">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-277">Un riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-277">A reference to the asynchronous operation</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-278">Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.</span><span class="sxs-lookup"><span data-stu-id="8c6da-278">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="8c6da-279">Per verificare se l'operazione di caricamento ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-279">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="8c6da-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> può essere chiamato dall'interno o dall'esterno del metodo `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="8c6da-281">Se <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-281">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="8c6da-282">Per impostazione predefinita, l'operazione di ripresa deve essere completata in 30 secondi, altrimenti viene generata un'eccezione <xref:System.TimeoutException> da <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-282">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-283">Questo metodo carica un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-283">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-284">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-284">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadRunnableInstance : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoadRunnableInstance (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c6da-285">Intervallo nel quale deve essere completata l'operazione di caricamento prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-285">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-286">Metodo da chiamare quando l'operazione è completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-286">The method to be called when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-287">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-287">An optional application-specific object containing information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-288">Inizia un'operazione per caricare un'istanza del flusso di lavoro eseguibile dal <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> usando l'intervallo di timeout specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-288">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-289">Un riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-289">A reference to the asynchronous operation</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-290">Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.</span><span class="sxs-lookup"><span data-stu-id="8c6da-290">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="8c6da-291">Per verificare se l'operazione di caricamento ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-291">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="8c6da-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> può essere chiamato dall'interno o dall'esterno del metodo `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="8c6da-293">Se <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-293">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="8c6da-294">Se l'operazione di caricamento non è completata nell'intervallo di tempo specificato viene generato un <xref:System.TimeoutException> dal <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-294">If the load operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-295">Questo metodo carica un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-295">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-296">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-296">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPersist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-297">Rende persistente un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando il modello di progettazione asincrono <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-297">Persists a workflow instance to an instance store asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-298">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-298">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 <span data-ttu-id="8c6da-299">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</span><span class="sxs-lookup"><span data-stu-id="8c6da-299">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="8c6da-300">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-300">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginPersist : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginPersist (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="8c6da-301">Metodo da chiamare al termine dell'operazione di impostazione della persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-301">The method to be called when the persist operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-302">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-302">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-303">Rende persistente un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando il metodo di callback specificato e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-303">Persists a workflow instance to an instance store asynchronously using the specified callback method and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-304">Riferimento all'operazione della persistenza asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-304">A reference to the asynchronous persist operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-305">Per determinare se l'operazione di persistenza ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-305">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="8c6da-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="8c6da-307">Se viene chiamato <xref:System.Activities.WorkflowApplication.EndPersist%2A> prima del completamento dell'operazione di persistenza, si blocca fino a che l'operazione di persistenza non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-307">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="8c6da-308">Se l'operazione di persistenza non è completata entro 30 secondi, un <xref:System.TimeoutException> viene generato da <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-308">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-309">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</span><span class="sxs-lookup"><span data-stu-id="8c6da-309">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="8c6da-310">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-310">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="8c6da-311">Questo metodo consente di rendere persistente un flusso di lavoro in modo asincrono utilizzando il modello di progettazione asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-311">This method persists a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-312">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-312">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginPersist : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginPersist (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c6da-313">Intervallo nel quale deve essere completata l'operazione di persistenza prima che sia annullata e venga generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-313">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-314">Metodo da chiamare al termine dell'operazione di impostazione della persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-314">The method to be called when the persist operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-315">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-315">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-316">Rende persistente un'istanza del flusso di lavoro in modo asincrono in un archivio di istanze utilizzando l'intervallo di timeout, il metodo di callback specificato e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-316">Persists a workflow instance to an instance store asynchronously using the specified time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-317">Riferimento all'operazione della persistenza asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-317">A reference to the asynchronous persist operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-318">Per determinare se l'operazione di persistenza ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-318">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="8c6da-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="8c6da-320">Se viene chiamato <xref:System.Activities.WorkflowApplication.EndPersist%2A> prima del completamento dell'operazione di persistenza, si blocca fino a che l'operazione di persistenza non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-320">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="8c6da-321">Se l'operazione di persistenza non è completata nell'intervallo di timeout specificato, un <xref:System.TimeoutException> è generato dal <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-321">If the persist operation does not complete within the specified time-out interval, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-322">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</span><span class="sxs-lookup"><span data-stu-id="8c6da-322">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="8c6da-323">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-323">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="8c6da-324">Questo metodo consente di rendere persistente un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-324">This method persists a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-325">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-325">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-326">Inizia un'operazione asincrona per riprendere un segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-326">Initiates an asynchronous operation to resume a bookmark.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : System.Activities.Bookmark * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmark, value, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="8c6da-327">Segnalibro da riprendere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-327">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8c6da-328">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-328">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-329">Metodo da chiamare al termine dell'operazione di ripresa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-329">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-330">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-330">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-331">Inizia un'operazione asincrona per riprendere un segnalibro utilizzando il valore specificato, il metodo di callback e lo stato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-331">Initiates an operation to resume a bookmark using the specified value, callback method, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-332">Riferimento all'operazione di ripresa di segnalibro asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-332">A reference to the asynchronous bookmark resume operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-333">Per verificare se l'operazione di ripresa ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-333">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="8c6da-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> può essere chiamato dall'interno o dall'esterno del metodo `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="8c6da-335">Se <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-335">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="8c6da-336">Per impostazione predefinita, l'operazione di ripresa deve essere completata in 30 secondi, altrimenti viene generata un'eccezione <xref:System.TimeoutException> da <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-336">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-337">Questo metodo riprende un segnalibro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-337">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-338">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-338">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : string * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmarkName, value, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="8c6da-339">Il nome del segnalibro da riprendere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-339">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8c6da-340">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-340">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-341">Metodo chiamato quando l'operazione asincrona è completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-341">The method that is called when the asynchronous operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-342">Lo stato di esecuzione di un flusso di lavoro mantenuto dal thread chiamante prima che un'operazione asincrona inizi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-342">The state of execution of a workflow that was preserved by the calling thread before an asynchronous operation began.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-343">Inizia un'operazione asincrona per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato, il metodo di callback e lo stato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-343">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, callback method, and state.</span>
          </span>
          <span data-ttu-id="8c6da-344">Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-344">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-345">Risultato dell'operazione di ripresa del segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-345">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-346">Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.</span><span class="sxs-lookup"><span data-stu-id="8c6da-346">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : System.Activities.Bookmark * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmark, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="8c6da-347">Segnalibro da riprendere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-347">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8c6da-348">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-348">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-349">Intervallo nel quale deve essere completata l'operazione di ripresa prima che sia annullata e venga generato un oggetto <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-349">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-350">Metodo da chiamare al termine dell'operazione di ripresa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-350">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-351">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-351">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-352">Inizia un'operazione per riprendere un segnalibro con il nome specificato, utilizzando il valore specificato, l'intervallo di timeout, il metodo di callback e lo stato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-352">Initiates an operation to resume a bookmark using the specified value, time-out interval, callback method, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-353">Riferimento all'operazione di ripresa di segnalibro asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-353">A reference to the asynchronous bookmark resume operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-354">Per verificare se l'operazione di ripresa ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-354">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="8c6da-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> può essere chiamato dall'interno o dall'esterno del metodo `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="8c6da-356">Se <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-356">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="8c6da-357">Se l'operazione di ripresa non è completata nell'intervallo di timeout specificato, un <xref:System.TimeoutException> è generato dal  <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-357">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-358">Questo metodo riprende un segnalibro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-358">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-359">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-359">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : string * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmarkName, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="8c6da-360">Il nome del segnalibro da riprendere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-360">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8c6da-361">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-361">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-362">L'intervallo di tempo durante il quale il segnalibro deve essere ripreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-362">The time interval during which the bookmark must be resumed.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-363">Metodo chiamato quando l'operazione asincrona è completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-363">The method that is called when the asynchronous operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-364">Lo stato di esecuzione di un flusso di lavoro salvato dal thread chiamante prima che un'operazione asincrona inizi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-364">The state of execution of a workflow that was saved by the calling thread before an asynchronous operation began.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-365">Inizia un'operazione asincrona per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato, l'intervallo di timeout, il metodo di callback e lo stato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-365">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, time-out interval, callback method, and state.</span>
          </span>
          <span data-ttu-id="8c6da-366">Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-366">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-367">Risultato dell'operazione di ripresa del segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-367">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-368">Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.</span><span class="sxs-lookup"><span data-stu-id="8c6da-368">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginRun">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-369">Avvia o riprende un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-369">Starts or resumes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-370">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-370">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginRun : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginRun (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="8c6da-371">Metodo da chiamare al termine dell'operazione di ripresa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-371">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-372">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-372">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-373">Avvia o riprende un'istanza del flusso di lavoro in modo asincrono utilizzando il metodo di callback specificato e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-373">Starts or resumes a workflow instance asynchronously using the specified callback method and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-374">Riferimento all'operazione di esecuzione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-374">A reference to the asynchronous run operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-375">Per determinare se l'operazione di esecuzione ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-375">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="8c6da-376"><xref:System.Activities.WorkflowApplication.EndRun%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-376"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="8c6da-377">Se <xref:System.Activities.WorkflowApplication.EndRun%2A> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-377">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="8c6da-378">Per impostazione predefinita, l'operazione di ripresa deve essere completata in 30 secondi, altrimenti viene generata un'eccezione <xref:System.TimeoutException> da <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-378">By default, the resume operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-379">Questo metodo avvia o riprende un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-379">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-380">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-380">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginRun : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginRun (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c6da-381">Intervallo nel quale deve essere completata l'operazione di ripresa prima che sia annullata e venga generato un oggetto <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-381">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-382">Metodo da chiamare al termine dell'operazione di ripresa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-382">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-383">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-383">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-384">Avvia o riprende un'istanza del flusso di lavoro in modo asincrono utilizzando l'intervallo di timeout, il metodo di callback specificato e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-384">Starts or resumes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-385">Riferimento all'operazione di esecuzione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-385">A reference to the asynchronous run operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-386">Per determinare se l'operazione di esecuzione ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-386">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="8c6da-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="8c6da-388">Se <xref:System.Activities.WorkflowApplication.EndRun%2A> viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-388">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="8c6da-389">Se l'operazione di ripresa non è completata nell'intervallo di timeout specificato, un <xref:System.TimeoutException> è generato dal  <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-389">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-390">Questo metodo avvia o riprende un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-390">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-391">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-391">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTerminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-392">Termina un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-392">Terminates a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-393">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-393">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : Exception * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="8c6da-394">Il motivo per il quale l'istanza del flusso di lavoro è terminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-394">The reason the workflow instance is terminated.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-395">Metodo da chiamare al termine dell'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-395">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-396">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-396">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-397">Termina un'istanza del flusso di lavoro in modo asincrono utilizzando l'eccezione specificata, il metodo di callback e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-397">Terminates a workflow instance asynchronously using the specified exception, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-398">Riferimento all'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-398">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-399">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-399">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="8c6da-400">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-400">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="8c6da-401">Per stabilire se l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-401">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="8c6da-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="8c6da-403">Se <xref:System.Activities.WorkflowApplication.EndTerminate%2A> viene chiamato prima che l'operazione  <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> sia completata, si blocca fino a che l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> è completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-403">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="8c6da-404">Per impostazione predefinita, l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> deve essere completata in 30 secondi o un <xref:System.TimeoutException> viene generato dal <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-404">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-405">Questo metodo termina un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-405">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-406">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-406">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="8c6da-407">Motivo della chiusura dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-407">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-408">Metodo da chiamare al termine dell'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-408">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-409">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-409">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-410">Termina un'istanza del flusso di lavoro in modo asincrono utilizzando il messaggio di errore specificato, il metodo di callback e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-410">Terminates a workflow instance asynchronously using the specified error message, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-411">Riferimento all'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-411">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-412">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-412">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="8c6da-413">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-413">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="8c6da-414">Per stabilire se l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-414">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="8c6da-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="8c6da-416">Se <xref:System.Activities.WorkflowApplication.EndTerminate%2A> viene chiamato prima che l'operazione  <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> sia completata, si blocca fino a che l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> è completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-416">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="8c6da-417">Per impostazione predefinita, l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> deve essere completata in 30 secondi o un <xref:System.TimeoutException> viene generato dal <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-417">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-418">Questo metodo termina un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-418">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-419">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-419">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : Exception * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="8c6da-420">Motivo della chiusura dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-420">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-421">Intervallo nel quale l'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> deve essere completata prima che l'operazione è cancellata e un  <see cref="T:System.TimeoutException" /> è generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-421">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-422">Metodo da chiamare al termine dell'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-422">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-423">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-423">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-424">Termina un'istanza del flusso di lavoro in modo asincrono utilizzando l'eccezione specificata, l'intervallo di timeout, il metodo di callback specificato e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-424">Terminates a workflow instance asynchronously using the specified exception, time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-425">Riferimento all'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-425">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-426">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-426">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="8c6da-427">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-427">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="8c6da-428">Per stabilire se l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-428">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="8c6da-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> può essere chiamato dall'interno o dall'esterno del metodo `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="8c6da-430">Se <xref:System.Activities.WorkflowApplication.EndTerminate%2A> viene chiamato prima che l'operazione  <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> sia completata, si blocca fino a che l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> è completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-430">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="8c6da-431">Se l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> non è completata entro l'intervallo di timeout specificato un <xref:System.TimeoutException> è generato.</span><span class="sxs-lookup"><span data-stu-id="8c6da-431">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown.</span></span> <span data-ttu-id="8c6da-432">Questa o qualsiasi altra eccezione che si verifica durante il processo <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> è generata da <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-432">This or any other exceptions that occur during the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> process is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-433">Questo metodo termina un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-433">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-434">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-434">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : string * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="8c6da-435">Motivo della chiusura dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-435">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-436">Intervallo nel quale l'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> deve essere completata prima che l'operazione è cancellata e un  <see cref="T:System.TimeoutException" /> è generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-436">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-437">Metodo da chiamare al termine dell'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-437">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-438">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-438">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-439">Termina un'istanza del flusso di lavoro in modo asincrono utilizzando il messaggio di errore specificato, l'intervallo di timeout, il metodo di callback specificato e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-439">Terminates a workflow instance asynchronously using the specified error message, time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-440">Riferimento all'operazione asincrona <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-440">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-441">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-441">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="8c6da-442">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-442">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="8c6da-443">Per stabilire se l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-443">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="8c6da-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="8c6da-445">Se <xref:System.Activities.WorkflowApplication.EndTerminate%2A> viene chiamato prima che l'operazione  <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> sia completata, si blocca fino a che l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> è completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-445">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="8c6da-446">Se l'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> non è completata entro l'intervallo di timeout specificato un <xref:System.TimeoutException> è generato dal <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-446">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-447">Questo metodo termina un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-447">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-448">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-448">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUnload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-449">Rende persistente e consente di eliminare un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-449">Persists and disposes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-450">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-450">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 <span data-ttu-id="8c6da-451">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</span><span class="sxs-lookup"><span data-stu-id="8c6da-451">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="8c6da-452">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-452">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginUnload : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginUnload (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="8c6da-453">Metodo da chiamare al termine dell'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-453">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-454">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-454">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-455">Rende persistente e consente di eliminare un'istanza del flusso di lavoro in modo asincrono utilizzando il metodo di callback specificato e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-455">Persists and disposes a workflow instance asynchronously using the specified callback method and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-456">Riferimento all'operazione asincrona <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-456">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-457">Per stabilire se l'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-457">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="8c6da-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="8c6da-459">Se <xref:System.Activities.WorkflowApplication.EndUnload%2A> viene chiamato prima che l'operazione  <xref:System.Activities.WorkflowApplication.BeginUnload%2A> sia completata, si blocca fino a che l'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> è completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-459">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="8c6da-460">Per impostazione predefinita, l'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> deve essere completata in 30 secondi o un <xref:System.TimeoutException> viene generato dal <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-460">By default, the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-461">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</span><span class="sxs-lookup"><span data-stu-id="8c6da-461">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="8c6da-462">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-462">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="8c6da-463">Questo metodo rende persistente e consente di eliminare un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-463">This method persists and disposes a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-464">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-464">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginUnload : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginUnload (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c6da-465">Intervallo nel quale l'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> deve essere completata prima che l'operazione è cancellata e un  <see cref="T:System.TimeoutException" /> è generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-465">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8c6da-466">Metodo da chiamare al termine dell'operazione <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-466">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8c6da-467">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-467">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-468">Rende persistente e consente di eliminare un'istanza del flusso di lavoro in modo asincrono utilizzando l'intervallo di timeout specificato, il metodo di callback specificato e lo stato fornito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-468">Persists and disposes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-469">Riferimento all'operazione asincrona <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-469">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-470">Per stabilire se l'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> ha avuto successo, chiamare <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-470">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="8c6da-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> può essere chiamato dall'interno o dall'esterno del metodo cui si fa riferimento nel parametro `callback`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="8c6da-472">Se <xref:System.Activities.WorkflowApplication.EndUnload%2A> viene chiamato prima che l'operazione  <xref:System.Activities.WorkflowApplication.BeginUnload%2A> sia completata, si blocca fino a che l'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> è completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-472">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="8c6da-473">Se l'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> non è completata entro l'intervallo di timeout specificato un <xref:System.TimeoutException> è generato dal <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-473">If the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="8c6da-474">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</span><span class="sxs-lookup"><span data-stu-id="8c6da-474">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="8c6da-475">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-475">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="8c6da-476">Questo metodo rende persistente e consente di scaricare un'istanza del flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-476">This method persists and unloads a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-477">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-477">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-478">Annulla l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-478">Cancels the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-479">Questo metodo pianifica l'annullamento dell'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-479">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="8c6da-480">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-480">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="8c6da-481">Per impostazione predefinita, l'operazione di annullamento deve essere completata in 30 secondi, altrimenti viene generata una <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-481">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="workflowApplication.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-482">Annulla l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-482">Cancels the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-483">Questo metodo pianifica l'annullamento dell'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-483">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="8c6da-484">Per ricevere una notifica al completamento dell'annullamento, utilizzare il gestore <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-484">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
 <span data-ttu-id="8c6da-485">Per impostazione predefinita, l'operazione di annullamento deve essere completata in 30 secondi, altrimenti viene generata una <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-485">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-486">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-486">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-487">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-487">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="8c6da-488">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Cancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-488">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="8c6da-489">Quando il flusso di lavoro viene annullato, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-489">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Cancel : TimeSpan -&gt; unit" Usage="workflowApplication.Cancel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c6da-490">Intervallo nel quale deve essere completata l'operazione di annullamento prima che sia annullata e venga generato un oggetto <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-490">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-491">Annulla l'istanza del flusso di lavoro utilizzando l'intervallo di timeout specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-491">Cancels the workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-492">Questo metodo pianifica l'annullamento dell'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-492">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="8c6da-493">Per ricevere una notifica al completamento dell'annullamento, utilizzare il gestore <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-493">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-494">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-494">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-495">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-495">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="8c6da-496">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Cancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-496">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="8c6da-497">Quando il flusso di lavoro viene annullato, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-497">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Property Completed As Action(Of WorkflowApplicationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ Completed { Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Completed : Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Completed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-498">Ottiene o imposta il <see cref="T:System.Action`1" /> che è richiamato quando l'istanza del flusso di lavoro è completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-498">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance completes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c6da-499">L'azione che viene richiamata quando l'istanza del flusso di lavoro è completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-499">The action that is invoked when the workflow instance is complete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6da-500">L'esempio di codice seguente controlla l'oggetto <xref:System.Activities.WorkflowApplicationCompletedEventArgs> passato nel gestore <xref:System.Activities.WorkflowApplication.Completed%2A> di un'istanza <xref:System.Activities.WorkflowApplication> e visualizza le informazioni sulle modalità di completamento del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-500">The following code example inspects the <xref:System.Activities.WorkflowApplicationCompletedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Completed%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about how the workflow completed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#4](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-501">Crea un proprietario dell'istanza predefinito per il flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-501">Creates a default instance owner for the workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter -&gt; unit" Usage="System.Activities.WorkflowApplication.CreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-502">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-502">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="8c6da-503">L'identità della definizione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-503">The definition identity of the workflow.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="8c6da-504">Filtro di identità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-504">The identity filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-505">Crea un proprietario dell'istanza predefinito per il flusso di lavoro utilizzando l'archiviazione istanza, l'identità della definizione e il filtro dell'identità specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-505">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter * TimeSpan -&gt; unit" Usage="System.Activities.WorkflowApplication.CreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-506">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-506">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="8c6da-507">L'identità della definizione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-507">The definition identity of the workflow.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="8c6da-508">Filtro di identità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-508">The identity filter.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-509">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-509">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-510">Crea un proprietario dell'istanza predefinito per il flusso di lavoro utilizzando l'archiviazione istanza, l'identità della definizione, il filtro dell'identità e l'intervallo di timeout specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-510">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter and timeout interval.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-511">Elimina un proprietario dell'istanza predefinito per il flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-511">Deletes a default instance owner for the workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberSignature Language="F#" Value="static member DeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore -&gt; unit" Usage="System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner instanceStore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-512">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-512">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-513">Elimina un proprietario dell'istanza predefinito per il flusso di lavoro con l'archiviazione istanza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-513">Deletes a default instance owner for the workflow with specified instance store.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member DeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * TimeSpan -&gt; unit" Usage="System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner (instanceStore, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-514">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-514">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-515">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-515">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-516">Elimina un proprietario dell'istanza predefinito per il flusso di lavoro con l'archiviazione istanza e l'intervallo di timeout specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-516">Deletes a default instance owner for the workflow with specified instance store and timeout interval..</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public void EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancel (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndCancel : IAsyncResult -&gt; unit" Usage="workflowApplication.EndCancel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="8c6da-517">Operazione di annullamento asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-517">The asynchronous cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-518">Attende il completamento dell'operazione di annullamento asincrona in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-518">Waits for the pending asynchronous cancel operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-519">Questo metodo determina se un'operazione <xref:System.Activities.WorkflowApplication.BeginCancel%2A> è stata completata con successo.</span><span class="sxs-lookup"><span data-stu-id="8c6da-519">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginCancel%2A> operation was successful.</span></span> <span data-ttu-id="8c6da-520">Se viene chiamato prima del completamento dell'operazione di annullamento, si blocca fino a che l'operazione di annullamento è completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-520">If called before the cancel operation completes, it blocks until the cancel operation is complete.</span></span>  
  
 <span data-ttu-id="8c6da-521">Questo metodo completa l'operazione di annullamento asincrona utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-521">This method completes the asynchronous cancel operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-522">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-522">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndCreateDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndCreateDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndCreateDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndCreateDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndCreateDefaultInstanceOwner : IAsyncResult -&gt; unit" Usage="System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8c6da-523">Risultato asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-523">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-524">Attende il completamento della creazione del proprietario dell'istanza predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-524">Waits for the creation of default instance owner to complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndDeleteDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndDeleteDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndDeleteDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndDeleteDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndDeleteDefaultInstanceOwner : IAsyncResult -&gt; unit" Usage="System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8c6da-525">Risultato asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-525">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-526">Attende il completamento della creazione del proprietario dell'istanza predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-526">Waits for the deletion of default instance owner to complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetInstance(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetInstance : IAsyncResult -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.EndGetInstance asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8c6da-527">Risultato asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-527">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-528">Attende il completamento del richiamo dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-528">Waits for the instance retrieval to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-529">Risultato dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-529">The result of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetRunnableInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetRunnableInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetRunnableInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetRunnableInstance(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetRunnableInstance : IAsyncResult -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.EndGetRunnableInstance asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8c6da-530">Risultato asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-530">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-531">Attende il completamento dell'istanza dell'operazione di recupero asincrona eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-531">Waits for the asynchronous retrieval of runnable instance operation to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-532">Risultato dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-532">The result of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public void EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndLoad : IAsyncResult -&gt; unit" Usage="workflowApplication.EndLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="8c6da-533">L'operazione di caricamento asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-533">The asynchronous load operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-534">Attende il completamento dell'operazione di caricamento asincrona in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-534">Waits for the pending asynchronous load operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-535">Se questo metodo viene chiamato prima del completamento dell'operazione di caricamento, si blocca fino a che l'operazione di caricamento non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-535">If this method is called before the loading operation completes, it blocks until the loading operation is complete.</span></span>  
  
 <span data-ttu-id="8c6da-536">Questo metodo completa l'operazione di caricamento asincrona utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-536">This method completes the asynchronous load operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-537">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-537">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void EndLoadRunnableInstance (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadRunnableInstance(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadRunnableInstance (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadRunnableInstance(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndLoadRunnableInstance : IAsyncResult -&gt; unit" Usage="workflowApplication.EndLoadRunnableInstance result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="8c6da-538">Riferimento all'operazione di caricamento asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-538">A reference to the asynchronous load operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-539">Attende il completamento dell'istanza dell'operazione di caricamento asincrona eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-539">Waits for the asynchronous load runnable instance operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-540">Questo metodo determina se un'operazione <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> è stata completata con successo.</span><span class="sxs-lookup"><span data-stu-id="8c6da-540">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> operation was successful.</span></span> <span data-ttu-id="8c6da-541">Se viene chiamato prima del completamento dell'operazione di caricamento asincrona, si blocca fino a che l'operazione non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-541">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="8c6da-542">Questo metodo carica flussi di lavoro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-542">This method loads workflows asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-543">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-543">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPersist">
      <MemberSignature Language="C#" Value="public void EndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndPersist(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndPersist : IAsyncResult -&gt; unit" Usage="workflowApplication.EndPersist result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="8c6da-544">L'operazione della persistenza asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-544">The asynchronous persist operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-545">Attende il completamento dell'operazione della persistenza asincrona in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-545">Waits for the pending asynchronous persist operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-546">Questo metodo determina se un'operazione <xref:System.Activities.WorkflowApplication.BeginPersist%2A> è stata completata con successo.</span><span class="sxs-lookup"><span data-stu-id="8c6da-546">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginPersist%2A> operation was successful.</span></span> <span data-ttu-id="8c6da-547">Se viene chiamato prima del completamento dell'operazione di persistenza, si blocca fino a che l'operazione di persistenza non è completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-547">If called before the persist operation completes, it blocks until the persist operation is complete.</span></span>  
  
 <span data-ttu-id="8c6da-548">Questo metodo completa l'operazione di persistenza asincrona utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-548">This method completes the asynchronous persist operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-549">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-549">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult EndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult EndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult EndResumeBookmark(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndResumeBookmark : IAsyncResult -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.EndResumeBookmark result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="8c6da-550">Riferimento all'operazione di ripresa di segnalibro asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-550">A reference to the asynchronous bookmark resume operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-551">Attende il completamento di un'operazione di ripresa del segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-551">Waits for a bookmark resume operation to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-552">Uno dei valori di enumerazione che indica i risultati di un'operazione di ripresa di un segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-552">One of the enumeration values that indicates the results of a bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-553">Questo metodo determina se un'operazione <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> è stata completata con successo.</span><span class="sxs-lookup"><span data-stu-id="8c6da-553">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> operation was successful.</span></span> <span data-ttu-id="8c6da-554">Se viene chiamato prima del completamento dell'operazione di caricamento asincrona, si blocca fino a che l'operazione non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-554">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="8c6da-555">Questo metodo riprende un segnalibro in modo asincrono utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-555">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-556">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-556">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRun">
      <MemberSignature Language="C#" Value="public void EndRun (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndRun(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndRun (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndRun(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndRun : IAsyncResult -&gt; unit" Usage="workflowApplication.EndRun result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="8c6da-557">Operazione di esecuzione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-557">The asynchronous run operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-558">Attende il completamento dell'operazione di esecuzione asincrona in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-558">Waits for the pending asynchronous run operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-559">Questo metodo determina se un'operazione <xref:System.Activities.WorkflowApplication.BeginRun%2A> è stata completata con successo.</span><span class="sxs-lookup"><span data-stu-id="8c6da-559">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginRun%2A> operation was successful.</span></span> <span data-ttu-id="8c6da-560">Se viene chiamato prima del completamento dell'operazione di ripresa, si blocca fino a che l'operazione di ripresa non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-560">If called before the resume operation completes, it blocks until the resume operation is complete.</span></span>  
  
 <span data-ttu-id="8c6da-561">Questo metodo completa un'operazione di esecuzione asincrona utilizzando il modello di struttura asincrono <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-561">This method completes an asynchronous run operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-562">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-562">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminate">
      <MemberSignature Language="C#" Value="public void EndTerminate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndTerminate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTerminate (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTerminate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndTerminate : IAsyncResult -&gt; unit" Usage="workflowApplication.EndTerminate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="8c6da-563">Operazione di interruzione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-563">The asynchronous terminate operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-564">Attende il completamento dell'operazione di interruzione asincrona in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-564">Waits for the pending asynchronous terminate operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-565">Questo metodo può essere chiamato per determinare se un'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> è stata completata con successo.</span><span class="sxs-lookup"><span data-stu-id="8c6da-565">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful.</span></span> <span data-ttu-id="8c6da-566">Se viene chiamato prima del completamento dell'operazione di interruzione asincrona, si blocca fino a che l'operazione non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-566">If called before the terminate operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="8c6da-567">Questo metodo completa un'operazione <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> asincrona utilizzando il metodo di struttura asincrono  <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-567">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-568">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-568">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnload">
      <MemberSignature Language="C#" Value="public void EndUnload (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUnload(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUnload (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUnload(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndUnload : IAsyncResult -&gt; unit" Usage="workflowApplication.EndUnload result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="8c6da-569">L'operazione di scaricamento asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-569">The asynchronous unload operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-570">Attende il completamento dell'operazione di scaricamento asincrona in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-570">Waits for the pending asynchronous unload operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-571">Questo metodo può essere chiamato per determinare se un'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> è stata completata con successo.</span><span class="sxs-lookup"><span data-stu-id="8c6da-571">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful.</span></span> <span data-ttu-id="8c6da-572">Se viene chiamato prima del completamento dell'operazione di scaricamento asincrona, si blocca fino a che l'operazione non viene completata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-572">If called before the unload operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="8c6da-573">Questo metodo completa un'operazione <xref:System.Activities.WorkflowApplication.BeginUnload%2A> asincrona utilizzando il metodo di struttura asincrono  <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-573">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="8c6da-574">Per altre informazioni, vedere [Cenni preliminari sulla programmazione asincrona](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-574">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As WorkflowInstanceExtensionManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Hosting::WorkflowInstanceExtensionManager ^ Extensions { System::Activities::Hosting::WorkflowInstanceExtensionManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Activities.Hosting.WorkflowInstanceExtensionManager" Usage="System.Activities.WorkflowApplication.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstanceExtensionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-575">Ottiene la raccolta di estensioni per l'istanza del flusso di lavoro corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-575">Gets the collection of extensions for the current workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c6da-576">Una raccolta di oggetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-576">A collection of objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBookmarks">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-577">Restituisce la raccolta di segnalibri per l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-577">Returns the collection of bookmarks for the workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks () As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks();" />
      <MemberSignature Language="F#" Value="member this.GetBookmarks : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;" Usage="workflowApplication.GetBookmarks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-578">Restituisce la raccolta di segnalibri per l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-578">Returns the collection of bookmarks for the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-579">La raccolta di sola lettura di segnalibri per l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-579">A read-only collection of bookmarks for the workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-580">Se questa operazione non è completata entro 30 secondi, è generato un <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-580">If this operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-581">Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività `ReadLine` che crea un oggetto <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-581">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="8c6da-582">Il flusso di lavoro viene avviato e, una volta creato l'oggetto <xref:System.Activities.Bookmark> e reso inattivo il flusso di lavoro, viene chiamato il metodo <xref:System.Activities.WorkflowApplication.GetBookmarks%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-582">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="8c6da-583">Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-583">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks (timeout As TimeSpan) As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.GetBookmarks : TimeSpan -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;" Usage="workflowApplication.GetBookmarks timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c6da-584">Intervallo nel quale questo metodo deve essere completato prima che l'operazione sia annullata e un <see cref="T:System.TimeoutException" /> è generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-584">The interval in which this method must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-585">Restituisce la raccolta di segnalibri per l'istanza del flusso di lavoro utilizzando l'intervallo di timeout specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-585">Returns the collection of bookmarks for the workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-586">La raccolta di sola lettura di segnalibri per l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-586">A read-only collection of bookmarks for the workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6da-587">Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività `ReadLine` che crea un oggetto <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-587">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="8c6da-588">Il flusso di lavoro viene avviato e, una volta creato l'oggetto <xref:System.Activities.Bookmark> e reso inattivo il flusso di lavoro, viene chiamato il metodo <xref:System.Activities.WorkflowApplication.GetBookmarks%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-588">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="8c6da-589">Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-589">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-590">Recupera l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-590">Retrieves the workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberSignature Language="F#" Value="static member GetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetInstance (instanceId, instanceStore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="8c6da-591">Identificatore dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-591">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-592">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-592">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-593">Recupera l'istanza del flusso di lavoro utilizzando l'archivio istanze e l'identificatore di istanza specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-593">Retrieves the workflow instance using specified instance identifier and instance store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-594">Istanza recuperata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-594">The retrieved instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member GetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore * TimeSpan -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetInstance (instanceId, instanceStore, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="8c6da-595">Identificatore dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-595">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-596">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-596">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-597">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-597">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-598">Recupera l'istanza del flusso di lavoro utilizzando l'intervallo di timeout, l'archivio istanze e l'identificatore di istanza specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-598">Retrieves the workflow instance using specified instance identifier, instance store and timeout interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-599">Riferimento all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-599">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-600">Recupera l'istanza eseguibile del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-600">Retrieves the runnable instance of the workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberSignature Language="F#" Value="static member GetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetRunnableInstance instanceStore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-601">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-601">The access to the persisted state of the current instance of the workflow application</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-602">Recupera l'istanza eseguibile del flusso di lavoro con l'archivio istanze specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-602">Retrieves the runnable instance of the workflow with specified instance store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-603">Istanza eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-603">The runnable instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member GetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore * TimeSpan -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetRunnableInstance (instanceStore, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="8c6da-604">L'accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-604">The access to the persisted state of the current instance of the workflow application</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-605">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-605">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-606">Recupera l'istanza eseguibile del flusso di lavoro con l'intervallo di timeout e l'archivio istanze specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-606">Retrieves the runnable instance of the workflow with specified instance store and timeout interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-607">Istanza eseguibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-607">The runnable instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.Activities.WorkflowApplication.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-608">Ottiene l'identificatore GUID a 128 bit dell'istanza dell'applicazione del flusso di lavoro corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-608">Gets the 128-bit GUID identifier of the current workflow application instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c6da-609">Identificatore GUID a 128 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-609">A 128-bit GUID identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6da-610">Nell'esempio seguente viene creata un'istanza <xref:System.Activities.WorkflowApplication>, quindi viene visualizzato il valore <xref:System.Activities.WorkflowApplication.Id%2A> nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-610">The following example creates a <xref:System.Activities.WorkflowApplication> instance and then displays the <xref:System.Activities.WorkflowApplication.Id%2A> value to the console.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Property Idle As Action(Of WorkflowApplicationIdleEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ Idle { Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Idle : Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Idle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-611">Ottiene o imposta il <see cref="T:System.Action`1" /> che è richiamato quando l'istanza del flusso di lavoro corrente diventa inattiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-611">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow instance becomes idle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c6da-612">Un'azione che si esegue quando un'istanza del flusso di lavoro diventa inattiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-612">An action that executes when a workflow instance becomes idle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6da-613">Nell'esempio di codice seguente viene esaminato l'oggetto <xref:System.Activities.WorkflowApplicationIdleEventArgs> passato nel gestore <xref:System.Activities.WorkflowApplication.Idle%2A> di un'istanza <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-613">The following code example inspects the <xref:System.Activities.WorkflowApplicationIdleEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Idle%2A> handler of a <xref:System.Activities.WorkflowApplication> instance.</span></span> <span data-ttu-id="8c6da-614">In questo esempio il flusso di lavoro che diventa inattivo dispone di un oggetto <xref:System.Activities.Bookmark> denominato `EnterGuess`, di proprietà di un'attività denominata `ReadInt`.</span><span class="sxs-lookup"><span data-stu-id="8c6da-614">In this example the workflow going idle has one <xref:System.Activities.Bookmark> with a name of `EnterGuess`, owned by an activity named `ReadInt`.</span></span> <span data-ttu-id="8c6da-615">Si basa questo esempio di codice all'esterno della [procedura: eseguire un flusso di lavoro](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), che fa parte del [esercitazione introduttiva su &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-615">This code example is based off of [How to: Run a Workflow](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span> <span data-ttu-id="8c6da-616">Se il gestore <xref:System.Activities.WorkflowApplication.Idle%2A> nel passaggio indicato viene modificato per contenere il codice da questo esempio, viene visualizzato l'output seguente.</span><span class="sxs-lookup"><span data-stu-id="8c6da-616">If the <xref:System.Activities.WorkflowApplication.Idle%2A> handler in that step is modified to contain the code from this example, the following output is displayed.</span></span>  
  
```Output  
BookmarkName: EnterGuess - OwnerDisplayName: ReadInt  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#2](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceStore">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceStore InstanceStore" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.InstanceStore" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceStore As InstanceStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceStore ^ InstanceStore { System::Runtime::DurableInstancing::InstanceStore ^ get(); void set(System::Runtime::DurableInstancing::InstanceStore ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceStore : System.Runtime.DurableInstancing.InstanceStore with get, set" Usage="System.Activities.WorkflowApplication.InstanceStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-617">Ottiene o imposta un oggetto che fornisce accesso allo stato persistente dell'istanza corrente dell'applicazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-617">Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c6da-618">Un archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-618">An instance store.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6da-619">Nell'esempio seguente viene creata un'istanza WorkflowApplication, quindi viene configurato <xref:System.Activities.WorkflowApplication.InstanceStore%2A> utilizzando un oggetto <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-619">The following example creates a WorkflowApplication instance and then configures the <xref:System.Activities.WorkflowApplication.InstanceStore%2A> using a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="8c6da-620">Questo esempio di codice fa parte di [procedura: creare ed eseguire un flusso di lavoro in esecuzione lunghi](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md), che fa parte del [esercitazione introduttiva su &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span><span class="sxs-lookup"><span data-stu-id="8c6da-620">This code example is part of [How to: Create and Run a Long Running Workflow](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-621">Carica un'istanza del flusso di lavoro da un archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-621">Loads a workflow instance from an instance store.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance -&gt; unit" Usage="workflowApplication.Load instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8c6da-622">Istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-622">The instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-623">Carica un'istanza di flusso di lavoro da un archivio di istanze con l'istanza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-623">Loads a workflow instance from an instance store with specified instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.Load : Guid -&gt; unit" Usage="workflowApplication.Load instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="8c6da-624">Un identificatore univoco globale a 128 bit per l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-624">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-625">Carica l'istanza del flusso di lavoro specificata in memoria da un archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-625">Loads the specified workflow instance into memory from an instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6da-626">Nell'esempio seguente viene chiamato l'oggetto <xref:System.Activities.WorkflowApplication.Load%2A> per caricare l'istanza del flusso di lavoro reso persistente da un oggetto <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-626">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="8c6da-627">Questo esempio è tratto il `LoadAndCompleteInstance` metodo il [persistenza di un'applicazione flusso di lavoro](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) esempio.</span><span class="sxs-lookup"><span data-stu-id="8c6da-627">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap -&gt; unit" Usage="workflowApplication.Load (instance, updateMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8c6da-628">Istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-628">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="8c6da-629">Mappa di aggiornamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-629">The update map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-630">Carica un'istanza di flusso di lavoro da un archivio di istanze con l'istanza e la mappa degli aggiornamenti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-630">Loads a workflow instance from an instance store with specified instance and update map.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance * TimeSpan -&gt; unit" Usage="workflowApplication.Load (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8c6da-631">Istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-631">The instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-632">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-632">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-633">Carica un'istanza di flusso di lavoro da un archivio di istanze con l'istanza e l'intervallo di timeout specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-633">Loads a workflow instance from an instance store with specified instance and timeout interval.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Load : Guid * TimeSpan -&gt; unit" Usage="workflowApplication.Load (instanceId, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="8c6da-634">Un identificatore univoco globale a 128 bit per l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-634">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-635">Intervallo nel quale deve essere completata l'operazione di caricamento prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-635">The interval in which the load operation must complete before the load operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-636">Carica l'istanza del flusso di lavoro specificata nella memoria da un archivio di istanze utilizzando l'intervallo di timeout specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-636">Loads the specified workflow instance into memory from an instance store using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6da-637">Nell'esempio seguente viene chiamato l'oggetto <xref:System.Activities.WorkflowApplication.Load%2A> per caricare l'istanza del flusso di lavoro reso persistente da un oggetto <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-637">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="8c6da-638">Questo esempio è tratto il `LoadAndCompleteInstance` metodo il [persistenza di un'applicazione flusso di lavoro](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) esempio.</span><span class="sxs-lookup"><span data-stu-id="8c6da-638">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap * TimeSpan -&gt; unit" Usage="workflowApplication.Load (instance, updateMap, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8c6da-639">Istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-639">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="8c6da-640">Mappa di aggiornamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-640">The update map.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-641">Intervallo nel quale deve essere completata l'operazione di caricamento iniziale prima che l'operazione sia annullata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-641">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-642">Carica un'istanza di flusso di lavoro da un archivio di istanze con l'istanza, la mappa degli aggiornamenti e l'intervallo di timeout specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-642">Loads a workflow instance from an instance store with specified instance, update map and timeout interval.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-643">Carica un'istanza del flusso di lavoro eseguibile da <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-643">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-644">Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.</span><span class="sxs-lookup"><span data-stu-id="8c6da-644">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance();" />
      <MemberSignature Language="F#" Value="member this.LoadRunnableInstance : unit -&gt; unit" Usage="workflowApplication.LoadRunnableInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-645">Carica un'istanza del flusso di lavoro eseguibile da <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-645">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-646">Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.</span><span class="sxs-lookup"><span data-stu-id="8c6da-646">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="8c6da-647">Per impostazione predefinita, l'operazione di caricamento deve essere completata in 30 secondi, altrimenti viene generata una <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-647">By default, the load operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.LoadRunnableInstance : TimeSpan -&gt; unit" Usage="workflowApplication.LoadRunnableInstance timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c6da-648">Intervallo nel quale deve essere completata l'operazione di caricamento prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-648">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-649">Carica un'istanza del flusso di lavoro eseguibile dal <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> utilizzando l'intervallo di timeout specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-649">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-650">Un'istanza eseguibile è un'istanza per il quale un timer o un blocco dell'istanza è scaduto.</span><span class="sxs-lookup"><span data-stu-id="8c6da-650">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginAssociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.OnBeginAssociateKeys (keys, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginPersist : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.OnBeginPersist (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginResumeBookmark : System.Activities.Bookmark * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.OnBeginResumeBookmark (bookmark, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">To be added.</param>
        <param name="value">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="override this.OnDisassociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; -&gt; unit" Usage="workflowApplication.OnDisassociateKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndAssociateKeys : IAsyncResult -&gt; unit" Usage="workflowApplication.OnEndAssociateKeys result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal override void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndPersist(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndPersist : IAsyncResult -&gt; unit" Usage="workflowApplication.OnEndPersist result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndResumeBookmark : IAsyncResult -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.OnEndResumeBookmark result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected override void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyPaused();" />
      <MemberSignature Language="F#" Value="override this.OnNotifyPaused : unit -&gt; unit" Usage="workflowApplication.OnNotifyPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected override void OnNotifyUnhandledException (Exception exception, System.Activities.Activity exceptionSource, string exceptionSourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity exceptionSource, string exceptionSourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ exceptionSource, System::String ^ exceptionSourceInstanceId);" />
      <MemberSignature Language="F#" Value="override this.OnNotifyUnhandledException : Exception * System.Activities.Activity * string -&gt; unit" Usage="workflowApplication.OnNotifyUnhandledException (exception, exceptionSource, exceptionSourceInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="exceptionSource" Type="System.Activities.Activity" />
        <Parameter Name="exceptionSourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">To be added.</param>
        <param name="exceptionSource">To be added.</param>
        <param name="exceptionSourceInstanceId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal override void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRequestAbort(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="override this.OnRequestAbort : Exception -&gt; unit" Usage="workflowApplication.OnRequestAbort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt; OnUnhandledException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, valuetype System.Activities.UnhandledExceptionAction&gt; OnUnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Property OnUnhandledException As Func(Of WorkflowApplicationUnhandledExceptionEventArgs, UnhandledExceptionAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ OnUnhandledException { Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnUnhandledException : Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, System.Activities.UnhandledExceptionAction&gt; with get, set" Usage="System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-651">Ottiene o imposta il <see cref="T:System.Func`2" /> che è richiamato quando l'istanza del flusso di lavoro corrente rileva un'eccezione non gestita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-651">Gets or sets the <see cref="T:System.Func`2" /> that is invoked when the current workflow instance encounters an unhandled exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c6da-652">Il delegato che viene richiamato quando un'istanza del flusso di lavoro rileva un'eccezione non gestita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-652">The delegate that is invoked when a workflow instance encounters an unhandled exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-653"><xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> e <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> determinano il comportamento del runtime quando un'eccezione non è gestita nel flusso di lavoro; tuttavia, in <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> c'è l'opzione di lasciare un flusso di lavoro sospeso nell'archivio di persistenza, mentre questa opzione non c'è in <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-653">Both <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> and <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> dictate the behavior of the runtime when an exception is not handled in the workflow; however, <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> has the option of leaving a suspended workflow in the persistence store, while <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> does not.</span></span> <span data-ttu-id="8c6da-654">Ciò è dovuto al fatto che la modalità di elaborazione di un flusso di lavoro sospeso è specifica dell'host, mentre <xref:System.Activities.WorkflowApplication> non lo è.</span><span class="sxs-lookup"><span data-stu-id="8c6da-654">The reason for this is that what happens to a suspended workflow is host-specific, and <xref:System.Activities.WorkflowApplication> is not.</span></span> <span data-ttu-id="8c6da-655">Per implementare questa funzionalità utilizzando <xref:System.Activities.WorkflowApplication>, creare un <xref:System.Activities.Persistence.PersistenceParticipant> personalizzato che ha questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="8c6da-655">To implement this functionality using <xref:System.Activities.WorkflowApplication>, create a custom <xref:System.Activities.Persistence.PersistenceParticipant> that has this behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-656">Nell'esempio seguente viene richiamato un flusso di lavoro che genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8c6da-656">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="8c6da-657">L'eccezione non viene gestita dal flusso di lavoro e viene richiamato il gestore <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-657">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="8c6da-658">Gli argomenti <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> vengono controllati per fornire informazioni sull'eccezione e il flusso di lavoro viene terminato.</span><span class="sxs-lookup"><span data-stu-id="8c6da-658">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-659">Rende persistente un'istanza del flusso di lavoro in un archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-659">Persists a workflow instance to an instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-660">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</span><span class="sxs-lookup"><span data-stu-id="8c6da-660">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="8c6da-661">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-661">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist();" />
      <MemberSignature Language="F#" Value="member this.Persist : unit -&gt; unit" Usage="workflowApplication.Persist " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-662">Rende persistente un'istanza del flusso di lavoro in un archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-662">Persists a workflow instance to an instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-663">Se l'operazione di persistenza non è completata entro 30 secondi, un <xref:System.TimeoutException> viene generato.</span><span class="sxs-lookup"><span data-stu-id="8c6da-663">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="8c6da-664">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</span><span class="sxs-lookup"><span data-stu-id="8c6da-664">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="8c6da-665">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-665">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-666">Nell'esempio seguente viene chiamato <xref:System.Activities.WorkflowApplication.Persist%2A> per rendere persistente un'istanza del flusso di lavoro prima dell'avvio del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-666">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="8c6da-667">In questo esempio fa parte il `StartAndUnloadInstance` metodo nel [persistenza di un'applicazione flusso di lavoro](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) esempio.</span><span class="sxs-lookup"><span data-stu-id="8c6da-667">This example is part of the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Persist : TimeSpan -&gt; unit" Usage="workflowApplication.Persist timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c6da-668">Intervallo nel quale deve essere completata l'operazione di persistenza prima che sia annullata e venga generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-668">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-669">Rende persistente un'istanza del flusso di lavoro in un archivio di istanze utilizzando l'intervallo di timeout specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-669">Persists a workflow instance to an instance store using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-670">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</span><span class="sxs-lookup"><span data-stu-id="8c6da-670">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="8c6da-671">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-671">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-672">Nell'esempio seguente viene chiamato <xref:System.Activities.WorkflowApplication.Persist%2A> per rendere persistente un'istanza del flusso di lavoro prima dell'avvio del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-672">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="8c6da-673">Questo esempio è tratto il `StartAndUnloadInstance` metodo il [persistenza di un'applicazione flusso di lavoro](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) esempio.</span><span class="sxs-lookup"><span data-stu-id="8c6da-673">This example is from the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistableIdle">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt; PersistableIdle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationIdleEventArgs, valuetype System.Activities.PersistableIdleAction&gt; PersistableIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistableIdle As Func(Of WorkflowApplicationIdleEventArgs, PersistableIdleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ PersistableIdle { Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PersistableIdle : Func&lt;System.Activities.WorkflowApplicationIdleEventArgs, System.Activities.PersistableIdleAction&gt; with get, set" Usage="System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-674">Ottiene o imposta il <see cref="T:System.Activities.ActivityFunc" /> che è richiamato quando l'istanza del flusso di lavoro corrente è inattiva e può essere salvata in modo permanente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-674">Gets or sets the <see cref="T:System.Activities.ActivityFunc" /> that is invoked when the current workflow instance is idle and can be persisted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c6da-675">Il <see cref="T:System.Activities.ActivityFunc" /> che è richiamato quando l'istanza del flusso di lavoro corrente è inattiva e può essere salvata in modo permanente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-675">The <see cref="T:System.Activities.ActivityFunc" /> that is invoked when the current workflow instance is idle and can be persisted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-676">Quando un flusso di lavoro diventa inattivo e può essere reso persistente, vengono richiamati sia <xref:System.Activities.WorkflowApplication.Idle%2A> che <xref:System.Activities.WorkflowApplication.PersistableIdle%2A>, nell'ordine indicato.</span><span class="sxs-lookup"><span data-stu-id="8c6da-676">When a workflow becomes idle and can be persisted, both <xref:System.Activities.WorkflowApplication.Idle%2A> and <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> are invoked, in that order.</span></span> <span data-ttu-id="8c6da-677">Il gestore <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> restituisce uno dei valori di enumerazione <xref:System.Activities.PersistableIdleAction> di <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist> o <xref:System.Activities.PersistableIdleAction.Unload>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-677">The <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler returns one of the <xref:System.Activities.PersistableIdleAction> enumeration values of <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist>, or <xref:System.Activities.PersistableIdleAction.Unload>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-678">Nell'esempio seguente viene gestito il gestore <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> e viene impostato il runtime affinché renda persistente e scarichi il flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-678">The following example handles the <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler and instructs the runtime to persist and unload the workflow.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#26](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-679">Inizia un'operazione per riprendere un segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-679">Initiates an operation to resume a bookmark.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : System.Activities.Bookmark * obj -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmark, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="8c6da-680">Segnalibro da riprendere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-680">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8c6da-681">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-681">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-682">Inizia un'operazione per riprendere il segnalibro specificato utilizzando il valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-682">Initiates an operation to resume the specified bookmark, using the specified value.</span>
          </span>
          <span data-ttu-id="8c6da-683">Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-683">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-684">Risultato dell'operazione di ripresa del segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-684">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-685">Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.</span><span class="sxs-lookup"><span data-stu-id="8c6da-685">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-686">Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività `ReadLine` che crea un oggetto <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-686">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="8c6da-687">Dopo l'avvio del flusso di lavoro, la creazione dell'oggetto <xref:System.Activities.Bookmark> e il passaggio del flusso di lavoro sullo stato inattivo, viene raccolto l'input dell'utente e viene ripreso il segnalibro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-687">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#24](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : string * obj -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmarkName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="8c6da-688">Il nome del segnalibro da riprendere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-688">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8c6da-689">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-689">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-690">Inizia un'operazione per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-690">Initiates an operation to resume the bookmark with the specified name, using the specified value.</span>
          </span>
          <span data-ttu-id="8c6da-691">Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-691">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-692">Risultato dell'operazione di ripresa del segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-692">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-693">Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.</span><span class="sxs-lookup"><span data-stu-id="8c6da-693">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-694">Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività `ReadLine` che crea un oggetto <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-694">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="8c6da-695">Dopo l'avvio del flusso di lavoro, la creazione dell'oggetto <xref:System.Activities.Bookmark> e il passaggio del flusso di lavoro sullo stato inattivo, viene raccolto l'input dell'utente e viene ripreso il segnalibro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-695">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : System.Activities.Bookmark * obj * TimeSpan -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmark, value, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="8c6da-696">Segnalibro da riprendere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-696">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8c6da-697">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-697">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-698">L'intervallo di tempo durante il quale il segnalibro deve essere ripreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-698">The time interval during which the bookmark must be resumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-699">Inizia un'operazione per riprendere il segnalibro specificato utilizzando il valore specificato e l'intervallo di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-699">Initiates an operation to resume the specified bookmark, using the specified value and time-out interval.</span>
          </span>
          <span data-ttu-id="8c6da-700">Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-700">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-701">Risultato dell'operazione di ripresa del segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-701">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-702">Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.</span><span class="sxs-lookup"><span data-stu-id="8c6da-702">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-703">Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività `ReadLine` che crea un oggetto <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-703">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="8c6da-704">Dopo l'avvio del flusso di lavoro, la creazione dell'oggetto <xref:System.Activities.Bookmark> e il passaggio del flusso di lavoro sullo stato inattivo, viene raccolto l'input dell'utente e viene ripreso il segnalibro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-704">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#25](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : string * obj * TimeSpan -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmarkName, value, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="8c6da-705">Il nome del segnalibro da riprendere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-705">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8c6da-706">Un oggetto passato come un parametro al metodo richiamato quando il segnalibro è ripreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-706">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-707">L'intervallo di tempo durante il quale il segnalibro deve essere ripreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-707">The time interval during which the bookmark must be resumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-708">Inizia un'operazione per riprendere il segnalibro con il nome specificato, utilizzando il valore specificato e l'intervallo di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-708">Initiates an operation to resume the bookmark with the specified name, using the specified value and time-out interval.</span>
          </span>
          <span data-ttu-id="8c6da-709">Il segnalibro da riprendere viene creato precedentemente da un'attività all'interno dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-709">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c6da-710">Risultato dell'operazione di ripresa del segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-710">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-711">Il risultato del segnalibro indica se l'operazione di ripresa è riuscita o non riuscita.</span><span class="sxs-lookup"><span data-stu-id="8c6da-711">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-712">Nell'esempio seguente viene creato un flusso di lavoro che utilizza un'attività `ReadLine` che crea un oggetto <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-712">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="8c6da-713">Dopo l'avvio del flusso di lavoro, la creazione dell'oggetto <xref:System.Activities.Bookmark> e il passaggio del flusso di lavoro sullo stato inattivo, viene raccolto l'input dell'utente e viene ripreso il segnalibro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-713">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-714">Inizia o riprende l'esecuzione di un'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-714">Begins or resumes the execution of a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-715">Chiamare questo metodo per iniziare l'esecuzione di un'istanza del flusso di lavoro appena creata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-715">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberSignature Language="F#" Value="member this.Run : unit -&gt; unit" Usage="workflowApplication.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-716">Inizia o riprende l'esecuzione di un'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-716">Begins or resumes the execution of a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-717">Chiamare questo metodo per iniziare l'esecuzione di un'istanza del flusso di lavoro appena creata.</span><span class="sxs-lookup"><span data-stu-id="8c6da-717">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 <span data-ttu-id="8c6da-718">Se l'operazione di esecuzione non è completata entro 30 secondi, è generato un <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-718">If the run operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-719">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-719">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-720">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-720">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="8c6da-721">Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-721">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Run : TimeSpan -&gt; unit" Usage="workflowApplication.Run timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c6da-722">Chiamare questo metodo per iniziare l'esecuzione di un'istanza del flusso di lavoro appena creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-722">Call this method to initiate execution of a newly created workflow instance.</span>
          </span>
          <span data-ttu-id="8c6da-723">Intervallo nel quale l'operazione di esecuzione deve essere completata prima che l'operazione sia annullata e venga generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-723">The interval in which the run operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-724">Inizia o riprende l'esecuzione di un'istanza del flusso di lavoro utilizzando l'intervallo di timeout specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-724">Begins or resumes the execution of a workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-725">Si noti che diversamente da <xref:System.Activities.WorkflowInvoker.Invoke%2A>, questo metodo raggiungerà il timeout solo se il flusso di lavoro non inizia nel periodo di tempo specificato, piuttosto che dover essere completato entro il periodo di tempo specificato.</span><span class="sxs-lookup"><span data-stu-id="8c6da-725">Note that unlike <xref:System.Activities.WorkflowInvoker.Invoke%2A>, this method will time out only if the workflow doesn't start in the specified amount of time, rather than needing to complete in the specified amount of time.</span></span> <span data-ttu-id="8c6da-726">Ciò è dovuto al fatto che <xref:System.Activities.WorkflowInvoker.Invoke%2A> esegue il flusso di lavoro in modo sincrono (bloccando il thread host), mentre <xref:System.Activities.WorkflowApplication.Run%2A> lo esegue in modo asincrono, solo bloccando il thread host per il periodo di tempo richiesto per iniziare il flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-726">The reason for this is that <xref:System.Activities.WorkflowInvoker.Invoke%2A> executes the workflow synchronously (blocking the host thread), while <xref:System.Activities.WorkflowApplication.Run%2A> executes asynchronously, only blocking the host thread for the amount of time it takes the workflow to start.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-727">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-727">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-728">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-728">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="8c6da-729">Quando il flusso di lavoro viene completato, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-729">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal override bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool SupportsInstanceKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInstanceKeys : bool" Usage="System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Terminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-730">Termina un'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-730">Terminates a workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="member this.Terminate : Exception -&gt; unit" Usage="workflowApplication.Terminate reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="8c6da-731">Motivo della chiusura dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-731">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-732">Termina un'istanza del flusso di lavoro usando l'eccezione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-732">Terminates a workflow instance using the specified exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-733">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-733">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="8c6da-734">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-734">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="8c6da-735">Per impostazione predefinita, l'operazione <xref:System.Activities.WorkflowApplication.Terminate%2A> deve essere completata in 30 secondi, altrimenti viene generata una <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-735">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-736">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-736">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-737">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-737">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="8c6da-738">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Terminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-738">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="8c6da-739">Quando il flusso di lavoro viene terminato, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-739">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#16](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string -&gt; unit" Usage="workflowApplication.Terminate reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="8c6da-740">Motivo della chiusura dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-740">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-741">Termina un'istanza del flusso di lavoro usando il messaggio di errore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-741">Terminates a workflow instance using the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-742">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-742">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="8c6da-743">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-743">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="8c6da-744">Per impostazione predefinita, l'operazione <xref:System.Activities.WorkflowApplication.Terminate%2A> deve essere completata in 30 secondi, altrimenti viene generata una <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-744">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-745">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-745">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-746">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-746">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="8c6da-747">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Terminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-747">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="8c6da-748">Quando il flusso di lavoro viene terminato, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-748">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#18](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Terminate : Exception * TimeSpan -&gt; unit" Usage="workflowApplication.Terminate (reason, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="8c6da-749">Motivo della chiusura dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-749">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-750">Intervallo nel quale l'operazione <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> deve essere completata prima che l'operazione è cancellata e un  <see cref="T:System.TimeoutException" /> è generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-750">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-751">Termina un'istanza del flusso di lavoro utilizzando l'eccezione e l'intervallo di timeout specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-751">Terminates a workflow instance using the specified exception and time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-752">Questo metodo pianifica la chiusura del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-752">This method schedules the termination of the workflow.</span></span> <span data-ttu-id="8c6da-753">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-753">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-754">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-754">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-755">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-755">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="8c6da-756">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Terminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-756">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="8c6da-757">Quando il flusso di lavoro viene terminato, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-757">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#17](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string * TimeSpan -&gt; unit" Usage="workflowApplication.Terminate (reason, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="8c6da-758">Motivo della chiusura dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-758">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8c6da-759">Intervallo nel quale l'operazione <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> deve essere completata prima che l'operazione è cancellata e un  <see cref="T:System.TimeoutException" /> è generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-759">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-760">Termina un'istanza del flusso di lavoro utilizzando il messaggio di errore e l'intervallo di timeout specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-760">Terminates a workflow instance using the specified error message and time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-761">Questo metodo pianifica la chiusura dell'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="8c6da-761">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="8c6da-762">Per essere notificato quando la chiusura è stata completata, utilizzare l'handle <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-762">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-763">Nell'esempio seguente viene ospitato un flusso di lavoro tramite <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-763">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="8c6da-764">Un'istanza <xref:System.Activities.WorkflowApplication> viene costruita utilizzando la definizione di flusso di lavoro specificata, vengono gestiti gli eventi del ciclo di vita del flusso di lavoro desiderati e il flusso di lavoro viene richiamato con una chiamata a <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-764">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="8c6da-765">Dopo aver avviato il flusso di lavoro, viene richiamato l'oggetto <xref:System.Activities.WorkflowApplication.Terminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-765">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="8c6da-766">Quando il flusso di lavoro viene terminato, l'output seguente viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="8c6da-766">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#19](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-767">Rende persistente e scarica un'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-767">Persists and unloads a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-768">Per impostazione predefinita, l'operazione di scaricamento deve essere completata in 30 secondi, altrimenti viene generato un <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-768">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="8c6da-769">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</span><span class="sxs-lookup"><span data-stu-id="8c6da-769">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="8c6da-770">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-770">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="workflowApplication.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-771">Rende persistente e scarica un'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-771">Persists and unloads a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-772">Per impostazione predefinita, l'operazione di scaricamento deve essere completata in 30 secondi, altrimenti viene generato un <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-772">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="8c6da-773">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</span><span class="sxs-lookup"><span data-stu-id="8c6da-773">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="8c6da-774">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-774">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-775">Esempio di codice seguente fa parte il [attività NoPersistScope](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) esempio.</span><span class="sxs-lookup"><span data-stu-id="8c6da-775">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="8c6da-776">In questo esempio, il flusso di lavoro è inattivo e l'applicazione host è in attesa dell'input dell'utente.</span><span class="sxs-lookup"><span data-stu-id="8c6da-776">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="8c6da-777">Se l'utente sceglie di scaricare, viene chiamato <xref:System.Activities.WorkflowApplication.Unload%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-777">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="8c6da-778">Se è riuscito correttamente, il flusso di lavoro viene reso persistente e scaricato dalla memoria.</span><span class="sxs-lookup"><span data-stu-id="8c6da-778">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Unload : TimeSpan -&gt; unit" Usage="workflowApplication.Unload timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="8c6da-779">Intervallo nel quale deve essere completata l'operazione di scaricamento prima che l'operazione sia annullata e generato un <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-779">The interval in which the unload operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c6da-780">Rende persistente e scarica un'istanza del flusso di lavoro utilizzando l'intervallo di timeout specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-780">Persists and unloads a workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6da-781">Se l'istanza del flusso di lavoro è stata precedentemente caricata dalla persistenza, lo stesso <xref:System.Runtime.DurableInstancing.InstanceStore> utilizzato per il caricamento del flusso di lavoro viene utilizzato per la persistenza.</span><span class="sxs-lookup"><span data-stu-id="8c6da-781">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="8c6da-782">Se il flusso di lavoro è stato creato ma non reso persistente, è necessario configurare una proprietà <xref:System.Activities.WorkflowApplication.InstanceStore%2A> prima di chiamare questo metodo, altrimenti viene generata un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-782">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6da-783">Esempio di codice seguente fa parte il [attività NoPersistScope](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) esempio.</span><span class="sxs-lookup"><span data-stu-id="8c6da-783">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="8c6da-784">In questo esempio, il flusso di lavoro è inattivo e l'applicazione host è in attesa dell'input dell'utente.</span><span class="sxs-lookup"><span data-stu-id="8c6da-784">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="8c6da-785">Se l'utente sceglie di scaricare, viene chiamato <xref:System.Activities.WorkflowApplication.Unload%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6da-785">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="8c6da-786">Se è riuscito correttamente, il flusso di lavoro viene reso persistente e scaricato dalla memoria.</span><span class="sxs-lookup"><span data-stu-id="8c6da-786">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; Unloaded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationEventArgs&gt; Unloaded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Property Unloaded As Action(Of WorkflowApplicationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ Unloaded { Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Unloaded : Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Unloaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c6da-787">Ottiene o imposta il <see cref="T:System.Action`1" /> che è richiamato quando il flusso di lavoro corrente viene scaricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-787">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow unloads.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c6da-788">Azione che viene richiamata quando un'istanza del flusso di lavoro è scaricata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c6da-788">An action that is invoked when a workflow instance is unloaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6da-789">L'esempio di codice seguente controlla l'oggetto <xref:System.Activities.WorkflowApplicationEventArgs> passato nel gestore <xref:System.Activities.WorkflowApplication.Unloaded%2A> di un'istanza <xref:System.Activities.WorkflowApplication> e visualizza l'oggetto <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> del flusso di lavoro scaricato.</span><span class="sxs-lookup"><span data-stu-id="8c6da-789">The following code example inspects the <xref:System.Activities.WorkflowApplicationEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Unloaded%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays the <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> of the workflow that was unloaded.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#3](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>