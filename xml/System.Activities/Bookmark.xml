<Type Name="Bookmark" FullName="System.Activities.Bookmark">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fbc298716e2dcda2ab770bc5d520a2879fb0bfdb" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39816394" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Bookmark : IEquatable&lt;System.Activities.Bookmark&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Bookmark extends System.Object implements class System.IEquatable`1&lt;class System.Activities.Bookmark&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Bookmark" />
  <TypeSignature Language="VB.NET" Value="Public Class Bookmark&#xA;Implements IEquatable(Of Bookmark)" />
  <TypeSignature Language="C++ CLI" Value="public ref class Bookmark : IEquatable&lt;System::Activities::Bookmark ^&gt;" />
  <TypeSignature Language="F#" Value="type Bookmark = class&#xA;    interface IEquatable&lt;Bookmark&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Activities.Bookmark&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b00fb-101">Rappresenta un punto in cui un flusso di lavoro o un'attività può attendere passivamente di essere ripresa.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b00fb-101">Represents a point at which a workflow or activity can passively wait to be resumed.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00fb-102">Quando un'attività crea un <xref:System.Activities.Bookmark>, diventa inattiva e attende che <xref:System.Activities.Bookmark> venga ripreso.</span><span class="sxs-lookup"><span data-stu-id="b00fb-102">When an activity creates a <xref:System.Activities.Bookmark>, it becomes idle and waits for the <xref:System.Activities.Bookmark> to be resumed.</span></span> <span data-ttu-id="b00fb-103">Se vi sono altre attività in parallelo con l'attività che ha creato <xref:System.Activities.Bookmark>, verrà pianificata la loro esecuzione.</span><span class="sxs-lookup"><span data-stu-id="b00fb-103">If there are other activities in parallel with the activity that created the <xref:System.Activities.Bookmark>, they will be scheduled for execution.</span></span>  
  
 <span data-ttu-id="b00fb-104">I segnalibri possono essere ripresi dall'applicazione host utilizzando uno degli overload <xref:System.Activities.WorkflowApplication.ResumeBookmark%2A>.</span><span class="sxs-lookup"><span data-stu-id="b00fb-104">Bookmarks can be resumed by the host application using one of the <xref:System.Activities.WorkflowApplication.ResumeBookmark%2A> overloads.</span></span>  
  
 <span data-ttu-id="b00fb-105">Per altre informazioni sui segnalibri, vedere [uso di WorkflowInvoker e WorkflowApplication](~/docs/framework/windows-workflow-foundation/using-workflowinvoker-and-workflowapplication.md), [segnalibri](~/docs/framework/windows-workflow-foundation/bookmarks.md)e il [segnalibri &#91; esempi WF&#93; ](~/docs/framework/windows-workflow-foundation/samples/bookmarks.md) e [Attendere per attività di Input &#91;esempi WF&#93; ](~/docs/framework/windows-workflow-foundation/samples/wait-for-input-activity.md) esempi.</span><span class="sxs-lookup"><span data-stu-id="b00fb-105">For more information about bookmarks, see [Using WorkflowInvoker and WorkflowApplication](~/docs/framework/windows-workflow-foundation/using-workflowinvoker-and-workflowapplication.md), [Bookmarks](~/docs/framework/windows-workflow-foundation/bookmarks.md), and the [Bookmarks &#91; WF Samples&#93;](~/docs/framework/windows-workflow-foundation/samples/bookmarks.md) and [Wait For Input Activity &#91;WF Samples&#93;](~/docs/framework/windows-workflow-foundation/samples/wait-for-input-activity.md) samples.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b00fb-106">Nell'esempio seguente viene creata un'attività `ReadLine`.</span><span class="sxs-lookup"><span data-stu-id="b00fb-106">In the following example, a `ReadLine` activity is created.</span></span> <span data-ttu-id="b00fb-107">In caso di esecuzione, l'attività `ReadLine` crea un oggetto <xref:System.Activities.Bookmark>, registra un callback, quindi attende la ripresa dell'oggetto <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="b00fb-107">When executed, the `ReadLine` activity creates a <xref:System.Activities.Bookmark>, registers a callback, and then waits for the <xref:System.Activities.Bookmark> to be resumed.</span></span> <span data-ttu-id="b00fb-108">Una volta ripresa, l'attività `ReadLine` assegna i dati passati con l'oggetto <xref:System.Activities.Bookmark> al relativo argomento <xref:System.Activities.Activity%601.Result%2A>.</span><span class="sxs-lookup"><span data-stu-id="b00fb-108">When it is resumed, the `ReadLine` activity assigns the data that was passed with the <xref:System.Activities.Bookmark> to its <xref:System.Activities.Activity%601.Result%2A> argument.</span></span>  
  
```csharp  
public sealed class ReadLine : NativeActivity<string>  
{  
    [RequiredArgument]  
    public  InArgument<string> BookmarkName { get; set; }  
  
    protected override void Execute(NativeActivityContext context)  
    {  
        // Create a Bookmark and wait for it to be resumed.  
        context.CreateBookmark(BookmarkName.Get(context),   
            new BookmarkCallback(OnResumeBookmark));  
    }  
  
    // NativeActivity derived activities that do asynchronous operations by calling   
    // one of the CreateBookmark overloads defined on System.Activities.NativeActivityContext   
    // must override the CanInduceIdle property and return true.  
    protected override bool CanInduceIdle  
    {  
        get { return true; }  
    }  
  
    public void OnResumeBookmark(NativeActivityContext context, Bookmark bookmark, object obj)  
    {  
        // When the Bookmark is resumed, assign its value to  
        // the Result argument.  
        Result.Set(context, (string)obj);  
    }  
}  
```  
  
 <span data-ttu-id="b00fb-109">Nell'esempio seguente viene creato un flusso di lavoro che utilizza l'attività `ReadLine` per rilevare il nome dell'utente e visualizzarlo nella finestra della console.</span><span class="sxs-lookup"><span data-stu-id="b00fb-109">In the following example, a workflow is created that uses the `ReadLine` activity to gather the user’s name and display it to the console window.</span></span> <span data-ttu-id="b00fb-110">L'applicazione host esegue il lavoro effettivo di rilevamento dell'input e lo passa al flusso di lavoro riprendendo l'oggetto <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="b00fb-110">The host application performs the actual work of gathering the input and passes it to the workflow by resuming the <xref:System.Activities.Bookmark>.</span></span>  
  
```csharp  
Variable<string> name = new Variable<string>  
{  
    Name = "name"  
};  
  
Activity wf = new Sequence  
{  
    Variables =  
    {  
        name  
    },  
    Activities =  
    {  
        new WriteLine()  
        {  
            Text = "What is your name?"  
        },  
        new ReadLine()  
        {  
            BookmarkName = "UserName",  
            Result = name  
        },  
        new WriteLine()  
        {  
            Text = new InArgument<string>((env) => "Hello, " + name.Get(env))  
        }  
    }  
};  
  
AutoResetEvent syncEvent = new AutoResetEvent(false);  
  
// Create the WorkflowApplication using the desired  
// workflow definition.  
WorkflowApplication wfApp = new WorkflowApplication(wf);  
  
// Handle the desired lifecycle events.  
wfApp.Completed = delegate(WorkflowApplicationCompletedEventArgs e)  
{  
    // Signal the host that the workflow is complete.  
    syncEvent.Set();  
};  
  
// Start the workflow.  
wfApp.Run();  
  
// Collect the user's name and resume the bookmark.  
// Bookmark resumption only occurs when the workflow  
// is idle. If a call to ResumeBookmark is made and the workflow  
// is not idle, ResumeBookmark blocks until the workflow becomes  
// idle before resuming the bookmark.  
wfApp.ResumeBookmark("UserName", Console.ReadLine());  
  
// Wait for Completed to arrive and signal that  
// the workflow is complete.  
syncEvent.WaitOne();  
```  
  
 <span data-ttu-id="b00fb-111">Quando l'attività `ReadLine` viene eseguita, crea un oggetto <xref:System.Activities.Bookmark> denominato `UserName` e attende la ripresa del segnalibro.</span><span class="sxs-lookup"><span data-stu-id="b00fb-111">When the `ReadLine` activity is executed, it creates a <xref:System.Activities.Bookmark> named `UserName` and then waits for the bookmark to be resumed.</span></span> <span data-ttu-id="b00fb-112">L'host raccoglie i dati desiderati, quindi riprende l'oggetto <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="b00fb-112">The host collects the desired data and then resumes the <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="b00fb-113">Il flusso di lavoro viene ripreso, ne viene visualizzato il nome, quindi viene completato.</span><span class="sxs-lookup"><span data-stu-id="b00fb-113">The workflow resumes, displays the name, and then completes.</span></span> <span data-ttu-id="b00fb-114">Si noti che non è necessario alcun codice di sincronizzazione per la ripresa del segnalibro.</span><span class="sxs-lookup"><span data-stu-id="b00fb-114">Note that no synchronization code is required with regard to resuming the bookmark.</span></span> <span data-ttu-id="b00fb-115">Un oggetto <xref:System.Activities.Bookmark> può essere ripreso solo quando il flusso di lavoro è inattivo e, in caso contrario, la chiamata al metodo <xref:System.Activities.WorkflowApplication.ResumeBookmark%2A> viene bloccata finché il flusso di lavoro non diventa inattivo.</span><span class="sxs-lookup"><span data-stu-id="b00fb-115">A <xref:System.Activities.Bookmark> can only be resumed when the workflow is idle, and if the workflow is not idle, the call to <xref:System.Activities.WorkflowApplication.ResumeBookmark%2A> blocks until the workflow becomes idle.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bookmark (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Bookmark.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bookmark(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Activities.Bookmark : string -&gt; System.Activities.Bookmark" Usage="new System.Activities.Bookmark name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="b00fb-116">Nome che identifica il segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-116">A name that identifies the bookmark.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00fb-117">Inizializza una nuova istanza per la classe <see cref="T:System.Activities.Bookmark" /> usando il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-117">Initializes a new instance of the <see cref="T:System.Activities.Bookmark" /> class using the specified name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b00fb-118">Determina se due oggetti <see cref="T:System.Activities.Bookmark" /> si riferiscono allo stesso punto di continuazione in un flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-118">Determines whether two <see cref="T:System.Activities.Bookmark" /> objects refer to the same continuation point in a workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Activities.Bookmark other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Activities.Bookmark other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Bookmark.Equals(System.Activities.Bookmark)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Bookmark) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Activities::Bookmark ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Activities.Bookmark -&gt; bool" Usage="bookmark.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Activities.Bookmark" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b00fb-119">Segnalibro da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-119">The bookmark to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00fb-120">Determina se il <see cref="T:System.Activities.Bookmark" /> corrente e il <see cref="T:System.Activities.Bookmark" /> specificato si riferiscono allo stesso punto di continuazione in un flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-120">Determines whether the current <see cref="T:System.Activities.Bookmark" /> and the specified <see cref="T:System.Activities.Bookmark" /> refer to the same continuation point in a workflow.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b00fb-121">
            <see langword="true" /> se gli oggetti <see cref="T:System.Activities.Bookmark" /> sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-121">
              <see langword="true" /> if the <see cref="T:System.Activities.Bookmark" /> objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Bookmark.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bookmark.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b00fb-122">Oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-122">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00fb-123">Determina se il <see cref="T:System.Activities.Bookmark" /> corrente e l'oggetto specificato si riferiscono allo stesso punto di continuazione in un flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-123">Determines whether the current <see cref="T:System.Activities.Bookmark" /> and the specified object refer to the same continuation point in a workflow.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b00fb-124">
            <see langword="true" /> se gli oggetti <see cref="T:System.Activities.Bookmark" /> sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-124">
              <see langword="true" /> if the <see cref="T:System.Activities.Bookmark" /> objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Bookmark.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bookmark.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b00fb-125">Restituisce un identificatore univoco per questa istanza <see cref="T:System.Activities.Bookmark" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-125">Returns a unique identifier for this <see cref="T:System.Activities.Bookmark" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b00fb-126">Identificatore univoco dell'istanza di <see cref="T:System.Activities.Bookmark" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-126">The unique identifier of this <see cref="T:System.Activities.Bookmark" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Bookmark.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Activities.Bookmark.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00fb-127">Ottiene il nome del segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-127">Gets the bookmark name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00fb-128">Nome del segnalibro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-128">The bookmark name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Bookmark.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bookmark.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b00fb-129">Restituisce il nome del segnalibro per un segnalibro denominato o l'ID del segnalibro per un segnalibro senza nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-129">Returns the bookmark name for a named bookmark or the bookmark ID for an unnamed bookmark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b00fb-130">Nome del segnalibro o ID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00fb-130">The bookmark name or ID.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>